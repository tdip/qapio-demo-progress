{"version":3,"file":"ej2-pivotview.min.js","sources":["../../src/base/util.js","../../src/base/engine.js","../../src/common/base/constant.js","../../src/common/base/css-constant.js","../../src/common/popups/aggregate-menu.js","../../src/pivotview/renderer/render.js","../../src/common/actions/keyboard.js","../../src/common/actions/event-base.js","../../src/common/actions/node-state-modified.js","../../src/common/actions/dataSource-update.js","../../src/common/popups/error-dialog.js","../../src/common/popups/filter-dialog.js","../../src/common/base/pivot-common.js","../../src/common/actions/common.js","../../src/pivotview/model/datasourcesettings.js","../../src/pivotview/model/gridsettings.js","../../src/pivotview/actions/excel-export.js","../../src/pivotview/actions/pdf-export.js","../../src/pivotview/actions/keyboard.js","../../src/common/popups/context-menu.js","../../src/pivotview/actions/virtualscroll.js","../../src/common/popups/drillthrough-dialog.js","../../src/pivotview/actions/drill-through.js","../../src/pivotchart/base/pivotchart.js","../../src/common/base/themes.js","../../src/pivotview/model/chartsettings.js","../../src/base/olap/mdx-query.js","../../src/base/olap/engine.js","../../src/pivotview/base/pivotview.js","../../src/pivotfieldlist/renderer/dialog-renderer.js","../../src/pivotfieldlist/renderer/tree-renderer.js","../../src/pivotfieldlist/renderer/axis-table-renderer.js","../../src/common/actions/pivot-button.js","../../src/pivotfieldlist/renderer/axis-field-renderer.js","../../src/pivotfieldlist/renderer/renderer.js","../../src/pivotfieldlist/base/field-list.js","../../src/common/calculatedfield/calculated-field.js","../../src/common/actions/field-list.js","../../src/common/grouping-bar/axis-field-renderer.js","../../src/common/grouping-bar/grouping-bar.js","../../src/common/conditionalformatting/conditional-formatting.js","../../src/common/popups/toolbar.js","../../src/common/popups/formatting-dialog.js","../../src/common/popups/grouping.js","../../src/global.js"],"sourcesContent":["import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\n/**\n * This is a file to perform common utility for OLAP and Relational datasource\n * @hidden\n */\nvar PivotUtil = /** @class */ (function () {\n    function PivotUtil() {\n    }\n    PivotUtil.getType = function (value) {\n        var val;\n        val = (value && value.getDay) ? (value.getHours() > 0 || value.getMinutes() > 0 ||\n            value.getSeconds() > 0 || value.getMilliseconds() > 0 ? 'datetime' : 'date') : !isNaN(Number(value)) ?\n            'number' : typeof (value);\n        return val;\n    };\n    PivotUtil.resetTime = function (date) {\n        date.setHours(0, 0, 0, 0);\n        return date;\n    };\n    PivotUtil.getClonedData = function (data) {\n        var clonedData = [];\n        if (data) {\n            for (var _i = 0, _a = data; _i < _a.length; _i++) {\n                var item = _a[_i];\n                var fields = Object.keys(item);\n                var keyPos = 0;\n                /* tslint:disable:no-any */\n                var framedSet = {};\n                /* tslint:enable:no-any */\n                while (keyPos < fields.length) {\n                    framedSet[fields[keyPos]] = item[fields[keyPos]];\n                    keyPos++;\n                }\n                clonedData.push(framedSet);\n            }\n        }\n        return clonedData;\n    };\n    PivotUtil.getClonedPivotValues = function (pivotValues) {\n        var clonedSets = [];\n        for (var i = 0; i < pivotValues.length; i++) {\n            if (pivotValues[i]) {\n                clonedSets[i] = [];\n                for (var j = 0; j < pivotValues[i].length; j++) {\n                    if (pivotValues[i][j]) {\n                        clonedSets[i][j] = this.getClonedPivotValueObj(pivotValues[i][j]);\n                    }\n                }\n            }\n        }\n        return clonedSets;\n    };\n    PivotUtil.getClonedPivotValueObj = function (data) {\n        var keyPos = 0;\n        /* tslint:disable:no-any */\n        var framedSet = {};\n        /* tslint:enable:no-any */\n        if (!(data === null || data === undefined)) {\n            var fields = Object.keys(data);\n            while (keyPos < fields.length) {\n                framedSet[fields[keyPos]] = data[fields[keyPos]];\n                keyPos++;\n            }\n        }\n        else {\n            framedSet = data;\n        }\n        return framedSet;\n    };\n    /* tslint:disable:no-any */\n    PivotUtil.getDefinedObj = function (data) {\n        var keyPos = 0;\n        var framedSet = {};\n        /* tslint:enable:no-any */\n        if (!(data === null || data === undefined)) {\n            var fields = Object.keys(data);\n            while (keyPos < fields.length) {\n                if (!(data[fields[keyPos]] === null || data[fields[keyPos]] === undefined)) {\n                    framedSet[fields[keyPos]] = data[fields[keyPos]];\n                }\n                keyPos++;\n            }\n        }\n        else {\n            framedSet = data;\n        }\n        return framedSet;\n    };\n    PivotUtil.inArray = function (value, collection) {\n        if (collection) {\n            for (var i = 0, cnt = collection.length; i < cnt; i++) {\n                if (collection[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n    PivotUtil.isContainCommonElements = function (collection1, collection2) {\n        var isContain = false;\n        for (var i = 0, cnt = collection1.length; i < cnt; i++) {\n            for (var j = 0, lnt = collection2.length; j < lnt; j++) {\n                if (collection2[j] === collection1[i]) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /* tslint:disable:no-any */\n    PivotUtil.setPivotProperties = function (control, properties) {\n        control.allowServerDataBinding = false;\n        if (control.pivotGridModule) {\n            control.pivotGridModule.allowServerDataBinding = false;\n        }\n        control.setProperties(properties, true);\n        control.allowServerDataBinding = true;\n        if (control.pivotGridModule) {\n            control.pivotGridModule.allowServerDataBinding = true;\n        }\n    };\n    /* tslint:enable:no-any */\n    PivotUtil.getClonedDataSourceSettings = function (dataSourceSettings) {\n        var clonesDataSource = this.getDefinedObj({\n            type: dataSourceSettings.type,\n            catalog: dataSourceSettings.catalog,\n            cube: dataSourceSettings.cube,\n            providerType: dataSourceSettings.providerType,\n            url: dataSourceSettings.url,\n            localeIdentifier: dataSourceSettings.localeIdentifier,\n            excludeFields: isNullOrUndefined(dataSourceSettings.excludeFields) ? [] : dataSourceSettings.excludeFields.slice(),\n            expandAll: dataSourceSettings.expandAll,\n            allowLabelFilter: dataSourceSettings.allowLabelFilter,\n            allowValueFilter: dataSourceSettings.allowValueFilter,\n            allowMemberFilter: dataSourceSettings.allowMemberFilter,\n            enableSorting: dataSourceSettings.enableSorting ? true : false,\n            rows: this.cloneFieldSettings(dataSourceSettings.rows),\n            columns: this.cloneFieldSettings(dataSourceSettings.columns),\n            filters: this.cloneFieldSettings(dataSourceSettings.filters),\n            values: this.cloneFieldSettings(dataSourceSettings.values),\n            filterSettings: this.cloneFilterSettings(dataSourceSettings.filterSettings),\n            sortSettings: this.cloneSortSettings(dataSourceSettings.sortSettings),\n            drilledMembers: this.cloneDrillMemberSettings(dataSourceSettings.drilledMembers),\n            valueSortSettings: this.CloneValueSortObject(dataSourceSettings.valueSortSettings),\n            valueAxis: dataSourceSettings.valueAxis,\n            formatSettings: this.cloneFormatSettings(dataSourceSettings.formatSettings),\n            calculatedFieldSettings: this.cloneCalculatedFieldSettings(dataSourceSettings.calculatedFieldSettings),\n            fieldMapping: this.cloneFieldSettings(dataSourceSettings.fieldMapping),\n            showSubTotals: dataSourceSettings.showSubTotals,\n            showRowSubTotals: dataSourceSettings.showRowSubTotals,\n            showColumnSubTotals: dataSourceSettings.showColumnSubTotals,\n            showGrandTotals: dataSourceSettings.showGrandTotals,\n            showRowGrandTotals: dataSourceSettings.showRowGrandTotals,\n            showColumnGrandTotals: dataSourceSettings.showColumnGrandTotals,\n            showHeaderWhenEmpty: dataSourceSettings.showHeaderWhenEmpty,\n            alwaysShowValueHeader: dataSourceSettings.alwaysShowValueHeader,\n            conditionalFormatSettings: this.cloneConditionalFormattingSettings(dataSourceSettings.conditionalFormatSettings),\n            emptyCellsTextContent: dataSourceSettings.emptyCellsTextContent,\n            groupSettings: this.cloneGroupSettings(dataSourceSettings.groupSettings),\n            showAggregationOnValueField: dataSourceSettings.showAggregationOnValueField,\n            authentication: this.CloneAuthenticationObject(dataSourceSettings.authentication),\n        });\n        /* tslint:enable:no-any */\n        return clonesDataSource;\n    };\n    PivotUtil.updateDataSourceSettings = function (control, dataSourceSettings) {\n        if (control) {\n            this.setPivotProperties(control, {\n                dataSourceSettings: this.getDefinedObj({\n                    type: dataSourceSettings.type,\n                    catalog: dataSourceSettings.catalog,\n                    cube: dataSourceSettings.cube,\n                    providerType: dataSourceSettings.providerType,\n                    url: dataSourceSettings.url,\n                    localeIdentifier: dataSourceSettings.localeIdentifier,\n                    excludeFields: isNullOrUndefined(dataSourceSettings.excludeFields) ? [] : dataSourceSettings.excludeFields,\n                    expandAll: dataSourceSettings.expandAll,\n                    allowLabelFilter: dataSourceSettings.allowLabelFilter,\n                    allowValueFilter: dataSourceSettings.allowValueFilter,\n                    allowMemberFilter: dataSourceSettings.allowMemberFilter,\n                    enableSorting: dataSourceSettings.enableSorting ? true : false,\n                    rows: dataSourceSettings.rows,\n                    columns: dataSourceSettings.columns,\n                    filters: dataSourceSettings.filters,\n                    values: dataSourceSettings.values,\n                    filterSettings: dataSourceSettings.filterSettings,\n                    sortSettings: dataSourceSettings.sortSettings,\n                    drilledMembers: dataSourceSettings.drilledMembers,\n                    valueSortSettings: dataSourceSettings.valueSortSettings,\n                    valueAxis: dataSourceSettings.valueAxis,\n                    formatSettings: dataSourceSettings.formatSettings,\n                    calculatedFieldSettings: dataSourceSettings.calculatedFieldSettings,\n                    fieldMapping: dataSourceSettings.fieldMapping,\n                    showSubTotals: dataSourceSettings.showSubTotals,\n                    showRowSubTotals: dataSourceSettings.showRowSubTotals,\n                    showColumnSubTotals: dataSourceSettings.showColumnSubTotals,\n                    showGrandTotals: dataSourceSettings.showGrandTotals,\n                    showRowGrandTotals: dataSourceSettings.showRowGrandTotals,\n                    showColumnGrandTotals: dataSourceSettings.showColumnGrandTotals,\n                    showHeaderWhenEmpty: dataSourceSettings.showHeaderWhenEmpty,\n                    alwaysShowValueHeader: dataSourceSettings.alwaysShowValueHeader,\n                    conditionalFormatSettings: dataSourceSettings.conditionalFormatSettings,\n                    emptyCellsTextContent: dataSourceSettings.emptyCellsTextContent,\n                    groupSettings: dataSourceSettings.groupSettings,\n                    showAggregationOnValueField: dataSourceSettings.showAggregationOnValueField,\n                    authentication: this.CloneAuthenticationObject(dataSourceSettings.authentication),\n                })\n                /* tslint:enable:no-any */\n            });\n        }\n    };\n    PivotUtil.cloneFieldSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_1 = collection; _i < collection_1.length; _i++) {\n                var set = collection_1[_i];\n                var field = {};\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    caption: set.caption,\n                    axis: set.axis,\n                    baseField: set.baseField,\n                    baseItem: set.baseItem,\n                    isCalculatedField: set.isCalculatedField,\n                    isNamedSet: set.isNamedSet,\n                    showNoDataItems: set.showNoDataItems,\n                    showSubTotals: set.showSubTotals,\n                    type: set.type,\n                    dataType: set.dataType,\n                    showFilterIcon: set.showFilterIcon,\n                    showSortIcon: set.showSortIcon,\n                    showRemoveIcon: set.showRemoveIcon,\n                    showValueTypeIcon: set.showValueTypeIcon,\n                    showEditIcon: set.showEditIcon,\n                    allowDragAndDrop: set.allowDragAndDrop\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneFilterSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_2 = collection; _i < collection_2.length; _i++) {\n                var set = collection_2[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    type: set.type,\n                    condition: set.condition,\n                    items: set.items ? set.items.slice() : set.items,\n                    levelCount: set.levelCount,\n                    measure: set.measure,\n                    selectedField: set.selectedField,\n                    showDateFilter: set.showDateFilter,\n                    showLabelFilter: set.showLabelFilter,\n                    showNumberFilter: set.showNumberFilter,\n                    value1: set.value1,\n                    value2: set.value2\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneSortSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_3 = collection; _i < collection_3.length; _i++) {\n                var set = collection_3[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    order: set.order\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneDrillMemberSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_4 = collection; _i < collection_4.length; _i++) {\n                var set = collection_4[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    delimiter: set.delimiter,\n                    items: set.items ? set.items.slice() : set.items\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneFormatSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_5 = collection; _i < collection_5.length; _i++) {\n                var set = collection_5[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    calendar: set.calendar,\n                    currency: set.currency,\n                    format: set.format,\n                    maximumFractionDigits: set.maximumFractionDigits,\n                    maximumSignificantDigits: set.maximumSignificantDigits,\n                    minimumFractionDigits: set.minimumFractionDigits,\n                    minimumIntegerDigits: set.minimumIntegerDigits,\n                    minimumSignificantDigits: set.minimumSignificantDigits,\n                    skeleton: set.skeleton,\n                    type: set.type,\n                    useGrouping: set.useGrouping\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.CloneValueSortObject = function (collection) {\n        if (collection) {\n            var clonedCollection = {\n                columnIndex: collection.columnIndex,\n                headerDelimiter: collection.headerDelimiter,\n                headerText: collection.headerText,\n                measure: collection.measure,\n                sortOrder: collection.sortOrder\n            };\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.CloneAuthenticationObject = function (collection) {\n        if (collection) {\n            var clonedCollection = {\n                userName: collection.userName,\n                password: collection.password\n            };\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneCalculatedFieldSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_6 = collection; _i < collection_6.length; _i++) {\n                var set = collection_6[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    formatString: set.formatString,\n                    formula: set.formula,\n                    hierarchyUniqueName: set.hierarchyUniqueName\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneConditionalFormattingSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_7 = collection; _i < collection_7.length; _i++) {\n                var set = collection_7[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    applyGrandTotals: set.applyGrandTotals,\n                    conditions: set.conditions,\n                    label: set.label,\n                    measure: set.measure,\n                    style: set.style ? {\n                        backgroundColor: set.style.backgroundColor,\n                        color: set.style.color,\n                        fontFamily: set.style.fontFamily,\n                        fontSize: set.style.fontSize\n                    } : set.style,\n                    value1: set.value1,\n                    value2: set.value2\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneGroupSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_8 = collection; _i < collection_8.length; _i++) {\n                var set = collection_8[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    caption: set.caption,\n                    customGroups: this.cloneCustomGroups(set.customGroups),\n                    endingAt: set.endingAt,\n                    startingAt: set.startingAt,\n                    groupInterval: set.groupInterval,\n                    rangeInterval: set.rangeInterval,\n                    type: set.type\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneCustomGroups = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_9 = collection; _i < collection_9.length; _i++) {\n                var set = collection_9[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    groupName: set.groupName,\n                    items: set.items ? set.items.slice() : set.items\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.getFilterItemByName = function (fieldName, fields) {\n        var filterItems = new DataManager({ json: fields }).executeLocal(new Query().where('name', 'equal', fieldName));\n        if (filterItems && filterItems.length > 0) {\n            return filterItems[filterItems.length - 1];\n        }\n        return undefined;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotUtil.getFieldByName = function (fieldName, fields) {\n        return new DataManager({ json: fields }).executeLocal(new Query().where('name', 'equal', fieldName))[0];\n    };\n    PivotUtil.getFieldInfo = function (fieldName, control) {\n        var rows = this.cloneFieldSettings(control.dataSourceSettings.rows);\n        var columns = this.cloneFieldSettings(control.dataSourceSettings.columns);\n        var values = this.cloneFieldSettings(control.dataSourceSettings.values);\n        var filters = this.cloneFieldSettings(control.dataSourceSettings.filters);\n        var fields = [rows, columns, values, filters];\n        for (var i = 0, len = fields.length; i < len; i++) {\n            for (var j = 0, cnt = (fields[i] ? fields[i].length : 0); j < cnt; j++) {\n                if (fields[i][j] && fields[i][j].name === fieldName) {\n                    /* tslint:disable-next-line:max-line-length */\n                    return { fieldName: fieldName, fieldItem: fields[i][j], axis: i === 0 ? 'rows' : i === 1 ? 'columns' : i === 2 ? 'values' : 'filters', position: j };\n                }\n            }\n        }\n        var fieldList = control.dataType === 'olap' ?\n            control.olapEngineModule.fieldList[fieldName] : control.engineModule.fieldList[fieldName];\n        var fieldItem = (fieldList ? {\n            name: fieldName,\n            caption: fieldList.caption,\n            baseField: fieldList.baseField,\n            baseItem: fieldList.baseItem,\n            isCalculatedField: fieldList.isCalculatedField,\n            isNamedSet: fieldList.isNamedSets,\n            showNoDataItems: fieldList.showNoDataItems,\n            showSubTotals: fieldList.showSubTotals,\n            type: fieldList.aggregateType,\n            showFilterIcon: fieldList.showFilterIcon,\n            showSortIcon: fieldList.showSortIcon,\n            showRemoveIcon: fieldList.showRemoveIcon,\n            showValueTypeIcon: fieldList.showValueTypeIcon,\n            showEditIcon: fieldList.showEditIcon,\n            allowDragAndDrop: fieldList.allowDragAndDrop\n        } : undefined);\n        return { fieldName: fieldName, fieldItem: fieldItem, axis: 'fieldlist', position: -1 };\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotUtil.isButtonIconRefesh = function (prop, oldProp, newProp) {\n        var isButtonRefresh = false;\n        try {\n            if (prop === 'dataSourceSettings' && oldProp.dataSourceSettings && newProp.dataSourceSettings) {\n                var propValidation = ['notAvail', 'notAvail', 'notAvail', 'notAvail'];\n                var oldAxesProp = Object.keys(oldProp.dataSourceSettings);\n                var newAxesProp = Object.keys(newProp.dataSourceSettings);\n                if (oldAxesProp && newAxesProp && newAxesProp.length > 0 && oldAxesProp.length === newAxesProp.length) {\n                    var axes = ['rows', 'columns', 'values', 'filters'];\n                    /* tslint:disable:no-any */\n                    for (var i = 0; i < newAxesProp.length; i++) {\n                        var oldAxis = (newAxesProp[i] in oldProp.dataSourceSettings && !isNullOrUndefined(oldProp.dataSourceSettings[newAxesProp[i]])) ? Object.keys(oldProp.dataSourceSettings[newAxesProp[i]]) : [];\n                        var newAxis = (newAxesProp[i] in newProp.dataSourceSettings && !isNullOrUndefined(newProp.dataSourceSettings[newAxesProp[i]])) ? Object.keys(newProp.dataSourceSettings[newAxesProp[i]]) : [];\n                        if (axes.indexOf(newAxesProp[i]) !== -1 && axes.indexOf(oldAxesProp[i]) !== -1 &&\n                            oldAxis && newAxis && newAxis.length > 0 && oldAxis.length === newAxis.length) {\n                            /* tslint:disable-next-line:max-line-length */\n                            var options = ['showFilterIcon', 'showSortIcon', 'showRemoveIcon', 'showValueTypeIcon', 'showEditIcon', 'allowDragAndDrop'];\n                            for (var j = 0; j < newAxis.length; j++) {\n                                var oldAxisProp = Object.keys(oldProp.dataSourceSettings[newAxesProp[i]][newAxis[j]]);\n                                var newAxisProp = Object.keys(newProp.dataSourceSettings[newAxesProp[i]][newAxis[j]]);\n                                for (var k = 0; k < newAxisProp.length; k++) {\n                                    if (options.indexOf(newAxisProp[k]) !== -1 && options.indexOf(oldAxisProp[k]) !== -1) {\n                                        propValidation[i] = 'update';\n                                    }\n                                    else {\n                                        propValidation[i] = 'break';\n                                        break;\n                                    }\n                                }\n                                if (propValidation[i] === 'break') {\n                                    break;\n                                }\n                            }\n                        }\n                        else {\n                            propValidation[i] = 'break';\n                        }\n                        if (propValidation[i] === 'break') {\n                            break;\n                        }\n                    }\n                    /* tslint:enable:no-any */\n                }\n                var a = 0;\n                var b = 0;\n                var c = 0;\n                for (var _i = 0, propValidation_1 = propValidation; _i < propValidation_1.length; _i++) {\n                    var validation = propValidation_1[_i];\n                    if (validation === 'break') {\n                        a++;\n                    }\n                    if (validation === 'notAvail') {\n                        b++;\n                    }\n                    if (validation === 'update') {\n                        c++;\n                    }\n                }\n                isButtonRefresh = (a > 0 || b === 4) ? false : (a === 0 && b < 4 && c > 0);\n            }\n        }\n        catch (exception) {\n            isButtonRefresh = false;\n        }\n        return isButtonRefresh;\n    };\n    /* tslint:disable:no-any */\n    PivotUtil.formatPivotValues = function (pivotValues) {\n        var values = [];\n        for (var i = 0; i < pivotValues.length; i++) {\n            if (pivotValues[i]) {\n                values[i] = [];\n                for (var j = 0; j < pivotValues[i].length; j++) {\n                    if (pivotValues[i][j]) {\n                        values[i][j] = {\n                            axis: pivotValues[i][j].Axis,\n                            actualText: pivotValues[i][j].ActualText,\n                            indexObject: pivotValues[i][j].IndexObject,\n                            index: pivotValues[i][j].Index,\n                            rowHeaders: pivotValues[i][j].RowHeaders,\n                            columnHeaders: pivotValues[i][j].ColumnHeaders,\n                            formattedText: pivotValues[i][j].FormattedText,\n                            actualValue: pivotValues[i][j].ActualValue,\n                            rowIndex: pivotValues[i][j].RowIndex,\n                            colIndex: pivotValues[i][j].ColIndex,\n                            colSpan: pivotValues[i][j].ColSpan,\n                            level: pivotValues[i][j].Level,\n                            rowSpan: pivotValues[i][j].RowSpan,\n                            isSum: pivotValues[i][j].IsSum,\n                            isGrandSum: pivotValues[i][j].IsGrandSum,\n                            valueSort: pivotValues[i][j].ValueSort,\n                            ordinal: pivotValues[i][j].Ordinal,\n                            hasChild: pivotValues[i][j].HasChild,\n                            isDrilled: pivotValues[i][j].IsDrilled,\n                            value: pivotValues[i][j].Value,\n                            type: pivotValues[i][j].Type,\n                            members: pivotValues[i][j].Members\n                        };\n                    }\n                }\n            }\n        }\n        return values;\n    };\n    PivotUtil.formatPdfHeaderFooter = function (pdf) {\n        var contents = [];\n        if (!isNullOrUndefined(pdf)) {\n            for (var i = 0; i < pdf.length; i++) {\n                var a = pdf[i];\n                var content = {\n                    type: a.Type,\n                    pageNumberType: a.PageNumberType,\n                    style: a.Style ? {\n                        penColor: a.Style.PenColor,\n                        penSize: a.Style.PenSize,\n                        dashStyle: a.Style.DashStyle,\n                        textBrushColor: a.Style.TextBrushColor,\n                        textPenColor: a.Style.TextPenColor,\n                        fontSize: a.Style.FontSize,\n                        hAlign: a.Style.HAlign,\n                        vAlign: a.Style.VAlign\n                    } : a.Style,\n                    points: a.Points !== null ? {\n                        x1: a.Points.X1,\n                        y1: a.Points.Y1,\n                        x2: a.Points.X2,\n                        y2: a.Points.Y2\n                    } : null,\n                    format: a.Format,\n                    position: a.Position !== null ? {\n                        x: a.Position.X,\n                        y: a.Position.Y,\n                    } : null,\n                    size: a.Size !== null ? {\n                        height: a.Size.Height,\n                        width: a.Size.Width,\n                    } : null,\n                    src: a.Src,\n                    value: a.Value,\n                    font: a.Font\n                };\n                contents.push(content);\n            }\n        }\n        return contents;\n    };\n    /* tslint:disable:no-any */\n    PivotUtil.formatPdfExportProperties = function (pdf) {\n        var values;\n        values = this.getDefinedObj({\n            pageOrientation: typeof pdf.PageOrientation === 'string' ? pdf.PageOrientation : null,\n            pageSize: typeof pdf.PageSize === 'string' ? pdf.PageSize : null,\n            header: !isNullOrUndefined(pdf.Header) ? {\n                fromTop: pdf.Header.FromTop,\n                height: pdf.Header.Height,\n                contents: this.formatPdfHeaderFooter(pdf.Header.Contents),\n            } : null,\n            columns: pdf.Columns,\n            footer: !isNullOrUndefined(pdf.Footer) ? {\n                fromTop: pdf.Footer.FromBottom,\n                height: pdf.Footer.Height,\n                contents: this.formatPdfHeaderFooter(pdf.Footer.Contents),\n            } : null,\n            includeHiddenColumn: pdf.IncludeHiddenColumn,\n            dataSource: pdf.DataSource,\n            exportType: typeof pdf.ExportType === 'string' ? pdf.ExportType : null,\n            theme: !isNullOrUndefined(pdf.Theme) ? {\n                header: pdf.Theme.Header,\n                record: pdf.Theme.Record,\n                caption: pdf.Theme.Caption\n            } : null,\n            fileName: pdf.FileName,\n            hierarchyExportMode: typeof pdf.HierarchyExportMode === 'string' ? pdf.HierarchyExportMode : null,\n            allowHorizontalOverflow: pdf.AllowHorizontalOverflow\n        });\n        return values;\n    };\n    PivotUtil.formatExcelStyle = function (style) {\n        var prop;\n        if (!isNullOrUndefined(style)) {\n            prop = this.getDefinedObj({\n                fontColor: style.FontColor,\n                fontName: style.FontName,\n                fontSize: style.FontSize,\n                hAlign: style.HAlign === String ? style.HAlign : null,\n                vAlign: style.VAlign === String ? style.VAlign : null,\n                bold: style.Bold,\n                indent: style.Indent,\n                italic: style.Italic,\n                underline: style.Underline,\n                backColor: style.BackColor,\n                wrapText: style.WrapText,\n                borders: style.Borders,\n                numberFormat: style.NumberFormat,\n                type: style.Type\n            });\n        }\n        return prop;\n    };\n    PivotUtil.formatExcelCell = function (cell) {\n        var cells = [];\n        if (!isNullOrUndefined(cell)) {\n            for (var i = 0; i < cell.length; i++) {\n                var prop = this.getDefinedObj({\n                    index: !isNullOrUndefined(cell[i].Index) ? cell[i].Index : null,\n                    colSpan: !isNullOrUndefined(cell[i].ColSpan) ? cell[i].ColSpan : null,\n                    value: !isNullOrUndefined(cell[i].Value) ? cell[i].Value : null,\n                    hyperlink: {\n                        target: !isNullOrUndefined(cell[i].Hyperlink) ? cell[i].Hyperlink.Target : null,\n                        displayText: !isNullOrUndefined(cell[i].Hyperlink) ? cell[i].Hyperlink.DisplayText : null\n                    },\n                    styles: this.formatExcelStyle(cell[i].Style),\n                    rowSpan: !isNullOrUndefined(cell[i].RowSpan) ? cell[i].RowSpan : null\n                });\n            }\n        }\n        return cells;\n    };\n    PivotUtil.formatExcelHeaderFooter = function (excel) {\n        var rows = [];\n        if (!isNullOrUndefined(excel)) {\n            for (var i = 0; i < excel.Rows.length; i++) {\n                var row = excel.Rows[i];\n                var prop = this.getDefinedObj({\n                    index: !isNullOrUndefined(row.Index) ? row.Index : null,\n                    cells: this.formatExcelCell(row.Cells),\n                    grouping: !isNullOrUndefined(row.Grouping) ? row.Grouping : null\n                });\n                rows.push(prop);\n            }\n        }\n        return rows;\n    };\n    PivotUtil.formatExcelExportProperties = function (excel) {\n        var prop;\n        prop = this.getDefinedObj({\n            dataSource: excel.DataSource,\n            query: excel.Query,\n            multipleExport: this.getDefinedObj({\n                type: !isNullOrUndefined(excel.MultipleExport) ? excel.MultipleExport.Type : null,\n                blankRows: !isNullOrUndefined(excel.MultipleExport) ? excel.MultipleExport.BlankRows : null\n            }),\n            header: this.getDefinedObj({\n                headerRows: !isNullOrUndefined(excel.Header) ? excel.Header.HeaderRows : null,\n                rows: this.formatExcelHeaderFooter(excel.Header)\n            }),\n            footer: this.getDefinedObj({\n                footerRows: !isNullOrUndefined(excel.Footer) ? excel.Footer.FooterRows : null,\n                rows: this.formatExcelHeaderFooter(excel.Footer)\n            }),\n            columns: excel.Columns,\n            exportType: typeof excel.ExportType === 'string' ? excel.ExportType : undefined,\n            includeHiddenColumn: excel.IncludeHiddenColumn,\n            theme: !isNullOrUndefined(excel.Theme) ? {\n                header: this.formatExcelStyle(excel.Theme.Header),\n                record: this.formatExcelStyle(excel.Theme.Record),\n                caption: this.formatExcelStyle(excel.Theme.Caption)\n            } : undefined,\n            fileName: excel.FileName,\n            hierarchyExportMode: typeof excel.HierarchyExportMode === 'string' ? excel.HierarchyExportMode : undefined\n        });\n        return prop;\n    };\n    /* tslint:disable:no-any */\n    PivotUtil.formatFieldList = function (fieldList) {\n        var keys = Object.keys(fieldList);\n        var fList = {};\n        for (var i = 0; i < keys.length; i++) {\n            if (fieldList[keys[i]]) {\n                fList[keys[i]] = {\n                    id: fieldList[keys[i]].Id,\n                    caption: fieldList[keys[i]].Caption,\n                    type: fieldList[keys[i]].Type,\n                    formatString: fieldList[keys[i]].FormatString,\n                    index: fieldList[keys[i]].Index,\n                    members: fieldList[keys[i]].Members,\n                    formattedMembers: fieldList[keys[i]].FormattedMembers,\n                    dateMember: fieldList[keys[i]].DateMember,\n                    filter: fieldList[keys[i]].Filter,\n                    sort: fieldList[keys[i]].Sort,\n                    aggregateType: fieldList[keys[i]].AggregateType,\n                    baseField: fieldList[keys[i]].BaseField,\n                    baseItem: fieldList[keys[i]].BaseItem,\n                    filterType: fieldList[keys[i]].FilterType,\n                    format: fieldList[keys[i]].Format,\n                    formula: fieldList[keys[i]].Formula,\n                    isSelected: fieldList[keys[i]].IsSelected,\n                    isExcelFilter: fieldList[keys[i]].IsExcelFilter,\n                    showNoDataItems: fieldList[keys[i]].ShowNoDataItems,\n                    isCustomField: fieldList[keys[i]].IsCustomField,\n                    showFilterIcon: fieldList[keys[i]].ShowFilterIcon,\n                    showSortIcon: fieldList[keys[i]].ShowSortIcon,\n                    showRemoveIcon: fieldList[keys[i]].ShowRemoveIcon,\n                    showEditIcon: fieldList[keys[i]].ShowEditIcon,\n                    showValueTypeIcon: fieldList[keys[i]].ShowValueTypeIcon,\n                    allowDragAndDrop: fieldList[keys[i]].AllowDragAndDrop,\n                    isCalculatedField: fieldList[keys[i]].IsCalculatedField,\n                    showSubTotals: fieldList[keys[i]].ShowSubTotals\n                };\n            }\n        }\n        return fList;\n    };\n    PivotUtil.frameContent = function (pivotValues, type, rowPosition, control) {\n        var dataContent = [];\n        var pivot = control;\n        if (pivot.dataSourceSettings.values.length > 0 && !pivot.engineModule.isEmptyData) {\n            if ((pivot.enableValueSorting) || !pivot.engineModule.isEngineUpdated) {\n                var rowCnt = 0;\n                var start = type === 'value' ? rowPosition : 0;\n                var end = type === 'value' ? pivotValues.length : rowPosition;\n                for (var rCnt = start; rCnt < end; rCnt++) {\n                    if (pivotValues[rCnt]) {\n                        rowCnt = type === 'header' ? rCnt : rowCnt;\n                        dataContent[rowCnt] = {};\n                        for (var cCnt = 0; cCnt < pivotValues[rCnt].length; cCnt++) {\n                            if (pivotValues[rCnt][cCnt]) {\n                                dataContent[rowCnt][cCnt] = pivotValues[rCnt][cCnt];\n                            }\n                        }\n                        rowCnt++;\n                    }\n                }\n            }\n        }\n        return dataContent;\n    };\n    PivotUtil.getLocalizedObject = function (control) {\n        var locale = new Object();\n        locale[\"Null\"] = control.localeObj.getConstant('null');\n        locale[\"Years\"] = control.localeObj.getConstant('Years');\n        locale[\"Quarters\"] = control.localeObj.getConstant('Quarters');\n        locale[\"Months\"] = control.localeObj.getConstant('Months');\n        locale[\"Days\"] = control.localeObj.getConstant('Days');\n        locale[\"Hours\"] = control.localeObj.getConstant('Hours');\n        locale[\"Minutes\"] = control.localeObj.getConstant('Minutes');\n        locale[\"Seconds\"] = control.localeObj.getConstant('Seconds');\n        locale[\"QuarterYear\"] = control.localeObj.getConstant('QuarterYear');\n        locale[\"Of\"] = control.localeObj.getConstant('of');\n        locale[\"Qtr\"] = control.localeObj.getConstant('qtr');\n        locale[\"Undefined\"] = control.localeObj.getConstant('undefined');\n        locale[\"GroupOutOfRange\"] = control.localeObj.getConstant('groupOutOfRange');\n        return locale;\n    };\n    PivotUtil.generateUUID = function () {\n        var d = new Date().getTime();\n        var d2 = (performance && performance.now && (performance.now() * 1000)) || 0;\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16;\n            if (d > 0) {\n                r = (d + r) % 16 | 0;\n                d = Math.floor(d / 16);\n            }\n            else {\n                r = (d2 + r) % 16 | 0;\n                d2 = Math.floor(d2 / 16);\n            }\n            return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n    };\n    return PivotUtil;\n}());\nexport { PivotUtil };\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { extend, Internationalization } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { PivotUtil } from './util';\n/**\n * PivotEngine is used to manipulate the relational or Multi-Dimensional data as pivoting values.\n */\n/** @hidden */\nvar PivotEngine = /** @class */ (function () {\n    function PivotEngine() {\n        /** @hidden */\n        this.aggregatedValueMatrix = [];\n        /** @hidden */\n        this.valueContent = [];\n        /** @hidden */\n        this.formatFields = {};\n        /** @hidden */\n        this.dateFormatFunction = {};\n        /** @hidden */\n        this.calculatedFields = {};\n        /** @hidden */\n        this.calculatedFormulas = {};\n        /** @hidden */\n        this.valueAxis = 0;\n        /** @hidden */\n        this.saveDataHeaders = {};\n        /** @hidden */\n        this.columnCount = 0;\n        /** @hidden */\n        this.rowCount = 0;\n        /** @hidden */\n        this.colFirstLvl = 0;\n        /** @hidden */\n        this.rowFirstLvl = 0;\n        /** @hidden */\n        this.rowStartPos = 0;\n        /** @hidden */\n        this.colStartPos = 0;\n        /** @hidden */\n        this.enableValueSorting = false;\n        /** @hidden */\n        this.headerCollection = { rowHeaders: [], columnHeaders: [], rowHeadersCount: 0, columnHeadersCount: 0 };\n        /** @hidden */\n        this.rMembers = [];\n        /** @hidden */\n        this.cMembers = [];\n        /** @hidden */\n        this.groupingFields = {};\n        this.valueMatrix = [];\n        this.indexMatrix = [];\n        this.memberCnt = -1;\n        this.pageInLimit = false;\n        this.endPos = 0;\n        this.removeCount = 0;\n        this.colHdrBufferCalculated = false;\n        this.colValuesLength = 1;\n        this.rowValuesLength = 1;\n        this.slicedHeaders = [];\n        this.fieldFilterMem = {};\n        this.filterPosObj = {};\n        this.selectedHeaders = { selectedHeader: [], values: [] };\n        this.rowGrandTotal = null;\n        this.columnGrandTotal = null;\n        this.removeRowGrandTotal = false;\n        this.removeColumnGrandTotal = false;\n        this.isValueHasAdvancedAggregate = false;\n        this.rawIndexObject = {};\n        this.isEditing = false;\n        /** @hidden */\n        this.data = [];\n        /** @hidden */\n        this.actualData = [];\n        /** @hidden */\n        this.groupRawIndex = {};\n        /** @hidden */\n        this.fieldKeys = {};\n        this.allowDataCompression = false;\n        this.dataSourceSettings = {};\n        this.frameHeaderObjectsCollection = false;\n        this.headerObjectsCollection = {};\n        this.columnKeys = {};\n        this.fieldDrillCollection = {};\n        this.fieldMapping = [];\n        /* tslint:disable-next-line:max-line-length */\n        this.customRegex = /^(('[^']+'|''|[^*#@0,.])*)(\\*.)?((([0#,]*[0,]*[0#]*)(\\.[0#]*)?)|([#,]*@+#*))(E\\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;\n        this.formatRegex = /(^[ncpae]{1})([0-1]?[0-9]|20)?$/i;\n        /* private makeMirrorObject(elements: number[], obj: NumberIndex): void {\n             for (let lp: number = 0, end: number = elements.length; lp < end; lp++) {\n                 obj[elements[lp]] = elements[lp];\n             }\n         } */\n    }\n    /* tslint:disable:max-func-body-length */\n    PivotEngine.prototype.renderEngine = function (dataSource, customProperties, fn) {\n        this.getValueCellInfo = fn;\n        this.formatFields = {};\n        this.dateFormatFunction = {};\n        this.calculatedFields = {};\n        this.calculatedFormulas = {};\n        this.valueAxis = 0;\n        this.saveDataHeaders = {};\n        this.columnCount = 0;\n        this.rowCount = 0;\n        this.colFirstLvl = 0;\n        this.rowFirstLvl = 0;\n        this.rowStartPos = 0;\n        this.colStartPos = 0;\n        this.excludeFields = isNullOrUndefined(dataSource.excludeFields) ? [] : dataSource.excludeFields;\n        this.enableValueSorting = false;\n        this.headerCollection = { rowHeaders: [], columnHeaders: [], rowHeadersCount: 0, columnHeadersCount: 0 };\n        this.valueMatrix = [];\n        this.indexMatrix = [];\n        this.aggregatedValueMatrix = [];\n        this.rMembers = [];\n        this.cMembers = [];\n        this.memberCnt = -1;\n        this.pageInLimit = false;\n        this.endPos = 0;\n        this.removeCount = 0;\n        this.colHdrBufferCalculated = false;\n        this.colValuesLength = 1;\n        this.rowValuesLength = 1;\n        this.slicedHeaders = [];\n        this.fieldFilterMem = {};\n        this.filterPosObj = {};\n        this.selectedHeaders = { selectedHeader: [], values: [] };\n        this.rowGrandTotal = null;\n        this.columnGrandTotal = null;\n        this.removeRowGrandTotal = false;\n        this.removeColumnGrandTotal = false;\n        this.isValueHasAdvancedAggregate = false;\n        this.rawIndexObject = {};\n        this.isEditing = false;\n        var fields;\n        var val;\n        var filterRw;\n        this.globalize = new Internationalization();\n        this.localeObj = customProperties ? customProperties.localeObj : undefined;\n        this.fieldsType = customProperties ? customProperties.fieldsType : {};\n        this.enableSort = dataSource.enableSorting;\n        this.alwaysShowValueHeader = dataSource.alwaysShowValueHeader;\n        this.showHeaderWhenEmpty = isNullOrUndefined(dataSource.showHeaderWhenEmpty) ? true : dataSource.showHeaderWhenEmpty;\n        this.showSubTotals = isNullOrUndefined(dataSource.showSubTotals) ? true : dataSource.showSubTotals;\n        this.showRowSubTotals = isNullOrUndefined(dataSource.showRowSubTotals) ? true : dataSource.showRowSubTotals;\n        this.showColumnSubTotals = isNullOrUndefined(dataSource.showColumnSubTotals) ? true : dataSource.showColumnSubTotals;\n        this.showGrandTotals = isNullOrUndefined(dataSource.showGrandTotals) ? true : dataSource.showGrandTotals;\n        this.showRowGrandTotals = isNullOrUndefined(dataSource.showRowGrandTotals) ? true : dataSource.showRowGrandTotals;\n        this.showColumnGrandTotals = isNullOrUndefined(dataSource.showColumnGrandTotals) ? true : dataSource.showColumnGrandTotals;\n        this.allowValueFilter = dataSource.allowValueFilter;\n        this.isValueFilterEnabled = false;\n        this.enableValueSorting = customProperties ? customProperties.enableValueSorting : false;\n        this.isDrillThrough = customProperties ? (customProperties.isDrillThrough ? customProperties.isDrillThrough : false) : false;\n        this.valueContent = [];\n        this.dataSourceSettings = dataSource;\n        if (!(dataSource.dataSource instanceof DataManager)) {\n            this.data = (isBlazor() && !dataSource.dataSource && this.data && this.data.length > 0) ?\n                this.data : dataSource.dataSource;\n        }\n        if (this.data && this.data[0]) {\n            if (!this.fieldList) {\n                if (dataSource.type === 'CSV') {\n                    this.fields = this.data.shift();\n                }\n                else {\n                    this.fields = Object.keys(this.data[0]);\n                }\n                for (var i = 0; i < this.fields.length; i++) {\n                    this.fieldKeys[this.fields[i]] = dataSource.type === 'CSV' ? i : this.fields[i];\n                }\n            }\n            if (customProperties && customProperties.pageSettings && customProperties.pageSettings.allowDataCompression) {\n                this.actualData = this.data;\n                this.data = this.getGroupedRawData(dataSource);\n            }\n            this.rows = dataSource.rows ? dataSource.rows : [];\n            this.columns = dataSource.columns ? dataSource.columns : [];\n            this.filters = dataSource.filters ? dataSource.filters : [];\n            this.values = dataSource.values ? dataSource.values : [];\n            this.formats = dataSource.formatSettings ? dataSource.formatSettings : [];\n            this.groups = dataSource.groupSettings ? dataSource.groupSettings : [];\n            this.calculatedFieldSettings = dataSource.calculatedFieldSettings ? dataSource.calculatedFieldSettings : [];\n            this.enableSort = dataSource.enableSorting === undefined ? true : dataSource.enableSorting;\n            this.fieldMapping = dataSource.fieldMapping ? dataSource.fieldMapping : [];\n            fields = this.getGroupData(this.data);\n            for (var i = 0; i < this.fields.length; i++) {\n                this.fieldKeys[this.fields[i]] = dataSource.type === 'CSV' ? i : this.fields[i];\n            }\n            this.validateFilters(dataSource);\n            this.isExpandAll = (this.isValueFiltersAvail && dataSource.allowValueFilter) ? true : dataSource.expandAll;\n            this.drilledMembers =\n                dataSource.drilledMembers ? (this.isValueFiltersAvail && dataSource.allowValueFilter) ? [] : dataSource.drilledMembers : [];\n            this.isMutiMeasures = this.values.length > 1 ? true : false;\n            this.valueAxis = dataSource.valueAxis === 'row' ? 1 : 0;\n            this.emptyCellTextContent = dataSource.emptyCellsTextContent ? dataSource.emptyCellsTextContent : '';\n            this.rowValuesLength = this.valueAxis === 1 ? this.values.length : 1;\n            this.colValuesLength = this.valueAxis === 0 ? this.values.length : 1;\n            this.valueSortSettings = dataSource.valueSortSettings ||\n                { sortOrder: 'None', headerDelimiter: '.', headerText: '', columnIndex: undefined };\n            this.valueSortData = [];\n            this.pageSettings = customProperties ? (customProperties.pageSettings ? customProperties.pageSettings : this.pageSettings)\n                : undefined;\n            this.allowDataCompression = this.pageSettings && this.pageSettings.allowDataCompression;\n            this.savedFieldList = customProperties ? customProperties.savedFieldList : undefined;\n            this.getFieldList(fields, this.enableSort, dataSource.allowValueFilter);\n            this.removeIrrelevantFields(dataSource, Object.keys(this.fieldList));\n            this.fillFieldMembers(this.data, this.indexMatrix);\n            this.updateSortSettings(dataSource.sortSettings, this.enableSort);\n            this.valueMatrix = this.generateValueMatrix(this.data);\n            this.filterMembers = [];\n            var columnLength = this.columns.length - 1;\n            this.columnKeys = {};\n            while (columnLength > -1) {\n                this.columnKeys[this.columns[columnLength].name] = this.columns[columnLength];\n                columnLength--;\n            }\n            this.updateFilterMembers(dataSource);\n            this.generateGridData(dataSource);\n        }\n    };\n    PivotEngine.prototype.removeIrrelevantFields = function (dataSource, fields) {\n        var report = {};\n        report[0] = dataSource.rows;\n        report[1] = dataSource.columns;\n        report[2] = dataSource.values;\n        report[3] = dataSource.filters;\n        var pos = 0;\n        while (pos < 4) {\n            if (report[pos]) {\n                for (var cnt = 0; cnt < report[pos].length; cnt++) {\n                    /* tslint:disable-next-line:max-line-length */\n                    if ((this.excludeFields.indexOf(report[pos][cnt].name) > -1) || (!isNullOrUndefined(fields) && fields.indexOf(report[pos][cnt].name) === -1)) {\n                        report[pos].splice(cnt, 1);\n                        cnt--;\n                    }\n                }\n            }\n            pos++;\n        }\n    };\n    /* tslint:disable */\n    PivotEngine.prototype.getGroupedRawData = function (dataSourceSettings) {\n        this.data = [];\n        for (var _i = 0, _a = this.actualData; _i < _a.length; _i++) {\n            var data = _a[_i];\n            this.data[this.data.length] = this.frameHeaderWithKeys(data);\n        }\n        var countFields = dataSourceSettings.values.filter(function (item) {\n            return item.type === 'Count' || item.type === 'DistinctCount';\n        }).map(function (item) { return item.name; });\n        var hasCountField = countFields.length > 0;\n        var realData = this.data;\n        var headerFields = dataSourceSettings.rows.concat(dataSourceSettings.columns.concat(dataSourceSettings.filters)).map(function (item) {\n            return item.name;\n        });\n        var groupRawData = {};\n        var finalData = [];\n        this.groupRawIndex = {};\n        var groupKeys = {};\n        var indexLength = 0;\n        for (var i = 0; i < realData.length; i++) {\n            var currData = realData[i];\n            var members = [];\n            if (hasCountField) {\n                for (var vPos = 0; vPos < countFields.length; vPos++) {\n                    currData[this.fieldKeys[countFields[vPos]]] = isNullOrUndefined(currData[this.fieldKeys[countFields[vPos]]]) ? currData[this.fieldKeys[countFields[vPos]]] : 1;\n                }\n            }\n            for (var hPos = 0; hPos < headerFields.length; hPos++) {\n                members.push(currData[this.fieldKeys[headerFields[hPos]]]);\n            }\n            var memberJoin = members.join('-');\n            if (groupRawData[memberJoin]) {\n                for (var vPos = 0; vPos < dataSourceSettings.values.length; vPos++) {\n                    var currFieldName = dataSourceSettings.values[vPos].name;\n                    var currValue = currData[this.fieldKeys[currFieldName]];\n                    var savedData = groupRawData[memberJoin];\n                    var summType = dataSourceSettings.values[vPos].type;\n                    if (!isNullOrUndefined(currValue)) {\n                        if (typeof currValue !== 'number' || summType === 'DistinctCount') {\n                            summType = 'Count';\n                        }\n                        if (isNullOrUndefined(savedData[currFieldName])) {\n                            savedData[currFieldName] = summType === 'Product' ? 1 : ((summType === 'Min' || summType === 'Max')\n                                ? undefined : 0);\n                        }\n                        else if (typeof savedData[currFieldName] !== 'number') {\n                            savedData[currFieldName] = 1;\n                        }\n                        if (summType === 'Count') {\n                            savedData[currFieldName] += 1;\n                        }\n                        else if (summType === 'Min') {\n                            if (!isNullOrUndefined(savedData[currFieldName])) {\n                                savedData[currFieldName] = savedData[currFieldName] > currValue ?\n                                    currValue : savedData[currFieldName];\n                            }\n                        }\n                        else if (summType === 'Max') {\n                            if (!isNullOrUndefined(savedData[currFieldName])) {\n                                savedData[currFieldName] = savedData[currFieldName] < currValue ?\n                                    currValue : savedData[currFieldName];\n                            }\n                        }\n                        else if (summType === 'Product') {\n                            savedData[currFieldName] *= currValue;\n                        }\n                        else {\n                            savedData[currFieldName] += currValue;\n                        }\n                    }\n                }\n                if (this.isDrillThrough) {\n                    this.groupRawIndex[groupKeys[memberJoin]].push(i);\n                }\n            }\n            else {\n                groupRawData[memberJoin] = currData;\n                finalData.push(currData);\n                if (this.isDrillThrough) {\n                    this.groupRawIndex[indexLength] = [i];\n                    groupKeys[memberJoin] = indexLength;\n                    indexLength++;\n                }\n            }\n        }\n        return finalData;\n    };\n    /* tslint:enable */\n    /* tslint:disable:typedef no-any */\n    /* tslint:disable:max-func-body-length */\n    PivotEngine.prototype.getGroupData = function (data) {\n        var _this = this;\n        var fieldkeySet = data[0];\n        var _loop_1 = function (group) {\n            var fieldName = group.name;\n            var caption = group.caption;\n            if (this_1.fields.indexOf(fieldName) > -1) {\n                var groupFields = {};\n                var customGroupFieldName = void 0;\n                if (group.type === 'Date' && this_1.groupingFields[fieldName]) {\n                    return { value: fieldkeySet };\n                }\n                else if (group.type === 'Number') {\n                    if (PivotUtil.getType(fieldkeySet[fieldName]) === 'number' || !this_1.groupingFields[fieldName]) {\n                        /* tslint:disable:typedef */\n                        if (group.rangeInterval) {\n                            data.sort(function (a, b) { return (Number(a[_this.fieldKeys[fieldName]]) > Number(b[_this.fieldKeys[fieldName]]))\n                                ? 1 : ((Number(b[_this.fieldKeys[fieldName]]) > Number(a[_this.fieldKeys[fieldName]]))\n                                ? -1 : 0); });\n                        }\n                        /* tslint:enable:typedef */\n                    }\n                    else {\n                        return { value: fieldkeySet };\n                    }\n                }\n                else if (group.type === 'Custom' && this_1.fields.indexOf(fieldName + '_custom_group') > -1) {\n                    return { value: fieldkeySet };\n                }\n                var len = data.length;\n                /* tslint:disable:max-line-length */\n                while (len--) {\n                    var item = data[len];\n                    if (item[this_1.fieldKeys[fieldName]] && group.type === 'Date') {\n                        var date = new Date(item[this_1.fieldKeys[fieldName]].toString());\n                        if (!isNullOrUndefined(date) && group.groupInterval.length > 0) {\n                            for (var i = 0, len_1 = group.groupInterval.length; i < len_1; i++) {\n                                var interval = group.groupInterval[i];\n                                var isInRangeAvail = this_1.getRange(group, date.getTime());\n                                var newDate = PivotUtil.resetTime(new Date());\n                                switch (interval) {\n                                    case 'Years':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_years';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : new Date(newDate.setFullYear(date.getFullYear())).toString());\n                                        }\n                                        break;\n                                    case 'Quarters':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_quarters';\n                                            groupFields[newFieldName] = interval;\n                                            var month = Math.ceil((date.getMonth() + 1) / 3);\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : ((this_1.localeObj ? this_1.localeObj.getConstant('qtr') : 'Qtr') + month.toString()));\n                                        }\n                                        break;\n                                    case 'QuarterYear':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_quarterYear';\n                                            groupFields[newFieldName] = interval;\n                                            var month = Math.ceil((date.getMonth() + 1) / 3);\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined :\n                                                ((this_1.localeObj ? this_1.localeObj.getConstant('qtr') : 'Qtr') + month.toString() + ' '\n                                                    + (this_1.localeObj ? this_1.localeObj.getConstant('of') : 'of') + ' '\n                                                    + date.getFullYear().toString()));\n                                        }\n                                        break;\n                                    case 'Months':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_months';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : new Date(newDate.setMonth(date.getMonth(), newDate.getDate())).toString());\n                                        }\n                                        break;\n                                    case 'Days':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_days';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : new Date(newDate.setMonth(date.getMonth(), date.getDate())).toString());\n                                        }\n                                        break;\n                                    case 'Hours':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_hours';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : new Date(newDate.setHours(date.getHours())).toString());\n                                        }\n                                        break;\n                                    case 'Minutes':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_minutes';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : new Date(newDate.setMinutes(date.getMinutes())).toString());\n                                        }\n                                        break;\n                                    case 'Seconds':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_seconds';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : new Date(newDate.setSeconds(date.getSeconds())).toString());\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else if (item[this_1.fieldKeys[fieldName]] && group.type === 'Number') {\n                        var isInRangeAvail = this_1.getRange(group, Number(item[this_1.fieldKeys[fieldName]]));\n                        item[this_1.fieldKeys[fieldName]] = isInRangeAvail ? undefined : item[this_1.fieldKeys[fieldName]];\n                    }\n                    else if (item[this_1.fieldKeys[fieldName]] && group.type === 'Custom' && group.customGroups && group.customGroups.length > 0) {\n                        var newFieldName = fieldName + '_custom_group';\n                        var customGroups = group.customGroups;\n                        var groupValue = void 0;\n                        for (var i = 0, len_2 = customGroups.length; i < len_2; i++) {\n                            {\n                                var cGroup = customGroups[i];\n                                if (cGroup.items && cGroup.items.length > 1) {\n                                    customGroupFieldName = newFieldName;\n                                    this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                    if (this_1.fields.indexOf(newFieldName) === -1) {\n                                        this_1.fields.push(newFieldName);\n                                    }\n                                    var isDataMatch = PivotUtil.inArray(item[this_1.fieldKeys[fieldName]].toString(), cGroup.items) === -1 ? false : true;\n                                    item[this_1.fieldKeys[newFieldName]] = (isDataMatch ? (cGroup.groupName && cGroup.groupName !== '') ? cGroup.groupName :\n                                        this_1.localeObj.getConstant('group') + ' ' + i : (groupValue && groupValue !== item[this_1.fieldKeys[fieldName]].toString()) ?\n                                        groupValue : item[this_1.fieldKeys[fieldName]].toString());\n                                    groupValue = item[this_1.fieldKeys[newFieldName]];\n                                }\n                            }\n                        }\n                    }\n                    var keys = Object.keys(item);\n                    var isCompleteSet = [];\n                    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                        var key = keys_1[_i];\n                        isCompleteSet.push((item[key]) ? true : false);\n                    }\n                    fieldkeySet = (((isCompleteSet.indexOf(false) === -1) && keys.length === Object.keys(data[0]).length) ? item : fieldkeySet);\n                    //this.fields = Object.keys(fieldkeySet);\n                }\n                if (group.type === 'Date') {\n                    var isDataSource = false;\n                    var axisFields = [this_1.rows, this_1.columns, this_1.values, this_1.filters];\n                    var groupKeys = Object.keys(groupFields);\n                    var gCnt = Object.keys(groupKeys).length;\n                    var groupField = void 0;\n                    for (var _a = 0, axisFields_1 = axisFields; _a < axisFields_1.length; _a++) {\n                        var axis = axisFields_1[_a];\n                        if (!isDataSource && axis) {\n                            var cnt = axis.length;\n                            var i = 0;\n                            while (i < cnt) {\n                                if (axis[i].name === fieldName) {\n                                    isDataSource = true;\n                                    var actualField = axis[i];\n                                    axis.splice(i, 1);\n                                    var dataFields = this_1.rows;\n                                    dataFields = dataFields.concat(this_1.columns, this_1.values, this_1.filters);\n                                    while (gCnt--) {\n                                        if (!PivotUtil.getFieldByName(groupKeys[gCnt], dataFields)) {\n                                            groupField = groupFields[groupKeys[gCnt]];\n                                            var newField = {\n                                                name: groupKeys[gCnt],\n                                                caption: (this_1.localeObj ? this_1.localeObj.getConstant(groupField) : groupField) + ' (' + (actualField.caption ? actualField.caption : actualField.name) + ')',\n                                                type: 'Count',\n                                                showNoDataItems: actualField.showNoDataItems,\n                                                baseField: actualField.baseField,\n                                                baseItem: actualField.baseItem,\n                                                showFilterIcon: actualField.showFilterIcon,\n                                                showSortIcon: actualField.showSortIcon,\n                                                showEditIcon: actualField.showEditIcon,\n                                                showRemoveIcon: actualField.showRemoveIcon,\n                                                showSubTotals: actualField.showValueTypeIcon,\n                                                allowDragAndDrop: actualField.allowDragAndDrop\n                                            };\n                                            axis.splice(i, 0, newField);\n                                        }\n                                    }\n                                    break;\n                                }\n                                i++;\n                            }\n                            if (isDataSource) {\n                                break;\n                            }\n                        }\n                    }\n                    gCnt = Object.keys(groupKeys).length;\n                    while (gCnt--) {\n                        groupField = groupFields[groupKeys[gCnt]];\n                        for (var i = 0, len_3 = this_1.formats.length; i < len_3; i++) {\n                            if (this_1.formats[i].name === groupKeys[gCnt]) {\n                                this_1.formats.splice(i, 1);\n                                break;\n                            }\n                        }\n                        if (groupField !== 'Quarters' && groupField !== 'QuarterYear') {\n                            var formatSettings = {\n                                name: groupKeys[gCnt],\n                                type: ['Years', 'Months', 'Days'].indexOf(groupField) > -1 ? 'date' : 'time',\n                                format: ((groupField === 'Years') ? 'yyyy' : (groupField === 'Months') ? 'MMM' :\n                                    (groupField === 'Days') ? 'd-MMM' : (groupField === 'Hours') ? 'hh a' :\n                                        (groupField === 'Minutes') ? ':mm' : (groupField === 'Seconds') ? ':ss' : undefined)\n                            };\n                            this_1.formats.push(formatSettings);\n                        }\n                    }\n                }\n                else if (group.type === 'Number' && group.rangeInterval) {\n                    var startValue = void 0;\n                    var endValue = void 0;\n                    var cStartValue = void 0;\n                    var cEndValue = void 0;\n                    var framedSet = [];\n                    var unframedSet = [];\n                    var dataLength = data.length;\n                    var cnt = 0;\n                    this_1.groupingFields[fieldName] = fieldName;\n                    while (cnt < dataLength) {\n                        unframedSet.push(Number(data[cnt][this_1.fieldKeys[fieldName]]));\n                        if (data[cnt][this_1.fieldKeys[fieldName]] && framedSet.indexOf(Number(data[cnt][this_1.fieldKeys[fieldName]])) === -1) {\n                            framedSet.push(Number(data[cnt][this_1.fieldKeys[fieldName]]));\n                        }\n                        cnt++;\n                    }\n                    var framedSetLength = Math.max.apply(Math, framedSet);\n                    for (var i = framedSet[0], len_4 = framedSetLength; i < len_4; i++) {\n                        if (unframedSet.indexOf(i) < 0) {\n                            var duplicateData = this_1.frameData(data[0]);\n                            duplicateData[this_1.fieldKeys[fieldName]] = i;\n                            var index = unframedSet.lastIndexOf(i - 1);\n                            unframedSet.splice(index + 1, 0, i);\n                            data.splice(index + 1, 0, duplicateData);\n                        }\n                    }\n                    dataLength = data.length;\n                    cnt = 0;\n                    while (cnt < dataLength) {\n                        if (data[cnt] && data[cnt][this_1.fieldKeys[fieldName]]) {\n                            cStartValue = Number(data[cnt][this_1.fieldKeys[fieldName]]);\n                            cEndValue = cStartValue + (group.rangeInterval - 1);\n                            startValue = (!startValue) ? cStartValue : startValue;\n                            endValue = ((!endValue) ? ((cEndValue > framedSetLength) ? framedSetLength : cEndValue) : ((endValue > framedSetLength) ? framedSetLength : endValue));\n                            if (cStartValue >= startValue && cStartValue <= endValue) {\n                                data[cnt][this_1.fieldKeys[fieldName]] = ((startValue === endValue) ? startValue.toString() : startValue.toString() + '-' + endValue.toString());\n                            }\n                            else if (cStartValue > endValue && cStartValue === endValue + 1) {\n                                startValue = endValue + 1;\n                                endValue = ((startValue + (group.rangeInterval - 1) > framedSetLength) ? framedSetLength : startValue + (group.rangeInterval - 1));\n                                data[cnt][this_1.fieldKeys[fieldName]] = ((startValue === endValue) ? startValue.toString() : startValue.toString() + '-' + endValue.toString());\n                            }\n                            var keys = Object.keys(data[cnt]);\n                            var isCompleteSet = [];\n                            for (var _b = 0, keys_2 = keys; _b < keys_2.length; _b++) {\n                                var key = keys_2[_b];\n                                isCompleteSet.push((data[cnt][key]) ? true : false);\n                            }\n                            fieldkeySet = (((isCompleteSet.indexOf(false) === -1) && keys.length === Object.keys(data[0]).length) ? data[cnt] : fieldkeySet);\n                        }\n                        cnt++;\n                    }\n                    var axisFields = [this_1.rows, this_1.columns, this_1.values, this_1.filters];\n                    for (var _c = 0, axisFields_2 = axisFields; _c < axisFields_2.length; _c++) {\n                        var fields = axisFields_2[_c];\n                        var field = PivotUtil.getFieldByName(fieldName, fields);\n                        if (field) {\n                            field = field.properties ? field.properties : field;\n                            field.type = 'Count';\n                        }\n                    }\n                    for (var i = 0, len_5 = this_1.formats.length; i < len_5; i++) {\n                        if (this_1.formats[i].name === fieldName) {\n                            this_1.formats.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n                else if (group.type === 'Custom' && customGroupFieldName) {\n                    var customFieldName = customGroupFieldName;\n                    // this.groupingFields[customFieldName] = customFieldName;\n                    var isDataSource = false;\n                    var axisFields = [this_1.rows, this_1.columns, this_1.values, this_1.filters];\n                    var dataFields = this_1.rows;\n                    dataFields = dataFields.concat(this_1.columns, this_1.values, this_1.filters);\n                    var pattern = [];\n                    if (!caption || caption === '') {\n                        pattern = customFieldName.match(/_custom_group/g);\n                    }\n                    // let actualFieldName: string = fieldName.replace(/_custom_group/g, '');\n                    var parentField = PivotUtil.getFieldByName(fieldName.replace(/_custom_group/g, ''), dataFields);\n                    var customGroupField = PivotUtil.getFieldByName(customFieldName, dataFields);\n                    for (var _d = 0, axisFields_3 = axisFields; _d < axisFields_3.length; _d++) {\n                        var axis = axisFields_3[_d];\n                        if (!isDataSource && axis) {\n                            var cnt = axis.length;\n                            var i = 0;\n                            while (i < cnt) {\n                                if (axis[i].name === group.name && !customGroupField) {\n                                    isDataSource = true;\n                                    var actualField = axis[i];\n                                    var newField = {\n                                        name: customFieldName,\n                                        caption: (!caption || caption === '') ? (parentField.caption ? parentField.caption : parentField.name) + (pattern.length + 1) : caption,\n                                        type: 'Count',\n                                        showNoDataItems: actualField.showNoDataItems,\n                                        baseField: actualField.baseField,\n                                        baseItem: actualField.baseItem,\n                                        showSubTotals: actualField.showValueTypeIcon,\n                                        allowDragAndDrop: actualField.allowDragAndDrop,\n                                        showFilterIcon: actualField.showFilterIcon,\n                                        showSortIcon: actualField.showSortIcon,\n                                        showRemoveIcon: actualField.showRemoveIcon,\n                                        showEditIcon: actualField.showEditIcon\n                                    };\n                                    axis.splice(i, 0, newField);\n                                    break;\n                                }\n                                else if (axis[i].name === customFieldName && customGroupField) {\n                                    var newField = {\n                                        name: customGroupField.name,\n                                        caption: (!caption || caption === '') ? customGroupField.caption : caption,\n                                        type: customGroupField.type,\n                                        showNoDataItems: customGroupField.showNoDataItems,\n                                        baseField: customGroupField.baseField,\n                                        baseItem: customGroupField.baseItem,\n                                        showRemoveIcon: customGroupField.showRemoveIcon,\n                                        showSubTotals: customGroupField.showValueTypeIcon,\n                                        allowDragAndDrop: customGroupField.allowDragAndDrop,\n                                        showFilterIcon: customGroupField.showFilterIcon,\n                                        showSortIcon: customGroupField.showSortIcon,\n                                        showEditIcon: customGroupField.showEditIcon\n                                    };\n                                    axis.splice(i, 1, newField);\n                                    break;\n                                }\n                                i++;\n                            }\n                            if (isDataSource) {\n                                break;\n                            }\n                        }\n                    }\n                    var formatfield = PivotUtil.getFieldByName(fieldName, PivotUtil.cloneFormatSettings(this_1.formats));\n                    if (formatfield) {\n                        formatfield.name = customFieldName;\n                        this_1.formats.push(formatfield);\n                    }\n                }\n                /* tslint:enable:max-line-length */\n                this_1.groupingFields = extend(this_1.groupingFields, groupFields);\n            }\n            else {\n                return { value: fieldkeySet };\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.groups; _i < _a.length; _i++) {\n            var group = _a[_i];\n            var state_1 = _loop_1(group);\n            if (typeof state_1 === \"object\")\n                return state_1.value;\n        }\n        //this.fields = Object.keys(fieldkeySet);\n        return fieldkeySet;\n    };\n    /* tslint:disable */\n    PivotEngine.prototype.frameData = function (data) {\n        var fields = Object.keys(data);\n        var keyPos = 0;\n        var framedSet = {};\n        while (keyPos < fields.length) {\n            framedSet[fields[keyPos]] = undefined;\n            keyPos++;\n        }\n        return framedSet;\n    };\n    /* tslint:enable */\n    PivotEngine.prototype.getRange = function (group, cValue) {\n        var isRangeAvail;\n        if (group.type === 'Date') {\n            var cDate = new Date(cValue);\n            var startDate = typeof (group.startingAt) === 'string' ? new Date(group.startingAt) : group.startingAt;\n            var endDate = typeof (group.endingAt) === 'string' ? new Date(group.endingAt) : group.endingAt;\n            if (startDate && cDate.getTime() < startDate.getTime() ||\n                endDate && cDate.getTime() > endDate.getTime()) {\n                isRangeAvail = true;\n            }\n            else {\n                isRangeAvail = false;\n            }\n        }\n        else {\n            var startValue = typeof (group.startingAt) === 'string' ? parseInt(group.startingAt, 10) : group.startingAt;\n            var endValue = typeof (group.endingAt) === 'string' ? parseInt(group.endingAt, 10) : group.endingAt;\n            if (startValue && cValue < startValue || endValue && cValue > endValue) {\n                isRangeAvail = true;\n            }\n            else {\n                isRangeAvail = false;\n            }\n        }\n        return isRangeAvail;\n    };\n    PivotEngine.prototype.getFormattedFields = function (fields) {\n        var cnt = this.formats.length;\n        while (cnt--) {\n            this.formatFields[this.formats[cnt].name] = this.formats[cnt];\n            if (this.formats[cnt].type) {\n                this.dateFormatFunction[this.formats[cnt].name] = {\n                    exactFormat: this.globalize.getDateFormat(this.formats[cnt]),\n                    fullFormat: this.globalize.getDateFormat({\n                        format: 'yyyy/MM/dd/HH/mm/ss', type: this.formats[cnt].type\n                    })\n                };\n            }\n            // for (let len: number = 0, lnt: number = fields.length; len < lnt; len++) {\n            // if (fields[len] && fields[len].name === this.formats[cnt].name) {\n            //     this.formatFields[fields[len].name] = this.formats[cnt];\n            // }\n            // }\n        }\n    };\n    /* tslint:disable:typedef no-any */\n    /* tslint:disable:max-func-body-length */\n    PivotEngine.prototype.getFieldList = function (fields, isSort, isValueFilteringEnabled) {\n        var type;\n        var keys = this.fields;\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.values, this.filters);\n        this.getFormattedFields(dataFields);\n        this.getCalculatedField(keys);\n        keys = this.fields;\n        var lenE = this.excludeFields.length;\n        lenE = lenE - 1;\n        while (lenE > -1) {\n            var index = this.fields.indexOf(this.excludeFields[lenE]);\n            this.fields.splice(index, 1);\n            if (this.fieldList) {\n                delete this.fieldList[this.excludeFields[lenE]];\n            }\n            lenE--;\n        }\n        var len = keys.length;\n        var dataTypes = ['string', 'number', 'datetime', 'date', 'boolean'];\n        if (this.savedFieldList) {\n            this.fieldList = this.savedFieldList;\n            while (len--) { /** while is used for better performance than for */\n                var key = keys[len];\n                var field = this.getMappingField(key);\n                if (this.fieldList[key]) {\n                    this.fieldList[key].isSelected = false;\n                    this.fieldList[key].index = len;\n                    this.fieldList[key].filter = [];\n                    this.fieldList[key].sort = isSort ? 'Ascending' : 'None';\n                    this.fieldList[key].isExcelFilter = false;\n                    this.fieldList[key].filterType = '';\n                    this.fieldList[key].showFilterIcon = (field && 'showFilterIcon' in field) ?\n                        field.showFilterIcon : true;\n                    this.fieldList[key].showRemoveIcon = (field && 'showRemoveIcon' in field) ?\n                        field.showRemoveIcon : true;\n                    this.fieldList[key].showSortIcon = (field && 'showSortIcon' in field) ?\n                        field.showSortIcon : true;\n                    this.fieldList[key].showEditIcon = (field && 'showEditIcon' in field) ?\n                        field.showEditIcon : true;\n                    this.fieldList[key].showValueTypeIcon = (field && 'showValueTypeIcon' in field) ?\n                        field.showValueTypeIcon : true;\n                    this.fieldList[key].allowDragAndDrop = (field && 'allowDragAndDrop' in field) ?\n                        field.allowDragAndDrop : true;\n                    this.fieldList[key].isCalculatedField = (field && 'isCalculatedField' in field) ?\n                        field.isCalculatedField : false;\n                    this.fieldList[key].showNoDataItems = (field && 'showNoDataItems' in field) ?\n                        field.showNoDataItems : false;\n                    this.fieldList[key].showSubTotals = (field && 'showSubTotals' in field) ?\n                        field.showSubTotals : true;\n                    if (this.isValueFiltersAvail && isValueFilteringEnabled) {\n                        this.fieldList[key].dateMember = [];\n                        this.fieldList[key].formattedMembers = {};\n                        this.fieldList[key].members = {};\n                    }\n                }\n                else {\n                    type = (field && 'dataType' in field && field.dataType && dataTypes.indexOf(field.dataType.toLowerCase()) > -1) ?\n                        field.dataType.toLowerCase() : type;\n                    this.fieldList[key] = {\n                        caption: (field && 'caption' in field && field.caption) ? field.caption : key,\n                        id: key,\n                        type: ((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1)) ?\n                            'string' : (type === undefined || type === 'undefined') ? 'number' : type,\n                        isSelected: false,\n                        sort: isSort ? 'Ascending' : 'None',\n                        filterType: '',\n                        index: len,\n                        filter: [],\n                        isCustomField: ((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1)),\n                        showRemoveIcon: (field && 'showRemoveIcon' in field) ?\n                            field.showRemoveIcon : true,\n                        showFilterIcon: (field && 'showFilterIcon' in field) ?\n                            field.showFilterIcon : true,\n                        showSortIcon: (field && 'showSortIcon' in field) ?\n                            field.showSortIcon : true,\n                        showNoDataItems: (field && 'showNoDataItems' in field) ?\n                            field.showNoDataItems : false,\n                        isCalculatedField: (field && 'isCalculatedField' in field) ?\n                            field.isCalculatedField : false,\n                        showEditIcon: (field && 'showEditIcon' in field) ?\n                            field.showEditIcon : true,\n                        showValueTypeIcon: (field && 'showValueTypeIcon' in field) ?\n                            field.showValueTypeIcon : true,\n                        allowDragAndDrop: (field && 'allowDragAndDrop' in field) ?\n                            field.allowDragAndDrop : true,\n                        showSubTotals: (field && 'showSubTotals' in field) ?\n                            field.showSubTotals : true\n                    };\n                }\n            }\n        }\n        else {\n            this.fieldList = {};\n            while (len--) { /** while is used for better performance than for */\n                var key = keys[len];\n                var field = this.getMappingField(key);\n                type = (field && 'dataType' in field && field.dataType && dataTypes.indexOf(field.dataType.toLowerCase()) > -1) ?\n                    field.dataType.toLowerCase() : PivotUtil.getType(fields[this.fieldKeys[key]]);\n                this.fieldList[key] = {\n                    id: key,\n                    caption: (field && 'caption' in field && field.caption) ? field.caption : key,\n                    type: ((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1)) ?\n                        'string' : (type === undefined || type === 'undefined') ? 'number' : type,\n                    filterType: '',\n                    index: len,\n                    filter: [],\n                    sort: isSort ? 'Ascending' : 'None',\n                    isSelected: false,\n                    isCustomField: ((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1)),\n                    showFilterIcon: (field && 'showFilterIcon' in field) ?\n                        field.showFilterIcon : true,\n                    showRemoveIcon: (field && 'showRemoveIcon' in field) ?\n                        field.showRemoveIcon : true,\n                    showSortIcon: (field && 'showSortIcon' in field) ?\n                        field.showSortIcon : true,\n                    showEditIcon: (field && 'showEditIcon' in field) ?\n                        field.showEditIcon : true,\n                    showValueTypeIcon: (field && 'showValueTypeIcon' in field) ?\n                        field.showValueTypeIcon : true,\n                    allowDragAndDrop: (field && 'allowDragAndDrop' in field) ?\n                        field.allowDragAndDrop : true,\n                    showSubTotals: (field && 'showSubTotals' in field) ?\n                        field.showSubTotals : true,\n                    showNoDataItems: (field && 'showNoDataItems' in field) ?\n                        field.showNoDataItems : false,\n                    isCalculatedField: (field && 'isCalculatedField' in field) ?\n                        field.isCalculatedField : false\n                };\n            }\n        }\n        this.updateTreeViewData(dataFields);\n    };\n    PivotEngine.prototype.getMappingField = function (key) {\n        var field = {};\n        if (this.fieldMapping.length > 0) {\n            for (var index = 0, cnt = this.fieldMapping.length; index < cnt; index++) {\n                if (this.fieldMapping[index].name === key) {\n                    field = this.fieldMapping[index];\n                    break;\n                }\n            }\n        }\n        return field;\n    };\n    PivotEngine.prototype.updateFieldList = function (savedFieldList) {\n        var keys = this.fields;\n        var len = keys.length;\n        while (len--) { /** while is used for better performance than for */\n            this.fieldList[keys[len]].isExcelFilter = savedFieldList[keys[len]].isExcelFilter;\n        }\n    };\n    PivotEngine.prototype.updateTreeViewData = function (fields) {\n        var cnt = fields.length;\n        var lnt = this.calculatedFieldSettings.length;\n        while (cnt--) {\n            if (this.fieldList[fields[cnt].name]) {\n                var field = this.fieldList[fields[cnt].name];\n                field.caption = fields[cnt].caption ? fields[cnt].caption : fields[cnt].name;\n                field.isSelected = true;\n                field.showNoDataItems = fields[cnt].showNoDataItems;\n                field.aggregateType = fields[cnt].type;\n                field.baseField = fields[cnt].baseField;\n                field.baseItem = fields[cnt].baseItem;\n                field.allowDragAndDrop = fields[cnt].allowDragAndDrop;\n                field.showFilterIcon = fields[cnt].showFilterIcon;\n                field.showSortIcon = fields[cnt].showSortIcon;\n                field.showRemoveIcon = fields[cnt].showRemoveIcon;\n                field.showValueTypeIcon = fields[cnt].showValueTypeIcon;\n                field.showEditIcon = fields[cnt].showEditIcon;\n                field.showSubTotals = fields[cnt].showSubTotals;\n            }\n        }\n        while (lnt--) {\n            if (this.fieldList[this.calculatedFieldSettings[lnt].name]) {\n                this.fieldList[this.calculatedFieldSettings[lnt].name].aggregateType = 'CalculatedField';\n                this.fieldList[this.calculatedFieldSettings[lnt].name].isCalculatedField = true;\n                this.fieldList[this.calculatedFieldSettings[lnt].name].formula = this.calculatedFieldSettings[lnt].formula;\n            }\n        }\n    };\n    PivotEngine.prototype.getCalculatedField = function (keys) {\n        for (var _i = 0, _a = this.calculatedFieldSettings; _i < _a.length; _i++) {\n            var field = _a[_i];\n            this.calculatedFields[field.name] = extend({}, field, null, true);\n            this.calculatedFields[field.name].actualFormula = field.formula;\n        }\n        var fieldKeys = Object.keys(this.calculatedFields);\n        var _loop_2 = function (calc, cnt) {\n            var field = this_2.calculatedFields[fieldKeys[calc]];\n            var calcProperties = field.properties;\n            var actualFormula = (calcProperties ? calcProperties.formula : field.formula).replace(/ +/g, '');\n            var formula = actualFormula.replace(/\"/g, '');\n            field.formula = formula.indexOf('^') > -1 ? this_2.powerFunction(formula) : formula;\n            if (field.formula.indexOf('Math.min(') === -1 && field.formula.indexOf('min(') > -1) {\n                field.formula = field.formula.replace(/min\\(/g, 'Math.min(');\n            }\n            if (field.formula.indexOf('Math.max(') === -1 && field.formula.indexOf('max(') > -1) {\n                field.formula = field.formula.replace(/max\\(/g, 'Math.max(');\n            }\n            if (field.formula.indexOf('Math.abs(') === -1 && field.formula.indexOf('abs(') > -1) {\n                field.formula = field.formula.replace(/abs\\(/g, 'Math.abs(');\n            }\n            /* tslint:disable:typedef */\n            field.name = calcProperties ? calcProperties.name : field.name;\n            keys = keys.filter(function (key) { return key !== field.name; });\n            keys.push(field.name);\n            /* tslint:enable:typedef */\n            var formulaType = actualFormula.split('\\\"');\n            for (var len = 0, lmt = formulaType.length; len < lmt; len++) {\n                var type = formulaType[len];\n                var aggregateValue = type.split(/[ .:;?!~,`\"&|()<>{}\\[\\]\\r\\n/\\\\]+/);\n                var selectedString = (aggregateValue[0] === 'DistinctCount' ?\n                    'DistinctCount' : aggregateValue[0] === 'PopulationStDev' ?\n                    'PopulationStDev' : aggregateValue[0] === 'SampleStDev' ? 'SampleStDev' : aggregateValue[0] === 'PopulationVar' ?\n                    'PopulationVar' : aggregateValue[0] === 'SampleVar' ? 'SampleVar' : aggregateValue[0]);\n                if (['Sum', 'Count', 'Min', 'Max', 'Avg', 'Product', 'DistinctCount',\n                    'PopulationStDev', 'SampleStDev', 'PopulationVar', 'SampleVar'].indexOf(selectedString) !== -1) {\n                    var index = keys.indexOf(aggregateValue[1]);\n                    if (!this_2.calculatedFormulas[field.name]) {\n                        this_2.calculatedFormulas[field.name] = [{\n                                index: index,\n                                type: selectedString,\n                                formula: type,\n                            }];\n                    }\n                    else {\n                        this_2.calculatedFormulas[field.name].push({\n                            index: index,\n                            type: selectedString,\n                            formula: type,\n                        });\n                    }\n                }\n            }\n        };\n        var this_2 = this;\n        for (var calc = 0, cnt = fieldKeys.length; calc < cnt; calc++) {\n            _loop_2(calc, cnt);\n        }\n        this.fields = keys;\n    };\n    PivotEngine.prototype.validateFilters = function (data) {\n        this.isValueFiltersAvail = false;\n        var filterElements = data.filterSettings ? data.filterSettings : [];\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        for (var _i = 0, filterElements_1 = filterElements; _i < filterElements_1.length; _i++) {\n            var filter = filterElements_1[_i];\n            for (var _a = 0, dataFields_1 = dataFields; _a < dataFields_1.length; _a++) {\n                var field = dataFields_1[_a];\n                if (filter.name === field.name && filter.type === 'Value') {\n                    this.isValueFiltersAvail = true;\n                    break;\n                }\n            }\n            if (this.isValueFiltersAvail) {\n                break;\n            }\n        }\n    };\n    PivotEngine.prototype.validateValueFields = function () {\n        this.isValueHasAdvancedAggregate = false;\n        for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\n            var value = _a[_i];\n            /* tslint:disable-next-line:max-line-length */\n            if ((['DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentTotal', 'RunningTotals']).indexOf(value.type) !== -1) {\n                this.isValueHasAdvancedAggregate = true;\n                break;\n            }\n        }\n    };\n    PivotEngine.prototype.fillFieldMembers = function (data, indMat) {\n        var keys = this.fields;\n        var dlen = data.length;\n        var fList = this.fieldList;\n        var kLn = keys.length;\n        for (var kl = 0; kl < kLn; kl++) {\n            var key = keys[kl];\n            if (!fList[key].members || this.allowDataCompression) {\n                fList[key].members = {};\n            }\n            if (!fList[key].formattedMembers || this.allowDataCompression) {\n                fList[key].formattedMembers = {};\n            }\n            if (!fList[key].dateMember || this.allowDataCompression) {\n                fList[key].dateMember = [];\n            }\n            var members = fList[key].members;\n            var isDataAvail = Object.keys(members).length > 0 ? true : false;\n            var formattedMembers = fList[key].formattedMembers;\n            var dateMember = fList[key].dateMember;\n            var type = fList[key].type;\n            var membersCnt = 0;\n            var fmembersCnt = 0;\n            //let sort: string[] = [];\n            for (var dl = 0; dl < dlen; dl++) {\n                var mkey = data[dl][this.fieldKeys[key]];\n                // if (!isNullOrUndefined(mkey)) {\n                if (!isDataAvail) {\n                    var fKey = mkey;\n                    var formattedValue = (this.pageSettings && !(this.formatFields[key] &&\n                        (['date', 'dateTime', 'time'].indexOf(this.formatFields[key].type) > -1))) ? ({\n                        formattedText: mkey === null ? (this.localeObj ? this.localeObj.getConstant('null') : String(mkey)) :\n                            mkey === undefined ? (this.localeObj ? (key in this.groupingFields) ?\n                                this.localeObj.getConstant('groupOutOfRange') : this.localeObj.getConstant('undefined') :\n                                String(mkey)) : mkey.toString(), actualText: mkey === null ? (this.localeObj ?\n                            this.localeObj.getConstant('null') : String(mkey)) : mkey === undefined ? (this.localeObj ?\n                            (key in this.groupingFields) ? this.localeObj.getConstant('groupOutOfRange') :\n                                this.localeObj.getConstant('undefined') : String(mkey)) : mkey\n                    }) : this.getFormattedValue(mkey, key);\n                    if (formattedValue.formattedText) {\n                        fKey = formattedValue.formattedText;\n                    }\n                    if (!members.hasOwnProperty(mkey)) {\n                        membersCnt++;\n                        members[mkey] = {\n                            index: [dl], ordinal: membersCnt,\n                            isDrilled: this.isExpandAll ? true : false\n                        };\n                        /* tslint:disable-next-line:max-line-length */\n                        dateMember.push({ formattedText: formattedValue.formattedText, actualText: (formattedValue.dateText ? formattedValue.dateText : formattedValue.actualText) });\n                        //sort.push(mkey);\n                    }\n                    else {\n                        members[mkey].index.push(dl);\n                    }\n                    if (!formattedMembers.hasOwnProperty(fKey)) {\n                        fmembersCnt++;\n                        formattedMembers[fKey] = {\n                            index: [dl], ordinal: fmembersCnt,\n                            isDrilled: this.isExpandAll ? true : false\n                        };\n                    }\n                    else {\n                        formattedMembers[fKey].index.push(dl);\n                    }\n                }\n                if (!(indMat[dl])) {\n                    indMat[dl] = [];\n                    indMat[dl][kl] = members[mkey].ordinal;\n                }\n                else {\n                    indMat[dl][kl] = members[mkey].ordinal;\n                }\n                // }\n            }\n            /*sort = Object.keys(members).sort();\n            let sortedMembers: Members = {};\n            for (let sln: number = 0, slt: number = sort.length; sln < slt; sln++) {\n                sortedMembers[sort[sln]] = members[sort[sln]];\n            }\n            fList[key].members = sortedMembers; */\n        }\n    };\n    /* tslint:disable:typedef no-any */\n    PivotEngine.prototype.generateValueMatrix = function (data) {\n        var keys = this.fields;\n        var len = data.length;\n        var vMat = [];\n        var keyLen = keys.length;\n        var flList = this.fieldList;\n        while (len--) {\n            var record = data[len];\n            var tkln = keyLen;\n            //if (isNullOrUndefined(vMat[len])) {\n            vMat[len] = [];\n            //}\n            while (tkln--) {\n                var key = keys[tkln];\n                vMat[len][tkln] = (flList[key].type === 'number' || isNullOrUndefined(data[len][this.fieldKeys[key]])) ?\n                    !isNaN(Number(data[len][this.fieldKeys[key]])) ?\n                        Number(data[len][this.fieldKeys[key]]) : undefined : 1;\n            }\n        }\n        return vMat;\n    };\n    PivotEngine.prototype.updateSortSettings = function (sortSettings, isSort) {\n        for (var sln = 0, slt = sortSettings ? sortSettings.length : 0; sln < slt && isSort; sln++) {\n            if (this.fieldList[sortSettings[sln].name]) {\n                this.fieldList[sortSettings[sln].name].sort = sortSettings[sln].order;\n            }\n        }\n    };\n    PivotEngine.prototype.updateFilterMembers = function (source) {\n        var filterRw = this.filterMembers;\n        var list = {};\n        //let eList: {[key: string] : number} = {};\n        var isInclude = this.getFilters(source, list);\n        //this.getFilterExcludeList(source.rows, flist);\n        //this.getFilterExcludeList(source.columns, flist);\n        //this.getFilterExcludeList(source.filters, flist);\n        // let filters: Iterator = isInclude ? iList : eList;\n        var dln = this.indexMatrix.length;\n        if (isInclude) {\n            var keys = list.include.index;\n            for (var ln = 0; ln < keys.length; ln++) {\n                if (list.exclude === undefined || list.exclude.indexObject[keys[ln]] === undefined) {\n                    filterRw.push(keys[ln]);\n                }\n            }\n        }\n        else {\n            for (var ln = 0; ln < dln; ln++) {\n                if (list.exclude === undefined || list.exclude.indexObject[ln] === undefined) {\n                    filterRw.push(ln);\n                }\n            }\n        }\n    };\n    PivotEngine.prototype.getFilters = function (source, ilist) {\n        var filterElements = source.filterSettings ? source.filterSettings : [];\n        var filters = this.filters;\n        var isInclude = false;\n        var filter = [];\n        //let type: string;\n        for (var rln = 0, rlt = filterElements.length; rln < rlt; rln++) {\n            var filterElement = filterElements[rln].properties ?\n                filterElements[rln].properties : filterElements[rln];\n            if (this.fieldList[filterElement.name] &&\n                this.fieldList[filterElement.name].isSelected &&\n                this.isValidFilterField(filterElement, source.allowMemberFilter, source.allowLabelFilter)) {\n                this.applyLabelFilter(filterElement);\n                if (filterElement) {\n                    filter = filterElement.items;\n                }\n                if (filterElement.type && filterElement.type === 'Include') {\n                    /* tslint:disable-next-line:max-line-length */\n                    this.frameFilterList(filter, filterElement.name, ilist, 'include', filterElement.showLabelFilter, isInclude);\n                    isInclude = true;\n                }\n                else {\n                    this.frameFilterList(filter, filterElement.name, ilist, 'exclude', filterElement.showLabelFilter);\n                }\n                if (filterElement.showLabelFilter) {\n                    filterElement.items = [];\n                    filterElement.type = filterElement.showDateFilter ? 'Date' : filterElement.showNumberFilter ? 'Number' : 'Label';\n                }\n            }\n        }\n        /* for (let cln: number = 0, clt: number = cols.length; cln < clt; cln ++) {\n             filter = cols[cln].filter ? cols[cln].filter.items : [];\n             if (filter.length && cols[cln].filter.type && cols[cln].filter.type === 'include') {\n                 //type = cols[cln].filter.type;\n                 this.frameFilterList(filter, cols[cln].name, ilist, 'include', isInclude);\n                 isInclude = true;\n             } else {\n                 this.frameFilterList(filter, cols[cln].name, ilist, 'exclude');\n             }\n         }\n         for (let vln: number = 0, vlt: number = filters.length; vln < vlt; vln ++) {\n             filter = filters[vln].filter ? filters[vln].filter.items : [];\n             if (filter.length && filters[vln].filter.type && filters[vln].filter.type === 'include') {\n                 this.frameFilterList(filter, filters[vln].name, ilist, 'include', isInclude);\n                 isInclude = true;\n             } else {\n                 this.frameFilterList(filter, filters[vln].name, ilist, 'exclude');\n             }\n         } */\n        return isInclude;\n    };\n    PivotEngine.prototype.isValidFilterField = function (filterElement, allowMemberFiltering, allowLabelFiltering) {\n        var fieldName = filterElement.name;\n        var isValidFilterElement = false;\n        var filterTypes = ['Include', 'Exclude'];\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        if (this.fieldList[fieldName].isSelected && allowMemberFiltering && filterTypes.indexOf(filterElement.type) >= 0) {\n            var field = this.fieldList[fieldName];\n            var members = (this.formatFields[fieldName] &&\n                (['date', 'dateTime', 'time'].indexOf(this.formatFields[fieldName].type) > -1)) ?\n                field.formattedMembers : field.members;\n            isValidFilterElement = true;\n            for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\n                var field_1 = _a[_i];\n                if (fieldName === field_1.name) {\n                    isValidFilterElement = false;\n                    break;\n                }\n            }\n        }\n        else if (allowLabelFiltering) {\n            for (var _b = 0, dataFields_2 = dataFields; _b < dataFields_2.length; _b++) {\n                var field = dataFields_2[_b];\n                if (fieldName === field.name &&\n                    (['Label', 'Date', 'Number'].indexOf(filterElement.type) >= 0)) {\n                    isValidFilterElement = true;\n                    break;\n                }\n            }\n        }\n        return isValidFilterElement;\n    };\n    PivotEngine.prototype.applyLabelFilter = function (filterElement) {\n        if (['Label', 'Date', 'Number'].indexOf(filterElement.type) >= 0) {\n            var members = Object.keys(this.fieldList[filterElement.name].members);\n            filterElement.showLabelFilter = true;\n            /* tslint:disable:max-line-length */\n            if (filterElement.type === 'Label') {\n                filterElement.items = this.getLabelFilterMembers(members, filterElement.condition, filterElement.value1, filterElement.value2);\n            }\n            else if (filterElement.type === 'Date') {\n                filterElement.showDateFilter = true;\n                var date1 = typeof (filterElement.value1) === 'string' ? new Date(filterElement.value1) : filterElement.value1;\n                var date2 = typeof (filterElement.value2) === 'string' ? new Date(filterElement.value2) : filterElement.value2;\n                filterElement.items = this.getDateFilterMembers(members, filterElement.name, filterElement.condition, date1, date2);\n            }\n            else {\n                filterElement.showNumberFilter = true;\n                filterElement.items = [];\n                for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n                    var member = members_1[_i];\n                    var operand1 = this.getParsedValue(filterElement.name, filterElement.value1);\n                    var operand2 = this.getParsedValue(filterElement.name, filterElement.value2);\n                    var cValue = this.getParsedValue(filterElement.name, member);\n                    if (this.validateFilterValue(cValue, filterElement.condition, operand1, operand2)) {\n                        filterElement.items.push(member);\n                    }\n                }\n            }\n            /* tslint:enable:max-line-length */\n            var excludeOperators = ['DoesNotBeginWith', 'DoesNotContains', 'DoesNotEndsWith', 'DoesNotEquals', 'NotBetween'];\n            filterElement.type = (filterElement.condition ? (excludeOperators.indexOf(filterElement.condition) > -1 &&\n                !filterElement.showNumberFilter) ? 'Exclude' : 'Include' : 'Exclude');\n        }\n        else {\n            filterElement.showLabelFilter = false;\n        }\n    };\n    PivotEngine.prototype.getLabelFilterMembers = function (members, operator, value1, value2) {\n        var items = [];\n        for (var _i = 0, members_2 = members; _i < members_2.length; _i++) {\n            var member = members_2[_i];\n            var filterValue = member.toLowerCase();\n            if (value1.toString()) {\n                switch (operator) {\n                    case 'Equals':\n                    case 'DoesNotEquals':\n                        if (filterValue === value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'BeginWith':\n                    case 'DoesNotBeginWith':\n                        if (filterValue.indexOf(value1.toLowerCase()) === 0) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'EndsWith':\n                    case 'DoesNotEndsWith':\n                        if (filterValue.match(value1.toLowerCase() + '$') !== null) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'Contains':\n                    case 'DoesNotContains':\n                        if (filterValue.indexOf(value1.toLowerCase()) > -1) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'GreaterThan':\n                        if (filterValue > value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'GreaterThanOrEqualTo':\n                        if (filterValue >= value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'LessThan':\n                        if (filterValue < value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'LessThanOrEqualTo':\n                        if (filterValue <= value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'Between':\n                    case 'NotBetween':\n                        if ((filterValue >= value1.toLowerCase()) && (filterValue <= value2.toLowerCase())) {\n                            items.push(member);\n                        }\n                        break;\n                    default:\n                        if (filterValue === value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                }\n            }\n        }\n        return items;\n    };\n    /* tslint:disable:max-line-length */\n    PivotEngine.prototype.getDateFilterMembers = function (members, name, operator, value1, value2) {\n        var items = [];\n        for (var _i = 0, members_3 = members; _i < members_3.length; _i++) {\n            var member = members_3[_i];\n            var filterValue = new Date(member);\n            if (value1) {\n                switch (operator) {\n                    case 'Equals':\n                    case 'DoesNotEquals':\n                        if (this.getFormattedValue(filterValue.toString(), name).formattedText === this.getFormattedValue(value1.toString(), name).formattedText) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'After':\n                        if (filterValue.getTime() > value1.getTime()) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'AfterOrEqualTo':\n                        if (filterValue.getTime() >= value1.getTime()) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'Before':\n                        if (filterValue.getTime() < value1.getTime()) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'BeforeOrEqualTo':\n                        if (filterValue.getTime() <= value1.getTime()) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'Between':\n                    case 'NotBetween':\n                        if ((filterValue.getTime() >= value1.getTime()) &&\n                            (filterValue.getTime() <= value2.getTime())) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    default:\n                        if (this.getFormattedValue(filterValue.toString(), name).formattedText === this.getFormattedValue(value1.toString(), name).formattedText) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                }\n            }\n        }\n        return items;\n    };\n    /* tslint:enable:max-line-length */\n    PivotEngine.prototype.validateFilterValue = function (val, operator, value1, value2) {\n        var isMemberInclude = false;\n        if (typeof (value1) === 'number') {\n            switch (operator) {\n                case 'Equals':\n                    if (val === value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'DoesNotEquals':\n                    if (val !== value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'GreaterThan':\n                    if (val > value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'GreaterThanOrEqualTo':\n                    if (val >= value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'LessThan':\n                    if (val < value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'LessThanOrEqualTo':\n                    if (val <= value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'Between':\n                    if ((val >= value1) && (val <= value2)) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'NotBetween':\n                    if (!((val >= value1) && (val <= value2))) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                default:\n                    if (val !== value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n            }\n        }\n        return isMemberInclude;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.frameFilterList = function (filter, name, list, type, isLabelFilter, isInclude) {\n        if (!list[type]) {\n            list[type] = { indexObject: {}, index: [] };\n            this.updateFilter(filter, name, list, type, isLabelFilter, isInclude);\n        }\n        else {\n            this.updateFilter(filter, name, list, type, isLabelFilter, isInclude);\n        }\n        // }\n    };\n    PivotEngine.prototype.updateFilter = function (filter, name, list, type, isLabelFilter, isInclude) {\n        var fln = 0;\n        var field = this.fieldList[name];\n        field.filter = filter;\n        field.filterType = type;\n        field.isExcelFilter = isLabelFilter;\n        var members = (this.formatFields[name] &&\n            (['date', 'dateTime', 'time'].indexOf(this.formatFields[name].type) > -1)) ?\n            field.formattedMembers : field.members;\n        var allowFil = isInclude;\n        var final = {};\n        var filterObj = {};\n        final[type] = { indexObject: {}, index: [] };\n        this.fieldFilterMem[name] = { memberObj: {} };\n        while (filter[fln]) {\n            if (members[filter[fln]]) {\n                var indx = members[filter[fln]].index;\n                if (type === 'include') {\n                    for (var iln = 0, ilt = indx.length; iln < ilt; iln++) {\n                        if (!allowFil || list[type].indexObject[indx[iln]] !== undefined) {\n                            final[type].indexObject[indx[iln]] = indx[iln];\n                            final[type].index.push(indx[iln]);\n                        }\n                    }\n                }\n                else {\n                    for (var iln = 0, ilt = indx.length; iln < ilt; iln++) {\n                        if (list[type].indexObject[indx[iln]] === undefined) {\n                            list[type].indexObject[indx[iln]] = indx[iln];\n                            list[type].index.push(indx[iln]);\n                        }\n                    }\n                    this.fieldFilterMem[name].memberObj[filter[fln]] = filter[fln];\n                }\n            }\n            fln++;\n        }\n        if (type === 'include') {\n            list[type] = final[type];\n            for (var iln = 0; iln < filter.length; iln++) {\n                if (members[filter[iln]]) {\n                    filterObj[filter[iln]] = filter[iln];\n                }\n            }\n            var items = Object.keys(members);\n            for (var iln = 0, ilt = items.length; iln < ilt; iln++) {\n                if (filterObj[items[iln]] === undefined) {\n                    this.fieldFilterMem[name].memberObj[items[iln]] = items[iln];\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.applyValueFiltering = function (rowData, level, rows, columns, valueFilter, rowFilterData, type) {\n        this.isValueFiltered = false;\n        /* tslint:disable-next-line:max-line-length */\n        var allMember = extend({}, (type === 'row' && this.rowGrandTotal ? this.rowGrandTotal : type === 'column' && this.columnGrandTotal ? this.columnGrandTotal : rows[rows.length - 1]), null, true);\n        this.getFilteredData(rows, columns, valueFilter, rowFilterData, level, rowData.name, allMember, type);\n        if (this.isValueFiltered) {\n            if ((type === 'row' && this.rowGrandTotal === null) || (type === 'column' && this.columnGrandTotal === null)) {\n                rowFilterData.push(allMember);\n            }\n            rows = rowFilterData;\n        }\n        return rows;\n    };\n    /* tslint:disable:max-line-length */\n    PivotEngine.prototype.getFilteredData = function (rows, columns, filterSettings, rowFilterData, level, fieldName, allMember, type) {\n        var rLen = rows.length;\n        for (var i = 0; i < rLen; i++) {\n            if (filterSettings[fieldName]) {\n                if (rows[i].level === level) {\n                    this.isValueFiltered = true;\n                    this.fieldList[fieldName].isExcelFilter = true;\n                    var value = 0;\n                    var measure = filterSettings[fieldName].measure;\n                    var mPos = this.fieldList[measure].index;\n                    var aggregate = this.fieldList[measure].aggregateType;\n                    this.rawIndexObject = {};\n                    value = (type === 'row' ? this.getAggregateValue(rows[i].index, columns.indexObject, mPos, aggregate) :\n                        this.getAggregateValue(columns.index, rows[i].indexObject, mPos, aggregate));\n                    var cellDetails = {\n                        fieldName: measure,\n                        row: rows[i],\n                        column: columns,\n                        value: value,\n                        cellSets: this.getCellSet(this.rawIndexObject),\n                        rowCellType: (rows[i].hasChild && rows[i].isDrilled ? 'subTotal' : rows[i].type === 'grand sum' ? 'grandTotal' : 'value'),\n                        columnCellType: (columns.hasChild && columns.isDrilled ? 'subTotal' : columns.type === 'grand sum' ? 'grandTotal' : 'value'),\n                        aggregateType: aggregate,\n                        skipFormatting: false\n                    };\n                    if (this.getValueCellInfo) {\n                        this.getValueCellInfo(cellDetails);\n                    }\n                    value = cellDetails.value;\n                    this.rawIndexObject = {};\n                    var operand1 = this.getParsedValue(measure, filterSettings[fieldName].value1);\n                    var operand2 = this.getParsedValue(measure, filterSettings[fieldName].value2);\n                    if (!this.validateFilterValue(value, filterSettings[fieldName].condition, operand1, operand2) && rows[i].type !== 'grand sum') {\n                        var data = this.removefilteredData(rows[i], this.valueFilteredData);\n                        var row = data ? data : rows[i];\n                        this.validateFilteredParentData(row, this.valueFilteredData, allMember, 0, level, type);\n                    }\n                    else if (rows[i].type !== 'grand sum') {\n                        rowFilterData.push(extend({}, rows[i], null, true));\n                        rowFilterData[rowFilterData.length - 1].isLevelFiltered = true;\n                    }\n                }\n                else if (rows[i].hasChild && rows[i].members.length > 0 && rows[i].type !== 'grand sum') {\n                    rowFilterData.push(extend({}, rows[i], null, true));\n                    rowFilterData[rowFilterData.length - 1].members = [];\n                    rowFilterData[rowFilterData.length - 1].isLevelFiltered = true;\n                    this.getFilteredData(rows[i].members, columns, filterSettings, rowFilterData[rowFilterData.length - 1].members, level, fieldName, allMember, type);\n                }\n            }\n        }\n    };\n    /* tslint:enable:max-line-length */\n    PivotEngine.prototype.getParsedValue = function (measure, value) {\n        var cValue = value ? value.toString() : '';\n        if (this.formatFields[measure] && value) {\n            var formatSetting = extend({}, this.formatFields[measure], null, true);\n            delete formatSetting.name;\n            return this.globalize.parseNumber(cValue, formatSetting);\n        }\n        else {\n            return this.globalize.parseNumber(cValue, { format: 'N' });\n        }\n    };\n    PivotEngine.prototype.removefilteredData = function (row, rowFilterData) {\n        var rows = extend([], rowFilterData, null, true);\n        var filteredData;\n        for (var i = 0; i < rows.length; i++) {\n            if (row.isLevelFiltered && row.axis === rows[i].axis &&\n                row.valueSort.levelName === rows[i].valueSort.levelName &&\n                row.actualText === rows[i].actualText && row.axis === rows[i].axis &&\n                row.level === rows[i].level && row.ordinal === rows[i].ordinal) {\n                filteredData = rows[i];\n                rowFilterData.splice(i, 1);\n                break;\n            }\n            else if (rowFilterData[i].hasChild && rowFilterData[i].members.length > 0) {\n                this.removefilteredData(row, rowFilterData[i].members);\n            }\n        }\n        return filteredData;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.validateFilteredParentData = function (row, rows, allMemberData, i, level, type) {\n        if (rows.length > 0) {\n            for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n                var rowFilteredData = rows_1[_i];\n                if (rowFilteredData.level === i) {\n                    if (type === 'row') {\n                        var index = row.index;\n                        for (var _a = 0, index_1 = index; _a < index_1.length; _a++) {\n                            var key = index_1[_a];\n                            if (allMemberData.index.indexOf(key) >= 0) {\n                                allMemberData.index.splice(allMemberData.index.indexOf(key), 1);\n                            }\n                            if (((row.valueSort.levelName.toString()).indexOf(rowFilteredData.valueSort.levelName.toString()) >= 0) &&\n                                rowFilteredData.level !== level && rowFilteredData.index.indexOf(key) >= 0) {\n                                rowFilteredData.index.splice(rowFilteredData.index.indexOf(key), 1);\n                            }\n                        }\n                    }\n                    else {\n                        var index = row.indexObject;\n                        for (var _b = 0, _c = Object.keys(index); _b < _c.length; _b++) {\n                            var key = _c[_b];\n                            if (index.hasOwnProperty(key)) {\n                                delete allMemberData.indexObject[key];\n                                if (((row.valueSort.levelName.toString()).indexOf(rowFilteredData.valueSort.levelName.toString()) >= 0) &&\n                                    rowFilteredData.level !== level) {\n                                    delete rowFilteredData.indexObject[key];\n                                }\n                            }\n                        }\n                    }\n                    if (rowFilteredData && rowFilteredData.members.length > 0 &&\n                        rowFilteredData.members[0].level === i + 1 && rowFilteredData.members[0].level !== level) {\n                        this.validateFilteredParentData(row, rowFilteredData.members, allMemberData, i + 1, level, type);\n                    }\n                }\n            }\n        }\n        else {\n            if (type === 'row') {\n                var index = row.index;\n                for (var _d = 0, index_2 = index; _d < index_2.length; _d++) {\n                    var key = index_2[_d];\n                    if (allMemberData.index.indexOf(key) >= 0) {\n                        allMemberData.index.splice(allMemberData.index.indexOf(key), 1);\n                    }\n                }\n            }\n            else {\n                var index = row.indexObject;\n                for (var _e = 0, _f = Object.keys(index); _e < _f.length; _e++) {\n                    var key = _f[_e];\n                    if (index.hasOwnProperty(key)) {\n                        delete allMemberData.indexObject[key];\n                    }\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.updateFramedHeaders = function (framedHeaders, dataHeaders, filteredHeaders, headers, type) {\n        for (var _i = 0, framedHeaders_1 = framedHeaders; _i < framedHeaders_1.length; _i++) {\n            var dHeader = framedHeaders_1[_i];\n            this.isHeaderAvail = false;\n            if (this.validateFilteredHeaders(dHeader, filteredHeaders, type) || dHeader.type === 'grand sum') {\n                if (type === 'row') {\n                    this.rowCount += this.rowValuesLength;\n                }\n                else {\n                    this.columnCount += this.colValuesLength;\n                }\n                headers.push(extend({}, dHeader, null, true));\n                headers[headers.length - 1].members = [];\n                if (dHeader.hasChild && dHeader.isDrilled && dHeader.members.length > 0) {\n                    this.updateFramedHeaders(dHeader.members, dataHeaders, filteredHeaders, headers[headers.length - 1].members, type);\n                }\n            }\n        }\n        return this.filterFramedHeaders;\n    };\n    PivotEngine.prototype.validateFilteredHeaders = function (dHeader, filteredHeaders, type) {\n        for (var _i = 0, filteredHeaders_1 = filteredHeaders; _i < filteredHeaders_1.length; _i++) {\n            var vHeader = filteredHeaders_1[_i];\n            if (!this.isHeaderAvail) {\n                if (dHeader.actualText === vHeader.actualText &&\n                    dHeader.level === vHeader.level &&\n                    dHeader.valueSort.levelName === vHeader.valueSort.levelName) {\n                    if (type === 'row') {\n                        if (vHeader.index.length > 0) {\n                            this.isHeaderAvail = true;\n                            dHeader.index = vHeader.index;\n                            return true;\n                        }\n                        else {\n                            this.isHeaderAvail = false;\n                            dHeader.index = vHeader.index;\n                            return false;\n                        }\n                    }\n                    else {\n                        if (Object.keys(vHeader.indexObject).length > 0) {\n                            this.isHeaderAvail = true;\n                            dHeader.indexObject = vHeader.indexObject;\n                            return true;\n                        }\n                        else {\n                            this.isHeaderAvail = false;\n                            dHeader.indexObject = vHeader.indexObject;\n                            return false;\n                        }\n                    }\n                }\n                else if (vHeader.hasChild && vHeader.members.length > 0 && vHeader.type !== 'grand sum') {\n                    this.validateFilteredHeaders(dHeader, vHeader.members, type);\n                }\n            }\n        }\n        return this.isHeaderAvail;\n    };\n    PivotEngine.prototype.isEmptyDataAvail = function (rowHeaders, columnHeaders) {\n        this.isEmptyData = false;\n        if (rowHeaders.length > 0 && rowHeaders[rowHeaders.length - 1].type === 'grand sum' &&\n            rowHeaders[rowHeaders.length - 1].index.length === 0) {\n            this.isEmptyData = true;\n        }\n        if (columnHeaders.length > 0 && columnHeaders[columnHeaders.length - 1].type === 'grand sum' &&\n            Object.keys(columnHeaders[columnHeaders.length - 1].indexObject).length === 0) {\n            this.isEmptyData = true;\n        }\n        if (rowHeaders.length === 0 || columnHeaders.length === 0) {\n            this.isEmptyData = true;\n        }\n    };\n    /** @hidden */\n    PivotEngine.prototype.updateGridData = function (dataSource) {\n        this.data = dataSource.dataSource;\n        if (this.pageSettings && this.pageSettings.allowDataCompression) {\n            this.actualData = this.data;\n            this.data = this.getGroupedRawData(dataSource);\n        }\n        this.indexMatrix = [];\n        for (var _i = 0, _a = this.fields; _i < _a.length; _i++) {\n            var field = _a[_i];\n            this.fieldList[field].members = {};\n            this.fieldList[field].formattedMembers = {};\n            this.fieldList[field].dateMember = [];\n        }\n        this.fillFieldMembers(this.data, this.indexMatrix);\n        this.valueMatrix = this.generateValueMatrix(this.data);\n        this.filterMembers = [];\n        this.cMembers = [];\n        this.rMembers = [];\n        this.updateFilterMembers(dataSource);\n        this.isEditing = true;\n        this.isDrillThrough = true;\n        this.generateGridData(dataSource);\n        this.isEditing = false;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.generateGridData = function (dataSource, headerCollection) {\n        var keys = this.fields;\n        var columns = dataSource.columns ? dataSource.columns : [];\n        var data = this.data;\n        var rows = dataSource.rows ? dataSource.rows : [];\n        var filterSettings = dataSource.filterSettings;\n        var values = dataSource.values ? dataSource.values : [];\n        var size = 1;\n        this.removeCount = 0;\n        this.isExpandAll = dataSource.expandAll;\n        this.drilledMembers = dataSource.drilledMembers ? dataSource.drilledMembers : [];\n        this.isEmptyData = false;\n        var filterMembers = [];\n        var showNoDataItems = (rows[0] && rows[0].showNoDataItems) || (columns[0] && columns[0].showNoDataItems);\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.values, this.filters);\n        if (showNoDataItems) {\n            for (var ln = 0; ln < this.indexMatrix.length; ln++) {\n                filterMembers.push(ln);\n            }\n        }\n        for (var ln = 0; ln < this.filterMembers.length; ln++) {\n            this.filterPosObj[this.filterMembers[ln]] = this.filterMembers[ln];\n        }\n        //let childrens: Field = this.fieldList[rows[0].name + ''];\n        this.valueSortSettings.columnIndex = undefined;\n        var st1 = new Date().getTime();\n        this.validateValueFields();\n        this.frameDrillObject();\n        if (!this.isValueFilterEnabled || this.isEditing) {\n            if (!headerCollection) {\n                this.columnCount = 0;\n                this.rowCount = 0;\n                this.cMembers = [];\n                this.rMembers = [];\n                if (rows.length !== 0) {\n                    this.rMembers =\n                        this.getIndexedHeaders(rows, data, 0, rows[0].showNoDataItems ? filterMembers : this.filterMembers, 'row', '', this.allowValueFilter);\n                }\n                /* tslint:disable */\n                if (columns.length !== 0) {\n                    this.cMembers = this.getIndexedHeaders(columns, data, 0, columns[0].showNoDataItems ?\n                        filterMembers : this.filterMembers, 'column', '', this.allowValueFilter);\n                }\n                /* tslint:enable */\n                this.insertAllMembersCommon();\n                this.saveDataHeaders = (this.isValueFiltersAvail && dataSource.allowValueFilter) ? {\n                    rowHeaders: extend([], this.rMembers, null, true),\n                    columnHeaders: extend([], this.cMembers, null, true)\n                } : {};\n            }\n        }\n        this.pivotValues = [];\n        var gridData = [];\n        this.headerContent = [];\n        this.valueContent = [];\n        this.valueFilteredData = [];\n        this.filterFramedHeaders = [];\n        var rowheads = [];\n        var colheads = [];\n        var rowFilteredData = [];\n        var columnFilteredData = [];\n        var valuesCount = (this.values.length);\n        if (this.isValueFiltersAvail && dataSource.allowValueFilter && !headerCollection) {\n            this.valueFilteredData = [];\n            var rowHeaders = this.saveDataHeaders.rowHeaders;\n            var columnHeaders = this.saveDataHeaders.columnHeaders;\n            if (filterSettings.length > 0) {\n                var valueFilters = {};\n                var valueFields = {};\n                for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n                    var value = values_1[_i];\n                    valueFields[value.name] = value;\n                }\n                for (var _a = 0, filterSettings_1 = filterSettings; _a < filterSettings_1.length; _a++) {\n                    var filter = filterSettings_1[_a];\n                    rowHeaders = (rowFilteredData.length > 0 ? rowFilteredData : rowHeaders);\n                    columnHeaders = (columnFilteredData.length > 0 ? columnFilteredData : columnHeaders);\n                    this.valueFilteredData = [];\n                    var filterElement = filter.properties ?\n                        filter.properties : filter;\n                    if (filterElement.type === 'Value' && this.fieldList[filter.name] && this.fieldList[filter.name].isSelected) {\n                        valueFilters[filter.name] = filter;\n                        filterElement.items = [];\n                        var isAvail = false;\n                        var rLen = rows.length;\n                        var cLen = columns.length;\n                        for (var i = 0; i < rLen; i++) {\n                            if (filterElement.name === rows[i].name && valueFields[filterElement.measure] && !isAvail) {\n                                isAvail = true;\n                                /* tslint:disable-next-line:max-line-length */\n                                rowFilteredData = this.applyValueFiltering(rows[i], i, rowHeaders, (this.columnGrandTotal ? this.columnGrandTotal : columnHeaders[columnHeaders.length - 1]), valueFilters, this.valueFilteredData, 'row');\n                                break;\n                            }\n                        }\n                        for (var j = 0; j < cLen; j++) {\n                            if (filterElement.name === columns[j].name && valueFields[filterElement.measure] && !isAvail) {\n                                isAvail = true;\n                                /* tslint:disable-next-line:max-line-length */\n                                columnFilteredData = this.applyValueFiltering(columns[j], j, columnHeaders, (this.rowGrandTotal ? this.rowGrandTotal : rowHeaders[rowHeaders.length - 1]), valueFilters, this.valueFilteredData, 'column');\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            rowFilteredData = (rowFilteredData.length > 0 ? rowFilteredData : rowHeaders);\n            columnFilteredData = (columnFilteredData.length > 0 ? columnFilteredData : columnHeaders);\n            this.isEmptyDataAvail(rowFilteredData, columnFilteredData);\n            var savedFieldList = extend({}, this.fieldList, null, true);\n            this.indexMatrix = [];\n            var fields = this.data[0];\n            this.getFieldList(fields, this.enableSort, dataSource.allowValueFilter);\n            this.fillFieldMembers(this.data, this.indexMatrix);\n            this.updateSortSettings(dataSource.sortSettings, this.enableSort);\n            this.valueMatrix = this.generateValueMatrix(this.data);\n            this.filterMembers = [];\n            var pageSize = 1;\n            this.updateFilterMembers(dataSource);\n            /* tslint:disable */\n            this.rMembers = rows.length !== 0 ?\n                this.getIndexedHeaders(rows, data, 0, rows[0].showNoDataItems ?\n                    filterMembers : this.filterMembers, 'row', '') : [];\n            this.cMembers = columns.length !== 0 ?\n                this.getIndexedHeaders(columns, data, 0, columns[0].showNoDataItems ?\n                    filterMembers : this.filterMembers, 'column', '') : [];\n            /* tslint:enable */\n            this.insertAllMembersCommon();\n            this.updateFieldList(savedFieldList);\n            this.rowCount = 0;\n            this.columnCount = 0;\n            this.rMembers = this.updateFramedHeaders(this.rMembers, this.rMembers, rowFilteredData, this.filterFramedHeaders, 'row');\n            this.filterFramedHeaders = [];\n            this.cMembers = this.updateFramedHeaders(this.cMembers, this.cMembers, columnFilteredData, this.filterFramedHeaders, 'column');\n            this.isValueFilterEnabled = true;\n        }\n        if (!headerCollection) {\n            this.applyValueSorting();\n        }\n        if (this.pageSettings) {\n            if (!headerCollection) {\n                this.headerCollection.rowHeaders = this.rMembers;\n                this.headerCollection.columnHeaders = this.cMembers;\n                this.headerCollection.rowHeadersCount = this.rowCount;\n                this.headerCollection.columnHeadersCount = this.columnCount;\n            }\n            else {\n                this.rMembers = headerCollection.rowHeaders;\n                this.cMembers = headerCollection.columnHeaders;\n                this.rowCount = headerCollection.rowHeadersCount;\n                this.columnCount = headerCollection.columnHeadersCount;\n            }\n            this.calculatePagingValues();\n        }\n        this.getAggregatedHeaders(rows, columns, this.rMembers, this.cMembers, values);\n        this.getHeaderData(this.cMembers, colheads, this.pivotValues, 0, this.valueAxis ? 1 : valuesCount);\n        this.insertSubTotals();\n        //this.getHeaderData(rmembers, rowheads, gridData, 0);              \n        /* tslint:disable-next-line:max-line-length */\n        this.getTableData(this.rMembers, rowheads, colheads, 0, this.pivotValues, valuesCount, (this.rowGrandTotal ? this.rowGrandTotal : this.rMembers[this.rMembers.length - 1]), (this.columnGrandTotal ? this.columnGrandTotal : this.cMembers[this.cMembers.length - 1]));\n        this.applyAdvancedAggregate(rowheads, colheads, this.pivotValues);\n        this.isEngineUpdated = true;\n        var st2 = new Date().getTime();\n        this.isEmptyDataAvail(this.rMembers, this.cMembers);\n        //  console.log(st1 - st2);\n    };\n    PivotEngine.prototype.updateHeaders = function (rowFlag, columnFlag) {\n        /* removing the row grant-total members */\n        rowFlag = (isNullOrUndefined(rowFlag) ? (this.showGrandTotals && this.showRowGrandTotals) ?\n            true : (this.rows.length > 0) ? false : true : rowFlag);\n        if (((this.pageSettings && (this.removeRowGrandTotal)) || (!rowFlag && !this.rowGrandTotal)) &&\n            this.rMembers[this.rMembers.length - 1].type === 'grand sum') {\n            this.rMembers = this.rMembers.slice(0, this.rMembers.length - 1);\n        }\n        /* removing the column gran-total members */\n        columnFlag = (isNullOrUndefined(columnFlag) ? (this.showGrandTotals && this.showColumnGrandTotals) ?\n            true : (this.columns.length > 0) ? false : true : columnFlag);\n        if (((this.pageSettings && (this.removeColumnGrandTotal)) || (!columnFlag && !this.columnGrandTotal)) &&\n            this.cMembers[this.cMembers.length - 1].type === 'grand sum') {\n            this.cMembers = this.cMembers.slice(0, this.cMembers.length - 1);\n        }\n    };\n    PivotEngine.prototype.updatePivotValues = function (updateHeaders) {\n        var rowFlag = (this.showGrandTotals && this.showRowGrandTotals) ? true : (this.rows.length > 0) ? false : true;\n        var columnFlag = (this.showGrandTotals && this.showColumnGrandTotals) ? true : (this.columns.length > 0) ? false : true;\n        if (updateHeaders) {\n            this.updateHeaders(rowFlag, columnFlag);\n        }\n        /* removing the row grant-totals */\n        if (((this.pageSettings && (this.removeRowGrandTotal)) ||\n            (!rowFlag && !this.rowGrandTotal)) && this.valueContent.length > 0) {\n            var slicePos = 1;\n            if (this.valueAxis && this.values.length > 0) {\n                slicePos = 1 + this.values.length;\n            }\n            if (this.pivotValues[this.pivotValues.length - slicePos] &&\n                this.pivotValues[this.pivotValues.length - slicePos][0].type === 'grand sum') {\n                this.pivotValues = this.pivotValues.slice(0, this.pivotValues.length - slicePos);\n                this.valueContent = this.valueContent.slice(0, this.valueContent.length - slicePos);\n            }\n        }\n        /* removing the column gran-totals */\n        if (((this.pageSettings && (this.removeColumnGrandTotal)) ||\n            (!columnFlag && !this.columnGrandTotal)) && this.headerContent.length > 0) {\n            var slicePos = this.values.length;\n            if (this.valueAxis && this.values.length > 0) {\n                slicePos = 1;\n            }\n            if (this.pivotValues[0][this.pivotValues[0].length - slicePos] &&\n                this.pivotValues[0][this.pivotValues[0].length - slicePos].type === 'grand sum') {\n                for (var ln = 0; ln < this.pivotValues.length; ln++) {\n                    if (this.pivotValues[ln]) {\n                        this.pivotValues[ln] = this.pivotValues[ln].slice(0, this.pivotValues[ln].length - slicePos);\n                    }\n                    if (this.headerContent[ln]) {\n                        for (var pos = this.pivotValues[ln].length; pos < (this.pivotValues[ln].length + slicePos); pos++) {\n                            delete this.headerContent[ln][pos];\n                        }\n                    }\n                }\n            }\n        }\n        this.removeRowGrandTotal = this.removeColumnGrandTotal = false;\n    };\n    /** @hidden */\n    PivotEngine.prototype.onDrill = function (drilledItem) {\n        this.frameDrillObject();\n        var headersInfo = this.getHeadersInfo(drilledItem.fieldName, drilledItem.axis);\n        this.performDrillOperation(headersInfo.headers, drilledItem, headersInfo.fields, headersInfo.position, 0);\n        this.headerCollection.rowHeadersCount = this.rowCount;\n        this.headerCollection.columnHeadersCount = this.columnCount;\n        if (headersInfo.axis === 'row') {\n            this.headerCollection.rowHeaders = headersInfo.headers;\n        }\n        else {\n            this.headerCollection.columnHeaders = headersInfo.headers;\n        }\n        this.updateEngine();\n    };\n    /** @hidden */\n    PivotEngine.prototype.onSort = function (sortItem) {\n        var headersInfo = this.getHeadersInfo(sortItem.name, '');\n        this.fieldList[sortItem.name].sort = sortItem.order;\n        this.performSortOperation(headersInfo.headers, sortItem, headersInfo, 0);\n        this.updateEngine();\n    };\n    /** @hidden */\n    PivotEngine.prototype.onFilter = function (filterItem, dataSource) {\n        var headersInfo = this.getHeadersInfo(filterItem.name, '');\n        if (filterItem.type === 'Include' && filterItem.items.length === this.fieldList[filterItem.name].dateMember.length) {\n            this.fieldList[filterItem.name].filter = [];\n            this.fieldList[filterItem.name].filterType = '';\n        }\n        else {\n            this.fieldList[filterItem.name].filter = filterItem.items;\n            this.fieldList[filterItem.name].filterType = filterItem.type;\n        }\n        var posObj = {};\n        for (var _i = 0, _a = this.filterMembers; _i < _a.length; _i++) {\n            var pos = _a[_i];\n            posObj[pos] = pos;\n        }\n        this.filterMembers = [];\n        this.fieldFilterMem = {};\n        this.updateFilterMembers(dataSource);\n        /* tslint:disable:typedef */\n        var addPos = this.filterMembers.filter(function (pos) { return posObj[pos] === undefined; });\n        /* tslint:enable:typedef */\n        var itemsObj = {};\n        for (var _b = 0, _c = filterItem.items; _b < _c.length; _b++) {\n            var item = _c[_b];\n            itemsObj[item] = item;\n        }\n        var showNoDataItems = (this.rows[0] && this.rows[0].showNoDataItems) || (this.columns[0] && this.columns[0].showNoDataItems);\n        if (showNoDataItems) {\n            var filterMembers = [];\n            this.filterPosObj = {};\n            for (var ln = 0; ln < addPos.length; ln++) {\n                this.filterPosObj[addPos[ln]] = addPos[ln];\n            }\n            for (var ln = 0; ln < this.indexMatrix.length; ln++) {\n                filterMembers.push(ln);\n            }\n            addPos = filterMembers;\n        }\n        this.performFilterCommonUpdate(filterItem, headersInfo, addPos);\n        this.frameHeaderObjectsCollection = false;\n        this.headerObjectsCollection = {};\n        this.updateEngine();\n    };\n    /** @hidden */\n    PivotEngine.prototype.onAggregation = function (field) {\n        this.fieldList[field.name].aggregateType = field.type;\n        this.rMembers = this.headerCollection.rowHeaders;\n        this.cMembers = this.headerCollection.columnHeaders;\n        if (this.allowDataCompression) {\n            this.data = this.getGroupedRawData(this.dataSourceSettings);\n            this.valueMatrix = this.generateValueMatrix(this.data);\n        }\n        this.updateEngine();\n    };\n    /** @hidden */\n    PivotEngine.prototype.onCalcOperation = function (field) {\n        this.rMembers = this.headerCollection.rowHeaders;\n        this.cMembers = this.headerCollection.columnHeaders;\n        this.getCalculatedField(this.fields);\n        if (this.fieldList[field.name]) {\n            this.fieldList[field.name].formula = field.formula;\n        }\n        else {\n            this.fieldList[field.name] = {\n                id: field.name,\n                caption: field.name,\n                type: 'number',\n                aggregateType: 'CalculatedField',\n                filterType: '',\n                index: this.fields.length - 1,\n                filter: [],\n                sort: this.enableSort ? 'Ascending' : 'None',\n                isSelected: true,\n                isExcelFilter: false,\n                formula: field.formula\n            };\n            if (this.valueAxis === 1) {\n                this.headerCollection.rowHeadersCount = this.rowCount = (this.rowCount / (this.values.length - 1)) * this.values.length;\n            }\n            else {\n                this.headerCollection.columnHeadersCount = this.columnCount = (this.columnCount / (this.values.length - 1)) * this.values.length;\n            }\n        }\n        this.updateEngine();\n    };\n    PivotEngine.prototype.performDrillOperation = function (headers, drilledItem, fields, position, currentPosition) {\n        var count = 0;\n        while (count < headers.length) {\n            if (position === currentPosition) {\n                if (drilledItem.memberName === headers[count].valueSort.levelName.split(this.valueSortSettings.headerDelimiter)\n                    .join(drilledItem.delimiter ? drilledItem.delimiter : '**')) {\n                    if (drilledItem.action === 'down') {\n                        headers[count].isDrilled = true;\n                        headers[count].members = this.getIndexedHeaders(fields, this.data, position + 1, headers[count].index, drilledItem.axis, drilledItem.memberName.\n                            split(drilledItem.delimiter ? drilledItem.delimiter : '**').join(this.valueSortSettings.headerDelimiter));\n                        var sortedHeaders = void 0;\n                        if (drilledItem.axis === 'row') {\n                            sortedHeaders = this.applyValueSorting(headers[count].members, this.cMembers);\n                            headers[count].members = sortedHeaders.rMembers;\n                        }\n                        else {\n                            var showSubTotals = this.showSubTotals && this.showColumnSubTotals && fields[position].showSubTotals;\n                            this.columnCount -= !showSubTotals ? this.colValuesLength : 0;\n                            sortedHeaders = this.applyValueSorting(this.rMembers, headers[count].members);\n                            headers[count].members = sortedHeaders.cMembers;\n                        }\n                    }\n                    else {\n                        headers[count].isDrilled = false;\n                        this.updateHeadersCount(headers[count].members, drilledItem.axis, position, fields, 'minus', true);\n                        headers[count].members = [];\n                    }\n                    break;\n                }\n            }\n            else if (headers[count].members.length > 0) {\n                headers[count].members = this.performDrillOperation(headers[count].members, drilledItem, fields, position, currentPosition + 1);\n            }\n            count++;\n        }\n        return headers;\n    };\n    PivotEngine.prototype.performSortOperation = function (headers, sortItem, headersInfo, currentPosition) {\n        var count = 0;\n        while (count < headers.length) {\n            if (headersInfo.position === currentPosition) {\n                headers = this.getSortedHeaders(headers, sortItem.order.toString());\n                break;\n            }\n            else if (headers[count].members.length > 0) {\n                headers[count].members = this.performSortOperation(headers[count].members, sortItem, headersInfo, currentPosition + 1);\n            }\n            count++;\n        }\n        return headers;\n    };\n    /* tslint:disable:typedef */\n    PivotEngine.prototype.performFilterDeletion = function (headers, filterItem, headersInfo, filterObjects, currentPosition) {\n        var count = 0;\n        var loopIn = true;\n        var _loop_3 = function () {\n            if (headersInfo.position === currentPosition) {\n                var engine_1 = this_3;\n                headers = headers.filter(function (item) {\n                    return !engine_1.fieldFilterMem[filterItem.name].memberObj[item.formattedText] || item.type === 'grand sum';\n                });\n                loopIn = false;\n            }\n            else if (headers[count].members.length > 0) {\n                headers[count].members = this_3.performFilterDeletion(headers[count].members, filterItem, headersInfo, filterObjects, currentPosition + 1);\n            }\n            count++;\n        };\n        var this_3 = this;\n        while (count < headers.length && loopIn) {\n            _loop_3();\n        }\n        var engine = this;\n        return headers.filter(function (item) {\n            return item.members.length > 0 ? item.members.length > 0 : engine.matchIndexes(item.indexObject, filterObjects);\n        });\n    };\n    PivotEngine.prototype.matchIndexes = function (index, filterObjects) {\n        var keys = Object.keys(index);\n        var len = keys.length;\n        if (len === 0) {\n            return true;\n        }\n        while (len > -1) {\n            if (filterObjects[index[keys[len]]] !== undefined) {\n                return true;\n            }\n            len--;\n        }\n        return false;\n    };\n    PivotEngine.prototype.performFilterAddition = function (headers, fields, headersInfo) {\n        var count = 0;\n        var _loop_4 = function () {\n            var levelName = headers[count].valueSort.levelName;\n            if (this_4.headerObjectsCollection[levelName]) {\n                var memberNameObj_1 = {};\n                for (var _i = 0, _a = headers[count].members; _i < _a.length; _i++) {\n                    var member = _a[_i];\n                    memberNameObj_1[member.valueSort.levelName.toString()] = member.valueSort.levelName.toString();\n                }\n                var excessHeaders = this_4.headerObjectsCollection[levelName].filter(function (member) {\n                    return !memberNameObj_1[member.valueSort.levelName.toString()];\n                });\n                headers[count].members = headers[count].members.concat(excessHeaders);\n                headers[count].members = this_4.getSortedHeaders(headers[count].members, this_4.fieldList[headersInfo.fields[headers[count].members[0].level].name].sort);\n                delete this_4.headerObjectsCollection[levelName];\n            }\n            if (headers[count].members.length > 0) {\n                headers[count].members = this_4.performFilterAddition(headers[count].members, fields, headersInfo);\n            }\n            count++;\n        };\n        var this_4 = this;\n        while (count < headers.length) {\n            _loop_4();\n        }\n        return headers;\n    };\n    PivotEngine.prototype.performFilterCommonUpdate = function (filterItem, headersInfo, addPos) {\n        var rawHeaders = headersInfo.axis === 'row' ? this.rMembers : this.cMembers;\n        var filterObjects = {};\n        for (var _i = 0, _a = this.filterMembers; _i < _a.length; _i++) {\n            var item = _a[_i];\n            filterObjects[item] = item;\n        }\n        if (this.fieldFilterMem[filterItem.name]) {\n            rawHeaders = this.performFilterDeletion(headersInfo.headers, filterItem, headersInfo, filterObjects, 0);\n        }\n        if (addPos.length > 0 && headersInfo.fields.length > 0) {\n            this.frameHeaderObjectsCollection = true;\n            if (headersInfo.fields.filter(function (item) { return item.showNoDataItems; }).length > 0) {\n                for (var i = 0; i < this.data.length; i++) {\n                    addPos.push(i);\n                }\n                //addPos = (this.data as any).map((item, pos) => { return pos; });\n            }\n            /* tslint:disable */\n            this.headerObjectsCollection['parent'] = this.getIndexedHeaders(headersInfo.fields, this.data, 0, addPos, headersInfo.axis, '');\n            rawHeaders = this.performFilterAddition(rawHeaders, headersInfo.fields, headersInfo);\n            var headerNames_1 = {};\n            for (var _b = 0, rawHeaders_1 = rawHeaders; _b < rawHeaders_1.length; _b++) {\n                var header = rawHeaders_1[_b];\n                headerNames_1[header.valueSort.levelName.toString()] = header.valueSort.levelName.toString();\n            }\n            var excessHeaders = this.headerObjectsCollection['parent'].filter(function (header) {\n                return !headerNames_1[header.valueSort.levelName.toString()];\n            });\n            /* tslint:enable: */\n            var grandHeader = rawHeaders.filter(function (item) { return item.type === 'grand sum'; });\n            if (grandHeader.length > 0) {\n                rawHeaders.pop();\n            }\n            rawHeaders = this.getSortedHeaders(rawHeaders.concat(excessHeaders), this.fieldList[headersInfo.fields[0].name].sort).concat(grandHeader);\n        }\n        if (headersInfo.axis === 'row') {\n            this.rowCount = 0;\n        }\n        else {\n            this.columnCount = 0;\n        }\n        this.updateHeadersCount(rawHeaders, headersInfo.axis, 0, headersInfo.fields, 'plus', false);\n        if (headersInfo.axis === 'row') {\n            if (headersInfo.position > 0) {\n                this.insertPosition(this.rows, this.data, 0, this.filterMembers, 'row', '', rawHeaders);\n            }\n            this.insertTotalPosition(rawHeaders);\n            this.rMembers = this.headerCollection.rowHeaders = rawHeaders;\n            this.headerCollection.rowHeadersCount = this.rowCount;\n        }\n        else {\n            if (headersInfo.position > 0) {\n                this.insertPosition(this.columns, this.data, 0, this.filterMembers, 'column', '', rawHeaders);\n            }\n            this.insertTotalPosition(rawHeaders);\n            this.cMembers = this.headerCollection.columnHeaders = rawHeaders;\n            this.headerCollection.columnHeadersCount = this.columnCount;\n        }\n        this.applyValueSorting();\n    };\n    /* tslint:enable:typedef */\n    PivotEngine.prototype.getHeadersInfo = function (fieldName, axis) {\n        this.rMembers = this.headerCollection.rowHeaders;\n        this.cMembers = this.headerCollection.columnHeaders;\n        axis = axis === '' ? this.getAxisByFieldName(fieldName) : axis;\n        var headers = axis === 'row' ? this.rMembers : this.cMembers;\n        var fields = axis === 'row' ? this.rows : this.columns;\n        var position = 0;\n        for (var _i = 0, fields_1 = fields; _i < fields_1.length; _i++) {\n            var field = fields_1[_i];\n            if (field.name === fieldName) {\n                break;\n            }\n            position++;\n        }\n        return { axis: axis, fields: fields, headers: headers, position: position };\n    };\n    /** @hidden */\n    PivotEngine.prototype.updateEngine = function () {\n        this.removeCount = 0;\n        this.validateValueFields();\n        this.calculatePagingValues();\n        this.pivotValues = [];\n        this.headerContent = [];\n        this.valueContent = [];\n        var rowheads = [];\n        var colheads = [];\n        var valuesCount = (this.values.length);\n        this.getAggregatedHeaders(this.rows, this.columns, this.rMembers, this.cMembers, this.values);\n        this.getHeaderData(this.cMembers, colheads, this.pivotValues, 0, this.valueAxis ? 1 : valuesCount);\n        this.insertSubTotals();\n        /* tslint:disable-next-line:max-line-length */\n        this.getTableData(this.rMembers, rowheads, colheads, 0, this.pivotValues, valuesCount, (this.rowGrandTotal ? this.rowGrandTotal : this.rMembers[this.rMembers.length - 1]), (this.columnGrandTotal ? this.columnGrandTotal : this.cMembers[this.cMembers.length - 1]));\n        this.applyAdvancedAggregate(rowheads, colheads, this.pivotValues);\n        this.isEngineUpdated = true;\n        this.isEmptyDataAvail(this.rMembers, this.cMembers);\n    };\n    PivotEngine.prototype.getAxisByFieldName = function (fieldName) {\n        var axisCount = 0;\n        var axis = '';\n        while (axisCount < 4 && axis === '') {\n            switch (axisCount) {\n                case 0:\n                    axis = this.getFieldByName(fieldName, this.rows) ? 'row' : '';\n                    break;\n                case 1:\n                    axis = this.getFieldByName(fieldName, this.columns) ? 'column' : '';\n                    break;\n            }\n            axisCount++;\n        }\n        return axis;\n    };\n    PivotEngine.prototype.getFieldByName = function (fieldName, fields) {\n        return new DataManager({ json: fields }).executeLocal(new Query().where('name', 'equal', fieldName))[0];\n    };\n    PivotEngine.prototype.updateHeadersCount = function (headers, axis, position, fields, action, isDrill) {\n        var lenCnt = 0;\n        var field = fields[position];\n        var showSubTotals = true;\n        if (axis === 'column') {\n            showSubTotals = this.showSubTotals && this.showColumnSubTotals && field ? field.showSubTotals : true;\n        }\n        else {\n            showSubTotals = this.showSubTotals && this.showRowSubTotals && field ? field.showSubTotals : true;\n        }\n        while (lenCnt < headers.length) {\n            if (axis === 'row') {\n                this.rowCount = this.rowCount - (action === 'plus' ? -(this.valueAxis === 1 ? this.values.length : 1) :\n                    (this.valueAxis === 1 ? this.values.length : 1));\n            }\n            else {\n                this.columnCount = this.columnCount - (action === 'plus' ? -(this.valueAxis === 1 ? 1 : this.values.length) :\n                    (this.valueAxis === 1 ? 1 : this.values.length));\n            }\n            if (headers[lenCnt].members.length > 0) {\n                this.updateHeadersCount(headers[lenCnt].members, axis, position + 1, fields, action, true);\n            }\n            lenCnt++;\n        }\n        if (axis === 'column' && !showSubTotals && isDrill) {\n            this.columnCount += action === 'plus' ? -this.colValuesLength : this.colValuesLength;\n        }\n    };\n    /* tslint:disable:typedef no-any */\n    /** @hidden */\n    PivotEngine.prototype.frameHeaderWithKeys = function (header) {\n        var keys = Object.keys(header);\n        var keyPos = 0;\n        var framedHeader = {};\n        while (keyPos < keys.length) {\n            framedHeader[keys[keyPos]] = header[keys[keyPos]];\n            keyPos++;\n        }\n        return framedHeader;\n    };\n    PivotEngine.prototype.getSortedHeaders = function (headers, sortOrder) {\n        var isNotDateType = !(this.formatFields && this.formatFields[headers[0].valueSort.axis] &&\n            this.formatFields[headers[0].valueSort.axis].type);\n        var childrens = this.fieldList[headers[0].valueSort.axis];\n        if (isNotDateType) {\n            if (childrens && childrens.type == 'number' && headers.length > 0 && (typeof (headers[0].actualText) == 'string')) {\n                var stringValue = [];\n                var alphaNumbervalue = [];\n                for (var i = 0; i < headers.length; i++) {\n                    if (isNaN(headers[i].actualText.toString().charAt(0))) {\n                        stringValue.push(headers[i]);\n                    }\n                    else {\n                        alphaNumbervalue.push(headers[i]);\n                    }\n                }\n                if (stringValue.length > 0) {\n                    stringValue = childrens.sort === 'Ascending' ? (stringValue.sort(function (a, b) { return (a.actualText > b.actualText) ? 1 : ((b.actualText > a.actualText) ? -1 : 0); })) :\n                        childrens.sort === 'Descending' ? (stringValue.sort(function (a, b) { return (a.actualText < b.actualText) ? 1 : ((b.actualText < a.actualText) ? -1 : 0); })) : stringValue;\n                }\n                if (alphaNumbervalue.length > 0) {\n                    alphaNumbervalue = childrens.sort === 'Ascending' ?\n                        (alphaNumbervalue.sort(function (a, b) { return (Number(a.actualText.toString().match(/\\d+/)[0]) > Number(b.actualText.toString().match(/\\d+/)[0])) ? 1 : ((Number(b.actualText.toString().match(/\\d+/)[0]) > Number(a.actualText.toString().match(/\\d+/)[0])) ? -1 : 0); })) :\n                        childrens.sort === 'Descending' ?\n                            (alphaNumbervalue.sort(function (a, b) { return (Number(a.actualText.toString().match(/\\d+/)[0]) < Number(b.actualText.toString().match(/\\d+/)[0])) ? 1 : ((Number(b.actualText.toString().match(/\\d+/)[0]) < Number(a.actualText.toString().match(/\\d+/)[0])) ? -1 : 0); })) :\n                            alphaNumbervalue;\n                }\n                return headers = alphaNumbervalue.concat(stringValue);\n            }\n            else {\n                return sortOrder === 'Ascending' ?\n                    (headers.sort(function (a, b) { return (a.actualText > b.actualText) ? 1 : ((b.actualText > a.actualText) ? -1 : 0); })) :\n                    sortOrder === 'Descending' ?\n                        (headers.sort(function (a, b) { return (a.actualText < b.actualText) ? 1 : ((b.actualText < a.actualText) ? -1 : 0); })) :\n                        headers;\n            }\n        }\n        else {\n            return sortOrder === 'Ascending' ?\n                (headers.sort(function (a, b) { return (a.dateText > b.dateText) ? 1 : ((b.dateText > a.dateText) ? -1 : 0); })) :\n                sortOrder === 'Descending' ?\n                    (headers.sort(function (a, b) { return (a.dateText < b.dateText) ? 1 : ((b.dateText < a.dateText) ? -1 : 0); })) :\n                    headers;\n        }\n    };\n    /* tslint:enable:typedef no-any */\n    /** @hidden */\n    PivotEngine.prototype.applyValueSorting = function (rMembers, cMembers) {\n        var isNullArgument = false;\n        if (rMembers === undefined || cMembers === undefined) {\n            rMembers = this.rMembers;\n            cMembers = this.cMembers;\n            isNullArgument = true;\n        }\n        if (this.enableValueSorting && this.valueSortSettings.headerText &&\n            this.valueSortSettings.headerText !== '' && this.values.length > 0) {\n            var textArray = this.valueSortSettings.headerText.split(this.valueSortSettings.headerDelimiter);\n            var hText = '';\n            var mIndex = void 0;\n            var mType = void 0;\n            var caption = void 0;\n            for (var i = 0; i < this.values.length; i++) {\n                if (this.values[i].caption === textArray[textArray.length - 1]) {\n                    caption = this.values[i].name;\n                    break;\n                }\n                else {\n                    caption = textArray[textArray.length - 1];\n                }\n            }\n            if (((this.values.length === 1 && this.columns.length === 0) || this.values.length > 1) && caption && this.fieldList[caption]) {\n                for (var i = 0; i < textArray.length - 1; i++) {\n                    hText = hText === '' ? textArray[i] : (hText + this.valueSortSettings.headerDelimiter + textArray[i]);\n                }\n                mIndex = this.fieldList[caption].index;\n                mType = this.fieldList[caption].aggregateType;\n            }\n            else {\n                if (!this.alwaysShowValueHeader || textArray.length === 1) {\n                    hText = this.valueSortSettings.headerText;\n                }\n                else {\n                    for (var i = 0; i < textArray.length - 1; i++) {\n                        hText = hText === '' ? textArray[i] : (hText + this.valueSortSettings.headerDelimiter + textArray[i]);\n                    }\n                }\n                mIndex = this.fieldList[this.values[0].name].index;\n                mType = this.fieldList[this.values[0].name].aggregateType;\n            }\n            var member = void 0;\n            if (this.valueAxis === 0) {\n                member = this.getMember(cMembers, hText);\n                if (member) {\n                    rMembers = this.sortByValueRow(rMembers, member, this.valueSortSettings.sortOrder, mIndex, mType);\n                }\n            }\n            else {\n                member = this.getMember(rMembers, hText);\n                if (member) {\n                    cMembers = this.sortByValueRow(cMembers, member, this.valueSortSettings.sortOrder, mIndex, mType);\n                }\n            }\n            if (isNullArgument) {\n                this.rMembers = rMembers;\n                this.cMembers = cMembers;\n                if (this.pageSettings) {\n                    this.headerCollection.rowHeaders = this.rMembers;\n                    this.headerCollection.columnHeaders = this.cMembers;\n                }\n            }\n        }\n        return { rMembers: rMembers, cMembers: cMembers };\n    };\n    PivotEngine.prototype.getMember = function (cMembers, headerText) {\n        var vlen = cMembers.length;\n        var member;\n        for (var j = 0; j < vlen; j++) {\n            if (cMembers[j].valueSort.levelName === headerText) {\n                member = cMembers[j];\n                break;\n            }\n            else if (cMembers[j].members.length > 0) {\n                member = this.getMember(cMembers[j].members, headerText);\n            }\n            if (member) {\n                return member;\n            }\n        }\n        return member;\n    };\n    PivotEngine.prototype.sortByValueRow = function (rMembers, member, sortOrder, mIndex, mType) {\n        var aggreColl = [];\n        for (var _i = 0, rMembers_1 = rMembers; _i < rMembers_1.length; _i++) {\n            var header = rMembers_1[_i];\n            if (header.type === 'grand sum') {\n                aggreColl.push({ 'header': header });\n            }\n            else {\n                this.rawIndexObject = {};\n                var value = this.getAggregateValue(header.index, member.indexObject, mIndex, mType);\n                var cellDetails = {\n                    fieldName: this.fields[mIndex],\n                    row: header,\n                    column: member,\n                    value: value,\n                    cellSets: this.getCellSet(this.rawIndexObject),\n                    /* tslint:disable-next-line:max-line-length */\n                    rowCellType: (header.hasChild && header.isDrilled ? 'subTotal' : header.type === 'grand sum' ? 'grandTotal' : 'value'),\n                    /* tslint:disable-next-line:max-line-length */\n                    columnCellType: (member.hasChild && member.isDrilled ? 'subTotal' : member.type === 'grand sum' ? 'grandTotal' : 'value'),\n                    aggregateType: mType,\n                    skipFormatting: false\n                };\n                if (this.getValueCellInfo) {\n                    this.getValueCellInfo(cellDetails);\n                }\n                value = cellDetails.value;\n                this.rawIndexObject = {};\n                aggreColl.push({ 'header': header, 'value': value });\n            }\n        }\n        /* tslint:disable */\n        aggreColl.sort(function (a, b) {\n            return sortOrder === 'Descending' ?\n                ((b['value'] || b['header']['type'] === 'grand sum' ?\n                    b['value'] : 0) - (a['value'] || a['header']['type'] === 'grand sum' ? a['value'] : 0)) :\n                ((a['value'] || a['header']['type'] === 'grand sum' ?\n                    a['value'] : 0) - (b['value'] || b['header']['type'] === 'grand sum' ? b['value'] : 0));\n        });\n        rMembers = aggreColl.map(function (item) { return item['header']; });\n        for (var _a = 0, rMembers_2 = rMembers; _a < rMembers_2.length; _a++) {\n            var header = rMembers_2[_a];\n            if (header.members.length > 0) {\n                header.members = this.sortByValueRow(header.members, member, sortOrder, mIndex, mType);\n            }\n        }\n        return rMembers;\n        /* tslint:enable */\n    };\n    PivotEngine.prototype.insertAllMembersCommon = function () {\n        this.rowGrandTotal = this.columnGrandTotal = null;\n        var rowFlag = (this.showGrandTotals && this.showRowGrandTotals) ? true : (this.rows.length > 0) ? false : true;\n        var columnFlag = (this.showGrandTotals && this.showColumnGrandTotals) ? true : (this.columns.length > 0) ? false : true;\n        if (this.isValueHasAdvancedAggregate) {\n            /* inserting the row grant-total members */\n            this.insertAllMember(this.rMembers, this.filterMembers, '', 'row');\n            if (rowFlag) {\n                this.rowCount += this.rowValuesLength;\n            }\n            /* inserting the column gran-total members */\n            this.insertAllMember(this.cMembers, this.filterMembers, '', 'column');\n            if (columnFlag) {\n                this.columnCount += this.colValuesLength;\n            }\n        }\n        else {\n            if (rowFlag) {\n                /* inserting the row grant-total members */\n                this.insertAllMember(this.rMembers, this.filterMembers, '', 'row');\n                this.rowCount += this.rowValuesLength;\n            }\n            else {\n                this.rowGrandTotal = this.insertAllMember([], this.filterMembers, '', 'row')[0];\n            }\n            if (columnFlag) {\n                /* inserting the column gran-total members */\n                this.insertAllMember(this.cMembers, this.filterMembers, '', 'column');\n                this.columnCount += this.colValuesLength;\n            }\n            else {\n                this.columnGrandTotal = this.insertAllMember([], this.filterMembers, '', 'column')[0];\n            }\n        }\n    };\n    PivotEngine.prototype.insertSubTotals = function () {\n        var rowLength = this.pivotValues.length;\n        for (var rowCnt = 0; rowCnt < rowLength; rowCnt++) {\n            var rowCells = this.pivotValues[rowCnt];\n            if (rowCells) {\n                var savedCell = void 0;\n                var spanCnt = 1;\n                var colLength = rowCells.length;\n                var indexObj = void 0;\n                for (var colCnt = colLength - 1; colCnt > 0; colCnt--) {\n                    var cell = rowCells[colCnt];\n                    if (cell) {\n                        // if (cell.rowSpan > 1) {\n                        //     cell.rowSpan = 1;\n                        // }\n                        if (savedCell) {\n                            savedCell.colSpan = spanCnt;\n                            savedCell.colIndex = savedCell.colIndex - (spanCnt - 1);\n                        }\n                        indexObj = { index: cell.index, indexObject: cell.indexObject };\n                        cell.index = [];\n                        cell.indexObject = {};\n                        savedCell = extend({}, cell, null, true);\n                        cell.index = indexObj.index;\n                        cell.indexObject = indexObj.indexObject;\n                        var rowPos = rowCnt + 1;\n                        while (this.pivotValues[rowPos] && !this.pivotValues[rowPos][colCnt]) {\n                            if (!this.pivotValues[rowCnt][colCnt].isDrilled) {\n                                this.pivotValues[rowCnt][colCnt].rowSpan = (rowPos - rowCnt) + 1;\n                                savedCell.rowSpan = (rowPos - rowCnt) + 1;\n                            }\n                            var cellType = (cell.type === 'sum' || cell.type === 'grand sum') ? cell.type : 'sum';\n                            this.pivotValues[rowPos][colCnt] = this.headerContent[rowPos][colCnt] = {\n                                type: cellType, formattedText: ((cell.type === 'sum' || cell.type === 'grand sum') ? cell.formattedText :\n                                    (cell.formattedText + ' Total')),\n                                axis: 'column', level: -1, colIndex: colCnt, rowIndex: rowPos, valueSort: cell.valueSort\n                            };\n                            if (cell.valueSort && cell.valueSort[this.valueSortSettings.headerText]) {\n                                this.valueSortSettings.columnIndex = colCnt;\n                            }\n                            var isSpanned = false;\n                            if (cellType === 'grand sum') {\n                                this.pivotValues[rowCnt][colCnt].rowSpan = (rowPos - rowCnt) + 1;\n                                savedCell.rowSpan = (rowPos - rowCnt) + 1;\n                            }\n                            else if (this.pivotValues[rowCnt][colCnt].type !== 'sum' &&\n                                this.pivotValues[rowCnt][colCnt].isDrilled) {\n                                this.pivotValues[rowCnt + 1][colCnt].rowSpan = rowPos - rowCnt;\n                                isSpanned = true;\n                            }\n                            else {\n                                this.pivotValues[rowPos][colCnt].rowSpan = -1;\n                            }\n                            if (rowPos > (rowCnt + 1) && (this.pivotValues[rowCnt][colCnt].type === 'sum' ||\n                                isSpanned)) {\n                                this.pivotValues[rowPos][colCnt].rowSpan = -1;\n                            }\n                            rowPos++;\n                        }\n                        spanCnt = 1;\n                    }\n                    else {\n                        rowCells[colCnt] = this.headerContent[rowCnt][colCnt] = extend({}, savedCell, null, true);\n                        rowCells[colCnt].index = this.headerContent[rowCnt][colCnt].index = indexObj.index;\n                        rowCells[colCnt].indexObject = this.headerContent[rowCnt][colCnt].indexObject = indexObj.indexObject;\n                        spanCnt++;\n                        rowCells[colCnt].colSpan = spanCnt;\n                        rowCells[colCnt].colIndex = rowCells[colCnt].colIndex - (spanCnt - 1);\n                    }\n                    if (colCnt === 1 && savedCell) {\n                        savedCell.colSpan = spanCnt;\n                        savedCell.colIndex = savedCell.colIndex - (spanCnt - 1);\n                    }\n                }\n            }\n        }\n    };\n    PivotEngine.prototype.frameDrillObject = function () {\n        this.fieldDrillCollection = {};\n        for (var fieldCnt = 0; fieldCnt < this.drilledMembers.length; fieldCnt++) {\n            var drillOption = this.drilledMembers[fieldCnt];\n            for (var memberCnt = 0; memberCnt < drillOption.items.length; memberCnt++) {\n                var memberString = drillOption.name + this.valueSortSettings.headerDelimiter +\n                    drillOption.items[memberCnt].split(drillOption.delimiter).join(this.valueSortSettings.headerDelimiter);\n                this.fieldDrillCollection[memberString] = memberString;\n            }\n        }\n    };\n    /* tslint:disable:typedef no-any */\n    /* tslint:disable:max-func-body-length */\n    PivotEngine.prototype.getIndexedHeaders = function (keys, data, keyInd, position, axis, parentMember, valueFil) {\n        var hierarchy = [];\n        if (keys) {\n            var rlen = keys.length;\n            var decisionObj = {};\n            var fieldName = keys[keyInd].name;\n            var field = keys[keyInd];\n            // let members: string[] = Object.keys(this.fieldList[field].members);\n            var childrens = this.fieldList[fieldName];\n            if (isNullOrUndefined(this.reportDataType)) {\n                this.reportDataType = {};\n                for (var i = 0; i < this.dataSourceSettings.rows.length; i++) {\n                    this.reportDataType[this.dataSourceSettings.rows[i].name] = this.dataSourceSettings.rows[i].dataType;\n                }\n                for (var i = 0; i < this.dataSourceSettings.columns.length; i++) {\n                    this.reportDataType[this.dataSourceSettings.columns[i].name] = this.dataSourceSettings.columns[i].dataType;\n                }\n                for (var i = 0; i < this.dataSourceSettings.values.length; i++) {\n                    this.reportDataType[this.dataSourceSettings.values[i].name] = this.dataSourceSettings.values[i].dataType;\n                }\n            }\n            childrens.type = !isNullOrUndefined(this.reportDataType[childrens.id]) ? this.reportDataType[childrens.id] : childrens.type;\n            var isNoData = false;\n            var isDateType = (this.formatFields[fieldName] &&\n                (['date', 'dateTime', 'time'].indexOf(this.formatFields[fieldName].type) > -1));\n            var showNoDataItems = (position.length < 1 && keyInd > 0) || field.showNoDataItems;\n            var savedMembers = {};\n            if (showNoDataItems) {\n                var members = Object.keys(childrens.members);\n                for (var pos = 0, lt = members.length; pos < lt; pos++) {\n                    if (this.showHeaderWhenEmpty || (this.localeObj && members[pos] !== this.localeObj.getConstant('undefined'))) {\n                        savedMembers[members[pos]] = members[pos];\n                    }\n                }\n                if (position.length < 1) {\n                    isNoData = true;\n                    position.length = members.length;\n                }\n            }\n            for (var pos = 0, lt = position.length; pos < lt; pos++) {\n                var member = {};\n                if (!isNullOrUndefined(keys[keyInd].showSubTotals) && !keys[keyInd].showSubTotals) {\n                    member.showSubTotals = false;\n                }\n                member.hasChild = keyInd < rlen - 1;\n                member.level = keyInd;\n                member.axis = axis;\n                member.colSpan = 1;\n                var memInd = isNoData ? childrens.members[Object.keys(savedMembers)[0]].ordinal :\n                    this.indexMatrix[position[pos]][childrens.index];\n                var headerValue = isNoData ? Object.keys(savedMembers)[0] :\n                    data[position[pos]][this.fieldKeys[fieldName]];\n                if ((isNullOrUndefined(headerValue) || (this.localeObj && headerValue === this.localeObj.getConstant('undefined')))\n                    && !this.showHeaderWhenEmpty) {\n                    if (showNoDataItems && !isNoData && keyInd > 0 && pos + 1 === position.length &&\n                        Object.keys(savedMembers).length > 0) {\n                        lt = Object.keys(savedMembers).length;\n                        isNoData = true;\n                        pos = -1;\n                    }\n                    continue;\n                }\n                delete savedMembers[headerValue];\n                if (showNoDataItems && this.fieldFilterMem[fieldName] &&\n                    this.fieldFilterMem[fieldName].memberObj[headerValue] === headerValue) {\n                    continue;\n                }\n                var formattedValue = isDateType ? {\n                    actualText: headerValue,\n                    formattedText: childrens.dateMember[memInd - 1].formattedText,\n                    dateText: childrens.dateMember[memInd - 1].actualText\n                } :\n                    {\n                        formattedText: headerValue === null ? (this.localeObj ? this.localeObj.getConstant('null') : String(headerValue)) :\n                            headerValue === undefined ? (this.localeObj ? (fieldName in this.groupingFields) ?\n                                this.localeObj.getConstant('groupOutOfRange') : this.localeObj.getConstant('undefined') :\n                                String(headerValue)) : String(headerValue), actualText: headerValue === null ? (this.localeObj ?\n                            this.localeObj.getConstant('null') : String(headerValue)) : headerValue === undefined ?\n                            (this.localeObj ? (fieldName in this.groupingFields) ?\n                                this.localeObj.getConstant('groupOutOfRange') : this.localeObj.getConstant('undefined') :\n                                String(headerValue)) : headerValue\n                    };\n                member.actualText = formattedValue.actualText;\n                member.formattedText = formattedValue.formattedText;\n                if (isDateType) {\n                    member.dateText = formattedValue.dateText;\n                }\n                var availData = showNoDataItems ? (this.filterPosObj[position[pos]] !== undefined &&\n                    !isNoData ? true : false) : true;\n                //member.name = members[memInd];\n                // member.type = member.hasChild ? 'All' : 'Single';\n                var pindx = void 0;\n                if (!(decisionObj && decisionObj[memInd])) {\n                    decisionObj[memInd] = { index: [], indexObject: {} };\n                    member.index = decisionObj[memInd].index;\n                    member.indexObject = decisionObj[memInd].indexObject;\n                    if (availData) {\n                        member.index = decisionObj[memInd].index = [position[pos]];\n                        decisionObj[memInd].indexObject[position[pos]] = position[pos];\n                        member.indexObject = decisionObj[memInd].indexObject;\n                    }\n                    member.ordinal = memInd;\n                    member.valueSort = {};\n                    member.valueSort.axis = fieldName;\n                    if (keyInd !== 0) {\n                        member.valueSort.levelName = parentMember + this.valueSortSettings.headerDelimiter + member.formattedText;\n                        member.valueSort[parentMember + this.valueSortSettings.headerDelimiter + member.formattedText] = 1;\n                    }\n                    else {\n                        member.valueSort[member.formattedText] = 1;\n                        member.valueSort.levelName = member.formattedText;\n                    }\n                    var memberString = member.valueSort.axis + this.valueSortSettings.headerDelimiter + member.valueSort.levelName;\n                    member.isDrilled = (valueFil && this.isValueFiltersAvail) ?\n                        true : (member.hasChild && this.fieldDrillCollection[memberString]) ?\n                        this.isExpandAll ? false : true : childrens.members[headerValue].isDrilled;\n                    //if (!member.members) {\n                    member.members = [];\n                    //}\n                    //let copyObj: AxisSet = Object.create(member);\n                    hierarchy.push(member);\n                }\n                else if (availData) {\n                    decisionObj[memInd].index.push(position[pos]);\n                    decisionObj[memInd].indexObject[position[pos]] = position[pos];\n                }\n                if (showNoDataItems && !isNoData && keyInd > 0 && pos + 1 === position.length &&\n                    Object.keys(savedMembers).length > 0) {\n                    isNoData = true;\n                    lt = Object.keys(savedMembers).length;\n                    pos = -1;\n                }\n            }\n            for (var iln = 0, ilt = hierarchy.length; iln < ilt; iln++) {\n                if (!this.frameHeaderObjectsCollection) {\n                    if (axis === 'row') {\n                        this.rowCount += this.rowValuesLength;\n                    }\n                    else {\n                        this.columnCount += this.colValuesLength;\n                    }\n                }\n                var level = null;\n                if (hierarchy[iln].valueSort && hierarchy[iln].valueSort.levelName) {\n                    level = hierarchy[iln].valueSort.levelName;\n                }\n                parentMember = (level || hierarchy[iln].formattedText);\n                if (!this.showHeaderWhenEmpty && rlen - 1 > keyInd && hierarchy[iln].index &&\n                    hierarchy[iln].index.length > 0 && !showNoDataItems) {\n                    var headerValue = data[hierarchy[iln].index[0]][this.fieldKeys[keys[keyInd + 1].name]];\n                    var hasChild = (isNullOrUndefined(headerValue) || (this.localeObj &&\n                        headerValue === this.localeObj.getConstant('undefined'))) && hierarchy[iln].index.length === 1 ? false : true;\n                    hierarchy[iln].hasChild = hasChild;\n                }\n                else if (!this.showHeaderWhenEmpty && showNoDataItems && keys[keyInd + 1] && keys[keyInd + 1].name &&\n                    Object.keys(this.fieldList[keys[keyInd + 1].name].members).length) {\n                    hierarchy[iln].hasChild = true;\n                }\n                if (rlen - 1 > keyInd && hierarchy[iln].isDrilled) {\n                    this.columnCount -= (!(this.showSubTotals && this.showColumnSubTotals && field.showSubTotals) && axis === 'column') ?\n                        this.colValuesLength : 0;\n                    var filterPosition = hierarchy[iln].index;\n                    /* tslint:disable:align */\n                    hierarchy[iln].members = this.getIndexedHeaders(keys, data, keyInd + 1, (filterPosition === undefined ? [] : filterPosition), axis, parentMember);\n                    /* tslint:enable:align */\n                    if (this.frameHeaderObjectsCollection) {\n                        this.headerObjectsCollection[parentMember] = hierarchy[iln].members;\n                    }\n                }\n            }\n            /* tslint:disable:typedef */\n            if (this.enableSort) {\n                // return new DataManager(hierarchy as JSON[]).executeLocal(new Query().sortBy('actualText', childrens.sort.toLowerCase()));\n                if (isDateType) {\n                    return childrens.sort === 'Ascending' ?\n                        (hierarchy.sort(function (a, b) { return (a.dateText > b.dateText) ? 1 : ((b.dateText > a.dateText) ? -1 : 0); })) :\n                        childrens.sort === 'Descending' ?\n                            (hierarchy.sort(function (a, b) { return (a.dateText < b.dateText) ? 1 : ((b.dateText < a.dateText) ? -1 : 0); })) :\n                            hierarchy;\n                }\n                else {\n                    if (childrens.type === 'number' && hierarchy.length > 0 && (typeof (hierarchy[0].actualText) === 'string')) {\n                        var stringValue = [];\n                        var alphaNumbervalue = [];\n                        for (var i = 0; i < hierarchy.length; i++) {\n                            if (isNaN(hierarchy[i].actualText.toString().charAt(0))) {\n                                stringValue.push(hierarchy[i]);\n                            }\n                            else {\n                                alphaNumbervalue.push(hierarchy[i]);\n                            }\n                        }\n                        if (stringValue.length > 0) {\n                            stringValue = childrens.sort === 'Ascending' ? (stringValue.sort(function (a, b) { return (a.actualText > b.actualText) ? 1 : ((b.actualText > a.actualText) ? -1 : 0); })) :\n                                childrens.sort === 'Descending' ? (stringValue.sort(function (a, b) { return (a.actualText < b.actualText) ? 1 : ((b.actualText < a.actualText) ? -1 : 0); })) : stringValue;\n                        }\n                        if (alphaNumbervalue.length > 0) {\n                            alphaNumbervalue = childrens.sort === 'Ascending' ?\n                                (alphaNumbervalue.sort(function (a, b) { return (Number(a.actualText.toString().match(/\\d+/)[0]) > Number(b.actualText.toString().match(/\\d+/)[0])) ? 1 : ((Number(b.actualText.toString().match(/\\d+/)[0]) > Number(a.actualText.toString().match(/\\d+/)[0])) ? -1 : 0); })) :\n                                childrens.sort === 'Descending' ?\n                                    (alphaNumbervalue.sort(function (a, b) { return (Number(a.actualText.toString().match(/\\d+/)[0]) < Number(b.actualText.toString().match(/\\d+/)[0])) ? 1 : ((Number(b.actualText.toString().match(/\\d+/)[0]) < Number(a.actualText.toString().match(/\\d+/)[0])) ? -1 : 0); })) :\n                                    alphaNumbervalue;\n                        }\n                        return hierarchy = alphaNumbervalue.concat(stringValue);\n                    }\n                    else {\n                        return childrens.sort === 'Ascending' ?\n                            (hierarchy.sort(function (a, b) { return (a.actualText > b.actualText) ? 1 : ((b.actualText > a.actualText) ? -1 : 0); })) :\n                            childrens.sort === 'Descending' ?\n                                (hierarchy.sort(function (a, b) { return (a.actualText < b.actualText) ? 1 : ((b.actualText < a.actualText) ? -1 : 0); })) :\n                                hierarchy;\n                    }\n                }\n            }\n            else {\n                return hierarchy;\n            }\n            /* tslint:enable:typedef */\n        }\n        else {\n            return hierarchy;\n        }\n    };\n    PivotEngine.prototype.getOrderedIndex = function (headers) {\n        var orderedIndex = {};\n        for (var i = 0; i < headers.length; i++) {\n            if (headers[i].type !== 'grand sum') {\n                orderedIndex[headers[i].ordinal] = i;\n            }\n        }\n        return orderedIndex;\n    };\n    /* tslint:disable:typedef no-any */\n    PivotEngine.prototype.insertPosition = function (keys, data, keyInd, position, axis, parentMember, slicedHeaders) {\n        var hierarchy = [];\n        var orderedIndex = this.getOrderedIndex(slicedHeaders);\n        if (keys) {\n            var decisionObj = {};\n            var field = keys[keyInd].name;\n            var childrens = this.fieldList[field];\n            for (var pos = 0, lt = position.length; pos < lt; pos++) {\n                var member = {};\n                var memInd = this.indexMatrix[position[pos]][childrens.index];\n                var slicedHeader = slicedHeaders[orderedIndex[memInd]];\n                var value = data[position[pos]][this.fieldKeys[field]];\n                value = value === null ? (this.localeObj ? this.localeObj.getConstant('null') : String(value)) : value;\n                var formattedValue = (this.formatFields[field] &&\n                    (['date', 'dateTime', 'time'].indexOf(this.formatFields[field].type) > -1)) ?\n                    this.getFormattedValue(value, field) :\n                    { formattedText: value.toString(), actualText: value.toString() };\n                if (!(slicedHeader && slicedHeader.formattedText === formattedValue.formattedText)) {\n                    continue;\n                }\n                if (!(decisionObj && decisionObj[memInd])) {\n                    decisionObj[memInd] = { index: [], indexObject: {} };\n                    slicedHeader.index = decisionObj[memInd].index = [position[pos]];\n                    decisionObj[memInd].indexObject[position[pos]] = position[pos];\n                    slicedHeader.indexObject = decisionObj[memInd].indexObject;\n                    slicedHeader.valueSort = {};\n                    slicedHeader.valueSort.axis = field;\n                    if (keyInd !== 0) {\n                        slicedHeader.valueSort.levelName = parentMember + this.valueSortSettings.headerDelimiter +\n                            slicedHeader.formattedText;\n                        slicedHeader.valueSort[parentMember + this.valueSortSettings.headerDelimiter +\n                            slicedHeader.formattedText] = 1;\n                    }\n                    else {\n                        slicedHeader.valueSort[slicedHeader.formattedText] = 1;\n                        slicedHeader.valueSort.levelName = slicedHeader.formattedText;\n                    }\n                    member.members = [];\n                    hierarchy.push(member);\n                }\n                else {\n                    decisionObj[memInd].index.push(position[pos]);\n                    decisionObj[memInd].indexObject[position[pos]] = position[pos];\n                }\n            }\n            var diff = slicedHeaders.length - hierarchy.length;\n            while (diff > 0) {\n                hierarchy.push({ members: [] });\n                diff--;\n            }\n            for (var iln = 0, ilt = hierarchy.length; iln < ilt; iln++) {\n                if (slicedHeaders[iln].members.length > 0) {\n                    var level = null;\n                    if (slicedHeaders[iln].valueSort && slicedHeaders[iln].valueSort.levelName) {\n                        level = slicedHeaders[iln].valueSort.levelName;\n                    }\n                    parentMember = (level || slicedHeaders[iln].formattedText);\n                    /* tslint:disable:align */\n                    hierarchy[iln].members =\n                        this.insertPosition(keys, data, keyInd + 1, slicedHeaders[iln].index, axis, parentMember, slicedHeaders[iln].members);\n                    /* tslint:enable:align */\n                }\n            }\n            return hierarchy;\n        }\n        else {\n            return hierarchy;\n        }\n    };\n    PivotEngine.prototype.insertTotalPosition = function (headers) {\n        var summCell = headers[headers.length - 1];\n        if (summCell && summCell.type === 'grand sum') {\n            summCell.index = this.filterMembers;\n            /* tslint:disable:typedef */\n            var lt = void 0;\n            for (var ln = 0, lt_1 = this.filterMembers.length; ln < lt_1; ln++) {\n                summCell.indexObject[this.filterMembers[ln]] = this.filterMembers[ln];\n            }\n            /* tslint:enable:typedef */\n        }\n        return headers;\n    };\n    PivotEngine.prototype.calculatePagingValues = function () {\n        if (this.pageSettings) {\n            if (this.valueAxis === 1) {\n                this.rowValuesLength = this.values.length;\n            }\n            else {\n                this.colValuesLength = this.values.length;\n            }\n            this.memberCnt = -this.rowValuesLength;\n            this.rowStartPos = ((this.pageSettings.rowCurrentPage * this.pageSettings.rowSize) -\n                (this.pageSettings.rowSize)) * this.rowValuesLength;\n            var exactStartPos = (this.rowStartPos + (this.pageSettings.rowSize * 3 * this.rowValuesLength)) > this.rowCount ?\n                (this.rowCount - (this.pageSettings.rowSize * 3 * this.rowValuesLength)) : this.rowStartPos;\n            if (exactStartPos < 0) {\n                exactStartPos = this.rowStartPos = 0;\n                this.pageSettings.rowCurrentPage = 1;\n            }\n            this.rowFirstLvl = (this.rowStartPos - exactStartPos) % this.pageSettings.rowSize;\n            this.rowStartPos = exactStartPos;\n            this.endPos = this.rowStartPos + (this.pageSettings.rowSize * 3 * this.rowValuesLength);\n            this.endPos = this.endPos > this.rowCount ? this.rowCount : this.endPos;\n            this.rMembers = this.performSlicing(this.rMembers, [], this.rowStartPos, 'row');\n            this.memberCnt = -this.colValuesLength;\n            this.pageInLimit = false;\n            this.colHdrBufferCalculated = false;\n            this.colStartPos = ((this.pageSettings.columnCurrentPage * this.pageSettings.columnSize) -\n                (this.pageSettings.columnSize)) * this.colValuesLength;\n            exactStartPos = (this.colStartPos + (this.pageSettings.columnSize * 3 * this.colValuesLength)) >\n                this.columnCount ?\n                (this.columnCount - (this.pageSettings.columnSize * 3 * this.colValuesLength)) : this.colStartPos;\n            if (exactStartPos < 0) {\n                exactStartPos = this.colStartPos = 0;\n                this.pageSettings.columnCurrentPage = 1;\n            }\n            this.colFirstLvl = (this.colStartPos - exactStartPos) % this.pageSettings.columnSize;\n            this.colStartPos = exactStartPos;\n            this.endPos = this.colStartPos + (this.pageSettings.columnSize * 3 * this.colValuesLength);\n            this.endPos = this.endPos > this.columnCount ? this.columnCount : this.endPos;\n            this.cMembers = this.performSlicing(this.cMembers, [], this.colStartPos, 'column');\n            this.memberCnt = -1;\n            this.pageInLimit = false;\n            if (this.isValueHasAdvancedAggregate) {\n                if (this.rMembers[this.rMembers.length - 1].type !== 'grand sum' &&\n                    this.headerCollection.rowHeaders[this.headerCollection.rowHeaders.length - 1].type === 'grand sum') {\n                    this.rMembers.push(this.headerCollection.rowHeaders[this.headerCollection.rowHeaders.length - 1]);\n                    this.removeRowGrandTotal = true;\n                }\n                if (this.cMembers[this.cMembers.length - 1].type !== 'grand sum' &&\n                    this.headerCollection.columnHeaders[this.headerCollection.columnHeaders.length - 1].type === 'grand sum') {\n                    this.cMembers.push(this.headerCollection.columnHeaders[this.headerCollection.columnHeaders.length - 1]);\n                    this.removeColumnGrandTotal = true;\n                }\n            }\n            else {\n                this.rowGrandTotal = this.rowGrandTotal ? this.rowGrandTotal :\n                    this.headerCollection.rowHeaders[this.headerCollection.rowHeaders.length - 1];\n                this.columnGrandTotal = this.columnGrandTotal ? this.columnGrandTotal :\n                    this.headerCollection.columnHeaders[this.headerCollection.columnHeaders.length - 1];\n            }\n        }\n    };\n    PivotEngine.prototype.performSlicing = function (headers, slicedHeaders, startPos, axis) {\n        var pos = 0;\n        while (headers[pos]) {\n            this.memberCnt += axis === 'column' ? this.colValuesLength : this.rowValuesLength;\n            if (startPos <= this.memberCnt && this.endPos >= this.memberCnt && !this.pageInLimit) {\n                if (axis === 'column') {\n                    this.colFirstLvl = this.colFirstLvl + headers[pos].level;\n                }\n                else {\n                    this.rowFirstLvl = this.rowFirstLvl + headers[pos].level;\n                }\n                this.pageInLimit = true;\n            }\n            if (this.pageInLimit) {\n                if (this.endPos <= this.memberCnt) {\n                    if (axis === 'column') {\n                        if (headers[pos].members.length === 0) {\n                            if (this.colHdrBufferCalculated) {\n                                break;\n                            }\n                            this.colHdrBufferCalculated = true;\n                            this.endPos += (headers[pos].level * this.colValuesLength);\n                        }\n                        else if (this.colHdrBufferCalculated) {\n                            break;\n                        }\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            slicedHeaders.push(headers[pos].members.length > 0 ? this.removeChildMembers(headers[pos]) : headers[pos]);\n            if (headers[pos].members.length > 0) {\n                if (axis === 'column') {\n                    /* tslint:disable:no-any */\n                    this.memberCnt -= !(this.showSubTotals && this.showColumnSubTotals &&\n                        this.columnKeys[headers[pos].valueSort.axis].showSubTotals) ? this.colValuesLength : 0;\n                    /* tslint:enable:no-any */\n                }\n                slicedHeaders[slicedHeaders.length - 1].members =\n                    this.performSlicing(headers[pos].members, [], startPos, axis);\n            }\n            if (!this.pageInLimit) {\n                slicedHeaders.pop();\n            }\n            if (headers[pos].level === 0 && this.pageInLimit && this.endPos <= this.memberCnt) {\n                break;\n            }\n            pos++;\n        }\n        return slicedHeaders;\n    };\n    /* tslint:disable:no-any */\n    PivotEngine.prototype.removeChildMembers = function (member) {\n        var keys = Object.keys(member);\n        var keyPos = 0;\n        var framedMember = {};\n        /* tslint:disable:no-string-literal */\n        while (keyPos < keys.length) {\n            framedMember[keys[keyPos]] = member[keys[keyPos]];\n            if (keys[keyPos] === 'members') {\n                framedMember['members'] = [];\n            }\n            keyPos++;\n        }\n        /* tslint:enable:no-string-literal */\n        return framedMember;\n    };\n    PivotEngine.prototype.insertAllMember = function (set, filter, customText, axis) {\n        var len = set.length;\n        customText = ' Total';\n        set[len] = {\n            hasChild: false,\n            index: filter,\n            level: 0,\n            axis: axis,\n            isDrilled: false,\n            indexObject: {},\n            members: [],\n            formattedText: 'Grand' + customText,\n            ordinal: len,\n            type: 'grand sum',\n            valueSort: {}\n        };\n        set[len].valueSort[set[len].formattedText] = 1;\n        set[len].valueSort.levelName = set[len].formattedText;\n        for (var ln = 0, lt = filter.length; ln < lt; ln++) {\n            set[len].indexObject[filter[ln]] = filter[ln];\n        }\n        // if (axis === 'row') {\n        //     this.rowCount += this.rowValuesLength;\n        // } else {\n        //     this.columnCount += this.colValuesLength;\n        // }\n        return set;\n    };\n    /* tslint:enable:no-any */\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.getTableData = function (rows, reformAxis, columns, tnum, data, vlt, rTotal, cTotal) {\n        for (var rlt = rows.length, rln = 0; rln < rlt; rln++) {\n            tnum = data.length;\n            reformAxis[tnum] = rows[rln];\n            var actCnt = tnum - Number(Object.keys(reformAxis)[0]);\n            //let rplus: number = rln + 1;\n            //let lvl: number = rows[rln].level;\n            var isLeastNode = !reformAxis[tnum].members.length;\n            rows[rln].colIndex = 0;\n            rows[rln].rowIndex = tnum;\n            if (!data[tnum]) {\n                data[tnum] = [];\n                this.valueContent[actCnt] = {};\n                //data[tnum][0] = rows[rln].name;\n                data[tnum][0] = this.valueContent[actCnt][0] = this.frameHeaderWithKeys(rows[rln]);\n            }\n            else {\n                // data[tnum][0] = rows[rln].name;\n                data[tnum][0] = this.valueContent[actCnt][0] = this.frameHeaderWithKeys(rows[rln]);\n            }\n            if (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader)) {\n                var hpos = tnum;\n                var actpos = actCnt;\n                var rowIndex = tnum;\n                if (!(rows[rln].hasChild && ((!isNullOrUndefined(rows[rln].showSubTotals) &&\n                    !rows[rln].showSubTotals) || !this.showSubTotals || !this.showRowSubTotals))) {\n                    for (var vln = 0; vln < vlt; vln++) {\n                        tnum++;\n                        actCnt++;\n                        var name_1 = this.values[vln].caption ? this.values[vln].caption : this.values[vln].name;\n                        var calObj = {\n                            axis: 'row',\n                            actualText: this.values[vln].name,\n                            formattedText: name_1,\n                            level: 0,\n                            valueSort: {},\n                            colIndex: 0,\n                            rowIndex: tnum,\n                            type: 'value'\n                        };\n                        if (!data[tnum]) {\n                            data[tnum] = [];\n                            this.valueContent[actCnt] = {};\n                            data[tnum][0] = this.valueContent[actCnt][0] = calObj;\n                        }\n                        var vData = data[tnum][0].valueSort;\n                        /* tslint:disable-next-line:max-line-length */\n                        vData[data[tnum - vln - 1][0].valueSort.levelName + this.valueSortSettings.headerDelimiter + name_1] = 1;\n                        /* tslint:disable-next-line:max-line-length */\n                        vData.levelName = data[tnum - vln - 1][0].valueSort.levelName + this.valueSortSettings.headerDelimiter + name_1;\n                        for (var cln = 0, dln = 1, clt = columns.length; cln < clt; ++cln) {\n                            //for (let vln: number = 0; (!this.valueAxis && vln < vlt); vln++) {\n                            this.updateRowData(rows, columns, tnum, data, vln, rln, cln, dln, actCnt, rTotal, cTotal);\n                            dln = data[tnum].length;\n                            data[hpos][dln - 1] = this.valueContent[actpos][dln - 1] = {\n                                axis: 'value', actualText: '', colSpan: 1,\n                                colIndex: dln, formattedText: '', hasChild: false\n                            };\n                            // }\n                        }\n                    }\n                    rowIndex = tnum;\n                }\n                else {\n                    for (var cln = 0, dln = 1, clt = columns.length; cln < clt; ++cln) {\n                        dln = data[tnum].length;\n                        data[hpos][dln] = this.valueContent[actpos][dln] = {\n                            axis: 'value', actualText: '', colSpan: 1,\n                            colIndex: dln, formattedText: '', hasChild: false\n                        };\n                    }\n                    rowIndex = tnum + vlt;\n                }\n                this.recursiveRowData(rows, reformAxis, columns, rowIndex, data, vlt, isLeastNode, rln, vlt, rTotal, cTotal);\n            }\n            else {\n                for (var cln = 0, dln = 1, clt = columns.length; cln < clt; ++cln) {\n                    for (var vln = 0; vln < vlt; vln++) {\n                        this.updateRowData(rows, columns, tnum, data, vln, rln, cln, dln, actCnt, rTotal, cTotal);\n                        dln = data[tnum].length;\n                    }\n                }\n                this.recursiveRowData(rows, reformAxis, columns, tnum, data, vlt, isLeastNode, rln, 0, rTotal, cTotal);\n            }\n        }\n        /* for (let rlt: number = rows.length, rln: number = 0; rln < rlt; rln++) {\n            if (!data[rln]) {\n                data[rln] = [];\n                data[rln][0] = rows[rln].name;\n            } else {\n                data[rln][0] = rows[rln].name;\n            }\n            for (let cln: number = 0, dln: number = 1, clt: number = columns.length; cln < clt; dln = ++cln) {\n                data[rln][dln] = this.getAggregateValue(rows[rln].index, columns[cln].index, 11);\n            }\n        } */\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.getAggregatedHeaders = function (rows, columns, rMembers, cMembers, values) {\n        this.selectedHeaders = { selectedHeader: [], values: [] };\n        for (var vlt = values.length, vln = 0; vln < vlt; vln++) {\n            switch (values[vln].type) {\n                case 'DifferenceFrom':\n                case 'PercentageOfDifferenceFrom':\n                    {\n                        var baseField = void 0;\n                        var baseItem = void 0;\n                        this.selectedHeaders.values.push(values[vln].name);\n                        if (values[vln].baseField && values[vln].baseItem) {\n                            baseField = values[vln].baseField;\n                            baseItem = values[vln].baseItem;\n                        }\n                        else if (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) && columns.length > 0) {\n                            baseField = columns[0].name;\n                            baseItem = Object.keys(this.fieldList[columns[0].name].members)[0];\n                        }\n                        else if (rows.length > 0) {\n                            baseField = rows[0].name;\n                            baseItem = Object.keys(this.fieldList[rows[0].name].members)[0];\n                        }\n                        var isHeaderSelected = false;\n                        for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n                            var row = rows_2[_i];\n                            if (row.name === baseField) {\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rMembers, values[vln].name, baseItem, false, 'row', values[vln].type, this.selectedHeaders.selectedHeader, vln);\n                                isHeaderSelected = true;\n                                break;\n                            }\n                        }\n                        if (!isHeaderSelected) {\n                            for (var _a = 0, columns_1 = columns; _a < columns_1.length; _a++) {\n                                var column = columns_1[_a];\n                                if (column.name === baseField) {\n                                    /* tslint:disable-next-line:max-line-length */\n                                    this.getAggregatedHeaderData(cMembers, values[vln].name, baseItem, false, 'column', values[vln].type, this.selectedHeaders.selectedHeader, vln);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 'PercentageOfParentRowTotal':\n                case 'PercentageOfParentColumnTotal':\n                    {\n                        this.selectedHeaders.values.push(values[vln].name);\n                        /* tslint:disable-next-line:max-line-length */\n                        this.getAggregatedHeaderData((values[vln].type === 'PercentageOfParentRowTotal' ? rMembers : cMembers), values[vln].name, undefined, false, (values[vln].type === 'PercentageOfParentRowTotal' ? 'row' : 'column'), values[vln].type, this.selectedHeaders.selectedHeader, vln);\n                    }\n                    break;\n                case 'RunningTotals':\n                    {\n                        this.selectedHeaders.values.push(values[vln].name);\n                        /* tslint:disable-next-line:max-line-length */\n                        this.getAggregatedHeaderData((this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) ? cMembers : rMembers), values[vln].name, undefined, false, (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) ? 'column' : 'row'), values[vln].type, this.selectedHeaders.selectedHeader, vln);\n                    }\n                    break;\n                case 'PercentageOfParentTotal':\n                    {\n                        var baseField = void 0;\n                        this.selectedHeaders.values.push(values[vln].name);\n                        if (values[vln].baseField) {\n                            baseField = values[vln].baseField;\n                        }\n                        else if (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) && columns.length > 0) {\n                            baseField = columns[0].name;\n                        }\n                        else if (rows.length > 0) {\n                            baseField = rows[0].name;\n                        }\n                        var isHeaderSelected = false;\n                        for (var len = rows.length, i = 0; i < len; i++) {\n                            if (rows[i].name === baseField) {\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rMembers, values[vln].name, undefined, false, 'row', values[vln].type, this.selectedHeaders.selectedHeader, vln, i);\n                                isHeaderSelected = true;\n                                break;\n                            }\n                        }\n                        if (!isHeaderSelected) {\n                            for (var len = columns.length, i = 0; i < len; i++) {\n                                if (columns[i].name === baseField) {\n                                    /* tslint:disable-next-line:max-line-length */\n                                    this.getAggregatedHeaderData(cMembers, values[vln].name, undefined, false, 'column', values[vln].type, this.selectedHeaders.selectedHeader, vln, i);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.getAggregatedHeaderData = function (headers, name, baseItem, isChildren, type, aggregateType, selectedHeaders, vln, level) {\n        for (var _i = 0, headers_1 = headers; _i < headers_1.length; _i++) {\n            var rln = headers_1[_i];\n            switch (aggregateType) {\n                case 'DifferenceFrom':\n                case 'PercentageOfDifferenceFrom':\n                    {\n                        var levelName = rln.valueSort.levelName.toString().split(this.valueSortSettings.headerDelimiter);\n                        if (levelName.indexOf(baseItem) !== -1) {\n                            /* tslint:disable-next-line:max-line-length */\n                            selectedHeaders.push(this.updateSelectedHeaders(baseItem, rln.level, type, isChildren, name, aggregateType, rln.valueSort.levelName, (isChildren ? [rln] : headers), vln + 1));\n                            if (rln.members.length > 0) {\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rln.members, name, baseItem, true, type, aggregateType, selectedHeaders[selectedHeaders.length - 1].childMembers, vln);\n                            }\n                        }\n                        else if (rln.members.length > 0) {\n                            this.getAggregatedHeaderData(rln.members, name, baseItem, false, type, aggregateType, selectedHeaders, vln);\n                        }\n                    }\n                    break;\n                case 'RunningTotals':\n                case 'PercentageOfParentRowTotal':\n                case 'PercentageOfParentColumnTotal':\n                    {\n                        if (rln.type === 'grand sum') {\n                            /* tslint:disable-next-line:max-line-length */\n                            selectedHeaders.push(this.updateSelectedHeaders(undefined, rln.level, type, false, name, aggregateType, rln.valueSort.levelName, headers, vln + 1));\n                        }\n                        else {\n                            if (rln.members.length > 0) {\n                                /* tslint:disable-next-line:max-line-length */\n                                selectedHeaders.push(this.updateSelectedHeaders(undefined, rln.level, type, false, name, aggregateType, rln.valueSort.levelName, rln.members, vln + 1));\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rln.members, name, undefined, false, type, aggregateType, selectedHeaders, vln);\n                            }\n                        }\n                    }\n                    break;\n                case 'PercentageOfParentTotal':\n                    {\n                        if (rln.type !== 'grand sum') {\n                            if (rln.level === level) {\n                                if (rln.members.length > 0) {\n                                    if (isChildren) {\n                                        var aggregateHeaders = selectedHeaders[selectedHeaders.length - 1].aggregateHeaders;\n                                        for (var _a = 0, _b = rln.members; _a < _b.length; _a++) {\n                                            var member = _b[_a];\n                                            aggregateHeaders.push(member);\n                                        }\n                                    }\n                                    else {\n                                        var children = extend([], rln.members, null, true);\n                                        /* tslint:disable-next-line:max-line-length */\n                                        selectedHeaders.push(this.updateSelectedHeaders(undefined, rln.level, type, false, name, aggregateType, rln.valueSort.levelName, children, vln + 1));\n                                        var aggregateHeaders = selectedHeaders[selectedHeaders.length - 1].aggregateHeaders;\n                                        aggregateHeaders.push(rln);\n                                    }\n                                    /* tslint:disable-next-line:max-line-length */\n                                    this.getAggregatedHeaderData(rln.members, name, undefined, true, type, aggregateType, selectedHeaders, vln, level + 1);\n                                }\n                                else {\n                                    if (!isChildren) {\n                                        /* tslint:disable-next-line:max-line-length */\n                                        selectedHeaders.push(this.updateSelectedHeaders(undefined, rln.level, type, false, name, aggregateType, rln.valueSort.levelName, [rln], vln + 1));\n                                    }\n                                }\n                            }\n                            else if (rln.members.length > 0) {\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rln.members, name, undefined, false, type, aggregateType, selectedHeaders, vln, level);\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.updateSelectedHeaders = function (baseItem, level, type, isChildren, name, aggregateType, levelName, headers, vCount) {\n        var headerData = {\n            name: baseItem,\n            level: level,\n            axis: type,\n            isChild: isChildren,\n            value: name,\n            type: aggregateType,\n            uniqueName: levelName,\n            aggregateHeaders: headers,\n            childMembers: [],\n            valueCount: vCount\n        };\n        return headerData;\n    };\n    PivotEngine.prototype.applyAdvancedAggregate = function (rowheads, colheads, data) {\n        this.aggregatedValueMatrix = [];\n        if (this.selectedHeaders.values.length > 0) {\n            var pivotIndex = {};\n            var colIndex = [];\n            var isIndexFilled = false;\n            for (var rlt = data.length, rln = 0; rln < rlt; rln++) {\n                if (data[rln] !== undefined && data[rln][0] !== undefined) {\n                    if (!isIndexFilled) {\n                        for (var clt = data[rln].length, cln = 0; cln < clt; cln++) {\n                            if (data[rln][cln].axis === 'value' &&\n                                this.selectedHeaders.values.indexOf(data[rln][cln].actualText) !== -1) {\n                                colIndex.push(cln);\n                                isIndexFilled = true;\n                            }\n                        }\n                    }\n                    if (colIndex.length > 0 && data[rln][colIndex[0]].axis === 'value' &&\n                        this.selectedHeaders.values.indexOf(data[rln][colIndex[0]].actualText) !== -1) {\n                        for (var _i = 0, colIndex_1 = colIndex; _i < colIndex_1.length; _i++) {\n                            var index = colIndex_1[_i];\n                            pivotIndex[rln + ',' + index] = [rln, index];\n                        }\n                    }\n                }\n            }\n            this.updateAggregates(rowheads, colheads, data, this.selectedHeaders.selectedHeader, colIndex, pivotIndex);\n            var indexCollection = Object.keys(pivotIndex);\n            for (var _a = 0, indexCollection_1 = indexCollection; _a < indexCollection_1.length; _a++) {\n                var index = indexCollection_1[_a];\n                var currentSet = data[pivotIndex[index][0]][pivotIndex[index][1]];\n                // currentSet.formattedText = '0';\n                currentSet.formattedText = (this.selectedHeaders.selectedHeader.length > 0 ? this.emptyCellTextContent : '#N/A');\n                if (!this.aggregatedValueMatrix[pivotIndex[index][0]]) {\n                    this.aggregatedValueMatrix[pivotIndex[index][0]] = [];\n                }\n                this.aggregatedValueMatrix[pivotIndex[index][0]][pivotIndex[index][1]] = 0;\n            }\n            this.updatePivotValues(true);\n        }\n        else {\n            return;\n        }\n    };\n    /* tslint:disable:all */\n    PivotEngine.prototype.updateAggregates = function (rowheads, colheads, data, selectedHeaders, colIndex, pivotIndex) {\n        for (var _i = 0, selectedHeaders_1 = selectedHeaders; _i < selectedHeaders_1.length; _i++) {\n            var headers = selectedHeaders_1[_i];\n            var selectedHeaderCollection = headers.aggregateHeaders;\n            var name_2 = headers.value;\n            var valueCount = (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) ? headers.valueCount : 0);\n            var aggregateType = headers.type;\n            var uniqueName = headers.uniqueName;\n            var axis = headers.axis;\n            var isRowBaseField = axis === 'row' ? true : false;\n            var activeValues = void 0;\n            var indexCollection = [];\n            var activeColumn = [];\n            var columnHeaders = [];\n            var rowindexCollection = [];\n            var selectedRowValues = [];\n            var selectedColumnValues = [];\n            if ((['DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentTotal', 'RunningTotals']).indexOf(headers.type) !== -1) {\n                if (isRowBaseField) {\n                    if (headers.type !== 'RunningTotals') {\n                        for (var rlt = rowheads.length, rln = 0; rln < rlt; rln++) {\n                            if (rowheads[rln] !== undefined) {\n                                if (rowheads[rln].valueSort[uniqueName]) {\n                                    activeValues = rowheads[rln];\n                                    if (this.valueAxis === 0 || (this.valueAxis && data[rln + valueCount] &&\n                                        data[rln + valueCount][0].actualText === name_2)) {\n                                        selectedRowValues = data[rln + valueCount];\n                                    }\n                                    else {\n                                        selectedRowValues = [];\n                                    }\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    for (var len_6 = data.length, i = 0; i < len_6; i++) {\n                        if (data[i] !== undefined && data[i][0] === undefined) {\n                            columnHeaders.push(data[i]);\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    var len = columnHeaders.length;\n                    while (len--) {\n                        var axisObj = columnHeaders[len][colIndex[0]];\n                        var cLevelName = axisObj.actualText;\n                        if (this.selectedHeaders.values.indexOf(cLevelName) === -1) {\n                            activeColumn = columnHeaders[len];\n                            len = 0;\n                        }\n                    }\n                    if (headers.type !== 'RunningTotals') {\n                        for (var clt = activeColumn.length, cln = 0; cln < clt; cln++) {\n                            var isSelectedColumn = false;\n                            if (activeColumn[cln] !== undefined && activeColumn[cln].valueSort[uniqueName]) {\n                                activeValues = activeColumn[cln];\n                                for (var len_7 = data.length, i = 0; i < len_7; i++) {\n                                    var axisObj = data[i];\n                                    if (axisObj !== undefined && axisObj[0] !== undefined &&\n                                        axisObj[cln].axis === 'value' &&\n                                        this.selectedHeaders.values.indexOf(axisObj[cln].actualText) !== -1) {\n                                        isSelectedColumn = true;\n                                        selectedColumnValues[i] = axisObj[cln];\n                                        rowindexCollection.push(i);\n                                    }\n                                }\n                                if (isSelectedColumn) {\n                                    break;\n                                }\n                            }\n                        }\n                        if (selectedColumnValues.length === 0 && rowindexCollection.length === 0) {\n                            for (var clt = activeColumn.length, cln = 0; cln < clt; cln++) {\n                                var isSelectedColumn = false;\n                                if (activeColumn[cln] !== undefined && activeColumn[cln].valueSort.levelName.indexOf(uniqueName) === 0) {\n                                    activeValues = activeColumn[cln];\n                                    for (var lnt = data.length, j = 0; j < lnt; j++) {\n                                        var axisObj = data[j];\n                                        if (axisObj !== undefined && axisObj[0] !== undefined &&\n                                            axisObj[cln].axis === 'value' &&\n                                            this.selectedHeaders.values.indexOf(axisObj[cln].actualText) !== -1) {\n                                            isSelectedColumn = true;\n                                            // selectedColumnValues[i] = axisObj[cln] as IAxisSet;\n                                            rowindexCollection.push(j);\n                                        }\n                                    }\n                                    if (isSelectedColumn) {\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            switch (headers.type) {\n                case 'DifferenceFrom':\n                case 'PercentageOfDifferenceFrom':\n                    {\n                        var isChildren = headers.isChild;\n                        if (isRowBaseField) {\n                            if (!isChildren) {\n                                for (var _a = 0, selectedHeaderCollection_1 = selectedHeaderCollection; _a < selectedHeaderCollection_1.length; _a++) {\n                                    var item = selectedHeaderCollection_1[_a];\n                                    for (var rlt = rowheads.length, rln = 0; rln < rlt; rln++) {\n                                        if (rowheads[rln] !== undefined) {\n                                            if (rowheads[rln].valueSort[item.valueSort.levelName] &&\n                                                rowheads[rln].level === activeValues.level && rowheads[rln].type !== 'grand sum') {\n                                                for (var _b = 0, colIndex_2 = colIndex; _b < colIndex_2.length; _b++) {\n                                                    var index = colIndex_2[_b];\n                                                    var currentSet = data[rln + valueCount][index];\n                                                    if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                        indexCollection.push([rln + valueCount, index]);\n                                                        if (pivotIndex[rln + valueCount + ',' + index]) {\n                                                            delete pivotIndex[rln + valueCount + ',' + index];\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                var uniqueLevelName = uniqueName.split(this.valueSortSettings.headerDelimiter);\n                                for (var rlt = rowheads.length, rlen = 0; rlen < rlt; rlen++) {\n                                    if (rowheads[rlen] !== undefined) {\n                                        var levelName = rowheads[rlen].valueSort.levelName.split(this.valueSortSettings.headerDelimiter);\n                                        if (levelName.indexOf(uniqueLevelName[uniqueLevelName.length - 1]) !== -1 &&\n                                            rowheads[rlen].level === activeValues.level) {\n                                            for (var _c = 0, colIndex_3 = colIndex; _c < colIndex_3.length; _c++) {\n                                                var index = colIndex_3[_c];\n                                                var currentSet = data[rlen + valueCount][index];\n                                                if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                    indexCollection.push([rlen + valueCount, index]);\n                                                    if (pivotIndex[rlen + valueCount + ',' + index]) {\n                                                        delete pivotIndex[rlen + valueCount + ',' + index];\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            for (var _d = 0, indexCollection_2 = indexCollection; _d < indexCollection_2.length; _d++) {\n                                var index = indexCollection_2[_d];\n                                var currentSet = data[index[0]][index[1]];\n                                // let cVal: number = currentSet.value - (selectedRowValues[index[1]] as IAxisSet).value;\n                                var cVal = currentSet.actualValue - selectedRowValues[index[1]].actualValue;\n                                cVal = isNaN(cVal) ? 0 : (currentSet.value === 0 && selectedRowValues[index[1]].value === 0) ? 0 : cVal;\n                                if (!this.aggregatedValueMatrix[index[0]]) {\n                                    this.aggregatedValueMatrix[index[0]] = [];\n                                }\n                                if (aggregateType === 'DifferenceFrom') {\n                                    this.aggregatedValueMatrix[index[0]][index[1]] = cVal;\n                                    currentSet.formattedText = cVal === 0 ? this.emptyCellTextContent : this.getFormattedValue(cVal, name_2).formattedText;\n                                }\n                                else {\n                                    // cVal = ((selectedRowValues[index[1]] as IAxisSet).value === 0 ?\n                                    // 0 : (cVal / (selectedRowValues[index[1]] as IAxisSet).value));\n                                    cVal = (selectedRowValues[index[1]].actualValue === 0 ?\n                                        0 : (cVal / selectedRowValues[index[1]].actualValue));\n                                    this.aggregatedValueMatrix[index[0]][index[1]] = cVal;\n                                    currentSet.formattedText = (cVal !== 0 ? this.globalize.formatNumber(cVal, { format: 'P', maximumFractionDigits: 2 }) : this.emptyCellTextContent);\n                                }\n                            }\n                        }\n                        else {\n                            if (!isChildren) {\n                                for (var _e = 0, selectedHeaderCollection_2 = selectedHeaderCollection; _e < selectedHeaderCollection_2.length; _e++) {\n                                    var item = selectedHeaderCollection_2[_e];\n                                    for (var clt = activeColumn.length, cln = 0; cln < clt; cln++) {\n                                        var isSelectedColumn = false;\n                                        if (activeColumn[cln] !== undefined &&\n                                            activeColumn[cln].valueSort[item.valueSort.levelName] &&\n                                            activeColumn[cln].level === activeValues.level && activeColumn[cln].type !== 'grand sum') {\n                                            for (var _f = 0, rowindexCollection_1 = rowindexCollection; _f < rowindexCollection_1.length; _f++) {\n                                                var index = rowindexCollection_1[_f];\n                                                var currentSet = data[index][cln];\n                                                if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                    isSelectedColumn = true;\n                                                    indexCollection.push([index, cln]);\n                                                    if (pivotIndex[index + ',' + cln]) {\n                                                        delete pivotIndex[index + ',' + cln];\n                                                    }\n                                                }\n                                            }\n                                            if (isSelectedColumn) {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                var uniqueLevelName = uniqueName.split(this.valueSortSettings.headerDelimiter);\n                                for (var clt = activeColumn.length, clen = 0; clen < clt; clen++) {\n                                    var isSelectedColumn = false;\n                                    if (activeColumn[clen] !== undefined) {\n                                        var levelName = activeColumn[clen].valueSort.levelName.split(this.valueSortSettings.headerDelimiter);\n                                        if (levelName.indexOf(uniqueLevelName[uniqueLevelName.length - 1]) !== -1 &&\n                                            activeColumn[clen].level === activeValues.level) {\n                                            for (var _g = 0, rowindexCollection_2 = rowindexCollection; _g < rowindexCollection_2.length; _g++) {\n                                                var index = rowindexCollection_2[_g];\n                                                var currentSet = data[index][clen];\n                                                if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                    isSelectedColumn = true;\n                                                    indexCollection.push([index, clen]);\n                                                    if (pivotIndex[index + ',' + clen]) {\n                                                        delete pivotIndex[index + ',' + clen];\n                                                    }\n                                                }\n                                            }\n                                            if (isSelectedColumn) {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            var selectedColumn = void 0;\n                            if (selectedColumnValues.length === 0) {\n                                selectedColumn = this.getSelectedColumn(headers.uniqueName, colheads);\n                            }\n                            for (var _h = 0, indexCollection_3 = indexCollection; _h < indexCollection_3.length; _h++) {\n                                var index = indexCollection_3[_h];\n                                var currentSet = data[index[0]][index[1]];\n                                var selectedColumnValue = 0;\n                                if (selectedColumnValues.length === 0) {\n                                    var selectedRow = this.getSelectedRow(currentSet.rowHeaders, rowheads);\n                                    selectedColumnValue = this.getAggregateValue(selectedRow.index, selectedColumn.indexObject, this.fieldList[name_2].index, headers.type);\n                                }\n                                else {\n                                    selectedColumnValue = selectedColumnValues[index[0]].value;\n                                }\n                                var cVal = currentSet.value - selectedColumnValue;\n                                cVal = isNaN(cVal) ? 0 : cVal;\n                                if (!this.aggregatedValueMatrix[index[0]]) {\n                                    this.aggregatedValueMatrix[index[0]] = [];\n                                }\n                                if (aggregateType === 'DifferenceFrom') {\n                                    currentSet.formattedText = cVal === 0 ? this.emptyCellTextContent : this.getFormattedValue(cVal, name_2).formattedText;\n                                    this.aggregatedValueMatrix[index[0]][index[1]] = cVal;\n                                }\n                                else {\n                                    cVal = (selectedColumnValues[index[0]].value === 0 ?\n                                        0 : (cVal / selectedColumnValues[index[0]].value));\n                                    currentSet.formattedText = (cVal !== 0 ? this.globalize.formatNumber(cVal, { format: 'P', maximumFractionDigits: 2 }) : this.emptyCellTextContent);\n                                    this.aggregatedValueMatrix[index[0]][index[1]] = cVal;\n                                }\n                            }\n                        }\n                        if (headers.childMembers.length > 0) {\n                            this.updateAggregates(rowheads, colheads, data, headers.childMembers, colIndex, pivotIndex);\n                        }\n                    }\n                    break;\n                case 'PercentageOfParentRowTotal':\n                case 'PercentageOfParentColumnTotal':\n                case 'PercentageOfParentTotal':\n                    {\n                        if (isRowBaseField) {\n                            for (var _j = 0, selectedHeaderCollection_3 = selectedHeaderCollection; _j < selectedHeaderCollection_3.length; _j++) {\n                                var item = selectedHeaderCollection_3[_j];\n                                for (var rlt = rowheads.length, i = 0; i < rlt; i++) {\n                                    if (rowheads[i] !== undefined) {\n                                        if (rowheads[i].valueSort[item.valueSort.levelName] &&\n                                            rowheads[i].level === item.level) {\n                                            for (var _k = 0, colIndex_4 = colIndex; _k < colIndex_4.length; _k++) {\n                                                var index = colIndex_4[_k];\n                                                var currentSet = data[i + valueCount][index];\n                                                if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                    indexCollection.push([i + valueCount, index]);\n                                                    if (pivotIndex[i + valueCount + ',' + index]) {\n                                                        delete pivotIndex[i + valueCount + ',' + index];\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            for (var _l = 0, indexCollection_4 = indexCollection; _l < indexCollection_4.length; _l++) {\n                                var i = indexCollection_4[_l];\n                                var currentSet = data[i[0]][i[1]];\n                                // let cVal: number = currentSet.value / (selectedRowValues[i[1]] as IAxisSet).value;\n                                var selectedRowValue = 0;\n                                if (selectedRowValues.length === 0 && activeValues) {\n                                    selectedRowValue = this.getAggregateValue(activeValues.index, colheads[i[1] - 1].indexObject, this.fieldList[name_2].index, headers.type);\n                                }\n                                else {\n                                    selectedRowValue = selectedRowValues[i[1]].actualValue;\n                                }\n                                var cVal = currentSet.value / selectedRowValue;\n                                cVal = isNaN(cVal) ? 0 : cVal;\n                                currentSet.formattedText = (cVal !== 0 ? this.globalize.formatNumber(cVal, { format: 'P', maximumFractionDigits: 2 }) : this.emptyCellTextContent);\n                                if (!this.aggregatedValueMatrix[i[0]]) {\n                                    this.aggregatedValueMatrix[i[0]] = [];\n                                }\n                                this.aggregatedValueMatrix[i[0]][i[1]] = cVal;\n                            }\n                        }\n                        else {\n                            for (var _m = 0, selectedHeaderCollection_4 = selectedHeaderCollection; _m < selectedHeaderCollection_4.length; _m++) {\n                                var item = selectedHeaderCollection_4[_m];\n                                for (var clt = activeColumn.length, j = 0; j < clt; j++) {\n                                    var isSelectedColumn = false;\n                                    if (activeColumn[j] !== undefined &&\n                                        activeColumn[j].valueSort[item.valueSort.levelName]) {\n                                        for (var _o = 0, rowindexCollection_3 = rowindexCollection; _o < rowindexCollection_3.length; _o++) {\n                                            var index = rowindexCollection_3[_o];\n                                            var currentSet = data[index][j];\n                                            if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                isSelectedColumn = true;\n                                                indexCollection.push([index, j]);\n                                                if (pivotIndex[index + ',' + j]) {\n                                                    delete pivotIndex[index + ',' + j];\n                                                }\n                                            }\n                                        }\n                                        if (isSelectedColumn) {\n                                            break;\n                                        }\n                                    }\n                                }\n                            }\n                            var selectedCol = void 0;\n                            if (selectedColumnValues.length === 0) {\n                                selectedCol = this.getSelectedColumn(headers.uniqueName, colheads);\n                            }\n                            for (var _p = 0, indexCollection_5 = indexCollection; _p < indexCollection_5.length; _p++) {\n                                var i = indexCollection_5[_p];\n                                var currentSet = data[i[0]][i[1]];\n                                var selectedColValue = 0;\n                                if (selectedColumnValues.length === 0) {\n                                    var selectedRow = this.getSelectedRow(currentSet.rowHeaders, rowheads);\n                                    selectedColValue = this.getAggregateValue(selectedRow.index, selectedCol.indexObject, this.fieldList[name_2].index, headers.type);\n                                }\n                                else {\n                                    selectedColValue = selectedColumnValues[i[0]].value;\n                                }\n                                var val = currentSet.value / selectedColValue;\n                                val = isNaN(val) ? 0 : val;\n                                currentSet.formattedText = (val !== 0 ? this.globalize.formatNumber(val, { format: 'P', maximumFractionDigits: 2 }) : this.emptyCellTextContent);\n                                if (!this.aggregatedValueMatrix[i[0]]) {\n                                    this.aggregatedValueMatrix[i[0]] = [];\n                                }\n                                this.aggregatedValueMatrix[i[0]][i[1]] = val;\n                            }\n                        }\n                    }\n                    break;\n                case 'RunningTotals':\n                    {\n                        if (isRowBaseField) {\n                            for (var _q = 0, colIndex_5 = colIndex; _q < colIndex_5.length; _q++) {\n                                var index = colIndex_5[_q];\n                                var cVal = 0;\n                                for (var _r = 0, selectedHeaderCollection_5 = selectedHeaderCollection; _r < selectedHeaderCollection_5.length; _r++) {\n                                    var item = selectedHeaderCollection_5[_r];\n                                    for (var rlt = rowheads.length, rlen = 0; rlen < rlt; rlen++) {\n                                        if (rowheads[rlen] !== undefined) {\n                                            var currentSet = data[rlen + valueCount][index];\n                                            if (rowheads[rlen] !== undefined && rowheads[rlen].valueSort[item.valueSort.levelName] &&\n                                                rowheads[rlen].level === item.level && currentSet.axis === 'value' &&\n                                                currentSet.actualText === name_2) {\n                                                if (rowheads[rlen].type !== 'grand sum') {\n                                                    cVal += currentSet.value;\n                                                    currentSet.formattedText = (cVal === 0 && (currentSet.actualValue && currentSet.actualValue !== 0) ? '' :\n                                                        this.getFormattedValue(cVal, name_2).formattedText);\n                                                    if (!this.aggregatedValueMatrix[rlen + valueCount]) {\n                                                        this.aggregatedValueMatrix[rlen + valueCount] = [];\n                                                    }\n                                                    this.aggregatedValueMatrix[rlen + valueCount][index] = cVal;\n                                                }\n                                                if (pivotIndex[rlen + valueCount + ',' + index]) {\n                                                    delete pivotIndex[rlen + valueCount + ',' + index];\n                                                }\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            for (var rlt = rowheads.length, rln = 0; rln < rlt; rln++) {\n                                if (rowheads[rln] !== undefined) {\n                                    var cVal = 0;\n                                    for (var _s = 0, selectedHeaderCollection_6 = selectedHeaderCollection; _s < selectedHeaderCollection_6.length; _s++) {\n                                        var item = selectedHeaderCollection_6[_s];\n                                        for (var clt = activeColumn.length, cln = 0; cln < clt; cln++) {\n                                            var currentSet = data[rln + valueCount][cln];\n                                            if (activeColumn[cln] !== undefined &&\n                                                activeColumn[cln].valueSort[item.valueSort.levelName] &&\n                                                currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                if (activeColumn[cln].type !== 'grand sum') {\n                                                    cVal += currentSet.value;\n                                                    currentSet.formattedText = this.getFormattedValue(cVal, name_2).formattedText;\n                                                    if (!this.aggregatedValueMatrix[rln + valueCount]) {\n                                                        this.aggregatedValueMatrix[rln + valueCount] = [];\n                                                    }\n                                                    this.aggregatedValueMatrix[rln + valueCount][cln] = cVal;\n                                                }\n                                                if (pivotIndex[rln + valueCount + ',' + cln]) {\n                                                    delete pivotIndex[rln + valueCount + ',' + cln];\n                                                }\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    PivotEngine.prototype.getSelectedColumn = function (name, colheads) {\n        var set = { axis: 'column', index: [], indexObject: {} };\n        for (var _i = 0, colheads_1 = colheads; _i < colheads_1.length; _i++) {\n            var head = colheads_1[_i];\n            if (head && head.valueSort && head.valueSort.levelName.indexOf(name) === 0) {\n                set.index = set.index.concat(head.index).sort(function (a, b) { return a - b; });\n                set.indexObject = __assign({}, set.indexObject, head.indexObject);\n            }\n        }\n        return set;\n    };\n    PivotEngine.prototype.getSelectedRow = function (name, rowheads) {\n        for (var _i = 0, rowheads_1 = rowheads; _i < rowheads_1.length; _i++) {\n            var head = rowheads_1[_i];\n            if (head) {\n                if (head.valueSort && head.valueSort.levelName === name) {\n                    return head;\n                }\n                else if (name === '' && head.type === 'grand sum') {\n                    return head;\n                }\n            }\n        }\n        return null;\n    };\n    /* tslint:enable:all */\n    PivotEngine.prototype.recursiveRowData = function (rows, reformAxis, columns, tnum, data, vlt, isLeastNode, rln, vln, rTotal, cTotal) {\n        if (!isLeastNode) {\n            this.getTableData(reformAxis[tnum - vln].members, reformAxis, columns, tnum, data, vlt, rTotal, cTotal);\n        }\n        if (!this.pageSettings) {\n            reformAxis[tnum - vln].members = [];\n        }\n    };\n    PivotEngine.prototype.updateRowData = function (rows, columns, tnum, data, vln, rln, cln, dln, actCnt, rTotal, cTotal) {\n        var mPos = this.fieldList[this.values[vln].name].index;\n        var aggregate = this.fieldList[this.values[vln].name].aggregateType;\n        var field = this.values[vln].name;\n        var gTotalIndex = [];\n        var totalValues = {};\n        var value = 0;\n        var actualValue = 0;\n        // let isLeast: boolean = isLeastNode && (vln === vlt - 1);\n        switch (aggregate) {\n            case 'Index':\n                {\n                    gTotalIndex = [[rows[rln], columns[cln]], [rows[rln], cTotal], [rTotal, columns[cln]], [rTotal, cTotal]];\n                    var valueContent = ['cVal', 'rTotalVal', 'cTotalVal', 'gTotalVal'];\n                    var i = 0;\n                    for (var _i = 0, gTotalIndex_1 = gTotalIndex; _i < gTotalIndex_1.length; _i++) {\n                        var rIndex = gTotalIndex_1[_i];\n                        totalValues[valueContent[i]] = this.getAggregateValue((rIndex[0]).index, (rIndex[1]).indexObject, mPos, aggregate);\n                        i++;\n                    }\n                    var val_1 = ((totalValues.cVal) * (totalValues.gTotalVal)) / ((totalValues.rTotalVal) * (totalValues.cTotalVal));\n                    value = (rows[rln].members.length > 0 && ((!isNullOrUndefined(rows[rln].showSubTotals) && !rows[rln].showSubTotals) ||\n                        !this.showRowSubTotals || !this.showSubTotals)) ? undefined :\n                        (isNullOrUndefined(totalValues.cVal) ? totalValues.cVal : (isNaN(val_1) ? 0 : val_1));\n                    actualValue = (isNullOrUndefined(totalValues.cVal) ? totalValues.cVal : (isNaN(val_1) ? 0 : val_1));\n                }\n                break;\n            case 'PercentageOfGrandTotal':\n            case 'PercentageOfColumnTotal':\n            case 'PercentageOfRowTotal':\n                {\n                    gTotalIndex = [[rows[rln], columns[cln]]];\n                    gTotalIndex.push((aggregate === 'PercentageOfGrandTotal' ?\n                        [rTotal, cTotal] : (aggregate === 'PercentageOfColumnTotal' ? [rTotal, columns[cln]] : [rows[rln], cTotal])));\n                    var valueContent = ['cVal', 'gTotalVal'];\n                    var i = 0;\n                    for (var _a = 0, gTotalIndex_2 = gTotalIndex; _a < gTotalIndex_2.length; _a++) {\n                        var rIndex = gTotalIndex_2[_a];\n                        totalValues[valueContent[i]] = this.getAggregateValue((rIndex[0]).index, (rIndex[1]).indexObject, mPos, aggregate);\n                        i++;\n                    }\n                    var val_2 = ((totalValues.cVal) / (totalValues.gTotalVal));\n                    value = (rows[rln].members.length > 0 && ((!isNullOrUndefined(rows[rln].showSubTotals) && !rows[rln].showSubTotals) ||\n                        !this.showSubTotals || !this.showRowSubTotals)) ? undefined :\n                        (isNullOrUndefined(totalValues.cVal) ? totalValues.cVal : (isNaN(val_2) ? 0 : val_2));\n                    actualValue = (isNullOrUndefined(totalValues.cVal) ? totalValues.cVal : (isNaN(val_2) ? 0 : val_2));\n                }\n                break;\n            default:\n                var val = this.getAggregateValue(rows[rln].index, columns[cln].indexObject, mPos, aggregate);\n                value = (rows[rln].members.length > 0 && ((!isNullOrUndefined(rows[rln].showSubTotals) && !rows[rln].showSubTotals) ||\n                    !this.showSubTotals || !this.showRowSubTotals)) ? undefined : val;\n                actualValue = val;\n                break;\n        }\n        var cellDetails = {\n            fieldName: this.values[vln].name,\n            row: rows[rln],\n            column: columns[cln],\n            value: value,\n            cellSets: this.getCellSet(this.rawIndexObject),\n            /* tslint:disable-next-line:max-line-length */\n            rowCellType: (rows[rln].hasChild && rows[rln].isDrilled ? 'subTotal' : rows[rln].type === 'grand sum' ? 'grandTotal' : 'value'),\n            /* tslint:disable-next-line:max-line-length */\n            columnCellType: (columns[cln].hasChild && columns[cln].isDrilled ? 'subTotal' : columns[cln].type === 'grand sum' ? 'grandTotal' : 'value'),\n            aggregateType: aggregate,\n            skipFormatting: false\n        };\n        if (this.getValueCellInfo) {\n            this.getValueCellInfo(cellDetails);\n        }\n        value = cellDetails.value;\n        var isSum = rows[rln].hasChild || columns[cln].hasChild ||\n            rows[rln].type === 'grand sum' || columns[cln].type === 'grand sum';\n        var isGrand = rows[rln].type === 'grand sum' || columns[cln].type === 'grand sum';\n        var subTotal = (rows[rln].members.length > 0 && ((!isNullOrUndefined(rows[rln].showSubTotals) &&\n            !rows[rln].showSubTotals) || !this.showSubTotals || !this.showRowSubTotals));\n        var formattedText = subTotal ?\n            '' : (value === undefined) ? this.emptyCellTextContent :\n            (aggregate === 'Count' || aggregate === 'DistinctCount') ? value.toLocaleString() :\n                this.getFormattedValue(value, field).formattedText;\n        if (!isNaN(value) && !isNullOrUndefined(value) &&\n            (['PercentageOfGrandTotal', 'PercentageOfColumnTotal', 'PercentageOfRowTotal']).indexOf(aggregate) >= 0) {\n            formattedText = this.globalize.formatNumber(value, { format: 'P', maximumFractionDigits: 2 });\n        }\n        else if (!subTotal &&\n            isNaN(value) && !isNullOrUndefined(value) &&\n            (['PopulationStDev', 'SampleStDev', 'PopulationVar', 'SampleVar']).indexOf(aggregate) !== -1) {\n            formattedText = '#DIV/0!';\n        }\n        //dln = data[tnum].length;\n        /* tslint:disable-next-line:max-line-length */\n        formattedText = (cellDetails.skipFormatting ? isNullOrUndefined(value) ? this.emptyCellTextContent : value.toString() : formattedText);\n        data[tnum][dln] = this.valueContent[actCnt][dln] = {\n            axis: 'value', actualText: field, indexObject: this.isDrillThrough ? this.rawIndexObject : {},\n            rowHeaders: rows[rln].type === 'grand sum' ? '' : rows[rln].valueSort.levelName,\n            columnHeaders: columns[cln].type === 'grand sum' ? '' : columns[cln].valueSort.levelName,\n            formattedText: formattedText, value: isNullOrUndefined(value) ? 0 : value,\n            actualValue: isNullOrUndefined(actualValue) ? 0 : actualValue,\n            rowIndex: tnum, colIndex: dln, isSum: isSum, isGrandSum: isGrand\n        };\n        this.rawIndexObject = {};\n    };\n    /* tslint:disable:typedef no-any */\n    PivotEngine.prototype.getCellSet = function (rawIndexObject) {\n        var currentCellSets = [];\n        var keys = Object.keys(rawIndexObject);\n        for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {\n            var index = keys_3[_i];\n            if (this.data[parseInt(index, 10)]) {\n                currentCellSets.push(this.data[parseInt(index, 10)]);\n            }\n        }\n        return currentCellSets;\n    };\n    PivotEngine.prototype.getHeaderData = function (axis, reformAxis, data, tnum, vcnt) {\n        var rlt = axis.length;\n        var colItmLn = this.columns.length;\n        var sortText = this.valueSortSettings.headerText;\n        //let valueLn: number = this.values.length;\n        for (var rln = 0; rln < rlt; rln++) {\n            if (axis[rln].members.length) {\n                this.getHeaderData(axis[rln].members, reformAxis, data, tnum, vcnt);\n            }\n            var isTotalHide = true;\n            if ((!isNullOrUndefined(axis[rln].showSubTotals) && !axis[rln].showSubTotals) ||\n                !this.showSubTotals || !this.showColumnSubTotals) {\n                if (!(axis[rln].members.length > 0)) {\n                    reformAxis[reformAxis.length] = this.frameHeaderWithKeys(axis[rln]);\n                }\n                else {\n                    this.removeCount++;\n                    isTotalHide = false;\n                }\n                tnum = reformAxis.length - 1;\n            }\n            else {\n                tnum = reformAxis.length;\n                reformAxis[tnum] = this.frameHeaderWithKeys(axis[rln]);\n            }\n            //  let rplus: number = rln + 1;\n            var lvl = axis[rln].level;\n            axis[rln].rowIndex = lvl;\n            axis[rln].colIndex = (tnum * vcnt) + vcnt;\n            if (!data[lvl]) {\n                data[lvl] = [];\n                this.headerContent[lvl] = {};\n                data[lvl][(tnum * vcnt) + vcnt] = this.headerContent[lvl][(tnum * vcnt) + vcnt] = this.frameHeaderWithKeys(axis[rln]);\n            }\n            else {\n                data[lvl][(tnum * vcnt) + vcnt] = this.headerContent[lvl][(tnum * vcnt) + vcnt] = this.frameHeaderWithKeys(axis[rln]);\n            }\n            var isSingleMeasure = (this.columns.length === 0 && this.values.length === 1) ? true : false;\n            if ((this.isMutiMeasures || this.alwaysShowValueHeader || isSingleMeasure) && !this.valueAxis && isTotalHide) {\n                for (var vln = 0; vln < vcnt; vln++) {\n                    var name_3 = this.values[vln].caption ? this.values[vln].caption : this.values[vln].name;\n                    var calObj = {\n                        axis: 'column',\n                        actualText: this.values[vln].name,\n                        formattedText: name_3,\n                        level: 0,\n                        valueSort: {},\n                        colIndex: (tnum * vcnt) + 1 + vln,\n                        rowIndex: colItmLn\n                    };\n                    if (!data[colItmLn]) {\n                        data[colItmLn] = [];\n                        this.headerContent[colItmLn] = {};\n                        data[colItmLn][(tnum * vcnt) + 1 + vln] = this.headerContent[colItmLn][(tnum * vcnt) + 1 + vln] = calObj;\n                    }\n                    else {\n                        data[colItmLn][(tnum * vcnt) + 1 + vln] = this.headerContent[colItmLn][(tnum * vcnt) + 1 + vln] = calObj;\n                    }\n                    var vData = data[colItmLn][(tnum * vcnt) + 1 + vln].valueSort;\n                    vData[axis[rln].valueSort.levelName + this.valueSortSettings.headerDelimiter + name_3] = 1;\n                    vData.levelName = axis[rln].valueSort.levelName + this.valueSortSettings.headerDelimiter + name_3;\n                    if (vData && vData[sortText]) {\n                        this.valueSortSettings.columnIndex = (tnum * vcnt) + 1 + vln;\n                    }\n                }\n            }\n            else if (axis[rln].valueSort && axis[rln].valueSort[sortText]) {\n                this.valueSortSettings.columnIndex = (tnum * vcnt) + 1;\n            }\n            if (!this.pageSettings) {\n                reformAxis[tnum].members = [];\n            }\n        }\n    };\n    /* tslint:disable */\n    PivotEngine.prototype.getAggregateValue = function (rowIndex, columnIndex, value, type) {\n        //rowIndex = rowIndex.sort();\n        //columnIndex = columnIndex.sort();\n        var rlt = rowIndex.length;\n        //let clt: number = columnIndex.length;\n        var mirror = {};\n        var ri = 0;\n        var ci = 0;\n        var cellValue = 0;\n        var avgCnt = 0;\n        var isInit = true;\n        var isValueExist = false;\n        if (type && type.toLowerCase() === 'count') {\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    cellValue += (isNullOrUndefined(this.valueMatrix[rowIndex[ri]][value]) ?\n                        0 : (this.allowDataCompression ? this.valueMatrix[rowIndex[ri]][value] : 1));\n                }\n                ri++;\n            }\n        }\n        else if (type && type.toLowerCase() === 'distinctcount') {\n            var duplicateValues = [];\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    isValueExist = true;\n                    var val = (this.data[rowIndex[ri]][this.fieldKeys[this.fields[value]]]);\n                    var currentVal = void 0;\n                    // let currentVal: number = this.valueMatrix[rowIndex[ri]][value];\n                    if (!isNullOrUndefined(val)) {\n                        currentVal = val.toString();\n                        if (duplicateValues.length === 0 || (duplicateValues.length > 0 && duplicateValues.indexOf(currentVal) === -1)) {\n                            cellValue += (this.allowDataCompression && typeof val === 'number') ? val : 1;\n                            duplicateValues.push(currentVal);\n                        }\n                    }\n                }\n                ri++;\n            }\n        }\n        else if (type && type.toLowerCase() === 'product') {\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    isValueExist = true;\n                    var currentVal = this.valueMatrix[rowIndex[ri]][value];\n                    if (!isNullOrUndefined(currentVal)) {\n                        cellValue = ((isInit || isNullOrUndefined(cellValue)) ? 1 : cellValue);\n                        cellValue *= currentVal;\n                    }\n                    else if (isInit) {\n                        cellValue = currentVal;\n                    }\n                    isInit = false;\n                }\n                ri++;\n            }\n        }\n        else if (type && (['populationstdev', 'samplestdev', 'populationvar', 'samplevar']).indexOf(type.toLowerCase()) !== -1) {\n            var i = 0;\n            var val = 0;\n            var indexVal = [];\n            var avgVal = 0;\n            var cVal = 0;\n            var avgDifferenceVal = 0;\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    var currentVal = this.valueMatrix[rowIndex[ri]][value];\n                    if (!isNullOrUndefined(currentVal)) {\n                        val += currentVal;\n                        indexVal.push(currentVal);\n                        i++;\n                    }\n                }\n                ri++;\n            }\n            if (i > 0) {\n                avgVal = val / i;\n                for (var _i = 0, indexVal_1 = indexVal; _i < indexVal_1.length; _i++) {\n                    var index = indexVal_1[_i];\n                    avgDifferenceVal += Math.pow((index - avgVal), 2);\n                }\n                if ((['populationstdev', 'samplestdev']).indexOf(type.toLowerCase()) !== -1) {\n                    cVal = Math.sqrt(avgDifferenceVal / (type.toLowerCase() === 'populationstdev' ? i : (i - 1)));\n                }\n                else {\n                    cVal = avgDifferenceVal / (type.toLowerCase() === 'populationvar' ? i : (i - 1));\n                }\n                cellValue = (cVal === 0 ? NaN : cVal);\n            }\n            else {\n                cellValue = val;\n            }\n        }\n        else if (type && type.toLowerCase() === 'min') {\n            var isFirst = true;\n            cellValue = undefined;\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined && this.valueMatrix[rowIndex[ri]][value] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    if (isNullOrUndefined(cellValue) && isNullOrUndefined(this.valueMatrix[rowIndex[ri]][value])) {\n                        cellValue = this.valueMatrix[rowIndex[ri]][value];\n                    }\n                    else {\n                        if (isFirst) {\n                            cellValue = this.valueMatrix[rowIndex[ri]][value];\n                            isFirst = false;\n                        }\n                        else {\n                            cellValue = this.valueMatrix[rowIndex[ri]][value] < cellValue ? this.valueMatrix[rowIndex[ri]][value] : cellValue;\n                        }\n                    }\n                }\n                ri++;\n            }\n        }\n        else if (type && type.toLowerCase() === 'max') {\n            var isMaxFirst = true;\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined && this.valueMatrix[rowIndex[ri]][value] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    if (isMaxFirst) {\n                        cellValue = this.valueMatrix[rowIndex[ri]][value];\n                        isMaxFirst = false;\n                    }\n                    else {\n                        cellValue = this.valueMatrix[rowIndex[ri]][value] > cellValue ? this.valueMatrix[rowIndex[ri]][value] : cellValue;\n                    }\n                }\n                ri++;\n            }\n        }\n        else if (type && type.toLowerCase() === 'calculatedfield') {\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    var calcField = this.calculatedFields[this.fields[value]];\n                    var actualFormula = calcField.formula;\n                    var aggregateField = {};\n                    if (this.calculatedFormulas[calcField.name]) {\n                        var calculatedFormulas = this.calculatedFormulas[calcField.name];\n                        for (var len = 0, lmt = calculatedFormulas.length; len < lmt; len++) {\n                            var aggregatedValue = calculatedFormulas[len];\n                            var value_1 = aggregateField[aggregatedValue.formula];\n                            if (value_1 === undefined) {\n                                var type_1 = aggregatedValue.type;\n                                value_1 = this.getAggregateValue(rowIndex, columnIndex, aggregatedValue.index, type_1);\n                                aggregateField[aggregatedValue.formula] = value_1;\n                            }\n                            actualFormula = (actualFormula).replace(aggregatedValue.formula, String(value_1));\n                        }\n                    }\n                    cellValue = this.evaluate(actualFormula);\n                    cellValue = (cellValue === Infinity || cellValue === -Infinity ? Infinity : (cellValue === undefined || isNaN(cellValue)) ? undefined : JSON.parse(String(cellValue)));\n                }\n                ri++;\n            }\n        }\n        else {\n            cellValue = undefined;\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    //let cIndx: number = isLeastLevel ? columnIndex.splice(columnIndex.indexOf(rowIndex[ri]), 1)[0] : rowIndex[ri];\n                    var currentVal = this.valueMatrix[rowIndex[ri]][value];\n                    if (isNullOrUndefined(cellValue) && isNullOrUndefined(currentVal)) {\n                        cellValue = currentVal;\n                    }\n                    else {\n                        if (isNullOrUndefined(cellValue)) {\n                            cellValue = 0;\n                        }\n                        cellValue += (isNullOrUndefined(currentVal) ? 0 : currentVal);\n                    }\n                    if (!isNullOrUndefined(currentVal)) {\n                        avgCnt++;\n                    }\n                }\n                ri++;\n            }\n        }\n        /* if (rlt > clt) {\n             this.makeMirrorObject(rowIndex, mirror);\n             while (columnIndex[ci] !== undefined) {\n                 if (mirror[columnIndex[ci]]) {\n                     let cIndx: number = isLeastLevel ? columnIndex.splice(ci, 1)[0] : columnIndex[ci];\n                     //rowIndex.splice\n                     sum += this.valueMatrix[cIndx][value];\n                 }\n                 ci++;\n             }\n         } else {\n             this.makeMirrorObject(columnIndex, mirror);\n             while (rowIndex[ri] !== undefined) {\n                 if (mirror[rowIndex[ri]]) {\n                     let cIndx: number = isLeastLevel ? columnIndex.splice(columnIndex.indexOf(rowIndex[ri]), 1)[0] : rowIndex[ri];\n                     sum += this.valueMatrix[rowIndex[ri]][value];\n                 }\n                 ri++;\n             }\n         } */\n        return ((type && type.toLowerCase() === 'avg' && cellValue !== 0 &&\n            !isNullOrUndefined(cellValue)) ? (cellValue / avgCnt) : isValueExist ? cellValue : undefined);\n    };\n    PivotEngine.prototype.evaluate = function (obj) {\n        return Function('\"use strict\";return (' + obj + ')')();\n    };\n    ;\n    /* tslint:enable */\n    /** hidden */\n    PivotEngine.prototype.getFormattedValue = function (value, fieldName) {\n        var commonValue = value === null ? (this.localeObj ? this.localeObj.getConstant('null') :\n            String(value)) : value === undefined ?\n            (this.localeObj ? (fieldName in this.groupingFields) ? this.localeObj.getConstant('groupOutOfRange') :\n                this.localeObj.getConstant('undefined') : String(value)) : value;\n        var formattedValue = {\n            formattedText: commonValue.toString(),\n            actualText: commonValue,\n            dateText: commonValue\n        };\n        if (this.formatFields[fieldName] && !isNullOrUndefined(value)) {\n            try {\n                var formatField = (this.formatFields[fieldName].properties ?\n                    this.formatFields[fieldName].properties : this.formatFields[fieldName]);\n                var formatSetting = extend({}, formatField, null, true);\n                delete formatSetting.name;\n                if (!formatSetting.minimumSignificantDigits && formatSetting.minimumSignificantDigits < 1) {\n                    delete formatSetting.minimumSignificantDigits;\n                }\n                if (!formatSetting.maximumSignificantDigits && formatSetting.maximumSignificantDigits < 1) {\n                    delete formatSetting.maximumSignificantDigits;\n                }\n                if (formatSetting.type) {\n                    formattedValue.formattedText = this.dateFormatFunction[fieldName].exactFormat(new Date(value));\n                    formattedValue.actualText = value;\n                }\n                else {\n                    delete formatSetting.type;\n                    if ((formatSetting.format) && !(this.formatRegex.test(formatSetting.format))) {\n                        var pattern = formatSetting.format.match(this.customRegex);\n                        var flag = true;\n                        if (isNullOrUndefined(formatSetting.minimumFractionDigits)) {\n                            delete formatSetting.minimumFractionDigits;\n                        }\n                        if (isNullOrUndefined(formatSetting.maximumFractionDigits)) {\n                            delete formatSetting.maximumFractionDigits;\n                        }\n                        if (isNullOrUndefined(formatSetting.minimumIntegerDigits)) {\n                            delete formatSetting.minimumIntegerDigits;\n                        }\n                        if (isNullOrUndefined(pattern)) {\n                            pattern = formatSetting.format.match(/^(('[^']+'|''|[^*@0])*)(\\*.)?((([0#,]*[0,]*[0#]*)(\\.[0#]*)?)|([#,]*@+#*))(E\\+?0+)?(('[^']+'|''|[^*#@,.E])*)$/);\n                            delete formatSetting.useGrouping;\n                            flag = false;\n                        }\n                        var integerPart = pattern[6];\n                        if (flag) {\n                            formatSetting.useGrouping = integerPart.indexOf(',') !== -1;\n                        }\n                        var decimalPart = pattern[5];\n                        if (isBlazor() && decimalPart && decimalPart.indexOf('.') !== -1 && formatSetting.maximumFractionDigits) {\n                            delete formatSetting.maximumFractionDigits;\n                        }\n                    }\n                    formattedValue.formattedText =\n                        this.globalize.formatNumber(!isNaN(Number(value)) ? Number(value) : value, formatSetting);\n                    formattedValue.actualText = !isNaN(Number(value)) ? Number(value) : value;\n                    formattedValue.dateText = !isNaN(Number(value)) ? Number(value) : value;\n                }\n                if (this.fieldList[fieldName].sort !== 'None' && formatSetting.type &&\n                    ['date', 'dateTime', 'time'].indexOf(this.formatFields[fieldName].type) > -1) {\n                    formattedValue.dateText = this.dateFormatFunction[fieldName].fullFormat(new Date(value));\n                }\n                if (this.fieldList[fieldName].isCustomField) {\n                    formattedValue.formattedText = formattedValue.formattedText === 'NaN' ?\n                        commonValue.toString() : formattedValue.formattedText;\n                    formattedValue.dateText = formattedValue.dateText === 'NaN' ?\n                        commonValue.toString() : formattedValue.dateText;\n                }\n            }\n            catch (exception) {\n                if (!this.fieldList[fieldName].isCustomField) {\n                    throw exception;\n                }\n            }\n            finally {\n                if (this.fieldList[fieldName].isCustomField) {\n                    formattedValue.formattedText =\n                        (isNullOrUndefined(formattedValue.formattedText) || formattedValue.formattedText === 'NaN') ?\n                            commonValue.toString() : formattedValue.formattedText;\n                    formattedValue.dateText = (isNullOrUndefined(formattedValue.dateText) || formattedValue.dateText === 'NaN') ?\n                        commonValue.toString() : formattedValue.dateText;\n                }\n            }\n        }\n        return formattedValue;\n    };\n    PivotEngine.prototype.powerFunction = function (formula) {\n        if (formula.indexOf('^') > -1) {\n            var items_1 = [];\n            while (formula.indexOf('(') > -1) {\n                formula = formula.replace(/(\\([^\\(\\)]*\\))/g, function (text, item) {\n                    items_1.push(item);\n                    return ('~' + (items_1.length - 1));\n                });\n            }\n            items_1.push(formula);\n            formula = '~' + (items_1.length - 1);\n            while (formula.indexOf('~') > -1) {\n                formula = formula.replace(new RegExp('~' + '(\\\\d+)', 'g'), function (text, index) {\n                    return items_1[index].replace(/(\\w*)\\^(\\w*)/g, 'Math.pow' + '($1,$2)');\n                });\n            }\n        }\n        return formula;\n    };\n    return PivotEngine;\n}());\nexport { PivotEngine };\n","/**\n * Specifies pivot external events\n * @hidden\n */\n/** @hidden */\nexport var load = 'load';\n/** @hidden */\nexport var enginePopulating = 'enginePopulating';\n/** @hidden */\nexport var enginePopulated = 'enginePopulated';\n/** @hidden */\nexport var onFieldDropped = 'onFieldDropped';\n/** @hidden */\nexport var fieldDrop = 'fieldDrop';\n/** @hidden */\nexport var beforePivotTableRender = 'beforePivotTableRender';\n/** @hidden */\nexport var afterPivotTableRender = 'afterPivotTableRender';\n/** @hidden */\nexport var beforeExport = 'beforeExport';\n/** @hidden */\nexport var excelHeaderQueryCellInfo = 'excelHeaderQueryCellInfo';\n/** @hidden */\nexport var pdfHeaderQueryCellInfo = 'pdfHeaderQueryCellInfo';\n/** @hidden */\nexport var excelQueryCellInfo = 'excelQueryCellInfo';\n/** @hidden */\nexport var pdfQueryCellInfo = 'pdfQueryCellInfo';\n/** @hidden */\nexport var onPdfCellRender = 'onPdfCellRender';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var headerCellInfo = 'headerCellInfo';\n/** @hidden */\nexport var hyperlinkCellClick = 'hyperlinkCellClick';\n/** @hidden */\nexport var resizing = 'resizing';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var cellClick = 'cellClick';\n/** @hidden */\nexport var drillThrough = 'drillThrough';\n/** @hidden */\nexport var beforeColumnsRender = 'beforeColumnsRender';\n/** @hidden */\nexport var selected = 'selected';\n/** @hidden */\nexport var cellSelecting = 'cellSelecting';\n/** @hidden */\nexport var drill = 'drill';\n/** @hidden */\nexport var cellSelected = 'cellSelected';\n/** @hidden */\nexport var cellDeselected = 'cellDeselected';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var beginDrillThrough = 'beginDrillThrough';\n/** @hidden */\nexport var editCompleted = 'editCompleted';\n/** @hidden */\nexport var multiLevelLabelClick = 'multiLevelLabelClick';\n/** @hidden */\nexport var saveReport = 'saveReport';\n/** @hidden */\nexport var fetchReport = 'fetchReport';\n/** @hidden */\nexport var loadReport = 'loadReport';\n/** @hidden */\nexport var renameReport = 'renameReport';\n/** @hidden */\nexport var removeReport = 'removeReport';\n/** @hidden */\nexport var newReport = 'newReport';\n/** @hidden */\nexport var toolbarRender = 'toolbarRender';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var chartTooltipRender = 'chartTooltipRender';\n/** @hidden */\nexport var chartLoaded = 'chartLoaded';\n/** @hidden */\nexport var chartLoad = 'chartLoad';\n/** @hidden */\nexport var chartResized = 'chartResized';\n/** @hidden */\nexport var chartAxisLabelRender = 'chartAxisLabelRender';\n/** @hidden */\nexport var chartSeriesCreated = 'chartSeriesCreated';\n/** @hidden */\nexport var aggregateCellInfo = 'aggregateCellInfo';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var fieldListRefreshed = 'fieldListRefreshed';\n/** @hidden */\nexport var conditionalFormatting = 'conditionalFormatting';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var memberFiltering = 'memberFiltering';\n/** @hidden */\nexport var calculatedFieldCreate = 'calculatedFieldCreate';\n/** @hidden */\nexport var memberEditorOpen = 'memberEditorOpen';\n/** @hidden */\nexport var fieldRemove = 'fieldRemove';\n/** @hidden */\nexport var numberFormatting = 'numberFormatting';\n/** @hidden */\nexport var aggregateMenuOpen = 'aggregateMenuOpen';\n/** @hidden */\nexport var fieldDragStart = 'fieldDragStart';\n/** @hidden */\nexport var chartPointClick = 'chartPointClick';\n/**\n * Specifies pivot internal events\n */\n/** @hidden */\nexport var initialLoad = 'initial-load';\n/** @hidden */\nexport var uiUpdate = 'ui-update';\n/** @hidden */\nexport var scroll = 'scroll';\n/** @hidden */\nexport var contentReady = 'content-ready';\n/** @hidden */\nexport var dataReady = 'data-ready';\n/** @hidden */\nexport var initSubComponent = 'init-groupingbar';\n/** @hidden */\nexport var treeViewUpdate = 'tree-view-update';\n/** @hidden */\nexport var pivotButtonUpdate = 'pivot-button-update';\n/** @hidden */\nexport var initCalculatedField = 'init-calculatedfield';\n/** @hidden */\nexport var click = 'click';\n/** @hidden */\nexport var initToolbar = 'init-toolbar';\n/** @hidden */\nexport var initFormatting = 'init-formatting';\n/** @hidden */\nexport var initGrouping = 'init-grouping';\n","/**\n * CSS Constants\n * @hidden\n */\n/** @hidden */\nexport var ROOT = 'e-pivotfieldlist';\n/** @hidden */\nexport var RTL = 'e-rtl';\n/** @hidden */\nexport var PIVOTCHART_LTR = 'e-ltr';\n/** @hidden */\nexport var DEVICE = 'e-device';\n/** @hidden */\nexport var ICON = 'e-icons';\n/** @hidden */\nexport var ICON_DISABLE = 'e-disable';\n/** @hidden */\nexport var ICON_HIDDEN = 'e-hide';\n/** @hidden */\nexport var AXISFIELD_ICON_CLASS = 'e-dropdown-icon';\n/** @hidden */\nexport var WRAPPER_CLASS = 'e-pivotfieldlist-wrapper';\n/** @hidden */\nexport var OLAP_WRAPPER_CLASS = 'e-olapfieldlist-wrapper';\n/** @hidden */\nexport var CONTAINER_CLASS = 'e-field-list-container';\n/** @hidden */\nexport var TOGGLE_FIELD_LIST_CLASS = 'e-toggle-field-list';\n/** @hidden */\nexport var STATIC_FIELD_LIST_CLASS = 'e-static';\n/** @hidden */\nexport var TOGGLE_SELECT_CLASS = 'e-select-table';\n/** @hidden */\nexport var FIELD_TABLE_CLASS = 'e-field-table';\n/** @hidden */\nexport var OLAP_FIELD_TABLE_CLASS = 'e-olap-field-table';\n/** @hidden */\nexport var FIELD_LIST_CLASS = 'e-field-list';\n/** @hidden */\nexport var OLAP_FIELD_LIST_CLASS = 'e-olap-field-list-tree';\n/** @hidden */\nexport var FIELD_LIST_TREE_CLASS = 'e-field-list-tree';\n/** @hidden */\nexport var FIELD_HEADER_CLASS = 'e-field-header';\n/** @hidden */\nexport var FIELD_LIST_TITLE_CLASS = 'e-field-list-title';\n/** @hidden */\nexport var FIELD_LIST_TITLE_CONTENT_CLASS = 'e-title-content';\n/** @hidden */\nexport var FIELD_LIST_FOOTER_CLASS = 'e-field-list-footer';\n/** @hidden */\nexport var CALCULATED_FIELD_CLASS = 'e-calculated-field';\n/** @hidden */\nexport var FLAT_CLASS = 'e-flat e-primary';\n/** @hidden */\nexport var OUTLINE_CLASS = 'e-outline';\n/** @hidden */\nexport var AXIS_TABLE_CLASS = 'e-axis-table';\n/** @hidden */\nexport var OLAP_AXIS_TABLE_CLASS = 'e-olap-axis-table';\n/** @hidden */\nexport var LEFT_AXIS_PANEL_CLASS = 'e-left-axis-fields';\n/** @hidden */\nexport var RIGHT_AXIS_PANEL_CLASS = 'e-right-axis-fields';\n/** @hidden */\nexport var AXIS_HEADER_CLASS = 'e-axis-header';\n/** @hidden */\nexport var AXIS_CONTENT_CLASS = 'e-axis-content';\n/** @hidden */\nexport var AXIS_PROMPT_CLASS = 'e-draggable-prompt';\n/** @hidden */\nexport var PIVOT_BUTTON_WRAPPER_CLASS = 'e-pvt-btn-div';\n/** @hidden */\nexport var PIVOT_BUTTON_CLASS = 'e-pivot-button';\n/** @hidden */\nexport var PIVOT_BUTTON_CONTENT_CLASS = 'e-content';\n/** @hidden */\nexport var DRAG_CLONE_CLASS = 'e-button-drag-clone';\n/** @hidden */\nexport var SORT_CLASS = 'e-sort';\n/** @hidden */\nexport var MEMBER_SORT_CLASS = 'e-member-sort';\n/** @hidden */\nexport var SORT_DESCEND_CLASS = 'e-descend';\n/** @hidden */\nexport var FILTER_COMMON_CLASS = 'e-btn-filter';\n/** @hidden */\nexport var FILTER_CLASS = 'e-pv-filter';\n/** @hidden */\nexport var FILTERED_CLASS = 'e-pv-filtered';\n/** @hidden */\nexport var REMOVE_CLASS = 'e-remove';\n/** @hidden */\nexport var DRAG_CLASS = 'e-drag';\n/** @hidden */\nexport var DRAG_DISABLE_CLASS = 'e-disable-drag';\n/** @hidden */\nexport var DROP_INDICATOR_CLASS = 'e-drop-indicator';\n/** @hidden */\nexport var INDICATOR_HOVER_CLASS = 'e-drop-hover';\n/** @hidden */\nexport var MEMBER_EDITOR_DIALOG_CLASS = 'e-member-editor-dialog';\n/** @hidden */\nexport var EDITOR_TREE_WRAPPER_CLASS = 'e-member-editor-wrapper';\n/** @hidden */\nexport var EDITOR_TREE_CONTAINER_CLASS = 'e-member-editor-container';\n/** @hidden */\nexport var DRILLTHROUGH_GRID_CLASS = 'e-drillthrough-grid';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_CLASS = 'e-drillthrough-body';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_HEADER_CONTAINER_CLASS = 'e-drillthrough-body-header-container';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_HEADER_CLASS = 'e-drillthrough-body-header';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_HEADER_COMMON_CLASS = 'e-drillthrough-body-header-common';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_HEADER_VALUE_CLASS = 'e-drillthrough-body-header-value';\n/** @hidden */\nexport var DRILLTHROUGH_DIALOG = 'e-drillthrough-dialog';\n/** @hidden */\nexport var EDITOR_LABEL_WRAPPER_CLASS = 'e-editor-label-wrapper';\n/** @hidden */\nexport var EDITOR_LABEL_CLASS = 'e-editor-label';\n/** @hidden */\nexport var CHECK_BOX_FRAME_CLASS = 'e-frame';\n/** @hidden */\nexport var NODE_CHECK_CLASS = 'e-check';\n/** @hidden */\nexport var NODE_STOP_CLASS = 'e-stop';\n/** @hidden */\nexport var OK_BUTTON_CLASS = 'e-ok-btn';\n/** @hidden */\nexport var CANCEL_BUTTON_CLASS = 'e-cancel-btn';\n/** @hidden */\nexport var ERROR_DIALOG_CLASS = 'e-pivot-error-dialog';\n/** @hidden */\nexport var DROPPABLE_CLASS = 'e-droppable';\n/** @hidden */\nexport var ROW_AXIS_CLASS = 'e-rows';\n/** @hidden */\nexport var COLUMN_AXIS_CLASS = 'e-columns';\n/** @hidden */\nexport var VALUE_AXIS_CLASS = 'e-values';\n/** @hidden */\nexport var FILTER_AXIS_CLASS = 'e-filters';\n/** @hidden */\nexport var GROUPING_BAR_CLASS = 'e-grouping-bar';\n/** @hidden */\nexport var VALUE_COLUMN_CLASS = 'e-value-column';\n/** @hidden */\nexport var GROUP_ROW_CLASS = 'e-group-rows';\n/** @hidden */\nexport var GROUP_COLUMN_CLASS = 'e-group-columns';\n/** @hidden */\nexport var GROUP_FLEX_CLASS = 'e-group-flex';\n/** @hidden */\nexport var GROUP_VALUE_CLASS = 'e-group-values';\n/** @hidden */\nexport var GROUP_FILTER_CLASS = 'e-group-filters';\n/** @hidden */\nexport var DIALOG_CLOSE_ICON_CLASS = 'e-icon-btn';\n/** @hidden */\nexport var NO_DRAG_CLASS = 'e-drag-restrict';\n/** @hidden */\nexport var SELECTED_NODE_CLASS = 'e-list-selected';\n/** @hidden */\nexport var TITLE_HEADER_CLASS = 'e-title-header';\n/** @hidden */\nexport var TITLE_CONTENT_CLASS = 'e-title-content';\n/** @hidden */\nexport var TEXT_CONTENT_CLASS = 'e-text-content';\n/** @hidden */\nexport var FOOTER_CONTENT_CLASS = 'e-footer-content';\n/** @hidden */\nexport var ADAPTIVE_CONTAINER_CLASS = 'e-adaptive-container';\n/** @hidden */\nexport var ADAPTIVE_FIELD_LIST_BUTTON_CLASS = 'e-field-list-btn';\n/** @hidden */\nexport var ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS = 'e-calculated-field-btn';\n/** @hidden */\nexport var BUTTON_SMALL_CLASS = 'e-small';\n/** @hidden */\nexport var BUTTON_ROUND_CLASS = 'e-round';\n/** @hidden */\nexport var ADD_ICON_CLASS = 'e-add-icon';\n/** @hidden */\nexport var BUTTON_FLAT_CLASS = 'e-flat';\n/** @hidden */\nexport var STATIC_CENTER_DIV_CLASS = 'e-center-div';\n/** @hidden */\nexport var STATIC_CENTER_HEADER_CLASS = 'e-center-title';\n/** @hidden */\nexport var ADAPTIVE_FIELD_LIST_DIALOG_CLASS = 'e-adaptive-field-list-dialog';\n/** @hidden */\nexport var LIST_TEXT_CLASS = 'e-list-text';\n/** @hidden */\nexport var LIST_SELECT_CLASS = 'e-selected-node';\n/** @hidden */\nexport var LIST_FRAME_CLASS = 'e-frame';\n/** @hidden */\nexport var EXCEL_FILTER_ICON_CLASS = 'e-excl-filter-icon';\n/** @hidden */\nexport var SELECTED_MENU_ICON_CLASS = 'e-selected-menu-icon';\n/** @hidden */\nexport var EMPTY_ICON_CLASS = 'e-emptyicon';\n/** @hidden */\nexport var SUB_MENU_CLASS = 'e-submenu';\n/** @hidden */\nexport var FOCUSED_CLASS = 'e-focused';\n/** @hidden */\nexport var SELECTED_CLASS = 'e-selected';\n/** @hidden */\nexport var MENU_ITEM_CLASS = 'e-menu-item';\n/** @hidden */\nexport var FILTER_MENU_OPTIONS_CLASS = 'e-filtermenu-options';\n/** @hidden */\nexport var SELECTED_OPTION_ICON_CLASS = 'e-selected-option-icon';\n/** @hidden */\nexport var SELECTED_LEVEL_ICON_CLASS = 'e-selected-level-icon';\n/** @hidden */\nexport var FILTER_DIV_CONTENT_CLASS = 'e-filter-div-content';\n/** @hidden */\nexport var FILTER_TEXT_DIV_CLASS = 'e-filter-text-div';\n/** @hidden */\nexport var BETWEEN_TEXT_DIV_CLASS = 'e-between-text-div';\n/** @hidden */\nexport var SEPARATOR_DIV_CLASS = 'e-separator-div';\n/** @hidden */\nexport var FILTER_OPTION_WRAPPER_1_CLASS = 'e-filter-option-wrapper-1';\n/** @hidden */\nexport var FILTER_OPTION_WRAPPER_2_CLASS = 'e-filter-option-wrapper-2';\n/** @hidden */\nexport var FILTER_INPUT_DIV_1_CLASS = 'e-filter-input-div-1';\n/** @hidden */\nexport var FILTER_INPUT_DIV_2_CLASS = 'e-filter-input-div-2';\n/** @hidden */\nexport var VALUE_OPTIONS_CLASS = 'e-value-options';\n/** @hidden */\nexport var LEVEL_OPTIONS_CLASS = 'e-level-options';\n/** @hidden */\nexport var FILTER_OPERATOR_CLASS = 'e-filter-operator';\n/** @hidden */\nexport var FILTER_SORT_CLASS = 'e-filter-sort';\n/** @hidden */\nexport var SORT_ASCEND_ICON_CLASS = 'e-sort-ascend-icon';\n/** @hidden */\nexport var SORT_DESCEND_ICON_CLASS = 'e-sort-descend-icon';\n/** @hidden */\nexport var SORT_SELECTED_CLASS = 'e-active';\n/** @hidden */\nexport var COLLAPSE = 'e-collapse';\n/** @hidden */\nexport var EXPAND = 'e-expand';\n/** @hidden */\nexport var TABLE = 'e-table';\n/** @hidden */\nexport var BODY = 'e-body';\n/** @hidden */\nexport var PIVOTBODY = 'e-pivotbody';\n/** @hidden */\nexport var COLUMNSHEADER = 'e-columnsheader';\n/** @hidden */\nexport var ROWSHEADER = 'e-rowsheader';\n/** @hidden */\nexport var VALUESCONTENT = 'e-valuescontent';\n/** @hidden */\nexport var VALUECELL = 'e-valuecell';\n/** @hidden */\nexport var PIVOTHEADER = 'e-pivotheader';\n/** @hidden */\nexport var PGHEADERS = 'e-pgheaders';\n/** @hidden */\nexport var TOPHEADER = 'e-topheader';\n/** @hidden */\nexport var HEADERCELL = 'e-headercell';\n/** @hidden */\nexport var SUMMARY = 'e-summary';\n/** @hidden */\nexport var CELLVALUE = 'e-cellvalue';\n/** @hidden */\nexport var ROW = 'e-row';\n/** @hidden */\nexport var PIVOTTOOLTIP = 'e-pivottooltip';\n/** @hidden */\nexport var TOOLTIP_HEADER = 'e-tooltipheader';\n/** @hidden */\nexport var TOOLTIP_CONTENT = 'e-tooltipcontent';\n/** @hidden */\nexport var NEXTSPAN = 'e-nextspan';\n/** @hidden */\nexport var LASTSPAN = 'e-lastspan';\n/** @hidden */\nexport var EDITOR_SEARCH_WRAPPER_CLASS = 'e-editor-search-wrapper';\n/** @hidden */\nexport var EDITOR_SEARCH_CLASS = 'e-editor-search';\n/** @hidden */\nexport var EDITOR_SEARCH__INPUT_CLASS = 'e-editor-search-input';\n/** @hidden */\nexport var SELECT_ALL_WRAPPER_CLASS = 'e-select-all-wrapper';\n/** @hidden */\nexport var SELECT_ALL_CLASS = 'e-select-all';\n/** @hidden */\nexport var PIVOTCALC = 'e-pivot-calc';\n/** @hidden */\nexport var CALCDIALOG = 'e-pivot-calc-dialog-div';\n/** @hidden */\nexport var OLAP_CALCDIALOG = 'e-olap-calc-dialog-div';\n/** @hidden */\nexport var CALCRADIO = 'e-pivot-calc-radio';\n/** @hidden */\nexport var CALCCHECK = 'e-pivot-calc-check';\n/** @hidden */\nexport var CALCINPUT = 'e-pivot-calc-input';\n/** @hidden */\nexport var CALC_FORMAT_INPUT = 'e-custom-format-input';\n/** @hidden */\nexport var CALCINPUTDIV = 'e-pivot-calc-input-div';\n/** @hidden */\nexport var CALC_CUSTOM_FORMAT_INPUTDIV = 'e-pivot-calc-custom-format-div';\n/** @hidden */\nexport var OLAP_CALC_CUSTOM_FORMAT_INPUTDIV = 'e-olap-calc-custom-format-div';\n/** @hidden */\nexport var CALC_HIERARCHY_LIST_DIV = 'e-olap-calc-hierarchy-list-div';\n/** @hidden */\nexport var CALC_FORMAT_TYPE_DIV = 'e-olap-calc-format-type-div';\n/** @hidden */\nexport var CALC_MEMBER_TYPE_DIV = 'e-olap-calc-member-type-div';\n/** @hidden */\nexport var MEMBER_OPTIONS_CLASS = 'e-member-options';\n/** @hidden */\nexport var HIERARCHY_OPTIONS_CLASS = 'e-hierarchy-options';\n/** @hidden */\nexport var FORMAT_OPTIONS_CLASS = 'e-format-options';\n/** @hidden */\nexport var FORMAT_INPUT_CLASS = 'e-format-input-options';\n/** @hidden */\nexport var CALCOUTERDIV = 'e-pivot-calc-outer-div';\n/** @hidden */\nexport var OLAP_CALCOUTERDIV = 'e-olap-calc-outer-div';\n/** @hidden */\nexport var FLAT = 'e-flat';\n/** @hidden */\nexport var FORMAT = 'e-format';\n/** @hidden */\nexport var FORMULA = 'e-pivot-formula';\n/** @hidden */\nexport var TREEVIEW = 'e-pivot-treeview';\n/** @hidden */\nexport var TREEVIEWOUTER = 'e-pivot-treeview-outer';\n/** @hidden */\nexport var CALCCANCELBTN = 'e-pivot-cancel-button';\n/** @hidden */\nexport var CALCADDBTN = 'e-pivot-add-button';\n/** @hidden */\nexport var CALCOKBTN = 'e-pivot-ok-button';\n/** @hidden */\nexport var CALCACCORD = 'e-pivot-accord';\n/** @hidden */\nexport var CALCBUTTONDIV = 'e-pivot-button-div';\n/** @hidden */\nexport var AXIS_ICON_CLASS = 'e-axis';\n/** @hidden */\nexport var AXIS_ROW_CLASS = 'e-axis-row';\n/** @hidden */\nexport var AXIS_COLUMN_CLASS = 'e-axis-column';\n/** @hidden */\nexport var AXIS_VALUE_CLASS = 'e-axis-value';\n/** @hidden */\nexport var AXIS_FILTER_CLASS = 'e-axis-filter';\n/** @hidden */\nexport var AXIS_NAVIGATE_WRAPPER_CLASS = 'e-axis-nav-div';\n/** @hidden */\nexport var LEFT_NAVIGATE_WRAPPER_CLASS = 'e-left-nav-wrapper';\n/** @hidden */\nexport var RIGHT_NAVIGATE_WRAPPER_CLASS = 'e-right-nav-wrapper';\n/** @hidden */\nexport var LEFT_NAVIGATE_CLASS = 'e-left-nav-icon';\n/** @hidden */\nexport var RIGHT_NAVIGATE_CLASS = 'e-right-nav-icon';\n/** @hidden */\nexport var GRID_CLASS = 'e-grid';\n/** @hidden */\nexport var PIVOT_VIEW_CLASS = 'e-pivotview';\n/** @hidden */\nexport var PIVOT_ALL_FIELD_TITLE_CLASS = 'e-pivot-all-field-title';\n/** @hidden */\nexport var PIVOT_FIELD_TITLE_CLASS = 'e-pivot-field-name-title';\n/** @hidden */\nexport var PIVOT_FORMULA_TITLE_CLASS = 'e-pivot-formula-title';\n/** @hidden */\nexport var OLAP_HIERARCHY_TITLE_CLASS = 'e-olap-hierarchy-title';\n/** @hidden */\nexport var OLAP_FORMAT_TITLE_CLASS = 'e-olap-format-title';\n/** @hidden */\nexport var OLAP_MEMBER_TITLE_CLASS = 'e-olap-member-title';\n/** @hidden */\nexport var PIVOT_CONTEXT_MENU_CLASS = 'e-pivot-context-menu';\n/** @hidden */\nexport var MENU_DISABLE = 'e-disabled';\n/** @hidden */\nexport var MENU_HIDE = 'e-menu-hide';\n/** @hidden */\nexport var EMPTY_MEMBER_CLASS = 'e-member-prompt';\n/** @hidden */\nexport var CALC_EDIT = 'e-edit';\n/** @hidden */\nexport var CALC_EDITED = 'e-edited';\n/** @hidden */\nexport var CALC_INFO = 'e-info';\n/** @hidden */\nexport var EMPTY_FIELD = 'e-empty-field';\n/** @hidden */\nexport var FORMAT_DIALOG = 'e-pivot-formatting-dialog';\n/** @hidden */\nexport var FORMAT_CONDITION_BUTTON = 'e-format-condition-button';\n/** @hidden */\nexport var FORMAT_NEW = 'e-new-format';\n/** @hidden */\nexport var FORMAT_OUTER = 'e-format-outer-div';\n/** @hidden */\nexport var FORMAT_INNER = 'e-format-inner-div';\n/** @hidden */\nexport var FORMAT_TABLE = 'e-format-table';\n/** @hidden */\nexport var FORMAT_VALUE_LABEL = 'e-format-value-label';\n/** @hidden */\nexport var FORMAT_LABEL = 'e-format-label';\n/** @hidden */\nexport var INPUT = 'e-input';\n/** @hidden */\nexport var FORMAT_VALUE1 = 'e-format-value1';\n/** @hidden */\nexport var FORMAT_VALUE2 = 'e-format-value2';\n/** @hidden */\nexport var FORMAT_VALUE_SPAN = 'e-format-value-span';\n/** @hidden */\nexport var FORMAT_FONT_COLOR = 'e-format-font-color';\n/** @hidden */\nexport var FORMAT_BACK_COLOR = 'e-format-back-color';\n/** @hidden */\nexport var FORMAT_VALUE_PREVIEW = 'e-format-value-preview';\n/** @hidden */\nexport var FORMAT_COLOR_PICKER = 'e-format-color-picker';\n/** @hidden */\nexport var FORMAT_DELETE_ICON = 'e-format-delete-icon';\n/** @hidden */\nexport var FORMAT_DELETE_BUTTON = 'e-format-delete-button';\n/** @hidden */\nexport var SELECTED_COLOR = 'e-selected-color';\n/** @hidden */\nexport var DIALOG_HEADER = 'e-dlg-header';\n/** @hidden */\nexport var FORMAT_APPLY_BUTTON = 'e-format-apply-button';\n/** @hidden */\nexport var FORMAT_CANCEL_BUTTON = 'e-format-cancel-button';\n/** @hidden */\nexport var FORMAT_ROUND_BUTTON = 'e-small e-round';\n/** @hidden */\nexport var VIRTUALTRACK_DIV = 'e-virtualtrack';\n/** @hidden */\nexport var MOVABLECONTENT_DIV = 'e-movablecontent';\n/** @hidden */\nexport var FROZENCONTENT_DIV = 'e-frozencontent';\n/** @hidden */\nexport var MOVABLEHEADER_DIV = 'e-movableheader';\n/** @hidden */\nexport var FROZENHEADER_DIV = 'e-frozenheader';\n/** @hidden */\nexport var DEFER_APPLY_BUTTON = 'e-defer-apply-button';\n/** @hidden */\nexport var DEFER_CANCEL_BUTTON = 'e-defer-cancel-button';\n/** @hidden */\nexport var LAYOUT_FOOTER = 'e-layout-footer';\n/** @hidden */\nexport var CELL_SELECTED_BGCOLOR = 'e-cellselectionbackground';\n/** @hidden */\nexport var SELECTED_BGCOLOR = 'e-selectionbackground';\n/** @hidden */\nexport var BUTTON_LAYOUT = 'e-button-layout';\n/** @hidden */\nexport var CHECKBOX_LAYOUT = 'e-checkbox-layout';\n/** @hidden */\nexport var DEFER_UPDATE_BUTTON = 'e-defer-update-btn';\n/** @hidden */\nexport var HEADERCONTENT = 'e-headercontent';\n/** @hidden */\nexport var BACK_ICON = 'e-field-list-back-icon';\n/** @hidden */\nexport var TITLE_MOBILE_HEADER = 'e-title-mobile-header';\n/** @hidden */\nexport var TITLE_MOBILE_CONTENT = 'e-title-mobile-content';\n/** @hidden */\nexport var ROW_CELL_CLASS = 'e-rowcell';\n/** @hidden */\nexport var CELL_ACTIVE_BGCOLOR = 'e-active';\n/** @hidden */\nexport var SPAN_CLICKED = 'e-spanclicked';\n/** @hidden */\nexport var ROW_SELECT = 'e-rowselect';\n/** @hidden */\nexport var GRID_HEADER = 'e-gridheader';\n/** @hidden */\nexport var GRID_CONTENT = 'e-gridcontent';\n/** @hidden */\nexport var GRID_EXPORT = 'e-export';\n/** @hidden */\nexport var PIVOTVIEW_EXPORT = 'e-pivotview-export';\n/** @hidden */\nexport var PIVOTVIEW_GRID = 'e-pivotview-grid';\n/** @hidden */\nexport var PIVOTVIEW_EXPAND = 'e-pivotview-expand';\n/** @hidden */\nexport var PIVOTVIEW_COLLAPSE = 'e-pivotview-collapse';\n/** @hidden */\nexport var PIVOTVIEW_GROUP = 'e-pivotview-group';\n/** @hidden */\nexport var PIVOTVIEW_UN_GROUP = 'e-pivotview-ungroup';\n/** @hidden */\nexport var GRID_PDF_EXPORT = 'e-pivotview-pdf-export';\n/** @hidden */\nexport var GRID_EXCEL_EXPORT = 'e-pivotview-excel-export';\n/** @hidden */\nexport var GRID_CSV_EXPORT = 'e-pivotview-csv-export';\n/** @hidden */\nexport var GRID_PNG_EXPORT = 'e-pivotview-png-export';\n/** @hidden */\nexport var GRID_JPEG_EXPORT = 'e-pivotview-jpeg-export';\n/** @hidden */\nexport var GRID_SVG_EXPORT = 'e-pivotview-svg-export';\n/** @hidden */\nexport var GRID_LOAD = 'e-load-report';\n/** @hidden */\nexport var GRID_NEW = 'e-new-report';\n/** @hidden */\nexport var GRID_RENAME = 'e-rename-report';\n/** @hidden */\nexport var GRID_REMOVE = 'e-remove-report';\n/** @hidden */\nexport var GRID_SAVEAS = 'e-saveas-report';\n/** @hidden */\nexport var GRID_SAVE = 'e-save-report';\n/** @hidden */\nexport var GRID_SUB_TOTAL = 'e-sub-total';\n/** @hidden */\nexport var GRID_GRAND_TOTAL = 'e-grand-total';\n/** @hidden */\nexport var GRID_FORMATTING = 'e-toolbar-formatting';\n/** @hidden */\nexport var GRID_TOOLBAR = 'e-pivot-toolbar';\n/** @hidden */\nexport var GRID_REPORT_LABEL = 'e-pivotview-report-label';\n/** @hidden */\nexport var GRID_REPORT_INPUT = 'e-pivotview-report-input';\n/** @hidden */\nexport var GRID_REPORT_OUTER = 'e-report-outer';\n/** @hidden */\nexport var GRID_REPORT_DIALOG = 'e-pivotview-report-dialog';\n/** @hidden */\nexport var TOOLBAR_FIELDLIST = 'e-toolbar-fieldlist';\n/** @hidden */\nexport var TOOLBAR_GRID = 'e-toolbar-grid';\n/** @hidden */\nexport var TOOLBAR_CHART = 'e-toolbar-chart';\n/** @hidden */\nexport var REPORT_LIST_DROP = 'e-reportlist-drop';\n/** @hidden */\nexport var PIVOTCHART = 'e-pivotchart';\n/** @hidden */\nexport var GROUP_CHART_ROW = 'e-group-chart-rows';\n/** @hidden */\nexport var GROUP_CHART_COLUMN = 'e-group-chart-columns';\n/** @hidden */\nexport var GROUP_CHART_VALUE = 'e-group-chart-values';\n/** @hidden */\nexport var GROUP_CHART_MULTI_VALUE = 'e-group-chart-multi-values';\n/** @hidden */\nexport var GROUP_CHART_ACCUMULATION_COLUMN = 'e-group-chart-accumulation-column';\n/** @hidden */\nexport var GROUP_CHART_FILTER = 'e-group-chart-filters';\n/** @hidden */\nexport var GROUP_CHART_VALUE_DROPDOWN_DIV = 'e-group-chart-values-drodown-div';\n/** @hidden */\nexport var GROUP_CHART_VALUE_DROPDOWN = 'e-group-chart-values-drodown';\n/** @hidden */\nexport var GROUP_CHART_COLUMN_DROPDOWN_DIV = 'e-group-chart-columns-dropdown-div';\n/** @hidden */\nexport var GROUP_CHART_COLUMN_DROPDOWN = 'e-group-chart-columns-dropdown';\n/** @hidden */\nexport var CHART_GROUPING_BAR_CLASS = 'e-chart-grouping-bar';\n/** @hidden */\nexport var PIVOT_DISABLE_ICON = 'e-pivotview-disable-icon';\n/** @hidden */\nexport var PIVOT_SELECT_ICON = 'e-pivotview-select-icon';\n/** @hidden */\nexport var VALUESHEADER = 'e-valuesheader';\n/** @hidden */\nexport var ICON_ASC = 'e-icon-ascending';\n/** @hidden */\nexport var ICON_DESC = 'e-icon-descending';\n/** @hidden */\nexport var GRID_GROUPING_BAR_CLASS = 'e-pivot-grouping-bar';\n/** @hidden */\nexport var MDX_QUERY = 'e-mdx-query';\n/** @hidden */\nexport var MDX_QUERY_CONTENT = 'e-mdx-query-content';\n/** @hidden */\nexport var GRID_MDX_DIALOG = 'e-pivotview-mdx-dialog';\n/** @hidden */\nexport var GRID_MDX = 'e-mdx';\n/** @hidden */\nexport var FORMATTING_DIALOG = 'e-pivot-format-dialog';\n/** @hidden */\nexport var FORMATTING_DIALOG_OUTER = 'e-pivot-format-dialog-outer';\n/** @hidden */\nexport var FORMATTING_VALUE_LABLE = 'e-pivot-format-value-lable';\n/** @hidden */\nexport var FORMATTING_VALUE_DROP = 'e-pivot-format-value-drop';\n/** @hidden */\nexport var FORMATTING_FORMAT_LABLE = 'e-pivot-format-lable';\n/** @hidden */\nexport var FORMATTING_FORMAT_DROP = 'e-pivot-format-drop';\n/** @hidden */\nexport var FORMATTING_CUSTOM_LABLE = 'e-pivot-format-custom-lable';\n/** @hidden */\nexport var FORMATTING_CUSTOM_TEXT = 'e-pivot-format-custom-text';\n/** @hidden */\nexport var FORMATTING_SYMBOL_LABLE = 'e-pivot-format-symbol-lable';\n/** @hidden */\nexport var FORMATTING_SYMBOL_DROP = 'e-pivot-format-symbol-drop';\n/** @hidden */\nexport var FORMATTING_GROUPING_LABLE = 'e-pivot-format-grouping-lable';\n/** @hidden */\nexport var FORMATTING_GROUPING_DROP = 'e-pivot-format-grouping-drop';\n/** @hidden */\nexport var FORMATTING_DECIMAL_LABLE = 'e-pivot-format-decimal-lable';\n/** @hidden */\nexport var FORMATTING_DECIMAL_DROP = 'e-pivot-format-decimal-drop';\n/** @hidden */\nexport var FORMATTING_TOOLBAR = 'e-pivot-format-toolbar';\n/** @hidden */\nexport var FORMATTING_TABLE = 'e-pivot-format-table';\n/** @hidden */\nexport var FORMATTING_MENU = 'e-pivot-format-menu';\n/** @hidden */\nexport var NUMBER_FORMATTING_MENU = 'e-pivot-number-format-menu';\n/** @hidden */\nexport var EMPTY_FORMAT = 'e-pivot-conditional-empty-format';\n/** @hidden */\nexport var CONDITIONAL_FORMATTING_MENU = 'e-pivot-conditional-format-menu';\n/** @hidden */\nexport var PIVOTCHART_INNER = 'e-pivotchart-inner';\n/** @hidden */\nexport var PIVOTCHART_TYPE_DIALOG = 'e-pivotchart-type-dialog';\n/** @hidden */\nexport var FORMAT_FONT_COLOR_PICKER = 'e-format-font-color-picker';\n/** @hidden */\nexport var GROUP_PIVOT_ROW = 'e-group-pivot-rows';\n","import { createElement, remove, extend, getInstance } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MaskedTextBox } from '@syncfusion/ej2-inputs';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport * as events from '../../common/base/constant';\nimport { PivotUtil } from '../../base/util';\n/**\n * `AggregateMenu` module to create aggregate type popup.\n */\n/** @hidden */\nvar AggregateMenu = /** @class */ (function () {\n    /**\n     * Constructor for the rener action.\n     * @hidden\n     */\n    function AggregateMenu(parent) {\n        this.menuInfo = [];\n        this.parent = parent;\n    }\n    /**\n     * Initialize the pivot table rendering\n     * @returns void\n     * @private\n     */\n    AggregateMenu.prototype.render = function (args, parentElement) {\n        this.parentElement = parentElement;\n        this.openContextMenu(args);\n    };\n    AggregateMenu.prototype.openContextMenu = function (args) {\n        var _this = this;\n        var fieldName = args.target.parentElement.id;\n        this.buttonElement = args.target.parentElement;\n        var isStringField = this.parent.engineModule.fieldList[fieldName].type !== 'number' ? 1 : 0;\n        this.summaryTypes = this.getMenuItem(isStringField).slice();\n        var eventArgs = {\n            cancel: false, fieldName: fieldName, aggregateTypes: this.summaryTypes\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' && this.parent.isPopupView ?\n            this.parent.pivotGridModule : this.parent;\n        control.trigger(events.aggregateMenuOpen, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                _this.summaryTypes = observedArgs.aggregateTypes;\n                _this.createContextMenu(isStringField);\n                _this.currentMenu = args.target;\n                var pos = _this.currentMenu.getBoundingClientRect();\n                if (_this.parent.enableRtl) {\n                    _this.menuInfo[isStringField].open(pos.top + (window.scrollY || document.documentElement.scrollTop), pos.left - 105);\n                }\n                else {\n                    _this.menuInfo[isStringField].open(pos.top + (window.scrollY || document.documentElement.scrollTop), pos.left);\n                }\n            }\n        });\n    };\n    AggregateMenu.prototype.createContextMenu = function (isStringField) {\n        var _this = this;\n        var menuItems = [];\n        menuItems[isStringField] = [];\n        if (this.menuInfo[isStringField] && !this.menuInfo[isStringField].isDestroyed) {\n            this.menuInfo[isStringField].destroy();\n        }\n        var checkDuplicates = [];\n        for (var i = 0; i < this.summaryTypes.length; i++) {\n            var key = this.summaryTypes[i];\n            if (isStringField) {\n                if ((['Count', 'DistinctCount'].indexOf(key) > -1) && (checkDuplicates.indexOf(key) < 0)) {\n                    menuItems[isStringField].push({ text: this.parent.localeObj.getConstant(key), id: this.parent.element.id + 'StringMenu_' + key });\n                    checkDuplicates.push(key);\n                }\n            }\n            else {\n                if ((this.parent.getAllSummaryType().indexOf(key) > -1) && (checkDuplicates.indexOf(key) < 0)) {\n                    menuItems[isStringField].push({ text: this.parent.localeObj.getConstant(key), id: this.parent.element.id + '_' + key });\n                    checkDuplicates.push(key);\n                }\n            }\n        }\n        if (menuItems[isStringField].length >= 7) {\n            menuItems[isStringField].splice(7);\n            menuItems[isStringField].push({\n                text: this.parent.localeObj.getConstant('MoreOption'),\n                id: this.parent.element.id + '_' + 'MoreOption'\n            });\n        }\n        var menuOptions;\n        menuOptions = {\n            items: menuItems[isStringField],\n            enableRtl: this.parent.enableRtl,\n            beforeOpen: this.beforeMenuOpen.bind(this, isStringField),\n            onClose: function (args) {\n                _this.parentElement.querySelector('#' + _this.buttonElement.id).focus();\n            },\n            select: this.selectOptionInContextMenu.bind(this)\n        };\n        var contextMenu = document.getElementById(this.parent.element.id + (isStringField ? 'valueFieldStringContextMenu' : 'valueFieldContextMenu'));\n        if (contextMenu !== null) {\n            contextMenu.innerHTML = '';\n        }\n        else {\n            contextMenu = createElement('ul', {\n                id: this.parent.element.id + (isStringField ? 'valueFieldStringContextMenu' : 'valueFieldContextMenu')\n            });\n        }\n        this.parent.element.appendChild(contextMenu);\n        this.menuInfo[isStringField] = new Menu(menuOptions);\n        this.menuInfo[isStringField].isStringTemplate = true;\n        this.menuInfo[isStringField].appendTo(contextMenu);\n    };\n    AggregateMenu.prototype.getMenuItem = function (isStringField) {\n        var menuItems = [];\n        for (var i = 0; i < this.parent.aggregateTypes.length; i++) {\n            var key = this.parent.aggregateTypes[i];\n            if (isStringField) {\n                if ((['Count', 'DistinctCount'].indexOf(key) > -1) && (menuItems.indexOf(key) === -1)) {\n                    menuItems.push(key);\n                }\n            }\n            else {\n                if ((this.parent.getAllSummaryType().indexOf(key) > -1) && (menuItems.indexOf(key) === -1)) {\n                    menuItems.push(key);\n                }\n            }\n        }\n        return menuItems;\n    };\n    AggregateMenu.prototype.beforeMenuOpen = function (isString, args) {\n        args.element.style.zIndex = (this.menuInfo[isString].element.style.zIndex + 3).toString();\n        args.element.style.display = 'inline';\n    };\n    /** @hidden */\n    AggregateMenu.prototype.createValueSettingsDialog = function (target, parentElement, type) {\n        var _this = this;\n        this.parentElement = parentElement;\n        var valueDialog = createElement('div', {\n            id: this.parentElement.id + '_ValueDialog',\n            className: 'e-value-field-settings',\n            attrs: { 'data-field': target.id }\n        });\n        this.parentElement.appendChild(valueDialog);\n        this.valueDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            header: this.parent.localeObj.getConstant('valueFieldSettings'),\n            content: this.createFieldOptions(target, type),\n            isModal: true,\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.updateValueSettings.bind(this),\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true }\n                },\n                {\n                    click: function () { _this.valueDialog.hide(); },\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            /* tslint:disable-next-line:max-line-length */\n            closeOnEscape: (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.renderMode === 'Popup') ? false : true,\n            target: this.parentElement,\n            overlayClick: function () { _this.removeDialog(); },\n            close: this.removeDialog.bind(this)\n        });\n        this.valueDialog.isStringTemplate = true;\n        this.valueDialog.appendTo(valueDialog);\n        // this.valueDialog.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('valueFieldSettings');\n    };\n    /* tslint:disable:max-func-body-length */\n    AggregateMenu.prototype.createFieldOptions = function (buttonElement, type) {\n        var fieldCaption = buttonElement.getAttribute('data-caption');\n        var summaryType = (type && type !== 'MoreOption') ? type : buttonElement.getAttribute('data-type');\n        var baseField = buttonElement.getAttribute('data-basefield');\n        var baseItem = buttonElement.getAttribute('data-baseitem');\n        summaryType = (summaryType.toString() !== 'undefined' ? summaryType : 'Sum');\n        var summaryDataSource = [];\n        var summaryItems = this.parent.aggregateTypes;\n        var checkDuplicates = [];\n        for (var i = 0; i < summaryItems.length; i++) {\n            if (this.parent.getAllSummaryType().indexOf(summaryItems[i]) > -1 && checkDuplicates.indexOf(summaryItems[i]) < 0) {\n                summaryDataSource.push({ value: summaryItems[i], text: this.parent.localeObj.getConstant(summaryItems[i]) });\n                checkDuplicates.push(summaryItems[i]);\n            }\n        }\n        var baseItemTypes = ['DifferenceFrom', 'PercentageOfDifferenceFrom'];\n        var baseFieldTypes = ['DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'];\n        var dataFields = extend([], this.parent.dataSourceSettings.rows, null, true);\n        dataFields = dataFields.concat(this.parent.dataSourceSettings.columns);\n        var fieldDataSource = [];\n        var fieldItemDataSource = [];\n        // let summaryDataSource: { [key: string]: Object }[] = [];\n        // for (let type of summaryTypes) {\n        //     summaryDataSource.push({ value: type, text: type });\n        // }\n        for (var _i = 0, dataFields_1 = dataFields; _i < dataFields_1.length; _i++) {\n            var field = dataFields_1[_i];\n            var value = field.name;\n            var text = (field.caption ? field.caption : field.name);\n            fieldDataSource.push({ value: value, text: text });\n        }\n        /* tslint:disable-next-line:max-line-length */\n        baseField = (baseField && (baseField.toString() !== 'undefined' && baseField.toString() !== 'null') ? baseField : fieldDataSource[0].value);\n        fieldItemDataSource = Object.keys(this.parent.engineModule.fieldList[(baseField.toString() !== 'undefined' ?\n            baseField : fieldDataSource[0].value)].formattedMembers);\n        baseItem = (baseItem.toString() !== 'undefined' ? baseItem : fieldItemDataSource[0]);\n        var mainDiv = createElement('div', {\n            className: 'e-value-field-div-content', id: this.parentElement.id + '_field_div_content',\n            attrs: { 'data-type': summaryType, 'data-caption': fieldCaption, 'data-basefield': baseField, 'data-baseitem': baseItem }\n        });\n        var textWrappper = createElement('div', { className: 'e-field-name-text-wrapper', });\n        var filterWrapperDiv1 = createElement('div', { className: 'e-field-option-wrapper' });\n        var optionWrapperDiv1 = createElement('div', { className: 'e-type-option-wrapper' });\n        var optionWrapperDiv2 = createElement('div', { className: 'e-base-field-option-wrapper' });\n        var optionWrapperDiv3 = createElement('div', { className: 'e-base-item-option-wrapper' });\n        /* tslint:disable-next-line:max-line-length */\n        var texttitle = createElement('div', { className: 'e-field-name-title', innerHTML: this.parent.localeObj.getConstant('sourceName') + '&nbsp;' });\n        var textContent = createElement('div', { className: 'e-field-name-content', innerHTML: buttonElement.id.toString() });\n        var inputTextDiv1 = createElement('div', {\n            className: 'e-type-option-text', innerHTML: this.parent.localeObj.getConstant('sourceCaption')\n        });\n        var optionTextDiv1 = createElement('div', {\n            className: 'e-base-field-option-text', innerHTML: this.parent.localeObj.getConstant('summarizeValuesBy')\n        });\n        var optionTextDiv2 = createElement('div', {\n            className: 'e-base-item-option-text', innerHTML: this.parent.localeObj.getConstant('baseField')\n        });\n        var optionTextDiv3 = createElement('div', {\n            className: 'e-type-option-text', innerHTML: this.parent.localeObj.getConstant('baseItem')\n        });\n        var inputDiv1 = createElement('div', { className: 'e-caption-input-wrapper' });\n        var dropOptionDiv1 = createElement('div', { id: this.parentElement.id + '_type_option' });\n        var dropOptionDiv2 = createElement('div', { id: this.parentElement.id + '_base_field_option' });\n        var dropOptionDiv3 = createElement('div', { id: this.parentElement.id + '_base_item_option' });\n        var inputField1 = createElement('input', {\n            id: this.parentElement.id + 'type_input_option',\n            className: 'e-caption-input-text',\n            attrs: { 'type': 'text' }\n        });\n        textWrappper.appendChild(texttitle);\n        textWrappper.appendChild(textContent);\n        inputDiv1.appendChild(inputTextDiv1);\n        inputDiv1.appendChild(inputField1);\n        optionWrapperDiv1.appendChild(optionTextDiv1);\n        optionWrapperDiv2.appendChild(optionTextDiv2);\n        optionWrapperDiv3.appendChild(optionTextDiv3);\n        optionWrapperDiv1.appendChild(dropOptionDiv1);\n        optionWrapperDiv2.appendChild(dropOptionDiv2);\n        optionWrapperDiv3.appendChild(dropOptionDiv3);\n        filterWrapperDiv1.appendChild(textWrappper);\n        filterWrapperDiv1.appendChild(inputDiv1);\n        filterWrapperDiv1.appendChild(optionWrapperDiv1);\n        filterWrapperDiv1.appendChild(optionWrapperDiv2);\n        filterWrapperDiv1.appendChild(optionWrapperDiv3);\n        mainDiv.appendChild(filterWrapperDiv1);\n        var popupInstance = this;\n        var optionWrapper1 = new DropDownList({\n            dataSource: summaryDataSource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' },\n            value: summaryType,\n            // popupWidth: 'auto',\n            cssClass: cls.VALUE_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                optionWrapper2.enabled = baseFieldTypes.indexOf(args.value) !== -1 ? true : false;\n                optionWrapper3.enabled = baseItemTypes.indexOf(args.value) !== -1 ? true : false;\n                if (optionWrapper3.enabled && optionWrapper3.dataSource.length === 1) {\n                    optionWrapper3.dataSource = fieldItemDataSource;\n                    optionWrapper3.dataBind();\n                }\n            }\n        });\n        optionWrapper1.isStringTemplate = true;\n        optionWrapper1.appendTo(dropOptionDiv1);\n        var optionWrapper2 = new DropDownList({\n            dataSource: fieldDataSource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' },\n            value: baseField,\n            // popupWidth: 'auto',\n            enabled: (baseFieldTypes.indexOf(summaryType) !== -1 ? true : false),\n            cssClass: cls.VALUE_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                fieldItemDataSource = Object.keys(popupInstance.parent.engineModule.fieldList[args.value].formattedMembers);\n                optionWrapper3.dataSource = fieldItemDataSource;\n                optionWrapper3.value = fieldItemDataSource[0];\n                optionWrapper3.filterBarPlaceholder = popupInstance.parent.localeObj.getConstant('example') + ' ' + fieldItemDataSource[0];\n                optionWrapper3.dataBind();\n            }\n        });\n        optionWrapper2.isStringTemplate = true;\n        optionWrapper2.appendTo(dropOptionDiv2);\n        var optionWrapper3 = new DropDownList({\n            dataSource: [fieldItemDataSource[0]], enableRtl: this.parent.enableRtl,\n            value: baseItem,\n            // popupWidth: 'auto',\n            allowFiltering: true,\n            filterBarPlaceholder: this.parent.localeObj.getConstant('example') + ' ' + fieldItemDataSource[0],\n            enabled: (baseItemTypes.indexOf(summaryType) !== -1 ? true : false),\n            cssClass: cls.FILTER_OPERATOR_CLASS, width: '100%',\n        });\n        optionWrapper3.isStringTemplate = true;\n        optionWrapper3.appendTo(dropOptionDiv3);\n        var inputObj1 = new MaskedTextBox({\n            placeholder: 'Enter field caption',\n            // floatLabelType: 'Auto',\n            enableRtl: this.parent.enableRtl,\n            value: fieldCaption, width: '100%'\n        });\n        inputObj1.isStringTemplate = true;\n        inputObj1.appendTo(inputField1);\n        return mainDiv;\n    };\n    AggregateMenu.prototype.selectOptionInContextMenu = function (menu) {\n        if (menu.item.text !== null) {\n            var buttonElement = this.currentMenu.parentElement;\n            var type = menu.item.id.split('_').pop();\n            if (type === 'MoreOption' || type === 'PercentageOfDifferenceFrom'\n                || type === 'PercentageOfParentTotal' || type === 'DifferenceFrom') {\n                this.createValueSettingsDialog(buttonElement, this.parentElement, type);\n            }\n            else {\n                var field = buttonElement.getAttribute('data-uid');\n                var valuefields = this.parent.dataSourceSettings.values;\n                var contentElement = buttonElement.querySelector('.e-content');\n                var captionName = menu.item.text + ' ' + this.parent.localeObj.getConstant('of') + ' ' +\n                    this.parent.engineModule.fieldList[field].caption;\n                contentElement.innerHTML = captionName;\n                contentElement.setAttribute('title', captionName);\n                buttonElement.setAttribute('data-type', type);\n                for (var vCnt = 0; vCnt < this.parent.dataSourceSettings.values.length; vCnt++) {\n                    if (this.parent.dataSourceSettings.values[vCnt].name === field) {\n                        /* tslint:disable:align */\n                        var dataSourceItem = extend({}, valuefields[vCnt].properties ?\n                            valuefields[vCnt].properties : valuefields[vCnt], null, true);\n                        /* tslint:enable:align */\n                        dataSourceItem.type = type;\n                        this.parent.engineModule.fieldList[field].aggregateType = type;\n                        valuefields.splice(vCnt, 1, dataSourceItem);\n                        this.parent.lastAggregationInfo = dataSourceItem;\n                    }\n                }\n                this.updateDataSource();\n            }\n        }\n    };\n    AggregateMenu.prototype.updateDataSource = function (isRefreshed) {\n        if (!this.parent.allowDeferLayoutUpdate || this.parent.getModuleName() === 'pivotview') {\n            this.parent.updateDataSource(isRefreshed);\n        }\n        else {\n            if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.renderMode === 'Popup') {\n                /* tslint:disable:align */\n                this.parent.pivotGridModule.setProperties({\n                    dataSourceSettings: this.parent.dataSourceSettings.properties\n                }, true);\n                this.parent.pivotGridModule.notify(events.uiUpdate, this);\n                this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n                /* tslint:enable:align */\n            }\n            else {\n                this.parent.triggerPopulateEvent();\n            }\n        }\n    };\n    AggregateMenu.prototype.updateValueSettings = function () {\n        var dialogElement = this.valueDialog.element;\n        var captionInstance = getInstance('#' + this.parentElement.id + 'type_input_option', MaskedTextBox);\n        var summaryInstance = getInstance('#' + this.parentElement.id + '_type_option', DropDownList);\n        var baseFieldInstance = getInstance('#' + this.parentElement.id + '_base_field_option', DropDownList);\n        var baseItemInstance = getInstance('#' + this.parentElement.id + '_base_item_option', DropDownList);\n        var fieldName = dialogElement.getAttribute('data-field');\n        var buttonElement;\n        if (this.parentElement.querySelector('.' + cls.PIVOT_BUTTON_CLASS)) {\n            buttonElement = this.parentElement.\n                querySelector('.' + cls.PIVOT_BUTTON_CLASS + '.' + fieldName.replace(/[^A-Z0-9]/ig, ''));\n        }\n        if (buttonElement) {\n            var contentElement = buttonElement.querySelector('.e-content');\n            var captionName = this.parent.localeObj.getConstant(summaryInstance.value) + ' ' +\n                this.parent.localeObj.getConstant('of') + ' ' + captionInstance.value;\n            contentElement.innerHTML = captionName;\n            contentElement.setAttribute('title', captionName);\n            buttonElement.setAttribute('data-type', summaryInstance.value);\n            buttonElement.setAttribute('data-caption', captionInstance.value);\n            buttonElement.setAttribute('data-basefield', baseFieldInstance.value);\n            buttonElement.setAttribute('data-baseitem', baseItemInstance.value);\n        }\n        var selectedField = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.values);\n        selectedField = selectedField.properties ?\n            selectedField.properties : selectedField;\n        selectedField.caption = captionInstance.value;\n        selectedField.type = summaryInstance.value;\n        selectedField.baseField = baseFieldInstance.value;\n        selectedField.baseItem = baseItemInstance.value;\n        this.valueDialog.close();\n        // this.parent.axisFieldModule.render();\n        this.parent.lastAggregationInfo = selectedField;\n        this.updateDataSource(true);\n    };\n    AggregateMenu.prototype.removeDialog = function () {\n        this.parentElement.querySelector('#' + this.buttonElement.id).focus();\n        if (this.valueDialog && !this.valueDialog.isDestroyed) {\n            this.valueDialog.destroy();\n        }\n        if (document.getElementById(this.parentElement.id + '_ValueDialog')) {\n            remove(document.getElementById(this.parentElement.id + '_ValueDialog'));\n        }\n    };\n    /**\n     * To destroy the pivot button event listener\n     * @return {void}\n     * @hidden\n     */\n    AggregateMenu.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        if (this.menuInfo) {\n            if (this.menuInfo[1] !== undefined && !this.menuInfo[1].isDestroyed) {\n                this.menuInfo[1].destroy();\n            }\n            if (this.menuInfo[0] !== undefined && !this.menuInfo[0].isDestroyed) {\n                this.menuInfo[0].destroy();\n            }\n        }\n        else {\n            return;\n        }\n    };\n    return AggregateMenu;\n}());\nexport { AggregateMenu };\n","import { Reorder, headerRefreshed } from '@syncfusion/ej2-grids';\nimport { Grid, Resize, ExcelExport, PdfExport, ContextMenu, Freeze } from '@syncfusion/ej2-grids';\nimport { Selection } from '@syncfusion/ej2-grids';\nimport { createElement, setStyleAttribute, remove, isNullOrUndefined, EventHandler, getElement } from '@syncfusion/ej2-base';\nimport { isBlazor, addClass, removeClass, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { AggregateMenu } from '../../common/popups/aggregate-menu';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render PivotGrid control\n */\n/** @hidden */\nvar Render = /** @class */ (function () {\n    /** Constructor for render module */\n    function Render(parent) {\n        this.indentCollection = {};\n        this.colPos = 0;\n        this.lastSpan = 0;\n        this.lvlCollection = {};\n        this.hierarchyCollection = {};\n        this.lvlPosCollection = {};\n        this.hierarchyPosCollection = {};\n        this.position = 0;\n        this.measurePos = 0;\n        this.maxMeasurePos = 0;\n        this.hierarchyCount = 0;\n        this.actualText = '';\n        this.parent = parent;\n        this.resColWidth = (this.parent.showGroupingBar && this.parent.groupingBarModule) ? (this.parent.isAdaptive ? 180 : 250) :\n            (this.parent.isAdaptive ? 140 : 200);\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        this.gridSettings = parent.gridSettings;\n        this.formatList = this.getFormatList();\n        this.aggMenu = new AggregateMenu(this.parent);\n    }\n    /** @hidden */\n    Render.prototype.render = function () {\n        var parent = this.parent;\n        var engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        this.parent.gridHeaderCellInfo = [];\n        this.parent.gridCellCollection = {};\n        this.injectGridModules(parent);\n        this.rowStartPos = this.getRowStartPos();\n        if (this.parent.grid && this.parent.grid.element && this.parent.element.querySelector('.e-grid')) {\n            if (!engine.isEngineUpdated) {\n                engine.headerContent = this.frameDataSource('header');\n                engine.valueContent = this.frameDataSource('value');\n            }\n            else {\n                if (this.parent.enableValueSorting) {\n                    engine.valueContent = this.frameDataSource('value');\n                }\n                engine.isEngineUpdated = false;\n            }\n            /* tslint:disable */\n            this.parent.grid.setProperties({\n                columns: this.frameStackedHeaders(), dataSource: (this.parent.dataType === 'olap' ? true :\n                    parent.dataSourceSettings.values.length > 0) && !this.engine.isEmptyData ? engine.valueContent :\n                    this.frameDataSource('value')\n            }, true);\n            /* tslint:enable */\n            this.parent.grid.notify('datasource-modified', {});\n            if (this.parent.isScrolling) {\n                this.parent.resizeInfo = {};\n            }\n            this.parent.grid.refreshColumns();\n            if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n                this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                this.parent.groupingBarModule.setGridRowWidth();\n            }\n            var e = this.parent.element.querySelector('.e-movablecontent');\n            e.querySelector('colGroup').innerHTML =\n                this.parent.grid.getHeaderContent().querySelector('.e-movableheader').querySelector('colgroup').innerHTML;\n            this.parent.grid.width = this.calculateGridWidth();\n            if (!this.parent.isScrolling) {\n                this.calculateGridHeight(true);\n            }\n            //this.parent.isScrolling = false;\n        }\n        else {\n            this.parent.element.innerHTML = '';\n            this.bindGrid(this.parent, (this.engine.isEmptyData ? true : false));\n            this.parent.element.appendChild(createElement('div', { id: this.parent.element.id + '_grid' }));\n            this.parent.grid.isStringTemplate = true;\n            this.parent.grid.appendTo('#' + this.parent.element.id + '_grid');\n        }\n        this.parent.grid.on(headerRefreshed, this.refreshHeader, this);\n    };\n    Render.prototype.refreshHeader = function () {\n        if (this.parent.enableVirtualization) {\n            var mHdr = this.parent.element.querySelector('.' + cls.MOVABLEHEADER_DIV);\n            var mCont = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV);\n            var vtr = mCont.querySelector('.' + cls.VIRTUALTRACK_DIV);\n            this.parent.virtualHeaderDiv = mHdr.querySelector('.' + cls.VIRTUALTRACK_DIV);\n            if (mHdr.querySelector('.' + cls.VIRTUALTRACK_DIV)) {\n                remove(mHdr.querySelector('.' + cls.VIRTUALTRACK_DIV));\n            }\n            else {\n                this.parent.virtualHeaderDiv = createElement('div', { className: cls.VIRTUALTRACK_DIV });\n            }\n            mHdr.appendChild(this.parent.virtualHeaderDiv);\n            if (vtr) {\n                setStyleAttribute(this.parent.virtualHeaderDiv, { height: 0, width: vtr.style.width });\n            }\n            setStyleAttribute(mHdr.querySelector('.e-table'), {\n                transform: (mCont.querySelector('.e-table').style.transform).split(',')[0] + ',' + 0 + 'px)'\n            });\n            mHdr.scrollLeft = mCont.scrollLeft;\n        }\n    };\n    /** @hidden */\n    Render.prototype.bindGrid = function (parent, isEmpty) {\n        this.injectGridModules(parent);\n        this.parent.grid = new Grid({\n            frozenColumns: 1,\n            frozenRows: 0,\n            enableHover: false,\n            dataSource: isEmpty ? this.frameEmptyData() : this.frameDataSource('value'),\n            columns: isEmpty ? this.frameEmptyColumns() : this.frameStackedHeaders(),\n            height: isEmpty ? 'auto' : this.calculateGridHeight(),\n            width: isEmpty ? this.parent.width : this.calculateGridWidth(),\n            locale: parent.locale,\n            enableRtl: parent.enableRtl,\n            allowExcelExport: parent.allowExcelExport,\n            allowPdfExport: parent.allowPdfExport,\n            allowResizing: this.gridSettings.allowResizing,\n            allowTextWrap: this.gridSettings.allowTextWrap,\n            allowReordering: (this.parent.showGroupingBar ? false : this.gridSettings.allowReordering),\n            allowSelection: this.gridSettings.allowSelection,\n            /* tslint:disable-next-line */\n            contextMenuItems: this.gridSettings.contextMenuItems,\n            selectedRowIndex: this.gridSettings.selectedRowIndex,\n            /* tslint:disable-next-line */\n            selectionSettings: this.gridSettings.selectionSettings,\n            textWrapSettings: this.gridSettings.textWrapSettings,\n            printMode: this.gridSettings.printMode,\n            rowHeight: this.gridSettings.rowHeight,\n            gridLines: this.gridSettings.gridLines,\n            contextMenuClick: this.contextMenuClick.bind(this),\n            contextMenuOpen: this.contextMenuOpen.bind(this),\n            beforeCopy: this.gridSettings.beforeCopy ? this.gridSettings.beforeCopy.bind(this.parent) : undefined,\n            beforePrint: this.gridSettings.beforePrint ? this.gridSettings.beforePrint.bind(this.parent) : undefined,\n            printComplete: this.gridSettings.printComplete ? this.gridSettings.printComplete.bind(this.parent) : undefined,\n            rowSelecting: this.gridSettings.rowSelecting ? this.gridSettings.rowSelecting.bind(this.parent) : undefined,\n            rowSelected: this.rowSelected.bind(this),\n            rowDeselecting: this.gridSettings.rowDeselecting ? this.gridSettings.rowDeselecting.bind(this.parent) : undefined,\n            rowDeselected: this.rowDeselected.bind(this),\n            cellSelecting: this.gridSettings.cellSelecting ? this.gridSettings.cellSelecting.bind(this.parent) : undefined,\n            cellSelected: this.cellSelected.bind(this),\n            cellDeselecting: this.gridSettings.cellDeselecting ? this.gridSettings.cellDeselecting.bind(this.parent) : undefined,\n            cellDeselected: this.cellDeselected.bind(this),\n            resizeStart: this.gridSettings.resizeStart ? this.gridSettings.resizeStart.bind(this.parent) : undefined,\n            columnDragStart: this.gridSettings.columnDragStart ? this.gridSettings.columnDragStart.bind(this) : undefined,\n            columnDrag: this.gridSettings.columnDrag ? this.gridSettings.columnDrag.bind(this) : undefined,\n            columnDrop: this.gridSettings.columnDrop ? this.gridSettings.columnDrop.bind(this) : undefined,\n            beforeExcelExport: this.beforeExcelExport.bind(this),\n            resizing: this.setGroupWidth.bind(this),\n            resizeStop: this.onResizeStop.bind(this),\n            queryCellInfo: this.queryCellInfo.bind(this),\n            dataBound: this.dataBound.bind(this),\n            headerCellInfo: this.headerCellInfo.bind(this),\n            excelHeaderQueryCellInfo: this.excelHeaderQueryCellInfo.bind(this),\n            pdfHeaderQueryCellInfo: this.pdfHeaderQueryCellInfo.bind(this),\n            excelQueryCellInfo: this.excelQueryCellInfo.bind(this),\n            pdfQueryCellInfo: this.pdfQueryCellInfo.bind(this),\n            beforePdfExport: this.gridSettings.beforePdfExport ? this.gridSettings.beforePdfExport.bind(this) : undefined,\n            pdfExportComplete: this.pdfExportComplete.bind(this),\n            excelExportComplete: this.excelExportComplete.bind(this)\n        });\n        if (isBlazor()) {\n            var isJsComponent = 'isJsComponent';\n            /* tslint:disable-next-line */\n            this.parent.grid[isJsComponent] = true;\n        }\n        this.parent.grid.on('header-refreshed', this.headerRefreshed.bind(this));\n        this.parent.grid.on('export-DataBound', this.excelDataBound.bind(this));\n    };\n    /* tslint:disable-next-line */\n    Render.prototype.headerRefreshed = function (args) {\n        if (this.parent.lastGridSettings && Object.keys(this.parent.lastGridSettings).indexOf('allowResizing') > -1) {\n            this.parent.lastGridSettings = undefined;\n            if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n                this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                this.parent.groupingBarModule.setGridRowWidth();\n            }\n        }\n    };\n    /* tslint:disable-next-line */\n    Render.prototype.beforeExcelExport = function (args) {\n        if (!isNullOrUndefined(args.gridObject.columns) && !isNullOrUndefined(this.parent.pivotColumns)) {\n            args.gridObject.columns[args.gridObject.columns.length - 1].width =\n                this.parent.pivotColumns[this.parent.pivotColumns.length - 1].width;\n        }\n        this.parent.trigger(events.beforeExcelExport, args);\n    };\n    Render.prototype.rowSelected = function (args) {\n        this.parent.renderModule.selected();\n        this.parent.trigger(events.rowSelected, args);\n    };\n    Render.prototype.rowDeselected = function (args) {\n        this.parent.renderModule.selected();\n        this.parent.trigger(events.rowDeselected, args);\n    };\n    Render.prototype.cellSelected = function (args) {\n        if (this.parent.rowRangeSelection.enable) {\n            this.parent.grid.selectionModule.selectRowsByRange(this.parent.rowRangeSelection.startIndex, this.parent.rowRangeSelection.endIndex);\n            this.parent.rowRangeSelection.enable = false;\n        }\n        else {\n            this.parent.renderModule.selected();\n            this.parent.trigger(events.selected, args);\n        }\n    };\n    Render.prototype.cellSelecting = function (args) {\n        this.parent.trigger(events.cellSelecting, args);\n    };\n    Render.prototype.cellDeselected = function (args) {\n        this.parent.renderModule.selected();\n        this.parent.trigger(events.cellDeselected, args);\n    };\n    Render.prototype.queryCellInfo = function (args) {\n        this.parent.renderModule.rowCellBoundEvent(args);\n    };\n    Render.prototype.headerCellInfo = function (args) {\n        this.parent.renderModule.columnCellBoundEvent(args);\n    };\n    Render.prototype.excelHeaderQueryCellInfo = function (args) {\n        this.parent.renderModule.excelColumnEvent(args);\n    };\n    Render.prototype.pdfQueryCellInfo = function (args) {\n        this.parent.renderModule.pdfRowEvent(args);\n    };\n    Render.prototype.excelQueryCellInfo = function (args) {\n        this.parent.renderModule.excelRowEvent(args);\n    };\n    Render.prototype.pdfHeaderQueryCellInfo = function (args) {\n        this.parent.renderModule.pdfColumnEvent(args);\n    };\n    /* tslint:disable */\n    Render.prototype.pdfExportComplete = function (args) {\n        if (this.parent.lastColumn !== undefined && this.parent.lastColumn.width !== 'auto') {\n            this.parent.lastColumn.width = 'auto';\n            this.parent.lastColumn = undefined;\n        }\n    };\n    Render.prototype.excelExportComplete = function (args) {\n        if (this.parent.lastColumn !== undefined && this.parent.lastColumn.width !== 'auto') {\n            this.parent.lastColumn.width = 'auto';\n            this.parent.lastColumn = undefined;\n        }\n    };\n    /* tslint:enable */\n    Render.prototype.dataBound = function (args) {\n        if (this.parent.cellTemplate && !isBlazor()) {\n            for (var _i = 0, _a = this.parent.gridHeaderCellInfo; _i < _a.length; _i++) {\n                var cell = _a[_i];\n                if (this.parent.cellTemplate) {\n                    /* tslint:disable-next-line */\n                    var element = this.parent.getCellTemplate()(cell, this.parent, 'cellTemplate', this.parent.element.id + '_cellTemplate', null, null, cell.targetCell);\n                    if (element && element !== '' && element.length > 0) {\n                        if (this.parent.enableHtmlSanitizer) {\n                            this.parent.appendHtml(cell.targetCell, SanitizeHtmlHelper.sanitize(element[0].outerHTML));\n                        }\n                        else {\n                            this.parent.appendHtml(cell.targetCell, element[0].outerHTML);\n                        }\n                    }\n                }\n            }\n            this.parent.gridHeaderCellInfo = [];\n        }\n        if (this.parent.element.querySelector('.e-firstcell')) {\n            if (this.parent.enableRtl) {\n                this.parent.element.querySelector('.e-firstcell').style.borderRight = 'none';\n            }\n            else {\n                this.parent.element.querySelector('.e-firstcell').style.borderLeft = 'none';\n            }\n        }\n        if (this.parent.grid && this.parent.grid.widthService) {\n            this.parent.grid.widthService.setWidthToTable();\n        }\n        /* tslint:disable-next-line */\n        if (this.parent.notEmpty) {\n            this.calculateGridHeight(true);\n        }\n        if (this.parent.currentView !== 'Chart') {\n            this.parent.grid.hideScroll();\n        }\n        this.parent.isScrolling = false;\n        this.setFocusOnLastCell();\n        if (!isNullOrUndefined(this.parent.renderReactTemplates)) {\n            this.parent.renderReactTemplates();\n        }\n        this.parent.notify(events.contentReady, {});\n    };\n    Render.prototype.setFocusOnLastCell = function () {\n        if (this.parent.keyboardModule && this.parent.keyboardModule.event &&\n            this.parent.keyboardModule.event.target.nodeName === 'TD') {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            gridFocus.setFocusedElement(this.parent.keyboardModule.event.target);\n            gridFocus.focus(this.parent.keyboardModule.event);\n            addClass([this.parent.keyboardModule.event.target], ['e-focused', 'e-focus']);\n            this.parent.keyboardModule.event.target.setAttribute('tabindex', '0');\n            this.parent.keyboardModule.event = undefined;\n        }\n    };\n    /* tslint:disable */\n    Render.prototype.contextMenuOpen = function (args) {\n        var _this = this;\n        var _loop_1 = function (item) {\n            var cellTarget = this_1.parent.lastCellClicked;\n            var elem = null;\n            var bool = void 0;\n            var isGroupElement = void 0;\n            if (cellTarget.classList.contains('e-stackedheadercelldiv') || cellTarget.classList.contains('e-cellvalue') ||\n                cellTarget.classList.contains('e-headercelldiv') || cellTarget.classList.contains('e-icons') || cellTarget.classList.contains('e-rhandler')) {\n                elem = cellTarget.parentElement;\n            }\n            else if (cellTarget.classList.contains('e-headercell') || cellTarget.classList.contains('e-rowcell') || cellTarget.classList.contains('e-columnsheader') ||\n                cellTarget.classList.contains('e-rowsheader') || cellTarget.classList.contains('e-valuescontent') || cellTarget.classList.contains('e-valuesheader')) {\n                elem = cellTarget;\n            }\n            else if (cellTarget.classList.contains('e-headertext')) {\n                elem = cellTarget.parentElement.parentElement;\n            }\n            if (!elem) {\n                args.cancel = true;\n                return { value: void 0 };\n            }\n            if (elem.classList.contains('e-valuesheader') || elem.classList.contains('e-stot')) {\n                bool = true;\n            }\n            if (this_1.parent.allowGrouping && this_1.parent.groupingModule && !this_1.validateField(elem)) {\n                isGroupElement = true;\n            }\n            var rowIndex = Number(elem.getAttribute('index'));\n            var colIndex = Number(elem.getAttribute('aria-colindex'));\n            var pivotValue1 = this_1.parent.pivotValues[rowIndex][colIndex];\n            var select = item.id;\n            switch (select) {\n                case this_1.parent.element.id + '_expand':\n                    if (elem.querySelectorAll('.' + cls.EXPAND).length > 0) {\n                        if (args.element.querySelectorAll('#' + this_1.parent.element.id + '_expand')) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.add(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.contains(cls.MENU_DISABLE)) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.remove(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.contains(cls.MENU_HIDE)) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.remove(cls.MENU_HIDE);\n                            args.element.querySelector('#' + this_1.parent.element.id + '_collapse').classList.remove(cls.MENU_HIDE);\n                        }\n                    }\n                    else {\n                        if (bool) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.add(cls.MENU_HIDE);\n                        }\n                        else {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_collapse':\n                    if (elem.querySelectorAll('.' + cls.COLLAPSE).length > 0) {\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_expand')) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.add(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_collapse').classList.contains(cls.MENU_DISABLE)) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_collapse').classList.remove(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_collapse').classList.contains(cls.MENU_HIDE)) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_collapse').classList.remove(cls.MENU_HIDE);\n                            args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.remove(cls.MENU_HIDE);\n                        }\n                    }\n                    else {\n                        if (bool) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_collapse').classList.add(cls.MENU_HIDE);\n                        }\n                        else {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_collapse').classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_custom_group':\n                    if (!isGroupElement && args.items.length === 2) {\n                        args.cancel = true;\n                    }\n                    if (args.element.querySelectorAll('#' + this_1.parent.element.id + '_custom_group')) {\n                        addClass([args.element.querySelector('#' + this_1.parent.element.id + '_custom_group')], cls.MENU_HIDE);\n                    }\n                    if (isGroupElement) {\n                        if (args.element.querySelectorAll('#' + this_1.parent.element.id + '_custom_group')) {\n                            removeClass([args.element.querySelector('#' + this_1.parent.element.id + '_custom_group')], cls.MENU_HIDE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_custom_ungroup':\n                    if (args.element.querySelectorAll('#' + this_1.parent.element.id + '_custom_ungroup')) {\n                        addClass([args.element.querySelector('#' + this_1.parent.element.id + '_custom_ungroup')], cls.MENU_HIDE);\n                    }\n                    if (isGroupElement) {\n                        var isUngroupOption = false;\n                        var fieldName = elem.getAttribute('fieldname');\n                        var groupField = PivotUtil.getFieldByName(fieldName, this_1.parent.dataSourceSettings.groupSettings);\n                        if (groupField && groupField.type === 'Custom' || (this_1.parent.engineModule.fieldList[fieldName].isCustomField && fieldName.indexOf('_custom_group') > -1)) {\n                            groupField = PivotUtil.getFieldByName(fieldName.replace('_custom_group', ''), this_1.parent.dataSourceSettings.groupSettings);\n                            if (groupField) {\n                                var cell = this_1.parent.engineModule.pivotValues[Number(elem.getAttribute('index'))][Number(elem.getAttribute('aria-colindex'))];\n                                var selectedCellsInfo = this_1.parent.groupingModule.getSelectedCells(cell.axis, fieldName, cell.actualText.toString());\n                                selectedCellsInfo.push({ axis: cell.axis, fieldName: fieldName, name: cell.actualText.toString(), cellInfo: cell });\n                                var selectedOptions = this_1.parent.groupingModule.getSelectedOptions(selectedCellsInfo);\n                                for (var _i = 0, _a = groupField.customGroups; _i < _a.length; _i++) {\n                                    var customGroup = _a[_i];\n                                    if (selectedOptions.indexOf(customGroup.groupName) > -1) {\n                                        isUngroupOption = true;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                        else if (groupField && (groupField.type === 'Date' || groupField.type === 'Number') ||\n                            (this_1.parent.engineModule.fieldList[fieldName].isCustomField && fieldName.indexOf('_date_group') > -1)) {\n                            isUngroupOption = true;\n                        }\n                        if (args.element.querySelectorAll('#' + this_1.parent.element.id + '_custom_ungroup') && isUngroupOption) {\n                            removeClass([args.element.querySelector('#' + this_1.parent.element.id + '_custom_ungroup')], cls.MENU_HIDE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_drillthrough':\n                    if (!this_1.parent.allowDrillThrough) {\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_drillthrough')) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_drillthrough').classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (!(elem.classList.contains('e-summary'))) {\n                        if (elem.innerText === '') {\n                            if (args.element.querySelector('#' + this_1.parent.element.id + '_drillthrough')) {\n                                args.element.querySelector('#' + this_1.parent.element.id + '_drillthrough').classList.add(cls.MENU_DISABLE);\n                            }\n                        }\n                    }\n                    else {\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_drillthrough').classList.contains(cls.MENU_DISABLE)) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_drillthrough').classList.remove(cls.MENU_DISABLE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_sortasc':\n                    if (!this_1.parent.enableValueSorting) {\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_sortasc')) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortasc').classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (elem.querySelectorAll('.e-icon-descending').length > 0) {\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc')) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc').classList.add(cls.MENU_DISABLE);\n                        }\n                        else {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc').classList.remove(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_sortasc').classList.contains(cls.MENU_DISABLE)) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortasc').classList.remove(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc').classList.contains(cls.MENU_DISABLE)) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc').classList.remove(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_sortdesc':\n                    if (!this_1.parent.enableValueSorting) {\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc')) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc').classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (elem.querySelectorAll('.e-icon-ascending').length > 0) {\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_sortasc')) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortasc').classList.add(cls.MENU_DISABLE);\n                        }\n                        else {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortasc').classList.remove(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc').classList.contains(cls.MENU_DISABLE)) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc').classList.remove(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (args.element.querySelector('#' + this_1.parent.element.id + '_sortasc').classList.contains(cls.MENU_DISABLE)) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_sortasc').classList.remove(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_CalculatedField':\n                    if (!this_1.parent.allowCalculatedField) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_CalculatedField').classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_pdf':\n                    if (!this_1.parent.allowPdfExport) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_pdf').classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_excel':\n                    if (!this_1.parent.allowExcelExport) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_excel').classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_csv':\n                    if (!this_1.parent.allowExcelExport) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_csv').classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_exporting':\n                    if ((!this_1.parent.allowExcelExport) && (!this_1.parent.allowPdfExport)) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_exporting').classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_aggregate':\n                    if ((args.element.querySelector('#' + this_1.parent.element.id + '_aggregate')) &&\n                        (!args.element.querySelector('#' + this_1.parent.element.id + '_aggregate').classList.contains(cls.MENU_DISABLE))) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_aggregate').classList.add(cls.MENU_DISABLE);\n                    }\n                    if ((elem.classList.contains('e-valuesheader') || elem.classList.contains('e-valuescontent') ||\n                        (elem.classList.contains('e-stot') && elem.classList.contains('e-rowsheader'))) && this_1.parent.dataType !== 'olap') {\n                        var fieldType_1;\n                        if (!(elem.innerText === '')) {\n                            fieldType_1 = this_1.parent.engineModule.fieldList[pivotValue1.actualText.toString()].type;\n                        }\n                        var eventArgs = {\n                            cancel: false, fieldName: pivotValue1.actualText.toString(),\n                            aggregateTypes: this_1.getMenuItem(fieldType_1).slice()\n                        };\n                        this_1.parent.trigger(events.aggregateMenuOpen, eventArgs, function (observedArgs) {\n                            if (!observedArgs.cancel && !(elem.innerText === '')) {\n                                var menuItem = [];\n                                var checkDuplicates = [];\n                                for (var i = 0; i < observedArgs.aggregateTypes.length; i++) {\n                                    var key = observedArgs.aggregateTypes[i];\n                                    if (fieldType_1 !== 'number') {\n                                        if ((['Count', 'DistinctCount'].indexOf(key) > -1) && (checkDuplicates.indexOf(key) < 0)) {\n                                            menuItem.push({ text: _this.parent.localeObj.getConstant(key), id: _this.parent.element.id + '_Agg' + key });\n                                            checkDuplicates.push(key);\n                                        }\n                                    }\n                                    else {\n                                        if ((_this.parent.getAllSummaryType().indexOf(key) > -1) && (checkDuplicates.indexOf(key) < 0)) {\n                                            menuItem.push({ text: _this.parent.localeObj.getConstant(key), id: _this.parent.element.id + '_Agg' + key });\n                                            checkDuplicates.push(key);\n                                        }\n                                    }\n                                }\n                                if (menuItem.length >= 7) {\n                                    menuItem.splice(7);\n                                    menuItem.push({\n                                        text: _this.parent.localeObj.getConstant('MoreOption'),\n                                        id: _this.parent.element.id + '_Agg' + 'MoreOption'\n                                    });\n                                }\n                                if (menuItem && menuItem.length >= 1) {\n                                    item.items = menuItem;\n                                    args.element.querySelector('#' + _this.parent.element.id + '_aggregate').classList.remove(cls.MENU_DISABLE);\n                                }\n                            }\n                        });\n                    }\n                    break;\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            var state_1 = _loop_1(item);\n            if (typeof state_1 === \"object\")\n                return state_1.value;\n        }\n        this.parent.trigger(events.contextMenuOpen, args);\n    };\n    Render.prototype.getMenuItem = function (isStringField) {\n        var menuItems = [];\n        for (var i = 0; i < this.parent.aggregateTypes.length; i++) {\n            var key = this.parent.aggregateTypes[i];\n            if (isStringField !== 'string') {\n                if ((this.parent.getAllSummaryType().indexOf(key) > -1) && (menuItems.indexOf(key) === -1)) {\n                    menuItems.push(key);\n                }\n            }\n            else {\n                if ((['Count', 'DistinctCount'].indexOf(key) > -1) && (menuItems.indexOf(key) === -1)) {\n                    menuItems.push(key);\n                }\n            }\n        }\n        return menuItems;\n    };\n    Render.prototype.contextMenuClick = function (args) {\n        var _this = this;\n        // this.parent.gridSettings.contextMenuClick();\n        var target = this.parent.lastCellClicked;\n        var selected = args.item.id;\n        var event = new MouseEvent('dblclick', {\n            'view': window,\n            'bubbles': true,\n            'cancelable': true\n        });\n        var exportArgs = {};\n        var ele = null;\n        if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-cellvalue') ||\n            target.classList.contains('e-headercelldiv') || target.classList.contains('e-icons') || target.classList.contains('e-rhandler')) {\n            ele = target.parentElement;\n        }\n        else if (target.classList.contains('e-headercell') || target.classList.contains('e-rowcell')) {\n            ele = target;\n        }\n        else if (target.classList.contains('e-headertext')) {\n            ele = target.parentElement.parentElement;\n        }\n        var rowIndx = Number(ele.getAttribute('index'));\n        var colIndx = Number(ele.getAttribute('aria-colindex'));\n        var pivotValue = this.parent.pivotValues[rowIndx][colIndx];\n        var aggregateType;\n        if (args.item.id.indexOf(this.parent.element.id + '_Agg') > -1) {\n            this.field = this.parent.engineModule.fieldList[pivotValue.actualText.toString()].id;\n            this.fieldCaption = this.parent.engineModule.fieldList[pivotValue.actualText.toString()].caption;\n            aggregateType = args.item.id.split('_Agg')[1];\n        }\n        switch (selected) {\n            case this.parent.element.id + '_pdf':\n                exportArgs = {\n                    pdfDoc: undefined,\n                    isBlob: false,\n                    isMultipleExport: false,\n                    pdfExportProperties: { fileName: 'Export.pdf' },\n                };\n                this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                    if (isBlazor()) {\n                        var pdfProperties = PivotUtil.formatPdfExportProperties(observedArgs.pdfExportProperties);\n                        _this.parent.pdfExport(pdfProperties, observedArgs.isMultipleExport, observedArgs.pdfDoc, observedArgs.isBlob);\n                    }\n                    else {\n                        _this.parent.pdfExport(observedArgs.pdfExportProperties, observedArgs.isMultipleExport, observedArgs.pdfDoc, observedArgs.isBlob);\n                    }\n                });\n                break;\n            case this.parent.element.id + '_excel':\n                exportArgs = {\n                    isBlob: false,\n                    isMultipleExport: false,\n                    workbook: undefined,\n                    excelExportProperties: { fileName: 'Export.xlsx' },\n                };\n                this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                    if (isBlazor()) {\n                        var excelProperties = PivotUtil.formatExcelExportProperties(observedArgs.excelExportProperties);\n                        _this.parent.excelExport(excelProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                    }\n                    else {\n                        _this.parent.excelExport(observedArgs.excelExportProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                    }\n                });\n                break;\n            case this.parent.element.id + '_csv':\n                exportArgs = {\n                    isBlob: false,\n                    workbook: undefined,\n                    isMultipleExport: false,\n                    excelExportProperties: { fileName: 'Export.csv' },\n                };\n                this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                    if (isBlazor()) {\n                        var excelProperties = PivotUtil.formatExcelExportProperties(observedArgs.excelExportProperties);\n                        _this.parent.csvExport(excelProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                    }\n                    else {\n                        _this.parent.csvExport(observedArgs.excelExportProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                    }\n                });\n                break;\n            case this.parent.element.id + '_drillthrough_menu':\n                ele.dispatchEvent(event);\n                break;\n            case this.parent.element.id + '_sortasc':\n                this.parent.setProperties({\n                    dataSourceSettings: {\n                        valueSortSettings: {\n                            headerText: pivotValue.valueSort.levelName,\n                            headerDelimiter: this.parent.dataSourceSettings.valueSortSettings.headerDelimiter\n                        }\n                    }\n                });\n                this.parent.dataSourceSettings.valueSortSettings.sortOrder = 'Ascending';\n                break;\n            case this.parent.element.id + '_sortdesc':\n                this.parent.setProperties({\n                    dataSourceSettings: {\n                        valueSortSettings: {\n                            headerText: pivotValue.valueSort.levelName,\n                            headerDelimiter: this.parent.dataSourceSettings.valueSortSettings.headerDelimiter\n                        }\n                    }\n                });\n                this.parent.dataSourceSettings.valueSortSettings.sortOrder = 'Descending';\n                break;\n            case this.parent.element.id + '_expand':\n                if (ele.querySelectorAll('.' + cls.EXPAND)) {\n                    var exp = ele.querySelectorAll('.' + cls.EXPAND)[0];\n                    this.parent.onDrill(exp);\n                }\n                break;\n            case this.parent.element.id + '_collapse':\n                if (ele.querySelectorAll('.' + cls.COLLAPSE)) {\n                    var colp = ele.querySelectorAll('.' + cls.COLLAPSE)[0];\n                    this.parent.onDrill(colp);\n                }\n                break;\n            case this.parent.element.id + '_CalculatedField':\n                this.parent.calculatedFieldModule.createCalculatedFieldDialog();\n                break;\n            case this.parent.element.id + '_AggMoreOption':\n            case this.parent.element.id + '_AggDifferenceFrom':\n            case this.parent.element.id + '_AggPercentageOfDifferenceFrom':\n            case this.parent.element.id + '_AggPercentageOfParentTotal':\n                ele.setAttribute('id', this.field);\n                ele.setAttribute('data-caption', this.fieldCaption);\n                ele.setAttribute('data-field', this.field);\n                ele.setAttribute('data-type', this.engine.fieldList[pivotValue.actualText.toString()].aggregateType);\n                ele.setAttribute('data-basefield', this.engine.fieldList[pivotValue.actualText.toString()].baseField);\n                ele.setAttribute('data-baseItem', this.engine.fieldList[pivotValue.actualText.toString()].baseItem);\n                this.aggMenu.createValueSettingsDialog(ele, this.parent.element, aggregateType);\n                break;\n            case this.parent.element.id + '_Agg' + aggregateType:\n                this.updateAggregate(aggregateType);\n                break;\n            case this.parent.element.id + '_custom_group':\n            case this.parent.element.id + '_custom_ungroup':\n                if (this.parent.groupingModule) {\n                    var args_1 = {\n                        target: ele,\n                        option: selected,\n                        parentElement: this.parent.element\n                    };\n                    this.parent.notify(events.initGrouping, args_1);\n                    this.parent.grid.contextMenuModule.contextMenu.close();\n                }\n                break;\n        }\n        this.parent.trigger(events.contextMenuClick, args);\n    };\n    Render.prototype.validateColumnTotalcell = function (columnIndex) {\n        var headerPosKeys = Object.keys(this.engine.headerContent);\n        var keysLength = headerPosKeys.length;\n        var sumLock = false;\n        var fieldName = \"\";\n        for (var pos = keysLength - 1; pos >= 0; pos--) {\n            var cell = this.engine.headerContent[headerPosKeys[pos]][columnIndex];\n            if (cell) {\n                sumLock = sumLock && fieldName !== '' ? fieldName === cell.valueSort.axis : false;\n                fieldName = cell.valueSort.axis ? cell.valueSort.axis.toString() : '';\n                if (cell.type === 'sum') {\n                    sumLock = true;\n                }\n                if (sumLock && cell.members && cell.members.length > 0) {\n                    return true;\n                }\n            }\n            else {\n                return false;\n            }\n        }\n        return false;\n    };\n    Render.prototype.validateField = function (target) {\n        var isValueField = false;\n        if (target.classList.contains('e-stot') || target.classList.contains('e-gtot') || target.classList.contains('e-valuescontent') || target.classList.contains('e-valuesheader')) {\n            isValueField = true;\n        }\n        else {\n            var fieldName = target.getAttribute('fieldName');\n            if (!fieldName || fieldName == '') {\n                var rowIndx = Number(target.getAttribute('index'));\n                var colIndx = Number(target.getAttribute('aria-colindex'));\n                fieldName = this.engine.pivotValues[rowIndx][colIndx].actualText;\n            }\n            var valuefields = this.parent.dataSourceSettings.values;\n            for (var valueCnt = 0; valueCnt < valuefields.length; valueCnt++) {\n                if (this.parent.dataSourceSettings.values[valueCnt].name === fieldName) {\n                    isValueField = true;\n                    break;\n                }\n            }\n        }\n        return isValueField;\n    };\n    /* tslint:enable */\n    Render.prototype.updateAggregate = function (aggregate) {\n        if (this.parent.getAllSummaryType().indexOf(aggregate) > -1) {\n            var valuefields = this.parent.dataSourceSettings.values;\n            for (var valueCnt = 0; valueCnt < this.parent.dataSourceSettings.values.length; valueCnt++) {\n                if (this.parent.dataSourceSettings.values[valueCnt].name === this.field) {\n                    var dataSourceItem = valuefields[valueCnt];\n                    dataSourceItem.type = aggregate;\n                }\n            }\n        }\n    };\n    Render.prototype.injectGridModules = function (parent) {\n        Grid.Inject(Freeze);\n        if (parent.allowExcelExport) {\n            Grid.Inject(ExcelExport);\n        }\n        if (parent.allowPdfExport) {\n            Grid.Inject(PdfExport);\n        }\n        Grid.Inject(Selection, Reorder, Resize);\n        if (this.gridSettings.contextMenuItems) {\n            Grid.Inject(ContextMenu);\n        }\n    };\n    /** @hidden */\n    Render.prototype.updateGridSettings = function () {\n        this.injectGridModules(this.parent);\n        this.parent.grid.allowResizing = this.gridSettings.allowResizing;\n        this.parent.grid.allowTextWrap = this.gridSettings.allowTextWrap;\n        this.parent.grid.allowReordering = (this.parent.showGroupingBar ? false : this.gridSettings.allowReordering);\n        this.parent.grid.allowSelection = this.gridSettings.allowSelection;\n        /* tslint:disable-next-line */\n        this.parent.grid.contextMenuItems = this.gridSettings.contextMenuItems;\n        this.parent.grid.selectedRowIndex = this.gridSettings.selectedRowIndex;\n        /* tslint:disable-next-line */\n        this.parent.grid.selectionSettings = this.gridSettings.selectionSettings;\n        this.parent.grid.textWrapSettings = this.gridSettings.textWrapSettings;\n        this.parent.grid.printMode = this.gridSettings.printMode;\n        this.parent.grid.rowHeight = this.gridSettings.rowHeight;\n        this.parent.grid.gridLines = this.gridSettings.gridLines;\n        if (this.parent.lastGridSettings) {\n            var keys = Object.keys(this.parent.lastGridSettings);\n            if (keys.indexOf('height') > -1) {\n                this.parent.grid.height = this.gridSettings.height;\n            }\n            if (keys.indexOf('width') > -1) {\n                this.parent.grid.width = this.gridSettings.width;\n            }\n            this.updatePivotColumns();\n            if (keys.indexOf('allowTextWrap') > -1) {\n                this.parent.layoutRefresh();\n            }\n        }\n        this.clearColumnSelection();\n    };\n    Render.prototype.updatePivotColumns = function () {\n        var keys = Object.keys(this.parent.lastGridSettings);\n        for (var colPos = 0; colPos < this.parent.pivotColumns.length; colPos++) {\n            var pivotColumn = this.parent.pivotColumns[colPos];\n            for (var keyPos = 0; keyPos < keys.length; keyPos++) {\n                var key = keys[keyPos];\n                /* tslint:disable-next-line */\n                if (!isNullOrUndefined(this.parent.pivotColumns[colPos][key])) {\n                    /* tslint:disable-next-line */\n                    pivotColumn[key] = this.parent.lastGridSettings[key];\n                }\n            }\n        }\n        this.parent.fillGridColumns(this.parent.grid.columns);\n    };\n    Render.prototype.clearColumnSelection = function () {\n        removeClass(this.parent.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n    };\n    Render.prototype.appendValueSortIcon = function (cell, tCell, rCnt, cCnt) {\n        if (this.parent.enableValueSorting && this.parent.dataType === 'pivot') {\n            var vSort = this.parent.dataSourceSettings.valueSortSettings;\n            var len = (cell.type === 'grand sum' &&\n                this.parent.dataSourceSettings.values.length === 1 && !this.parent.dataSourceSettings.alwaysShowValueHeader) ? 0 :\n                (this.parent.dataSourceSettings.values.length > 1 || this.parent.dataSourceSettings.alwaysShowValueHeader) ?\n                    (this.parent.engineModule.headerContent.length - 1) :\n                    this.parent.dataSourceSettings.columns.length === 0 ? 0 : (this.parent.engineModule.headerContent.length - 1);\n            var lock = (vSort && vSort.headerText) ? cell.valueSort.levelName === vSort.headerText : cCnt === vSort.columnIndex;\n            if (vSort !== undefined && lock && rCnt === len && this.parent.dataSourceSettings.valueAxis === 'column') {\n                if (tCell.querySelector('.e-sortfilterdiv')) {\n                    tCell.querySelector('.e-sortfilterdiv').classList.add(vSort.sortOrder === 'Descending' ?\n                        'e-descending' : 'e-ascending');\n                    tCell.querySelector('.e-sortfilterdiv').classList.add(vSort.sortOrder === 'Descending' ?\n                        'e-icon-descending' : 'e-icon-ascending');\n                }\n                else {\n                    tCell.appendChild(createElement('div', {\n                        className: (vSort.sortOrder === 'Descending' ?\n                            'e-icon-descending e-icons e-descending e-sortfilterdiv' :\n                            'e-icon-ascending e-icons e-ascending e-sortfilterdiv'),\n                    }));\n                }\n                if (!isNullOrUndefined(cell.hasChild) && cell.type !== 'grand sum' && tCell.querySelector('.e-expand') &&\n                    (tCell.querySelector('.e-icon-descending') || tCell.querySelector('.e-icon-ascending'))) {\n                    var element = (tCell.querySelector('.e-icon-descending') || tCell.querySelector('.e-icon-ascending'));\n                    setStyleAttribute(element, { 'padding-top': '12px' });\n                }\n            }\n            // return tCell;\n        }\n        return tCell;\n    };\n    Render.prototype.onResizeStop = function (args) {\n        /* tslint:disable-next-line */\n        var column = args.column.field === '0.formattedText' ? '0.formattedText' : args.column.customAttributes.cell.valueSort.levelName;\n        this.parent.resizeInfo[column] = Number(args.column.width.toString().split('px')[0]);\n        this.setGroupWidth(args);\n        this.calculateGridHeight(true);\n        this.parent.grid.hideScroll();\n    };\n    Render.prototype.setGroupWidth = function (args) {\n        if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n            this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n            this.parent.groupingBarModule.refreshUI();\n            if (this.parent.element.querySelector('.e-group-row').offsetWidth < 245 && !this.parent.firstColWidth) {\n                args.cancel = true;\n                var gridColumn = this.parent.grid.columns;\n                if (gridColumn && gridColumn.length > 0) {\n                    gridColumn[0].width = this.resColWidth;\n                }\n                this.parent.element.querySelector('.e-frozenheader').querySelector('col').style.width = (this.resColWidth + 'px');\n                this.parent.element.querySelector('.e-frozencontent').querySelector('col').style.width = (this.resColWidth + 'px');\n            }\n            this.parent.element.querySelector('.e-group-rows').style.height = 'auto';\n            this.parent.element.querySelector('.e-group-values').style.width =\n                this.parent.element.querySelector('.e-group-row').offsetWidth + 'px';\n            var firstRowHeight = this.parent.element.querySelector('.e-headercontent').offsetHeight;\n            this.parent.element.querySelector('.e-group-rows').style.height = firstRowHeight + 'px';\n        }\n        this.parent.trigger(args.e.type === 'touchend' || args.e.type === 'mouseup' ? events.resizeStop : events.resizing, args);\n    };\n    /** @hidden */\n    Render.prototype.selected = function () {\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(this.onSelect.bind(this), 300);\n    };\n    Render.prototype.onSelect = function () {\n        var pivotArgs = { selectedCellsInfo: [], pivotValues: this.parent.pivotValues, currentCell: null };\n        /* tslint:disable-next-line */\n        var selectedElements = this.parent.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR + ',.' + cls.SELECTED_BGCOLOR);\n        for (var _i = 0, selectedElements_1 = selectedElements; _i < selectedElements_1.length; _i++) {\n            var element = selectedElements_1[_i];\n            var colIndex = Number(element.getAttribute('aria-colindex'));\n            var rowIndex = Number(element.getAttribute('index'));\n            var cell = this.engine.pivotValues[rowIndex][colIndex];\n            if (cell) {\n                if (cell.axis === 'value') {\n                    pivotArgs.selectedCellsInfo.push({\n                        currentCell: cell,\n                        value: cell.value,\n                        columnHeaders: cell.columnHeaders,\n                        rowHeaders: cell.rowHeaders,\n                        measure: cell.actualText.toString()\n                    });\n                }\n                else if (cell.axis === 'column') {\n                    pivotArgs.selectedCellsInfo.push({\n                        currentCell: cell,\n                        value: cell.formattedText,\n                        columnHeaders: cell.valueSort.levelName,\n                        rowHeaders: '',\n                        measure: ''\n                    });\n                }\n                else {\n                    pivotArgs.selectedCellsInfo.push({\n                        currentCell: cell,\n                        value: cell.formattedText,\n                        columnHeaders: '',\n                        rowHeaders: cell.valueSort.levelName,\n                        measure: ''\n                    });\n                }\n            }\n        }\n        this.parent.trigger(events.cellSelected, pivotArgs);\n    };\n    Render.prototype.rowCellBoundEvent = function (args) {\n        var tCell = args.cell;\n        /* tslint:disable-next-line */\n        if (tCell && (this.parent.notEmpty) && this.engine.headerContent) {\n            var customClass = this.parent.hyperlinkSettings.cssClass;\n            tCell.setAttribute('index', (Number(tCell.getAttribute('index')) + this.engine.headerContent.length).toString());\n            var cell = args.data[0];\n            if (tCell.getAttribute('aria-colindex') === '0') {\n                if (this.parent.dataType === 'pivot') {\n                    var isValueCell = cell.type && cell.type === 'value';\n                    tCell.innerText = '';\n                    var level = cell.level ? cell.level : (isValueCell ? (this.lastSpan + 1) : 0);\n                    do {\n                        if (level > 0) {\n                            tCell.appendChild(createElement('span', {\n                                className: level === 0 ? '' : cls.NEXTSPAN,\n                            }));\n                        }\n                        level--;\n                    } while (level > -1);\n                    level = cell.level ? cell.level : 0;\n                    this.lastSpan = !isValueCell ? level : this.lastSpan;\n                    if (!cell.hasChild && level > 0) {\n                        tCell.appendChild(createElement('span', {\n                            className: cls.LASTSPAN,\n                        }));\n                    }\n                    var fieldName = void 0;\n                    if ((this.parent.dataSourceSettings.rows.length > 0 &&\n                        (cell.valueSort ? Object.keys(cell.valueSort).length > 0 : true))) {\n                        fieldName = level > -1 ? this.parent.dataSourceSettings.rows[level].name : '';\n                        tCell.setAttribute('fieldname', fieldName);\n                    }\n                }\n                else {\n                    tCell = this.onOlapRowCellBoundEvent(tCell, cell);\n                }\n                var localizedText = cell.formattedText;\n                if (cell.type) {\n                    if (cell.type === 'grand sum') {\n                        this.rowGrandPos = cell.rowIndex;\n                        tCell.classList.add('e-gtot');\n                        localizedText = this.parent.localeObj.getConstant('grandTotal');\n                    }\n                    else if (cell.valueSort.levelName === (this.parent.localeObj.getConstant('grandTotal') +\n                        (this.parent.dataSourceSettings.valueSortSettings.headerDelimiter) + (cell.formattedText))) {\n                        tCell.classList.add('e-gtot');\n                    }\n                    else {\n                        tCell.classList.add('e-stot');\n                    }\n                }\n                tCell.classList.add(cls.ROWSHEADER);\n                if (cell.hasChild === true && !cell.isNamedSet) {\n                    tCell.appendChild(createElement('div', {\n                        className: (cell.isDrilled === true ? cls.COLLAPSE : cls.EXPAND) + ' ' + cls.ICON,\n                        attrs: {\n                            'title': cell.isDrilled === true ? this.parent.localeObj.getConstant('collapse') :\n                                this.parent.localeObj.getConstant('expand')\n                        }\n                    }));\n                }\n                tCell.appendChild(createElement('span', {\n                    className: cls.CELLVALUE,\n                    /* tslint:disable-next-line */\n                    innerHTML: (this.parent.isRowCellHyperlink || cell.enableHyperlink ? '<a  data-url=\"' + localizedText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + localizedText + '</a>' : localizedText)\n                }));\n                var vSort = this.parent.pivotView.dataSourceSettings.valueSortSettings;\n                if (this.parent.enableValueSorting) {\n                    if (vSort && vSort.headerText && this.parent.dataSourceSettings.valueAxis === 'row'\n                        && this.parent.pivotValues[Number(tCell.getAttribute('index'))][0].valueSort.levelName) {\n                        if (this.parent.pivotValues[Number(tCell.getAttribute('index'))][0].valueSort.levelName\n                            === vSort.headerText) {\n                            var style = (tCell.querySelector('.e-expand') || tCell.querySelector('.e-collapse')) ?\n                                'padding-top: 18px' : 'padding-top: 12px';\n                            tCell.appendChild(createElement('div', {\n                                className: (vSort.sortOrder === 'Descending' ?\n                                    'e-icon-descending e-icons e-descending e-sortfilterdiv' :\n                                    'e-icon-ascending e-icons e-ascending e-sortfilterdiv'),\n                                styles: style\n                            }));\n                        }\n                    }\n                }\n            }\n            else {\n                var innerText = tCell.innerText;\n                tCell.innerText = '';\n                tCell.classList.add(cls.VALUESCONTENT);\n                cell = args.data[Number(tCell.getAttribute('aria-colindex'))];\n                if (cell.isSum) {\n                    tCell.classList.add(cls.SUMMARY);\n                }\n                if (cell.isGrandSum || this.colGrandPos === Number(tCell.getAttribute('aria-colindex')) || this.rowGrandPos === Number(tCell.getAttribute('index'))) {\n                    tCell.classList.add('e-gtot');\n                }\n                else if (this.parent.dataType === 'olap' ? cell.isSum : this.validateColumnTotalcell(!isNullOrUndefined(cell.value) ? cell.colIndex : cell.colIndex - 1)) {\n                    tCell.classList.add('e-colstot');\n                }\n                if (cell.cssClass) {\n                    tCell.classList.add(cell.cssClass);\n                }\n                tCell.appendChild(createElement('span', {\n                    className: cls.CELLVALUE,\n                    innerHTML: ((tCell.className.indexOf('e-summary') !== -1 && this.parent.isSummaryCellHyperlink) ||\n                        (tCell.className.indexOf('e-summary') === -1 && this.parent.isValueCellHyperlink) || cell.enableHyperlink ?\n                        '<a data-url=\"' + innerText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + innerText + '</a>' : innerText)\n                }));\n                if (this.parent.gridSettings.allowReordering && !this.parent.showGroupingBar) {\n                    tCell.setAttribute('aria-colindex', args.column.customAttributes.cell.colIndex.toString());\n                }\n            }\n            if (this.parent.cellTemplate) {\n                var index = tCell.getAttribute('index');\n                var colindex = tCell.getAttribute('aria-colindex');\n                var templateID = index + '_' + colindex;\n                /* tslint:disable-next-line */\n                if (!(window && isBlazor())) {\n                    /* tslint:disable-next-line */\n                    var element = this.parent.getCellTemplate()({ targetCell: tCell, cellInfo: cell }, this.parent, 'cellTemplate', this.parent.element.id + '_cellTemplate', null, null, tCell);\n                    if (element && element !== '' && element.length > 0) {\n                        if (this.parent.enableHtmlSanitizer) {\n                            this.parent.appendHtml(tCell, SanitizeHtmlHelper.sanitize(element[0].outerHTML));\n                        }\n                        else {\n                            this.parent.appendHtml(tCell, element[0].outerHTML);\n                        }\n                    }\n                }\n                else if (index && colindex) {\n                    this.parent.gridCellCollection[templateID] = tCell;\n                }\n            }\n            this.unWireEvents(tCell);\n            this.wireEvents(tCell);\n        }\n        args.pivotview = this.parent;\n        this.parent.trigger(events.queryCellInfo, args);\n    };\n    /* tslint:disable */\n    Render.prototype.onOlapRowCellBoundEvent = function (tCell, cell) {\n        tCell.innerText = '';\n        var rowMeasurePos = this.engine.rowMeasurePos;\n        if (this.parent.enableVirtualization) {\n            if (cell.ordinal > -1 && this.parent.olapEngineModule.tupRowInfo.length > 0) {\n                var tupInfo = this.parent.olapEngineModule.tupRowInfo[cell.ordinal];\n                var memberPosition = tupInfo.uNameCollection.indexOf(cell.actualText.toString());\n                var cropUName = tupInfo.uNameCollection.substring(0, memberPosition) +\n                    (cell.memberType === 3 ? '' : cell.actualText.toString());\n                var fieldSep = cropUName.split('::[').map(function (item) {\n                    return item[0] === '[' ? item : ('[' + item);\n                });\n                if (cell.memberType === 3 && rowMeasurePos) {\n                    fieldSep.push(cell.actualText.toString());\n                }\n                var nxtIndextCount = -1;\n                var lastIndextCount = 0;\n                var prevHasChild = false;\n                for (var fPos = 0; fPos < fieldSep.length; fPos++) {\n                    var fieldMembers = fieldSep[fPos];\n                    var membersCount = fieldMembers.split('~~').length;\n                    nxtIndextCount += membersCount;\n                    var hasChild = tupInfo.typeCollection[fPos] !== '2' ? (this.engine.fieldList[tupInfo.members[fPos].getAttribute('Hierarchy')] && this.engine.fieldList[tupInfo.members[fPos].getAttribute('Hierarchy')].isHierarchy && fPos < this.parent.dataSourceSettings.rows.length - 1 && !this.parent.dataSourceSettings.rows[fPos + 1].isNamedSet && this.parent.dataSourceSettings.rows[fPos + 1].name.indexOf('[Measures]') < 0 && this.engine.fieldList[this.parent.dataSourceSettings.rows[fPos + 1].name] && this.engine.fieldList[this.parent.dataSourceSettings.rows[fPos + 1].name].hasAllMember) ? true : Number(tupInfo.members[fPos].querySelector('CHILDREN_CARDINALITY').textContent) > 0 : false;\n                    lastIndextCount += (fPos > 0 && prevHasChild && !hasChild) ? 1 : 0;\n                    prevHasChild = hasChild;\n                }\n                var indent = 0;\n                for (var iPos = 0; iPos < nxtIndextCount; iPos++) {\n                    tCell.appendChild(createElement('span', {\n                        className: cls.NEXTSPAN,\n                    }));\n                    indent++;\n                }\n                for (var iPos = 0; iPos < lastIndextCount && nxtIndextCount > 0; iPos++) {\n                    tCell.appendChild(createElement('span', {\n                        className: cls.LASTSPAN,\n                    }));\n                }\n                this.indentCollection[cell.rowIndex] = indent;\n                this.maxIndent = this.maxIndent > indent ? this.maxIndent : indent;\n            }\n        }\n        else {\n            var hierarchyName = cell.hierarchy;\n            var levelName = cell.memberType === 3 ? (this.measurePos + '.' + cell.levelUniqueName) : cell.levelUniqueName;\n            var hasChild = cell.hasChild;\n            if (!this.lvlCollection[levelName] && levelName) {\n                this.lvlPosCollection[this.position] = levelName;\n                this.lvlCollection[levelName] = { position: this.position, hasChild: hasChild };\n                this.position++;\n            }\n            else if (levelName) {\n                var currPos_1 = this.lvlCollection[levelName].position;\n                for (var pos = currPos_1 + 1; pos < this.position; pos++) {\n                    delete this.lvlCollection[this.lvlPosCollection[pos]];\n                    delete this.lvlPosCollection[pos];\n                }\n                this.position = this.position > (currPos_1 + 1) ? (currPos_1 + 1) : this.position;\n            }\n            if (!this.hierarchyCollection[hierarchyName] && hierarchyName) {\n                this.hierarchyPosCollection[this.hierarchyCount] = hierarchyName;\n                this.hierarchyCollection[hierarchyName] = {\n                    lvlPosition: this.position - 1,\n                    hierarchyPOs: this.hierarchyCount\n                };\n                this.hierarchyCount++;\n            }\n            else if (hierarchyName) {\n                var currPos_2 = this.hierarchyCollection[hierarchyName].hierarchyPOs;\n                for (var pos = currPos_2 + 1; pos < this.hierarchyCount; pos++) {\n                    delete this.hierarchyCollection[this.hierarchyPosCollection[pos]];\n                    delete this.hierarchyPosCollection[pos];\n                }\n                this.hierarchyCount = this.hierarchyCount > (currPos_2 + 1) ? (currPos_2 + 1) : this.hierarchyCount;\n            }\n            if (cell.memberType !== 3 && levelName && this.lvlCollection[levelName]) {\n                var currHierarchyPos = this.hierarchyCollection[hierarchyName] ?\n                    this.hierarchyCollection[hierarchyName].hierarchyPOs : -1;\n                this.measurePos = rowMeasurePos <= currHierarchyPos && this.hierarchyPosCollection[rowMeasurePos + 1] ?\n                    this.measurePos : this.lvlCollection[levelName].position;\n            }\n            var currPos = this.lvlCollection[levelName] ? this.lvlCollection[levelName].position : -1;\n            var lvlPos = 0;\n            var indent = 0;\n            while (lvlPos <= currPos && currPos > 0 && cell.level > -1) {\n                var hasChild_1 = this.lvlCollection[this.lvlPosCollection[lvlPos]].hasChild;\n                var prevHasChild = lvlPos > 0 ? this.lvlCollection[this.lvlPosCollection[lvlPos - 1]].hasChild : false;\n                if (prevHasChild && !hasChild_1) {\n                    tCell.appendChild(createElement('span', {\n                        className: cls.LASTSPAN,\n                    }));\n                }\n                if (lvlPos !== currPos) {\n                    tCell.appendChild(createElement('span', {\n                        className: cls.NEXTSPAN,\n                    }));\n                    indent++;\n                }\n                lvlPos++;\n            }\n            if (cell.memberType === 3 && cell.level === -1 && Object.keys(this.lvlCollection).length > 1) {\n                tCell.appendChild(createElement('span', {\n                    className: cls.NEXTSPAN,\n                }));\n                indent++;\n            }\n            this.indentCollection[cell.rowIndex] = indent;\n            this.maxIndent = this.maxIndent > indent ? this.maxIndent : indent;\n        }\n        tCell.setAttribute('fieldname', cell.hierarchy);\n        var grandTotal = (this.parent.olapEngineModule.tupRowInfo[cell.ordinal] ?\n            (this.parent.olapEngineModule.tupRowInfo[cell.ordinal].measurePosition === 0 ?\n                this.parent.olapEngineModule.tupRowInfo[cell.ordinal].allStartPos === 1 :\n                this.parent.olapEngineModule.tupRowInfo[cell.ordinal].allStartPos === 0) : false);\n        if (grandTotal) {\n            tCell.classList.add('e-gtot');\n        }\n        return tCell;\n    };\n    /* tslint:enable */\n    Render.prototype.columnCellBoundEvent = function (args) {\n        if (args.cell.column && args.cell.column.customAttributes) {\n            var cell = args.cell.column.customAttributes.cell;\n            var tCell = args.node;\n            if (cell) {\n                var customClass = this.parent.hyperlinkSettings.cssClass;\n                var level = cell.level ? cell.level : 0;\n                if ((cell.level === -1 && !cell.rowSpan) || cell.rowSpan === -1) {\n                    args.node.style.display = 'none';\n                }\n                else if (cell.rowSpan > 1) {\n                    args.node.setAttribute('rowspan', cell.rowSpan.toString());\n                    args.node.setAttribute('aria-rowspan', cell.rowSpan.toString());\n                    if ((cell.rowIndex + cell.rowSpan) === this.engine.headerContent.length) {\n                        args.node.style.borderBottomWidth = '0px';\n                    }\n                }\n                args.node.setAttribute('aria-colindex', cell.colIndex.toString());\n                args.node.setAttribute('index', cell.rowIndex.toString());\n                var fieldName = void 0;\n                if (this.parent.dataType === 'pivot') {\n                    if (!(this.parent.dataSourceSettings.values && this.parent.dataSourceSettings.valueAxis === 'column' &&\n                        this.parent.dataSourceSettings.values.length > 1 &&\n                        (cell.rowIndex === this.engine.headerContent.length - 1)) && this.parent.dataSourceSettings.columns &&\n                        this.parent.dataSourceSettings.columns.length > 0) {\n                        fieldName = level > -1 && this.parent.dataSourceSettings.columns[level] ?\n                            this.parent.dataSourceSettings.columns[level].name : '';\n                        tCell.setAttribute('fieldname', fieldName);\n                    }\n                    if (this.validateColumnTotalcell(cell.colIndex)) {\n                        tCell.classList.add('e-colstot');\n                    }\n                }\n                else {\n                    tCell = this.onOlapColumnCellBoundEvent(tCell, cell);\n                }\n                if (cell.type) {\n                    tCell.classList.add(cell.type === 'grand sum' ? 'e-gtot' : 'e-stot');\n                    if (cell.type === 'grand sum') {\n                        this.colGrandPos = cell.colIndex;\n                    }\n                    else {\n                        tCell.classList.add('e-colstot');\n                    }\n                    var localizedText = cell.type === 'grand sum' ? this.parent.localeObj.getConstant('grandTotal') :\n                        cell.formattedText.split('Total')[0] + this.parent.localeObj.getConstant('total');\n                    if (tCell.querySelector('.e-headertext') !== null) {\n                        tCell.querySelector('.e-headertext').innerText = localizedText;\n                    }\n                    else {\n                        tCell.querySelector('.e-stackedheadercelldiv').innerText = localizedText;\n                    }\n                }\n                tCell.classList.add(cls.COLUMNSHEADER);\n                if (this.parent.isColumnCellHyperlink || cell.enableHyperlink) {\n                    if (tCell.querySelector('.e-stackedheadercelldiv')) {\n                        var innerText = tCell.querySelector('.e-stackedheadercelldiv').innerText;\n                        tCell.querySelector('.e-stackedheadercelldiv').innerHTML =\n                            '<a data-url=\"' + innerText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + innerText + '</a>';\n                    }\n                    else if (tCell.querySelector('.e-headertext')) {\n                        var innerText = tCell.querySelector('.e-headertext').innerText;\n                        tCell.querySelector('.e-headertext').innerHTML =\n                            '<a data-url=\"' + innerText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + innerText + '</a>';\n                    }\n                }\n                if (cell.hasChild === true && !cell.isNamedSet) {\n                    var hdrdiv = tCell.querySelector('.e-headercelldiv');\n                    if (hdrdiv) {\n                        hdrdiv.style.height = 'auto';\n                        hdrdiv.style.lineHeight = 'normal';\n                    }\n                    var div = createElement('div', {\n                        className: (cell.isDrilled === true ? cls.COLLAPSE : cls.EXPAND) + ' ' + cls.ICON,\n                        attrs: {\n                            'title': cell.isDrilled === true ? this.parent.localeObj.getConstant('collapse') :\n                                this.parent.localeObj.getConstant('expand')\n                        }\n                    });\n                    tCell.children[0].classList.add(cls.CELLVALUE);\n                    if (window.navigator.userAgent.indexOf('Edge') > -1 || window.navigator.userAgent.indexOf('Trident') > -1) {\n                        tCell.children[0].style.display = 'table';\n                    }\n                    else {\n                        tCell.children[0].style.display = 'block';\n                    }\n                    tCell.insertBefore(div, tCell.children[0]);\n                }\n                tCell = this.appendValueSortIcon(cell, tCell, cell.rowIndex, cell.colIndex);\n                if (this.parent.cellTemplate) {\n                    var index = tCell.getAttribute('index');\n                    var colindex = tCell.getAttribute('aria-colindex');\n                    var templateID = index + '_' + colindex;\n                    /* tslint:disable-next-line */\n                    if (!(window && isBlazor())) {\n                        this.parent.gridHeaderCellInfo.push({ targetCell: tCell });\n                    }\n                    else if (index && colindex) {\n                        this.parent.gridCellCollection[templateID] = tCell;\n                    }\n                }\n                var field = void 0;\n                var len = this.parent.dataSourceSettings.values.length;\n                for (var vCnt = 0; vCnt < len; vCnt++) {\n                    if (this.parent.dataSourceSettings.values[vCnt].name === cell.actualText) {\n                        if (this.parent.dataType === 'olap') {\n                            var grandTotal = (this.parent.olapEngineModule.tupColumnInfo[cell.ordinal] ?\n                                (this.parent.olapEngineModule.tupColumnInfo[cell.ordinal].measurePosition === 0 ?\n                                    this.parent.olapEngineModule.tupColumnInfo[cell.ordinal].allStartPos === 1 :\n                                    this.parent.olapEngineModule.tupColumnInfo[cell.ordinal].allStartPos === 0) : false);\n                            if (grandTotal) {\n                                tCell.classList.add('e-gtot');\n                            }\n                        }\n                        if (cell.valueSort.levelName === (this.parent.localeObj.getConstant('grandTotal') +\n                            (this.parent.dataSourceSettings.valueSortSettings.headerDelimiter) + (cell.formattedText))) {\n                            tCell.classList.add('e-gtot');\n                        }\n                        else {\n                            tCell.classList.add(cls.VALUESHEADER);\n                        }\n                    }\n                }\n                this.unWireEvents(tCell);\n                this.wireEvents(tCell);\n            }\n        }\n        this.parent.trigger(events.headerCellInfo, args);\n    };\n    Render.prototype.onOlapColumnCellBoundEvent = function (tCell, cell) {\n        tCell.setAttribute('fieldname', cell.memberType === 3 ? cell.actualText.toString() : cell.hierarchy);\n        var prevCell = this.engine.headerContent[cell.rowIndex] ?\n            this.engine.headerContent[cell.rowIndex][cell.colIndex - 1] : undefined;\n        if (prevCell && prevCell.actualText === cell.actualText && prevCell.type === cell.type &&\n            (prevCell.colSpan > 1)) {\n            tCell.style.display = 'none';\n        }\n        else {\n            tCell.setAttribute('colspan', cell.colSpan.toString());\n            tCell.setAttribute('aria-colspan', cell.colSpan.toString());\n        }\n        if (cell.rowIndex === (this.engine.headerContent.length - 1) && cell.memberType === 2) {\n            tCell.style.display = this.isSpannedCell(this.engine.headerContent.length, cell) ? 'none' : tCell.style.display;\n        }\n        return tCell;\n    };\n    Render.prototype.isSpannedCell = function (colLength, currCell) {\n        var prevCell = this.engine.headerContent[currCell.rowIndex - 1] ?\n            this.engine.headerContent[currCell.rowIndex - 1][currCell.colIndex] : undefined;\n        var parentCellSpan;\n        var parentCellPos;\n        while (prevCell && ((prevCell.memberType === currCell.memberType) || (prevCell.type && currCell.type))) {\n            if (prevCell.rowSpan > 0) {\n                parentCellSpan = prevCell.rowSpan;\n                parentCellPos = prevCell.rowIndex;\n            }\n            prevCell = this.engine.headerContent[prevCell.rowIndex - 1] ?\n                this.engine.headerContent[prevCell.rowIndex - 1][currCell.colIndex] : undefined;\n        }\n        return (parentCellPos + parentCellSpan) >= colLength;\n    };\n    Render.prototype.onHyperCellClick = function (e) {\n        var cell = e.target.parentElement.parentElement;\n        cell = (cell.className.indexOf('e-headercelldiv') > -1 ? cell.parentElement : cell);\n        var args = {\n            currentCell: cell,\n            data: this.engine.pivotValues[Number(cell.getAttribute('index'))][Number(cell.getAttribute('aria-colindex'))],\n            cancel: true,\n            nativeEvent: e\n        };\n        this.parent.trigger(events.hyperlinkCellClick, args, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                args.currentCell = getElement(args.currentCell);\n                var url = args.currentCell.getAttribute('data-url') ? (args.currentCell).getAttribute('data-url') :\n                    args.currentCell.querySelector('a').getAttribute('data-url');\n                window.open(url);\n            }\n        });\n    };\n    Render.prototype.getRowStartPos = function () {\n        var pivotValues = this.parent.pivotValues;\n        var rowPos;\n        for (var rCnt = 0; rCnt < (pivotValues ? pivotValues.length : 0); rCnt++) {\n            if (pivotValues[rCnt] && pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row') {\n                rowPos = rCnt;\n                break;\n            }\n        }\n        return rowPos;\n    };\n    Render.prototype.frameDataSource = function (type) {\n        var dataContent = [];\n        if (this.parent.dataSourceSettings.values.length > 0 && !this.engine.isEmptyData) {\n            if ((this.parent.enableValueSorting) || !this.engine.isEngineUpdated) {\n                var rowCnt = 0;\n                var pivotValues = this.parent.pivotValues;\n                var start = type === 'value' ? this.rowStartPos : 0;\n                var end = type === 'value' ? (pivotValues ? pivotValues.length : 0) : this.rowStartPos;\n                for (var rCnt = start; rCnt < end; rCnt++) {\n                    if (pivotValues[rCnt]) {\n                        rowCnt = type === 'header' ? rCnt : rowCnt;\n                        dataContent[rowCnt] = {};\n                        for (var cCnt = 0; cCnt < pivotValues[rCnt].length; cCnt++) {\n                            if (pivotValues[rCnt][cCnt]) {\n                                dataContent[rowCnt][cCnt] = pivotValues[rCnt][cCnt];\n                            }\n                        }\n                        rowCnt++;\n                    }\n                }\n            }\n            else {\n                dataContent = type === 'value' ? this.engine.valueContent : this.engine.headerContent;\n            }\n        }\n        else {\n            dataContent = this.frameEmptyData();\n        }\n        return dataContent;\n    };\n    /** @hidden */\n    /* tslint:disable-next-line */\n    Render.prototype.frameEmptyData = function () {\n        /* tslint:disable-next-line */\n        var dataContent = [{\n                0: { formattedText: this.parent.localeObj.getConstant('grandTotal') },\n                1: { formattedText: this.parent.localeObj.getConstant('emptyData') }\n            }];\n        return dataContent;\n    };\n    Render.prototype.calculateColWidth = function (colCount) {\n        var offsetWidth = this.parent.element.offsetWidth ? this.parent.element.offsetWidth :\n            this.parent.element.getBoundingClientRect().width;\n        var parWidth = isNaN(this.parent.width) ? (this.parent.width.toString().indexOf('%') > -1 ?\n            ((parseFloat(this.parent.width.toString()) / 100) * offsetWidth) : offsetWidth) :\n            Number(this.parent.width);\n        parWidth = parWidth - (this.gridSettings.columnWidth > this.resColWidth ? this.gridSettings.columnWidth : this.resColWidth) - 2;\n        colCount = colCount - 1;\n        var colWidth = (colCount * this.gridSettings.columnWidth) < parWidth ? (parWidth / colCount) : this.gridSettings.columnWidth;\n        return Math.floor(colWidth);\n    };\n    Render.prototype.resizeColWidth = function (colCount) {\n        var parWidth = isNaN(this.parent.width) ? (this.parent.width.toString().indexOf('%') > -1 ?\n            ((parseFloat(this.parent.width.toString()) / 100) * this.parent.element.offsetWidth) : this.parent.element.offsetWidth) :\n            Number(this.parent.width);\n        colCount = colCount - 1;\n        parWidth = parWidth - (this.gridSettings.columnWidth > this.resColWidth ? this.gridSettings.columnWidth : this.resColWidth) - 2;\n        var colWidth = (colCount * this.gridSettings.columnWidth) < parWidth ? (parWidth / colCount) : this.gridSettings.columnWidth;\n        return Math.floor(colWidth);\n    };\n    Render.prototype.calculateGridWidth = function () {\n        var parWidth = this.parent.width;\n        var eleWidth = this.parent.element.getBoundingClientRect().width ?\n            this.parent.element.getBoundingClientRect().width : this.parent.element.offsetWidth;\n        if (this.gridSettings.width === 'auto') {\n            if (this.parent.width === 'auto') {\n                parWidth = eleWidth;\n            }\n            else if (this.parent.width.toString().indexOf('%') > -1) {\n                parWidth = ((parseFloat(this.parent.width.toString()) / 100) * eleWidth);\n            }\n        }\n        else {\n            parWidth = this.gridSettings.width;\n        }\n        return parWidth;\n    };\n    /** @hidden */\n    Render.prototype.calculateGridHeight = function (elementCreated) {\n        var gridHeight = this.parent.height;\n        var parHeight = this.parent.getHeightAsNumber();\n        if (isNaN(parHeight)) {\n            parHeight = parHeight > 300 ? parHeight : 300;\n        }\n        if (this.parent.currentView !== 'Chart') {\n            if (this.gridSettings.height === 'auto' && parHeight && this.parent.element.querySelector('.' + cls.GRID_HEADER)) {\n                var rowColHeight = this.parent.element.querySelector('.' + cls.GRID_HEADER).offsetHeight;\n                var gBarHeight = rowColHeight + (this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS) ?\n                    this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS).offsetHeight : 0);\n                var toolBarHeight = this.parent.element.querySelector('.' + cls.GRID_TOOLBAR) ? 42 : 0;\n                gridHeight = parHeight - (gBarHeight + toolBarHeight) - 1;\n                if (elementCreated) {\n                    var tableHeight = this.parent.element.querySelector('.' + cls.FROZENCONTENT_DIV + ' .' + cls.TABLE).offsetHeight;\n                    var contentHeight = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV).offsetHeight;\n                    var tableWidth = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV + ' .' + cls.TABLE).offsetWidth;\n                    var contentWidth = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV).offsetWidth;\n                    var horizontalOverflow = contentWidth < tableWidth;\n                    var verticalOverflow = contentHeight < tableHeight;\n                    var commonOverflow = horizontalOverflow && ((gridHeight - tableHeight) < 18) ? true : false;\n                    if (gridHeight >= tableHeight && (horizontalOverflow ? gridHeight >= contentHeight : true) &&\n                        !verticalOverflow && !commonOverflow) {\n                        this.parent.grid.height = 'auto';\n                    }\n                    else {\n                        this.parent.grid.height = gridHeight;\n                        this.parent.grid.dataBind();\n                    }\n                }\n                else {\n                    if (gridHeight > (this.engine.valueContent.length * this.gridSettings.rowHeight)) {\n                        gridHeight = 'auto';\n                    }\n                }\n            }\n            else {\n                gridHeight = this.gridSettings.height;\n            }\n        }\n        return gridHeight < this.parent.gridSettings.rowHeight ? this.parent.gridSettings.rowHeight : gridHeight;\n    };\n    Render.prototype.frameStackedHeaders = function () {\n        var singleValueFormat = this.parent.dataSourceSettings.values.length === 1 &&\n            !this.parent.dataSourceSettings.alwaysShowValueHeader ? this.formatList[this.parent.dataSourceSettings.values[0].name] : undefined;\n        var integrateModel = [];\n        if ((this.parent.dataType === 'olap' ? true : this.parent.dataSourceSettings.values.length > 0) && !this.engine.isEmptyData) {\n            var headerCnt = this.engine.headerContent.length;\n            var headerSplit = [];\n            var splitPos = [];\n            var colWidth = this.calculateColWidth(this.engine.pivotValues ? this.engine.pivotValues[0].length : 0);\n            do {\n                var columnModel = [];\n                var actualCnt = 0;\n                headerCnt--;\n                var colField = this.engine.headerContent[headerCnt];\n                if (colField) {\n                    for (var cCnt = 0; cCnt < Object.keys(colField).length + (colField[0] ? 0 : 1); cCnt++) {\n                        var colSpan = (colField[cCnt] && colField[cCnt].colSpan) ?\n                            ((colField[cCnt].memberType !== 3 || headerCnt === 0) ?\n                                colField[cCnt].colSpan : headerSplit[cCnt]) : 1;\n                        colSpan = this.parent.dataType === 'olap' ? 1 : colSpan;\n                        var rowSpan = (colField[cCnt] && colField[cCnt].rowSpan) ? colField[cCnt].rowSpan : 1;\n                        var formattedText = colField[cCnt] ? (colField[cCnt].type === 'grand sum' ?\n                            this.parent.localeObj.getConstant('grandTotal') : (colField[cCnt].type === 'sum' ?\n                            colField[cCnt].formattedText.split('Total')[0] + this.parent.localeObj.getConstant('total') :\n                            colField[cCnt].formattedText)) : '';\n                        if (headerCnt === this.engine.headerContent.length - 1) {\n                            colSpan = 1;\n                            columnModel[actualCnt] = {\n                                field: (cCnt + '.formattedText'),\n                                headerText: formattedText,\n                                customAttributes: { 'cell': colField[cCnt] },\n                                /* tslint:disable-next-line */\n                                width: colField[cCnt] ? this.setSavedWidth(colField[cCnt].valueSort.levelName, colWidth) : this.resColWidth,\n                                minWidth: 30,\n                                format: cCnt === 0 ? '' : (isNullOrUndefined(singleValueFormat) ? this.formatList[colField[cCnt].actualText] : singleValueFormat),\n                                allowReordering: (this.parent.showGroupingBar ? false : this.parent.gridSettings.allowReordering),\n                                allowResizing: this.parent.gridSettings.allowResizing,\n                                visible: true\n                            };\n                        }\n                        else if (headerSplit[cCnt]) {\n                            colSpan = (colField[cCnt] && colField[cCnt].type === 'grand sum' &&\n                                colField[cCnt].memberType === 2) ? 1 : colSpan;\n                            var tmpSpan = colSpan;\n                            var innerModel = [];\n                            var innerPos = cCnt;\n                            while (tmpSpan > 0) {\n                                if (columnModel[actualCnt]) {\n                                    if (!integrateModel[splitPos[innerPos]]) {\n                                        break;\n                                    }\n                                    innerModel.push(integrateModel[splitPos[innerPos]]);\n                                }\n                                else {\n                                    columnModel[actualCnt] = {\n                                        headerText: formattedText,\n                                        /* tslint:disable-next-line */\n                                        field: colField[cCnt] ? colField[cCnt].valueSort.levelName : '',\n                                        customAttributes: { 'cell': colField[cCnt] },\n                                        /* tslint:disable-next-line */\n                                        width: colField[cCnt] ? this.setSavedWidth(colField[cCnt].valueSort.levelName, colWidth) :\n                                            this.resColWidth,\n                                        minWidth: 30,\n                                        allowReordering: (this.parent.showGroupingBar ? false : this.parent.gridSettings.allowReordering),\n                                        allowResizing: this.parent.gridSettings.allowResizing,\n                                        visible: true\n                                    };\n                                    innerModel = [integrateModel[splitPos[innerPos]]];\n                                }\n                                tmpSpan = tmpSpan - headerSplit[innerPos];\n                                innerPos = innerPos + headerSplit[innerPos];\n                            }\n                            columnModel[actualCnt].columns = innerModel;\n                        }\n                        if (columnModel[actualCnt]) {\n                            columnModel[actualCnt].clipMode = this.gridSettings.clipMode;\n                        }\n                        headerSplit[cCnt] = colSpan;\n                        splitPos[cCnt] = actualCnt;\n                        actualCnt++;\n                        cCnt = cCnt + colSpan - 1;\n                    }\n                }\n                integrateModel = columnModel.length > 0 ? columnModel : integrateModel;\n            } while (headerCnt > 0);\n            integrateModel[0] = {\n                field: (0 + '.formattedText'),\n                width: this.resColWidth,\n                minWidth: 30,\n                headerText: '',\n                allowReordering: false,\n                allowResizing: this.parent.gridSettings.allowResizing,\n                visible: true\n            };\n        }\n        else {\n            integrateModel = this.frameEmptyColumns();\n        }\n        if (integrateModel.length > 1) {\n            var lastColumn = integrateModel[integrateModel.length - 1];\n            lastColumn.minWidth = lastColumn.width;\n            lastColumn.width = 'auto';\n            if (lastColumn.columns && lastColumn.columns.length > 0) {\n                this.configLastColumnWidth(lastColumn.columns[lastColumn.columns.length - 1]);\n            }\n        }\n        this.parent.triggerColumnRenderEvent(integrateModel);\n        return integrateModel;\n    };\n    Render.prototype.configLastColumnWidth = function (column) {\n        column.minWidth = column.width;\n        column.width = 'auto';\n        if (column.columns && column.columns.length > 0) {\n            this.configLastColumnWidth(column.columns[column.columns.length - 1]);\n        }\n    };\n    /** @hidden */\n    Render.prototype.setSavedWidth = function (column, width) {\n        width = this.parent.resizeInfo[column] ? this.parent.resizeInfo[column] : width;\n        return width;\n    };\n    /** @hidden */\n    Render.prototype.frameEmptyColumns = function () {\n        var columns = [];\n        var colWidth = this.calculateColWidth(2);\n        columns.push({ field: '0.formattedText', headerText: '', minWidth: 30, width: this.resColWidth });\n        /* tslint:disable-next-line */\n        columns.push({ field: '1.formattedText', headerText: this.parent.localeObj.getConstant('grandTotal'), minWidth: 30, width: colWidth });\n        return columns;\n    };\n    /** @hidden */\n    Render.prototype.getFormatList = function () {\n        var formatArray = {};\n        for (var vCnt = 0; vCnt < this.parent.dataSourceSettings.values.length; vCnt++) {\n            var field = this.parent.dataSourceSettings.values[vCnt];\n            var format = 'N';\n            if (this.parent.dataType === 'olap') {\n                if (this.parent.olapEngineModule.fieldList[field.name]) {\n                    var fString = this.parent.olapEngineModule.fieldList[field.name].formatString;\n                    format = fString.indexOf('#') > -1 ? fString : (fString[0] + '2');\n                }\n            }\n            else {\n                if (this.parent.dataSourceSettings.formatSettings.length > 0) {\n                    for (var fCnt = 0; fCnt < this.parent.dataSourceSettings.formatSettings.length; fCnt++) {\n                        var formatSettings = this.parent.dataSourceSettings.formatSettings[fCnt];\n                        if (field.name === formatSettings.name) {\n                            format = formatSettings.format;\n                            break;\n                        }\n                        else {\n                            continue;\n                        }\n                    }\n                }\n            }\n            formatArray[field.name] = format;\n        }\n        return formatArray;\n    };\n    /* tslint:disable */\n    Render.prototype.excelColumnEvent = function (args) {\n        if (args.gridCell !== undefined && args.gridCell.column.width === 'auto') {\n            this.parent.lastColumn = args.gridCell.column;\n            args.gridCell.column.width = args.gridCell.column.minWidth;\n        }\n        args = this.exportHeaderEvent(args);\n        this.parent.trigger(events.excelHeaderQueryCellInfo, args);\n    };\n    Render.prototype.pdfColumnEvent = function (args) {\n        if (args.gridCell !== undefined && args.gridCell.column.width === 'auto') {\n            this.parent.lastColumn = args.gridCell.column;\n            args.gridCell.column.width = args.gridCell.column.minWidth;\n        }\n        this.parent.trigger(events.pdfHeaderQueryCellInfo, args);\n    };\n    /* tslint:enable */\n    Render.prototype.excelRowEvent = function (args) {\n        if (args.column.field === '0.formattedText') {\n            var isValueCell = args.data[0].type === 'value';\n            var level = 0;\n            if (this.parent.dataType === 'olap') {\n                /* tslint:disable-next-line */\n                level = this.indentCollection[args.data[0].rowIndex];\n            }\n            else {\n                level = isValueCell ? (this.lastSpan + 1) : args.data[0].level;\n            }\n            this.colPos = 0;\n            args.style = { hAlign: 'Left', indent: level * 2 };\n            this.lastSpan = isValueCell ? this.lastSpan : level;\n        }\n        else {\n            this.colPos++;\n            /* tslint:disable-next-line */\n            if (isNullOrUndefined(args.data[this.colPos].value) || isNullOrUndefined(args.data[this.colPos].formattedText)) {\n                args.value = '';\n            }\n            else {\n                /* tslint:disable-next-line */\n                args.value = args.data[this.colPos].value || args.data[this.colPos].formattedText;\n            }\n        }\n        args = this.exportContentEvent(args);\n        this.parent.trigger(events.excelQueryCellInfo, args);\n    };\n    /* tslint:disable:no-any */\n    Render.prototype.pdfRowEvent = function (args) {\n        args = this.exportContentEvent(args);\n        if (args.column.field === '0.formattedText') {\n            var level = 0;\n            var isValueCell = args.data[0].type === 'value';\n            if (this.parent.dataType === 'olap') {\n                level = this.indentCollection[args.data[0].rowIndex];\n            }\n            else {\n                level = isValueCell ? (this.lastSpan + 1) : args.data[0].level !== -1 ?\n                    args.data[0].level : 0;\n            }\n            args.style = { paragraphIndent: level * 10 };\n            this.lastSpan = isValueCell ? this.lastSpan : level;\n        }\n        this.parent.trigger(events.pdfQueryCellInfo, args);\n    };\n    /* tslint:disable:no-any */\n    Render.prototype.excelDataBound = function (args) {\n        var excelRows = args.excelRows;\n        var rowStartPos = Object.keys(this.engine.headerContent).length;\n        for (var i = 0; i < rowStartPos; i++) {\n            var cells = excelRows[i].cells;\n            var tmpCell = [];\n            for (var j = 0; j < cells.length; j++) {\n                if (cells[j].rowSpan !== -1) {\n                    tmpCell.push(cells[j]);\n                }\n            }\n            excelRows[i].cells = tmpCell;\n        }\n    };\n    ;\n    Render.prototype.exportHeaderEvent = function (args) {\n        var rowSpan = 1;\n        if (args.gridCell.column.customAttributes) {\n            var cell = args.gridCell.column.customAttributes.cell;\n            if (this.actualText !== cell.actualText && cell.colSpan > 1 && cell.level > -1) {\n                args.gridCell.colSpan = args.cell.colSpan = cell.colSpan > -1 ? cell.colSpan : 1;\n            }\n            rowSpan = cell.rowSpan > -1 ? cell.rowSpan : 1;\n            if (args.name === 'excelHeaderQueryCellInfo') {\n                if (cell.rowSpan > -1) {\n                    rowSpan = cell.rowSpan;\n                }\n                else if (!isNullOrUndefined(cell.type) && cell.level !== 0) {\n                    rowSpan = -1;\n                    args.cell.rowSpan = -1;\n                }\n            }\n            this.actualText = cell.actualText;\n        }\n        else {\n            rowSpan = Object.keys(this.engine.headerContent).length;\n        }\n        if (args.cell.rowSpan !== rowSpan && rowSpan > -1) {\n            args.cell.rowSpan = rowSpan;\n        }\n        return args;\n    };\n    /* tslint:enable:no-any */\n    Render.prototype.exportContentEvent = function (args) {\n        args.value = args.data[Number(args.column.field.split('.formattedText')[0])].type === 'grand sum' ?\n            this.parent.localeObj.getConstant('grandTotal') : args.value;\n        return args;\n    };\n    /* tslint:disable:no-any */\n    Render.prototype.unWireEvents = function (cell) {\n        if (cell.querySelector('.e-hyperlinkcell')) {\n            /* tslint:disable-next-line */\n            EventHandler.remove(cell.querySelector('.e-hyperlinkcell'), this.parent.isAdaptive ? 'touchend' : 'click', this.onHyperCellClick);\n        }\n        else {\n            return;\n        }\n    };\n    Render.prototype.wireEvents = function (cell) {\n        if (cell.querySelector('.e-hyperlinkcell')) {\n            /* tslint:disable-next-line */\n            EventHandler.add(cell.querySelector('.e-hyperlinkcell'), this.parent.isAdaptive ? 'touchend' : 'click', this.onHyperCellClick, this);\n        }\n        else {\n            return;\n        }\n    };\n    return Render;\n}());\nexport { Render };\n","import { KeyboardEvents, closest, addClass, removeClass } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\n/**\n * Keyboard interaction\n */\n/** @hidden */\nvar CommonKeyboardInteraction = /** @class */ (function () {\n    /**\n     * Constructor\n     */\n    function CommonKeyboardInteraction(parent) {\n        this.keyConfigs = {\n            shiftF: 'shift+F',\n            shiftS: 'shift+S',\n            shiftE: 'shift+E',\n            delete: 'delete',\n            enter: 'enter',\n            escape: 'escape',\n            upArrow: 'upArrow',\n            downArrow: 'downArrow'\n        };\n        this.parent = parent;\n        this.parent.element.tabIndex = this.parent.element.tabIndex === -1 ? 0 : this.parent.element.tabIndex;\n        this.keyboardModule = new KeyboardEvents(this.parent.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n    }\n    CommonKeyboardInteraction.prototype.keyActionHandler = function (e) {\n        switch (e.action) {\n            case 'shiftF':\n                this.processFilter(e);\n                break;\n            case 'shiftS':\n                this.processSort(e);\n                break;\n            case 'shiftE':\n                this.processEdit(e);\n                break;\n            case 'delete':\n                this.processDelete(e);\n                break;\n            case 'enter':\n                this.processEnter(e);\n                break;\n            case 'escape':\n                this.processClose(e);\n                break;\n            case 'upArrow':\n            case 'downArrow':\n                this.processFilterNodeSelection(e);\n                break;\n        }\n    };\n    CommonKeyboardInteraction.prototype.getButtonElement = function (target) {\n        var allPivotButtons = [].slice.call(this.parent.element.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n        for (var i = 0, len = allPivotButtons.length; i < len; i++) {\n            if (allPivotButtons[i].getAttribute('data-uid') === target.getAttribute('data-uid')) {\n                return allPivotButtons[i];\n            }\n        }\n        return target;\n    };\n    CommonKeyboardInteraction.prototype.processEnter = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS)) {\n            if (target.querySelector('.' + cls.AXISFIELD_ICON_CLASS) && closest(target, '.' + cls.VALUE_AXIS_CLASS)) {\n                target.querySelector('.' + cls.AXISFIELD_ICON_CLASS).click();\n            }\n            else if (target.querySelector('.' + cls.CALC_EDIT)) {\n                target.querySelector('.' + cls.CALC_EDIT).click();\n            }\n            else if (target.querySelector('.' + cls.SORT_CLASS) &&\n                !closest(target, '.' + cls.VALUE_AXIS_CLASS) && !closest(target, '.' + cls.AXIS_FILTER_CLASS)) {\n                target.querySelector('.' + cls.SORT_CLASS).click();\n                this.getButtonElement(target).focus();\n            }\n            else if (target.querySelector('.' + cls.FILTER_COMMON_CLASS) && !closest(target, '.' + cls.VALUE_AXIS_CLASS)) {\n                target.querySelector('.' + cls.FILTER_COMMON_CLASS).click();\n            }\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processSort = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS) && target.querySelector('.' + cls.SORT_CLASS) &&\n            !closest(target, '.' + cls.VALUE_AXIS_CLASS) && !closest(target, '.' + cls.AXIS_FILTER_CLASS)) {\n            target.querySelector('.' + cls.SORT_CLASS).click();\n            this.getButtonElement(target).focus();\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processEdit = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS) && target.querySelector('.' + cls.CALC_EDIT)) {\n            target.querySelector('.' + cls.CALC_EDIT).click();\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processFilter = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS) && target.querySelector('.' + cls.FILTER_COMMON_CLASS) &&\n            !closest(target, '.' + cls.VALUE_AXIS_CLASS)) {\n            target.querySelector('.' + cls.FILTER_COMMON_CLASS).click();\n            if (this.parent && this.parent.control && this.parent.moduleName === 'pivotview' &&\n                this.parent.control.grid && this.parent.control.showGroupingBar &&\n                this.parent.control.groupingBarModule && closest(target, '.' + cls.GROUP_ROW_CLASS) &&\n                this.parent.filterDialog && this.parent.filterDialog.dialogPopUp &&\n                !this.parent.filterDialog.dialogPopUp.isDestroyed && this.parent.filterDialog.dialogPopUp.element) {\n                var dialogElement_1 = this.parent.filterDialog.dialogPopUp.element;\n                var isExcelFilter_1 = this.parent.filterDialog.allowExcelLikeFilter;\n                clearTimeout(this.timeOutObj);\n                this.timeOutObj = setTimeout(function () {\n                    if (dialogElement_1 && dialogElement_1.classList.contains('e-popup-open')) {\n                        if (isExcelFilter_1 && dialogElement_1.querySelector('.e-dlg-closeicon-btn')) {\n                            dialogElement_1.querySelector('.e-dlg-closeicon-btn').focus();\n                        }\n                        else if (dialogElement_1.querySelector('input')) {\n                            dialogElement_1.querySelector('input').focus();\n                        }\n                    }\n                });\n            }\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processFilterNodeSelection = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.SELECT_ALL_CLASS) && e.keyCode === 40) {\n            /* tslint:disable-next-line:max-line-length */\n            var memberEditorTree = closest(target, '.' + cls.EDITOR_TREE_WRAPPER_CLASS).querySelector('.' + cls.EDITOR_TREE_CONTAINER_CLASS);\n            if (memberEditorTree && memberEditorTree.querySelector('li')) {\n                var firstLi = memberEditorTree.querySelector('li');\n                if (memberEditorTree.querySelector('li#_active')) {\n                    removeClass([memberEditorTree.querySelector('li#_active')], ['e-hover', 'e-node-focus']);\n                    memberEditorTree.querySelector('li#_active').removeAttribute('id');\n                }\n                firstLi.setAttribute('id', '_active');\n                addClass([firstLi], ['e-hover', 'e-node-focus']);\n                memberEditorTree.focus();\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (target && closest(target, '.' + cls.EDITOR_TREE_CONTAINER_CLASS) && e.keyCode === 38) {\n            var memberEditorTree = closest(target, '.' + cls.EDITOR_TREE_CONTAINER_CLASS);\n            if (memberEditorTree.querySelector('li#_active.e-hover.e-node-focus') && memberEditorTree.querySelector('li') &&\n                memberEditorTree.querySelector('li').classList.contains('e-prev-active-node') &&\n                memberEditorTree.querySelector('li') === memberEditorTree.querySelector('li#_active.e-hover.e-node-focus')) {\n                removeClass(memberEditorTree.querySelectorAll('li.e-prev-active-node'), 'e-prev-active-node');\n                /* tslint:disable-next-line:max-line-length */\n                var allMemberEditorTree = closest(target, '.' + cls.EDITOR_TREE_WRAPPER_CLASS).querySelector('.' + cls.SELECT_ALL_CLASS);\n                if (allMemberEditorTree && allMemberEditorTree.querySelector('li')) {\n                    var firstLi = allMemberEditorTree.querySelector('li');\n                    firstLi.setAttribute('id', '_active');\n                    addClass([firstLi], ['e-hover', 'e-node-focus']);\n                    allMemberEditorTree.focus();\n                    e.preventDefault();\n                    return;\n                }\n            }\n        }\n        else if (target && target.id === this.parent.parentID + '_inputbox') {\n            if (e.action === 'upArrow') {\n                target.parentElement.querySelector('.e-spin-up').click();\n            }\n            else if (e.action === 'downArrow') {\n                target.parentElement.querySelector('.e-spin-down').click();\n            }\n        }\n    };\n    CommonKeyboardInteraction.prototype.processDelete = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS) && target.querySelector('.' + cls.REMOVE_CLASS)) {\n            target.querySelector('.' + cls.REMOVE_CLASS).click();\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processClose = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.e-popup.e-popup-open')) {\n            /* tslint:disable-next-line:max-line-length */\n            /* tslint:disable-next-line:no-any */\n            var dialogInstance = closest(target, '.e-popup.e-popup-open').ej2_instances[0];\n            if (dialogInstance && !dialogInstance.closeOnEscape) {\n                var button = dialogInstance.element.getAttribute('data-fieldName');\n                dialogInstance.hide();\n                if (this.parent.element) {\n                    var pivotButtons = [].slice.call(this.parent.element.querySelectorAll('.e-pivot-button'));\n                    for (var _i = 0, pivotButtons_1 = pivotButtons; _i < pivotButtons_1.length; _i++) {\n                        var item = pivotButtons_1[_i];\n                        if (item.getAttribute('data-uid') === button) {\n                            item.focus();\n                            break;\n                        }\n                    }\n                }\n                e.preventDefault();\n                return;\n            }\n        }\n    };\n    /**\n     * To destroy the keyboard module.\n     * @return {void}\n     * @private\n     */\n    CommonKeyboardInteraction.prototype.destroy = function () {\n        if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n        }\n        else {\n            return;\n        }\n    };\n    return CommonKeyboardInteraction;\n}());\nexport { CommonKeyboardInteraction };\n","import { isNullOrUndefined, removeClass, addClass } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport { PivotUtil } from '../../base/util';\n/**\n * `EventBase` for active fields action.\n */\n/** @hidden */\nvar EventBase = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function EventBase(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updates sorting order for the selected field.\n     * @method updateSorting\n     * @param  {Event} args - Contains clicked element information to update dataSource.\n     * @return {void}\n     * @hidden\n     */\n    EventBase.prototype.updateSorting = function (args) {\n        if (!(args.target.classList.contains(cls.FILTER_COMMON_CLASS)) &&\n            !(args.target.classList.contains(cls.REMOVE_CLASS))) {\n            if (this.parent.filterDialog.dialogPopUp) {\n                this.parent.filterDialog.dialogPopUp.close();\n            }\n            var target = args.target;\n            var fieldName = void 0;\n            var checkisDescending = void 0;\n            var isDescending = void 0;\n            if (target.id) {\n                fieldName = target.id;\n                checkisDescending = [].slice.call(target.querySelectorAll('.' + cls.SORT_DESCEND_CLASS));\n            }\n            else {\n                fieldName = target.parentElement.id;\n                checkisDescending = [].slice.call(target.parentElement.querySelectorAll('.' + cls.SORT_DESCEND_CLASS));\n            }\n            if (checkisDescending.length === 0) {\n                isDescending = false;\n            }\n            else {\n                isDescending = true;\n            }\n            //isDescending = (target.querySelectorAll(cls.SORT_DESCEND_CLASS));\n            var sortObj = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.sortSettings);\n            if (!isNullOrUndefined(sortObj)) {\n                for (var i = 0; i < this.parent.dataSourceSettings.sortSettings.length; i++) {\n                    if (this.parent.dataSourceSettings.sortSettings[i].name === fieldName) {\n                        this.parent.dataSourceSettings.sortSettings.splice(i, 1);\n                        break;\n                    }\n                }\n                var newSortObj = { name: fieldName, order: isDescending ? 'Ascending' : 'Descending' };\n                // let newSortObj: ISort = { name: fieldName, order: isNone ? 'Ascending' : isDescending ? 'None' : 'Descending' };\n                this.parent.dataSourceSettings.sortSettings.push(newSortObj);\n            }\n            else {\n                var newSortObj = { name: fieldName, order: isDescending ? 'Ascending' : 'Descending' };\n                //let newSortObj: ISort = { name: fieldName, order: isNone ? 'Ascending' : isDescending ? 'None' : 'Descending'  };\n                this.parent.dataSourceSettings.sortSettings.push(newSortObj);\n            }\n            this.parent.control.lastSortInfo =\n                this.parent.dataSourceSettings.sortSettings[this.parent.dataSourceSettings.sortSettings.length - 1];\n            isDescending ? removeClass([target], cls.SORT_DESCEND_CLASS) : addClass([target], cls.SORT_DESCEND_CLASS);\n            // if (isDescending) {\n            //     removeClass([target], cls.SORT_DESCEND_CLASS);\n            //     addClass([target], cls.SORTING);\n            // } else if (!isDescending && !isNone) {\n            //     addClass([target], cls.SORT_DESCEND_CLASS);\n            // } else if (isNone) {\n            //     removeClass([target], cls.SORTING);\n            // } else if (!isNone) {\n            //     removeClass([target], cls.SORT_DESCEND_CLASS);\n            //     removeClass([target], cls.SORTING);\n            //    //addClass([target], cls.SORT_CLASS);\n            // }\n        }\n    };\n    /**\n     * Updates sorting order for the selected field.\n     * @method updateFiltering\n     * @param  {Event} args - Contains clicked element information to update dataSource.\n     * @return {void}\n     * @hidden\n     */\n    EventBase.prototype.updateFiltering = function (args) {\n        var target = args.target;\n        var fieldName = target.parentElement.id;\n        var fieldCaption = target.parentElement.textContent;\n        var isInclude = false;\n        var filterItems = [];\n        var treeData = [];\n        if (this.parent.dataSourceSettings.allowMemberFilter) {\n            if (this.parent.dataType === 'olap') {\n                treeData = this.getOlapData(fieldName, isInclude);\n            }\n            else {\n                var members = PivotUtil.getClonedData(this.parent.engineModule.fieldList[fieldName].dateMember);\n                /* tslint:disable:typedef */\n                members =\n                    this.parent.engineModule.fieldList[fieldName].sort === 'Ascending' ?\n                        (members.sort(function (a, b) { return (a.actualText > b.actualText) ? 1 :\n                            ((b.actualText > a.actualText) ? -1 : 0); })) :\n                        this.parent.engineModule.fieldList[fieldName].sort === 'Descending' ?\n                            (members.sort(function (a, b) { return (a.actualText < b.actualText) ? 1 :\n                                ((b.actualText < a.actualText) ? -1 : 0); })) :\n                            members;\n                /* tslint:enable:typedef */\n                var filterObj = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n                if (!isNullOrUndefined(filterObj)) {\n                    isInclude = this.isValidFilterItemsAvail(fieldName, filterObj) && filterObj.type === 'Include' ? true : false;\n                    filterItems = filterObj.items ? filterObj.items : [];\n                }\n                treeData =\n                    this.getTreeData(isInclude, members, filterItems, fieldName);\n            }\n        }\n        if (this.parent.filterDialog.dialogPopUp) {\n            this.parent.filterDialog.dialogPopUp.close();\n        }\n        var popupTarget = this.parent.control.filterTargetID;\n        if (isNullOrUndefined(popupTarget)) {\n            popupTarget = this.parent.moduleName !== 'pivotfieldlist' ?\n                this.parent.element : document.getElementById(this.parent.parentID + '_Wrapper');\n        }\n        this.parent.filterDialog.createFilterDialog(treeData, fieldName, fieldCaption, popupTarget);\n    };\n    /**\n     * Returns boolean by checing the valid filter members from the selected filter settings.\n     * @method isValidFilterItemsAvail\n     * @param  {string} fieldName - Gets filter members for the given field name.\n     * @return {boolean}\n     * @hidden\n     */\n    EventBase.prototype.isValidFilterItemsAvail = function (fieldName, filterObj) {\n        var isItemAvail = false;\n        var filterTypes = ['Include', 'Exclude'];\n        if (filterObj && filterTypes.indexOf(filterObj.type) >= 0) {\n            var engineModule = this.parent.engineModule;\n            var field = engineModule.fieldList[fieldName];\n            var members = (engineModule.formatFields[fieldName] &&\n                (['date', 'dateTime', 'time'].indexOf(engineModule.formatFields[fieldName].type) > -1)) ?\n                field.formattedMembers : field.members;\n            for (var _i = 0, _a = filterObj.items; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (members[item]) {\n                    isItemAvail = true;\n                    break;\n                }\n            }\n        }\n        return isItemAvail;\n    };\n    EventBase.prototype.getOlapData = function (fieldName, isInclude) {\n        var treeData = [];\n        var filterItems = [];\n        this.parent.filterDialog.isSearchEnabled = false;\n        var updatedTreeData = [];\n        var engineModule = this.parent.engineModule;\n        var filterObj = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n        if (engineModule.fieldList[fieldName].filterMembers.length === 0) {\n            if (!this.parent.control.loadOnDemandInMemberEditor) {\n                engineModule.getMembers(this.parent.dataSourceSettings, fieldName, true);\n            }\n            else if (filterObj && filterObj.levelCount > 1 && engineModule.fieldList[fieldName].levels.length > 1) {\n                engineModule.getFilterMembers(this.parent.dataSourceSettings, fieldName, filterObj.levelCount);\n            }\n            else {\n                engineModule.fieldList[fieldName].levelCount = 1;\n                engineModule.getMembers(this.parent.dataSourceSettings, fieldName);\n            }\n        }\n        else {\n            engineModule.fieldList[fieldName].currrentMembers = {};\n            engineModule.fieldList[fieldName].searchMembers = [];\n        }\n        var isHierarchy = engineModule.fieldList[fieldName].isHierarchy;\n        treeData = engineModule.fieldList[fieldName].filterMembers;\n        if (!isNullOrUndefined(filterObj)) {\n            isInclude = filterObj.type ? filterObj.type === 'Include' ? true : false : true;\n            filterItems = filterObj.items ? filterObj.items : [];\n        }\n        var filterItemObj = {};\n        var dummyfilterItems = {};\n        var memberObject = engineModule.fieldList[fieldName].members;\n        for (var _i = 0, filterItems_1 = filterItems; _i < filterItems_1.length; _i++) {\n            var item = filterItems_1[_i];\n            filterItemObj[item] = item;\n            dummyfilterItems[item] = item;\n            if (memberObject[item]) {\n                dummyfilterItems = this.getParentNode(fieldName, item, dummyfilterItems);\n            }\n        }\n        treeData = this.getFilteredTreeNodes(fieldName, treeData, dummyfilterItems, updatedTreeData, isHierarchy);\n        treeData = this.getOlapTreeData(isInclude, PivotUtil.getClonedData(treeData), filterItemObj, fieldName, isHierarchy);\n        treeData = this.sortOlapFilterData(treeData, engineModule.fieldList[fieldName].sort);\n        return treeData;\n    };\n    /**\n     * Gets sorted filter members for the selected field.\n     * @method sortFilterData\n     * @param  {{ [key: string]: Object }[]} treeData - Gets filter members for the given field name.\n     * @return {{ [key: string]: Object }[]}\n     * @hidden\n     */\n    EventBase.prototype.sortOlapFilterData = function (treeData, order) {\n        if (treeData.length > 0) {\n            /* tslint:disable:typedef */\n            treeData = order === 'Ascending' ?\n                (treeData.sort(function (a, b) { return (a.caption > b.caption) ? 1 :\n                    ((b.caption > a.caption) ? -1 : 0); })) : order === 'Descending' ?\n                (treeData.sort(function (a, b) { return (a.caption < b.caption) ? 1 :\n                    ((b.caption < a.caption) ? -1 : 0); })) : treeData;\n            /* tslint:enable:typedef */\n        }\n        return treeData;\n    };\n    EventBase.prototype.getParentIDs = function (treeObj, id, parent) {\n        var data = treeObj.fields.dataSource;\n        var pid;\n        for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n            var li = data_1[_i];\n            if (li.id === id) {\n                pid = li.pid;\n                break;\n            }\n        }\n        if (pid) {\n            parent.push(pid);\n            this.getParentIDs(treeObj, pid, parent);\n        }\n        return parent;\n    };\n    EventBase.prototype.getChildIDs = function (treeObj, id, children) {\n        var data = treeObj.fields.dataSource;\n        var cID;\n        for (var _i = 0, data_2 = data; _i < data_2.length; _i++) {\n            var li = data_2[_i];\n            if (li.pid === id) {\n                cID = li.id;\n                break;\n            }\n        }\n        if (cID) {\n            children.push(cID);\n            this.getParentIDs(treeObj, cID, children);\n        }\n        return children;\n    };\n    /**\n     * show tree nodes using search text.\n     * @hidden\n     */\n    /* tslint:disable:max-func-body-length */\n    EventBase.prototype.searchTreeNodes = function (args, treeObj, isFieldCollection, isHierarchy) {\n        if (isFieldCollection) {\n            var searchList = [];\n            var nonSearchList = [];\n            var list = [].slice.call(treeObj.element.querySelectorAll('li'));\n            for (var _i = 0, list_1 = list; _i < list_1.length; _i++) {\n                var element = list_1[_i];\n                if ((element.querySelector('.e-list-text').textContent.toLowerCase()).indexOf(args.value.toLowerCase()) > -1) {\n                    searchList.push(element);\n                }\n                else {\n                    nonSearchList.push(element);\n                }\n            }\n            treeObj.enableNodes(searchList);\n            removeClass(searchList, cls.ICON_DISABLE);\n            treeObj.disableNodes(nonSearchList);\n            addClass(nonSearchList, cls.ICON_DISABLE);\n            if (searchList.length > 0 && nonSearchList.length > 0) {\n                for (var _a = 0, searchList_1 = searchList; _a < searchList_1.length; _a++) {\n                    var currentNode = searchList_1[_a];\n                    var id = currentNode.getAttribute('data-uid');\n                    var parentIDs = this.getParentIDs(treeObj, id, []);\n                    var childIDs = this.getChildIDs(treeObj, id, []);\n                    var pNodes = [];\n                    if (parentIDs.length > 0) {\n                        for (var _b = 0, nonSearchList_1 = nonSearchList; _b < nonSearchList_1.length; _b++) {\n                            var li = nonSearchList_1[_b];\n                            if (PivotUtil.inArray(li.getAttribute('data-uid'), parentIDs) !== -1) {\n                                pNodes.push(li);\n                            }\n                        }\n                    }\n                    if (childIDs.length > 0) {\n                        for (var _c = 0, nonSearchList_2 = nonSearchList; _c < nonSearchList_2.length; _c++) {\n                            var li = nonSearchList_2[_c];\n                            if (PivotUtil.inArray(li.getAttribute('data-uid'), childIDs) !== -1) {\n                                pNodes.push(li);\n                            }\n                        }\n                    }\n                    treeObj.enableNodes(pNodes);\n                    removeClass(pNodes, cls.ICON_DISABLE);\n                }\n            }\n            if ([].slice.call(treeObj.element.querySelectorAll('li.' + cls.ICON_DISABLE)).length === 0) {\n                treeObj.collapseAll();\n            }\n            else {\n                treeObj.expandAll(undefined, undefined, true);\n            }\n        }\n        else {\n            this.parent.searchTreeItems = [];\n            if (this.parent.dataType === 'olap' && !isHierarchy) {\n                this.updateOlapSearchTree(args, treeObj, isHierarchy);\n            }\n            else {\n                var searchList = [];\n                var memberCount = 0;\n                memberCount = 1;\n                for (var _d = 0, _e = this.parent.currentTreeItems; _d < _e.length; _d++) {\n                    var item = _e[_d];\n                    if (item.name.toLowerCase().indexOf(args.value.toLowerCase()) > -1) {\n                        this.parent.searchTreeItems.push(item);\n                        if (memberCount <= this.parent.control.maxNodeLimitInMemberEditor) {\n                            searchList.push(item);\n                        }\n                        memberCount++;\n                    }\n                }\n                memberCount--;\n                if (memberCount > this.parent.control.maxNodeLimitInMemberEditor) {\n                    this.parent.editorLabelElement.innerText = (memberCount - this.parent.control.maxNodeLimitInMemberEditor) +\n                        this.parent.control.localeObj.getConstant('editorDataLimitMsg');\n                    this.parent.filterDialog.dialogPopUp.height = (this.parent.filterDialog.allowExcelLikeFilter ? '440px' : '400px');\n                    this.parent.isDataOverflow = true;\n                }\n                else {\n                    this.parent.editorLabelElement.innerText = '';\n                    this.parent.filterDialog.dialogPopUp.height = (this.parent.filterDialog.allowExcelLikeFilter ? '400px' : '350px');\n                    this.parent.isDataOverflow = false;\n                }\n                this.parent.isDataOverflow = (memberCount > this.parent.control.maxNodeLimitInMemberEditor);\n                this.parent.editorLabelElement.parentElement.style.display = this.parent.isDataOverflow ? 'block' : 'none';\n                treeObj.fields = { dataSource: searchList, id: 'id', text: 'name', isChecked: 'isSelected', parentID: 'pid' };\n                treeObj.dataBind();\n            }\n        }\n    };\n    EventBase.prototype.updateOlapSearchTree = function (args, treeObj, isHierarchy) {\n        var treeData = [];\n        var filterDialog = this.parent.filterDialog.dialogPopUp.element;\n        var fieldName = filterDialog.getAttribute('data-fieldname');\n        if (args.value.toLowerCase() === '') {\n            this.parent.filterDialog.isSearchEnabled = false;\n            this.parent.engineModule.fieldList[fieldName].searchMembers = [];\n            // (this.parent.engineModule.fieldList[fieldName] as IOlapField).currrentMembers = {};\n            var updatedTreeData = [];\n            var filterItemObj = {};\n            var dummyfilterItems = {};\n            var memberObject = this.parent.engineModule.fieldList[fieldName].members;\n            var members = Object.keys(memberObject);\n            var filterItems = [];\n            for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n                var item = members_1[_i];\n                if (memberObject[item].isSelected) {\n                    if (!(memberObject[item].parent && memberObject[memberObject[item].parent].isSelected)) {\n                        filterItems.push(item);\n                    }\n                }\n            }\n            for (var _a = 0, filterItems_2 = filterItems; _a < filterItems_2.length; _a++) {\n                var item = filterItems_2[_a];\n                filterItemObj[item] = item;\n                dummyfilterItems[item] = item;\n                if (memberObject[item]) {\n                    dummyfilterItems = this.getParentNode(fieldName, item, dummyfilterItems);\n                }\n            }\n            var searchData = this.parent.engineModule.fieldList[fieldName].filterMembers;\n            treeData = this.getFilteredTreeNodes(fieldName, searchData, dummyfilterItems, updatedTreeData, isHierarchy);\n            treeData = this.getOlapTreeData(true, PivotUtil.getClonedData(treeData), filterItemObj, fieldName, isHierarchy, true);\n        }\n        else {\n            this.parent.filterDialog.isSearchEnabled = true;\n            var searchData = this.parent.engineModule.fieldList[fieldName].searchMembers;\n            treeData = PivotUtil.getClonedData(searchData);\n            treeData = this.getOlapSearchTreeData(true, treeData, fieldName);\n        }\n        treeObj.fields = { dataSource: treeData, id: 'id', text: 'name', isChecked: 'isSelected', parentID: 'pid' };\n        treeObj.dataBind();\n    };\n    EventBase.prototype.getTreeData = function (isInclude, members, filterItems, fieldName) {\n        this.parent.currentTreeItems = [];\n        this.parent.searchTreeItems = [];\n        this.parent.currentTreeItemsPos = {};\n        this.parent.savedTreeFilterPos = {};\n        var engineModule = this.parent.engineModule;\n        this.parent.isDateField = engineModule.formatFields[fieldName] &&\n            ((['date', 'dateTime', 'time']).indexOf(engineModule.formatFields[fieldName].type) > -1);\n        var list = [];\n        var memberCount = 1;\n        var filterObj = {};\n        for (var _i = 0, filterItems_3 = filterItems; _i < filterItems_3.length; _i++) {\n            var item = filterItems_3[_i];\n            filterObj[item] = item;\n        }\n        for (var _a = 0, members_2 = members; _a < members_2.length; _a++) {\n            var member = members_2[_a];\n            var memberName = this.parent.isDateField ? member.formattedText : member.actualText.toString();\n            /* tslint:disable */\n            var obj = {\n                id: member.actualText.toString(),\n                actualText: member.actualText,\n                name: memberName,\n                isSelected: isInclude ? false : true\n            };\n            /* tslint:enable */\n            if (filterObj[memberName] !== undefined) {\n                obj.isSelected = isInclude ? true : false;\n            }\n            if (memberCount <= this.parent.control.maxNodeLimitInMemberEditor) {\n                list.push(obj);\n            }\n            if (!obj.isSelected) {\n                this.parent.savedTreeFilterPos[memberCount - 1] = memberName;\n            }\n            this.parent.currentTreeItems.push(obj);\n            this.parent.searchTreeItems.push(obj);\n            this.parent.currentTreeItemsPos[member.actualText] = { index: memberCount - 1, isSelected: obj.isSelected };\n            memberCount++;\n        }\n        this.parent.isDataOverflow = ((memberCount - 1) > this.parent.control.maxNodeLimitInMemberEditor);\n        return list;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    EventBase.prototype.getOlapTreeData = function (isInclude, members, filterObj, fieldName, isHierarchy, isSearchRender) {\n        var engineModule = this.parent.engineModule;\n        var fieldList = engineModule.fieldList[fieldName];\n        this.parent.currentTreeItems = [];\n        this.parent.searchTreeItems = [];\n        this.parent.currentTreeItemsPos = {};\n        var list = [];\n        var memberCount = 1;\n        for (var _i = 0, members_3 = members; _i < members_3.length; _i++) {\n            var member = members_3[_i];\n            var obj = member;\n            var memberName = member.id.toString();\n            if (!isSearchRender) {\n                obj.isSelected = isInclude ? false : true;\n            }\n            if (filterObj[memberName] !== undefined) {\n                obj.isSelected = isInclude ? true : false;\n            }\n            if (!isSearchRender && member.hasChildren) {\n                this.updateChildNodeStates(fieldList.filterMembers, fieldName, member.id, obj.isSelected);\n            }\n            fieldList.members[memberName].isSelected = obj.isSelected;\n            if (fieldList.currrentMembers && fieldList.currrentMembers[memberName]) {\n                fieldList.currrentMembers[memberName].isSelected = obj.isSelected;\n            }\n            if (memberCount <= this.parent.control.maxNodeLimitInMemberEditor && isHierarchy) {\n                list.push(obj);\n            }\n            this.parent.currentTreeItems.push(obj);\n            this.parent.searchTreeItems.push(obj);\n            this.parent.currentTreeItemsPos[memberName] = { index: memberCount - 1, isSelected: obj.isSelected };\n            memberCount++;\n        }\n        this.parent.isDataOverflow = isHierarchy ? ((memberCount - 1) > this.parent.control.maxNodeLimitInMemberEditor) : false;\n        return isHierarchy ? list : members;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    EventBase.prototype.getOlapSearchTreeData = function (isInclude, members, fieldName) {\n        var cMembers = this.parent.engineModule.fieldList[fieldName].members;\n        for (var _i = 0, members_4 = members; _i < members_4.length; _i++) {\n            var member = members_4[_i];\n            var memberName = member.id.toString();\n            if (cMembers[memberName]) {\n                member.isSelected = cMembers[memberName].isSelected;\n            }\n            this.parent.searchTreeItems.push(member);\n        }\n        return members;\n    };\n    EventBase.prototype.updateChildNodeStates = function (members, fieldName, node, state) {\n        var cMembers = this.parent.engineModule.fieldList[fieldName].members;\n        var sMembers = this.parent.engineModule.fieldList[fieldName].currrentMembers;\n        for (var _i = 0, members_5 = members; _i < members_5.length; _i++) {\n            var member = members_5[_i];\n            if (member.pid && member.pid.toString() === node) {\n                cMembers[member.id].isSelected = state;\n                if (sMembers && sMembers[member.id]) {\n                    sMembers[member.id].isSelected = state;\n                }\n                if (member.hasChildren) {\n                    this.updateChildNodeStates(members, fieldName, member.id, state);\n                }\n            }\n        }\n    };\n    /**\n     * get the parent node of particular filter members.\n     * @hidden\n     */\n    EventBase.prototype.getParentNode = function (fieldName, item, filterObj) {\n        var members = this.parent.engineModule.fieldList[fieldName].members;\n        if (members[item].parent && item !== members[item].parent) {\n            var parentItem = members[item].parent;\n            filterObj[parentItem] = parentItem;\n            this.getParentNode(fieldName, parentItem, filterObj);\n        }\n        return filterObj;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    EventBase.prototype.getFilteredTreeNodes = function (fieldName, members, filterObj, treeData, isHierarchy) {\n        var parentNodes = [];\n        var memberObject = this.parent.engineModule.fieldList[fieldName].members;\n        var selectedNodes = filterObj ? Object.keys(filterObj) : [];\n        for (var _i = 0, selectedNodes_1 = selectedNodes; _i < selectedNodes_1.length; _i++) {\n            var node = selectedNodes_1[_i];\n            var parent_1 = memberObject[node].parent;\n            if (parent_1 !== undefined && PivotUtil.inArray(parent_1, parentNodes) === -1) {\n                parentNodes.push(parent_1);\n            }\n        }\n        for (var _a = 0, members_6 = members; _a < members_6.length; _a++) {\n            var member = members_6[_a];\n            if (isNullOrUndefined(member.pid) || PivotUtil.inArray(member.pid, parentNodes) !== -1) {\n                treeData.push(member);\n                if (isNullOrUndefined(member.pid) && PivotUtil.inArray(member.id, parentNodes) !== -1) {\n                    memberObject[member.id].isNodeExpand = true;\n                }\n                else if (!isNullOrUndefined(member.pid) && PivotUtil.inArray(member.pid, parentNodes) !== -1) {\n                    memberObject[member.id].isNodeExpand = false;\n                    memberObject[member.pid].isNodeExpand = true;\n                }\n                else {\n                    memberObject[member.id].isNodeExpand = false;\n                }\n            }\n            else {\n                memberObject[member.id].isNodeExpand = false;\n            }\n        }\n        return treeData;\n    };\n    return EventBase;\n}());\nexport { EventBase };\n","import { isNullOrUndefined, closest, isBlazor } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\n/**\n * `DialogAction` module is used to handle field list dialog related behaviour.\n */\n/** @hidden */\nvar NodeStateModified = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function NodeStateModified(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updates the dataSource by drag and drop the selected field from either field list or axis table with dropped target position.\n     * @method onStateModified\n     * @param  {DragEventArgs & DragAndDropEventArgs} args -  Contains both pivot button and field list drag and drop information.\n     * @param  {string} fieldName - Defines dropped field name to update dataSource.\n     * @return {void}\n     * @hidden\n     */\n    NodeStateModified.prototype.onStateModified = function (args, fieldName) {\n        var droppedClass = '';\n        var nodeDropped = true;\n        var target = closest(args.target, '.' + cls.DROPPABLE_CLASS);\n        var droppedPosition = -1;\n        this.parent.dataSourceUpdate.btnElement = args.element ? args.element.parentElement : undefined;\n        if (target) {\n            droppedClass = target.classList[1] === cls.ROW_AXIS_CLASS ?\n                'rows' : target.classList[1] === cls.COLUMN_AXIS_CLASS ? 'columns' : target.classList[1] === cls.VALUE_AXIS_CLASS ?\n                'values' : target.classList[1] === cls.FILTER_AXIS_CLASS ? 'filters' : '';\n        }\n        if (this.parent.dataType === 'olap') {\n            var actualFieldName = (this.parent.engineModule.fieldList[fieldName] &&\n                this.parent.engineModule.fieldList[fieldName].isCalculatedField ?\n                this.parent.engineModule.fieldList[fieldName].tag : fieldName);\n            if (args.cancel && droppedClass === '') {\n                nodeDropped = false;\n                return nodeDropped;\n            }\n            else if ((this.parent.dataSourceUpdate.btnElement &&\n                (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'true' &&\n                    (droppedClass === 'filters' || droppedClass === 'values'))) ||\n                (this.parent.dataSourceUpdate.btnElement &&\n                    (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'false' &&\n                        actualFieldName.toLowerCase().indexOf('[measures].') > -1 &&\n                        (droppedClass === 'filters' || droppedClass === 'rows' || droppedClass === 'columns'))) ||\n                (this.parent.dataSourceUpdate.btnElement &&\n                    (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'false' &&\n                        actualFieldName.toLowerCase().indexOf('[measures].') === -1 &&\n                        this.parent.engineModule.fieldList[fieldName] &&\n                        this.parent.engineModule.fieldList[fieldName].isNamedSets &&\n                        (droppedClass === 'filters' || droppedClass === 'values'))) ||\n                (this.parent.dataSourceUpdate.btnElement &&\n                    (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'false' &&\n                        actualFieldName.toLowerCase().indexOf('[measures].') === -1 && droppedClass === 'values'))) {\n                var title = this.parent.localeObj.getConstant('warning');\n                var description = this.parent.localeObj.getConstant('fieldDropErrorAction');\n                this.parent.errorDialog.createErrorDialog(title, description);\n                nodeDropped = false;\n                return nodeDropped;\n            }\n        }\n        else {\n            if ((args.cancel && droppedClass === '') ||\n                (this.parent.dataSourceUpdate.btnElement && this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'true' &&\n                    ((droppedClass === 'filters' || droppedClass === 'values') ||\n                        droppedClass.indexOf(this.parent.dataSourceSettings.valueAxis) > -1))) {\n                nodeDropped = false;\n                return nodeDropped;\n            }\n        }\n        if (droppedClass !== '') {\n            if (this.parent.dataType === 'olap') {\n                var actualFieldName = (this.parent.engineModule.fieldList[fieldName] &&\n                    this.parent.engineModule.fieldList[fieldName].isCalculatedField ?\n                    this.parent.engineModule.fieldList[fieldName].tag : fieldName);\n                if ((actualFieldName.toLowerCase().indexOf('[measures].') > -1 &&\n                    (droppedClass === 'filters' || droppedClass === 'rows' || droppedClass === 'columns')) ||\n                    (this.parent.engineModule.fieldList[fieldName] &&\n                        this.parent.engineModule.fieldList[fieldName].isNamedSets && droppedClass === 'filters') ||\n                    (actualFieldName.toLowerCase().indexOf('[measures].') === -1 && droppedClass === 'values')) {\n                    var title = this.parent.localeObj.getConstant('warning');\n                    var description = this.parent.localeObj.getConstant('fieldDropErrorAction');\n                    this.parent.errorDialog.createErrorDialog(title, description);\n                    nodeDropped = false;\n                    return nodeDropped;\n                }\n            }\n            if (this.parent.dataType === 'pivot' && this.parent.engineModule.fieldList[fieldName] &&\n                this.parent.engineModule.fieldList[fieldName].aggregateType === 'CalculatedField' && droppedClass !== 'values') {\n                var title = this.parent.localeObj.getConstant('warning');\n                var description = this.parent.localeObj.getConstant('dropAction');\n                this.parent.errorDialog.createErrorDialog(title, description);\n                nodeDropped = false;\n                return nodeDropped;\n            }\n            droppedPosition = this.getButtonPosition(args.target, droppedClass);\n        }\n        else if (this.parent.engineModule.fieldList[fieldName]) {\n            this.parent.engineModule.fieldList[fieldName].isSelected = false;\n            if (this.parent.dataType === 'olap') {\n                this.parent.engineModule.updateFieldlistData(fieldName);\n            }\n        }\n        this.parent.dataSourceUpdate.updateDataSource(fieldName, droppedClass, droppedPosition);\n        return isBlazor() ? false : nodeDropped;\n    };\n    NodeStateModified.prototype.getButtonPosition = function (target, droppedClass) {\n        var droppedPosition = -1;\n        var targetBtn = closest(target, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n        if (!isNullOrUndefined(targetBtn)) {\n            targetBtn = targetBtn.querySelector('.' + cls.PIVOT_BUTTON_CLASS);\n            var axisPanel = this.parent.element.querySelector('.e-' + droppedClass);\n            var pivotButtons = [].slice.call(axisPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n            for (var i = 0, n = pivotButtons.length; i < n; i++) {\n                if (pivotButtons[i].id === targetBtn.id) {\n                    droppedPosition = i;\n                    break;\n                }\n            }\n        }\n        return droppedPosition;\n    };\n    return NodeStateModified;\n}());\nexport { NodeStateModified };\n","import * as events from '../../common/base/constant';\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../../base/util';\n/**\n * `DataSourceUpdate` module is used to update the dataSource.\n */\n/** @hidden */\nvar DataSourceUpdate = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function DataSourceUpdate(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updates the dataSource by adding the given field along with field dropped position to the dataSource.\n     * @param  {string} fieldName - Defines dropped field name to update dataSource.\n     * @param  {string} droppedClass -  Defines dropped field axis name to update dataSource.\n     * @param  {number} fieldCaption - Defines dropped position to the axis based on field position.\n     * @method updateDataSource\n     * @return {void}\n     * @hidden\n     */\n    DataSourceUpdate.prototype.updateDataSource = function (fieldName, droppedClass, droppedPosition) {\n        var _this = this;\n        var dataSourceItem;\n        var draggedClass;\n        var row = this.parent.dataSourceSettings.rows;\n        var column = this.parent.dataSourceSettings.columns;\n        var value = this.parent.dataSourceSettings.values;\n        var filter = this.parent.dataSourceSettings.filters;\n        var field = [row, column, value, filter];\n        for (var len = 0, lnt = field.length; len < lnt; len++) {\n            if (field[len]) {\n                for (var i = 0, n = field[len].length; i < n; i++) {\n                    if (field[len][i].name === fieldName || (this.parent.dataType === 'olap' &&\n                        field[len][i].name.toLowerCase() === '[measures]' && field[len][i].name.toLowerCase() === fieldName)) {\n                        draggedClass = len === 0 ? 'rows' : len === 1 ? 'columns' : len === 2 ? 'values' : 'filters';\n                    }\n                    if (!draggedClass) {\n                        draggedClass = 'fieldList';\n                    }\n                }\n            }\n        }\n        var eventdrop = {\n            fieldName: fieldName, dropField: PivotUtil.getFieldInfo(fieldName, this.control).fieldItem,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n            dropAxis: droppedClass, dropPosition: droppedPosition, draggedAxis: draggedClass, cancel: false\n        };\n        var control = this.control.getModuleName() === 'pivotfieldlist' && this.control.isPopupView ?\n            this.control.pivotGridModule : this.control;\n        control.trigger(events.fieldDrop, eventdrop, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                droppedClass = observedArgs.dropAxis;\n                droppedPosition = observedArgs.dropPosition;\n                fieldName = observedArgs.dropField ? observedArgs.dropField.name : observedArgs.fieldName;\n                dataSourceItem = observedArgs.dropField;\n                if (_this.control && _this.btnElement && _this.btnElement.getAttribute('isvalue') === 'true') {\n                    switch (droppedClass) {\n                        case '':\n                            _this.control.setProperties({ dataSourceSettings: { values: [] } }, true);\n                            break;\n                        case 'rows':\n                            _this.control.setProperties({ dataSourceSettings: { valueAxis: 'row' } }, true);\n                            break;\n                        case 'columns':\n                            _this.control.setProperties({ dataSourceSettings: { valueAxis: 'column' } }, true);\n                            break;\n                    }\n                }\n                else {\n                    // dataSourceItem = this.removeFieldFromReport(fieldName.toString());\n                    // dataSourceItem = dataSourceItem ? dataSourceItem : this.getNewField(fieldName.toString());\n                    _this.removeFieldFromReport(fieldName.toString());\n                    dataSourceItem = _this.getNewField(fieldName.toString(), observedArgs.dropField);\n                    if (dataSourceItem.type === 'CalculatedField' && droppedClass !== '') {\n                        droppedClass = 'values';\n                    }\n                }\n                if (_this.parent.dataType === 'olap') {\n                    // dataSourceItem = this.removeFieldFromReport(fieldName.toString());\n                    // dataSourceItem = dataSourceItem ? dataSourceItem : this.getNewField(fieldName.toString());\n                    _this.removeFieldFromReport(fieldName.toString());\n                    dataSourceItem = _this.getNewField(fieldName.toString(), observedArgs.dropField);\n                    if (_this.parent.dataSourceSettings.values.length === 0) {\n                        _this.removeFieldFromReport('[measures]');\n                    }\n                    if (dataSourceItem.type === 'CalculatedField' && droppedClass !== '') {\n                        droppedClass = 'values';\n                    }\n                }\n                if (_this.control) {\n                    var eventArgs = {\n                        fieldName: fieldName, droppedField: dataSourceItem,\n                        dataSourceSettings: PivotUtil.getClonedDataSourceSettings(_this.parent.dataSourceSettings),\n                        droppedAxis: droppedClass, droppedPosition: droppedPosition\n                    };\n                    /* tslint:disable */\n                    var dataSourceUpdate_1 = _this;\n                    control.trigger(events.onFieldDropped, eventArgs, function (droppedArgs) {\n                        dataSourceItem = droppedArgs.droppedField;\n                        if (dataSourceItem) {\n                            droppedPosition = droppedArgs.droppedPosition;\n                            droppedClass = droppedArgs.droppedAxis;\n                            switch (droppedClass) {\n                                case 'filters':\n                                    droppedPosition !== -1 ?\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.filters.splice(droppedPosition, 0, dataSourceItem) : _this.parent.dataSourceSettings.filters.splice(droppedPosition, 0, dataSourceItem)) :\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.filters.push(dataSourceItem) : _this.parent.dataSourceSettings.filters.push(dataSourceItem));\n                                    break;\n                                case 'rows':\n                                    droppedPosition !== -1 ?\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.rows.splice(droppedPosition, 0, dataSourceItem) : _this.parent.dataSourceSettings.rows.splice(droppedPosition, 0, dataSourceItem)) :\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.rows.push(dataSourceItem) : _this.parent.dataSourceSettings.rows.push(dataSourceItem));\n                                    break;\n                                case 'columns':\n                                    droppedPosition !== -1 ?\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.columns.splice(droppedPosition, 0, dataSourceItem) : _this.parent.dataSourceSettings.columns.splice(droppedPosition, 0, dataSourceItem)) :\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.columns.push(dataSourceItem) : _this.parent.dataSourceSettings.columns.push(dataSourceItem));\n                                    break;\n                                case 'values':\n                                    droppedPosition !== -1 ?\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.values.splice(droppedPosition, 0, dataSourceItem) : _this.parent.dataSourceSettings.values.splice(droppedPosition, 0, dataSourceItem)) :\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.values.push(dataSourceItem) : _this.parent.dataSourceSettings.values.push(dataSourceItem));\n                                    if (isBlazor()) {\n                                        if (dataSourceUpdate_1.parent.dataType === 'olap' && !dataSourceUpdate_1.parent.engineModule.isMeasureAvail) {\n                                            var measureField = {\n                                                name: '[Measures]', caption: 'Measures', showRemoveIcon: true, allowDragAndDrop: true\n                                            };\n                                            var fieldAxis = dataSourceUpdate_1.parent.dataSourceSettings.valueAxis === 'row' ?\n                                                dataSourceUpdate_1.parent.dataSourceSettings.rows : dataSourceUpdate_1.parent.dataSourceSettings.columns;\n                                            fieldAxis.push(measureField);\n                                        }\n                                    }\n                                    else {\n                                        if (_this.parent.dataType === 'olap' && !_this.parent.engineModule.isMeasureAvail) {\n                                            var measureField = {\n                                                name: '[Measures]', caption: 'Measures', showRemoveIcon: true, allowDragAndDrop: true\n                                            };\n                                            var fieldAxis = _this.parent.dataSourceSettings.valueAxis === 'row' ?\n                                                _this.parent.dataSourceSettings.rows : _this.parent.dataSourceSettings.columns;\n                                            fieldAxis.push(measureField);\n                                        }\n                                    }\n                                    break;\n                            }\n                            if (isBlazor()) {\n                                dataSourceUpdate_1.parent.control.pivotButtonModule.updateDataSource();\n                                dataSourceUpdate_1.parent.control.axisFieldModule.render();\n                            }\n                        }\n                    });\n                }\n            }\n        });\n    };\n    /* tslint:enable */\n    /**\n     * Updates the dataSource by removing the given field from the dataSource.\n     * @param  {string} fieldName - Defines dropped field name to remove dataSource.\n     * @method removeFieldFromReport\n     * @return {void}\n     * @hidden\n     */\n    DataSourceUpdate.prototype.removeFieldFromReport = function (fieldName) {\n        var dataSourceItem;\n        var isDataSource = false;\n        var rows = this.parent.dataSourceSettings.rows;\n        var columns = this.parent.dataSourceSettings.columns;\n        var values = this.parent.dataSourceSettings.values;\n        var filters = this.parent.dataSourceSettings.filters;\n        var fields = [rows, columns, values, filters];\n        var field = this.parent.engineModule.fieldList[fieldName];\n        for (var len = 0, lnt = fields.length; len < lnt; len++) {\n            if (!isDataSource && fields[len]) {\n                for (var i = 0, n = fields[len].length; i < n; i++) {\n                    if (fields[len][i].name === fieldName || (this.parent.dataType === 'olap' &&\n                        fields[len][i].name.toLowerCase() === '[measures]' && fields[len][i].name.toLowerCase() === fieldName)) {\n                        dataSourceItem = fields[len][i].properties ?\n                            fields[len][i].properties : fields[len][i];\n                        dataSourceItem.type = (field && field.type === 'number') ? dataSourceItem.type :\n                            'Count';\n                        fields[len].splice(i, 1);\n                        if (this.parent.dataType === 'olap') {\n                            var engineModule = this.parent.engineModule;\n                            if (engineModule && engineModule.fieldList[fieldName]) {\n                                engineModule.fieldList[fieldName].currrentMembers = {};\n                                engineModule.fieldList[fieldName].searchMembers = [];\n                            }\n                        }\n                        isDataSource = true;\n                        break;\n                    }\n                }\n            }\n        }\n        return dataSourceItem;\n    };\n    /**\n     * Creates new field object given field name from the field list data.\n     * @param  {string} fieldName - Defines dropped field name to add dataSource.\n     * @method getNewField\n     * @return {void}\n     * @hidden\n     */\n    DataSourceUpdate.prototype.getNewField = function (fieldName, fieldItem) {\n        var newField;\n        if (this.parent.dataType === 'olap') {\n            var field = this.parent.engineModule.fieldList[fieldName];\n            newField = {\n                name: fieldItem ? fieldItem.name : fieldName,\n                caption: fieldItem ? fieldItem.caption : field.caption,\n                isNamedSet: fieldItem ? fieldItem.isNamedSet : field.isNamedSets,\n                isCalculatedField: fieldItem ? fieldItem.isCalculatedField : field.isCalculatedField,\n                type: (fieldItem ? (fieldItem.type === undefined ? field.type === 'number' ? 'Sum' :\n                    'Count' : fieldItem.type) :\n                    (field.aggregateType === undefined ? field.type === 'number' ? 'Sum' :\n                        'Count' : field.aggregateType)),\n                showFilterIcon: fieldItem ? fieldItem.showFilterIcon : field.showFilterIcon,\n                showSortIcon: fieldItem ? fieldItem.showSortIcon : field.showSortIcon,\n                showEditIcon: fieldItem ? fieldItem.showEditIcon : field.showEditIcon,\n                showRemoveIcon: fieldItem ? fieldItem.showRemoveIcon : field.showRemoveIcon,\n                showValueTypeIcon: fieldItem ? fieldItem.showValueTypeIcon : field.showValueTypeIcon,\n                allowDragAndDrop: fieldItem ? fieldItem.allowDragAndDrop : field.allowDragAndDrop,\n                showSubTotals: fieldItem ? fieldItem.showSubTotals : field.showSubTotals\n            };\n        }\n        else {\n            var field = this.parent.engineModule.fieldList[fieldName];\n            newField = {\n                name: fieldItem ? fieldItem.name : fieldName,\n                caption: fieldItem ? fieldItem.caption : field.caption,\n                type: (fieldItem ? ((fieldItem.type === undefined || fieldItem.type === null) ?\n                    field.type === 'number' ? 'Sum' : 'Count' : fieldItem.type) :\n                    ((field.aggregateType === undefined || field.aggregateType === null) ?\n                        field.type === 'number' ? 'Sum' :\n                            'Count' : field.aggregateType)),\n                showNoDataItems: fieldItem ? fieldItem.showNoDataItems : field.showNoDataItems,\n                baseField: fieldItem ? fieldItem.baseField : field.baseField,\n                baseItem: fieldItem ? fieldItem.baseItem : field.baseItem,\n                allowDragAndDrop: fieldItem ? fieldItem.allowDragAndDrop : field.allowDragAndDrop,\n                showSubTotals: fieldItem ? fieldItem.showSubTotals : field.showSubTotals,\n                showFilterIcon: fieldItem ? fieldItem.showFilterIcon : field.showFilterIcon,\n                showSortIcon: fieldItem ? fieldItem.showSortIcon : field.showSortIcon,\n                showEditIcon: fieldItem ? fieldItem.showEditIcon : field.showEditIcon,\n                showRemoveIcon: fieldItem ? fieldItem.showRemoveIcon : field.showRemoveIcon,\n                showValueTypeIcon: fieldItem ? fieldItem.showValueTypeIcon : field.showValueTypeIcon\n            };\n        }\n        return newField;\n    };\n    return DataSourceUpdate;\n}());\nexport { DataSourceUpdate };\n","import { createElement, remove } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport { Dialog } from '@syncfusion/ej2-popups';\n/**\n * `ErrorDialog` module to create error dialog.\n */\n/** @hidden */\nvar ErrorDialog = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function ErrorDialog(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Creates the error dialog for the unexpected action done.\n     * @method createErrorDialog\n     * @return {void}\n     * @hidden\n     */\n    ErrorDialog.prototype.createErrorDialog = function (title, description, target) {\n        var errorDialog = createElement('div', {\n            id: this.parent.parentID + '_ErrorDialog',\n            className: cls.ERROR_DIALOG_CLASS\n        });\n        this.parent.element.appendChild(errorDialog);\n        var zIndex = target ? Number(target.style.zIndex) + 1 : (this.parent.moduleName === 'pivotfieldlist' &&\n            this.parent.renderMode === 'Popup' && this.parent.control ? this.parent.control.dialogRenderer.fieldListDialog.zIndex + 1 :\n            (this.parent.moduleName === 'pivotfieldlist' && this.parent.renderMode === 'Fixed' && this.parent.control ? 1000002 :\n                (this.parent.moduleName === 'pivotview' && this.parent.control ? 1000002 : 1000001)));\n        this.errorPopUp = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: false,\n            header: title,\n            content: description,\n            isModal: true,\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            zIndex: zIndex,\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.closeErrorDialog.bind(this),\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true }\n                }\n            ],\n            closeOnEscape: true,\n            target: document.body,\n            close: this.removeErrorDialog.bind(this)\n        });\n        this.errorPopUp.isStringTemplate = true;\n        this.errorPopUp.appendTo(errorDialog);\n    };\n    ErrorDialog.prototype.closeErrorDialog = function () {\n        this.errorPopUp.close();\n    };\n    ErrorDialog.prototype.removeErrorDialog = function () {\n        if (this.errorPopUp && !this.errorPopUp.isDestroyed) {\n            this.errorPopUp.destroy();\n        }\n        if (document.getElementById(this.parent.parentID + '_ErrorDialog')) {\n            remove(document.getElementById(this.parent.parentID + '_ErrorDialog'));\n        }\n    };\n    return ErrorDialog;\n}());\nexport { ErrorDialog };\n","import { createElement, removeClass, addClass, remove, isNullOrUndefined, setStyleAttribute, closest, EventHandler } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport { TreeView, Tab } from '@syncfusion/ej2-navigations';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MaskedTextBox, NumericTextBox } from '@syncfusion/ej2-inputs';\nimport { setStyleAndAttributes } from '@syncfusion/ej2-grids';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { DateTimePicker } from '@syncfusion/ej2-calendars';\nimport { DropDownButton } from '@syncfusion/ej2-splitbuttons';\nimport { PivotUtil } from '../../base/util';\nimport * as events from '../base/constant';\nimport { Button } from '@syncfusion/ej2-buttons';\n/**\n * `FilterDialog` module to create filter dialog.\n */\n/** @hidden */\nvar FilterDialog = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function FilterDialog(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Creates the member filter dialog for the selected field.\n     * @method createFilterDialog\n     * @return {void}\n     * @hidden\n     */\n    FilterDialog.prototype.createFilterDialog = function (treeData, fieldName, fieldCaption, target) {\n        var _this = this;\n        var editorDialog = createElement('div', {\n            id: this.parent.parentID + '_EditorTreeView',\n            className: cls.MEMBER_EDITOR_DIALOG_CLASS + ' ' + (this.parent.dataType === 'olap' ? 'e-olap-editor-dialog' : ''),\n            attrs: { 'data-fieldName': fieldName, 'aria-label': fieldCaption }\n        });\n        var filterCaption = this.parent.engineModule.fieldList[fieldName].caption;\n        var headerTemplate = this.parent.localeObj.getConstant('filter') + ' ' +\n            '\"' + fieldCaption + '\"' + ' ' + this.parent.localeObj.getConstant('by');\n        this.filterObject = this.getFilterObject(fieldName);\n        this.isSearchEnabled = false;\n        this.allowExcelLikeFilter = this.isExcelFilter(fieldName);\n        this.parent.element.appendChild(editorDialog);\n        this.dialogPopUp = new Dialog({\n            animationSettings: { effect: (this.allowExcelLikeFilter ? 'None' : 'Fade') },\n            allowDragging: false,\n            header: (this.allowExcelLikeFilter ? headerTemplate : filterCaption),\n            // content: (this.allowExcelLikeFilter ? '' : this.createTreeView(treeData, fieldCaption, fieldName)),\n            content: '',\n            isModal: true,\n            visible: true,\n            showCloseIcon: this.allowExcelLikeFilter ? true : false,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: this.parent.isDataOverflow ? (this.allowExcelLikeFilter ? '440px' : '400px') :\n                (this.allowExcelLikeFilter ? '400px' : '350px'),\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    buttonModel: {\n                        cssClass: 'e-clear-filter-button' + (this.allowExcelLikeFilter ? '' : ' ' + cls.ICON_DISABLE),\n                        iconCss: 'e-icons e-clear-filter-icon', enableRtl: this.parent.enableRtl,\n                        content: this.parent.localeObj.getConstant('clearFilter'), disabled: (this.filterObject ? false : true)\n                    }\n                },\n                {\n                    buttonModel: {\n                        cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true\n                    }\n                },\n                {\n                    click: this.closeFilterDialog.bind(this),\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            closeOnEscape: this.parent.renderMode === 'Popup' ? false : true,\n            target: target,\n            close: this.removeFilterDialog.bind(this)\n        });\n        this.dialogPopUp.isStringTemplate = true;\n        this.dialogPopUp.appendTo(editorDialog);\n        var filterArgs = {\n            cancel: false,\n            fieldName: fieldName,\n            fieldMembers: this.parent.dataSourceSettings.allowMemberFilter ? treeData : [],\n            filterSetting: this.filterObject\n        };\n        var control = this.parent.moduleName === 'pivotfieldlist' && this.parent.control.isPopupView ?\n            this.parent.control.pivotGridModule : this.parent.control;\n        control.trigger(events.memberEditorOpen, filterArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                treeData = observedArgs.fieldMembers;\n                if (_this.allowExcelLikeFilter) {\n                    _this.createTabMenu(treeData, fieldCaption, fieldName);\n                    addClass([_this.dialogPopUp.element], 'e-excel-filter');\n                    _this.updateCheckedState(fieldCaption);\n                }\n                else {\n                    _this.dialogPopUp.content = _this.createTreeView(treeData, fieldCaption, fieldName);\n                    _this.updateCheckedState(fieldCaption);\n                }\n                setStyleAttribute(_this.dialogPopUp.element, { 'visibility': 'visible' });\n                if (_this.allowExcelLikeFilter) {\n                    _this.dialogPopUp.element.querySelector('.e-dlg-closeicon-btn').focus();\n                }\n                _this.parent.control.pivotButtonModule.memberTreeView = _this.parent.filterDialog.memberTreeView;\n                /* tslint:disable-next-line:max-line-length */\n                _this.memberTreeView.nodeChecked = _this.parent.control.pivotButtonModule.nodeStateModified.bind(_this.parent.control.pivotButtonModule);\n                /* tslint:disable-next-line:max-line-length */\n                _this.allMemberSelect.nodeChecked = _this.parent.control.pivotButtonModule.nodeStateModified.bind(_this.parent.control.pivotButtonModule);\n            }\n            else {\n                _this.dialogPopUp.close();\n                _this.dialogPopUp = undefined;\n            }\n        });\n    };\n    /* tslint:disable */\n    FilterDialog.prototype.createTreeView = function (treeData, fieldCaption, fieldName) {\n        var _this = this;\n        var editorTreeWrapper = createElement('div', {\n            id: this.parent.parentID + 'EditorDiv',\n            className: cls.EDITOR_TREE_WRAPPER_CLASS + (this.allowExcelLikeFilter ? ' e-excelfilter' : '')\n        });\n        var levelWrapper = createElement('button', {\n            id: this.parent.parentID + '_LevelDiv',\n            className: 'e-level-wrapper-class', attrs: { 'type': 'button' }\n        });\n        var searchWrapper = createElement('div', {\n            id: this.parent.parentID + '_SearchDiv', attrs: { 'tabindex': '-1' },\n            className: cls.EDITOR_SEARCH_WRAPPER_CLASS\n        });\n        var filterCaption = this.parent.engineModule.fieldList[fieldName].caption;\n        var editorSearch = createElement('input', {\n            attrs: { 'type': 'text', className: cls.EDITOR_SEARCH__INPUT_CLASS }\n        });\n        var nodeLimitText = this.parent.isDataOverflow ?\n            ((this.parent.currentTreeItems.length - this.parent.control.maxNodeLimitInMemberEditor) +\n                this.parent.control.localeObj.getConstant('editorDataLimitMsg')) : '';\n        var labelWrapper = createElement('div', {\n            id: this.parent.parentID + '_LabelDiv',\n            attrs: { 'tabindex': '-1', 'title': nodeLimitText },\n            className: cls.EDITOR_LABEL_WRAPPER_CLASS\n        });\n        this.parent.editorLabelElement = createElement('label', { className: cls.EDITOR_LABEL_CLASS });\n        this.parent.editorLabelElement.innerText = nodeLimitText;\n        labelWrapper.style.display = this.parent.isDataOverflow ? 'block' : 'none';\n        labelWrapper.appendChild(this.parent.editorLabelElement);\n        searchWrapper.appendChild(editorSearch);\n        this.createSortOptions(fieldName, searchWrapper, treeData);\n        var selectAllWrapper = createElement('div', {\n            id: this.parent.parentID + '_AllDiv', attrs: { 'tabindex': '-1' },\n            className: cls.SELECT_ALL_WRAPPER_CLASS\n        });\n        var selectAllContainer = createElement('div', { className: cls.SELECT_ALL_CLASS });\n        var treeOuterDiv = createElement('div', { className: cls.EDITOR_TREE_CONTAINER_CLASS + '-outer-div' });\n        var treeViewContainer = createElement('div', { className: cls.EDITOR_TREE_CONTAINER_CLASS });\n        var promptDiv = createElement('div', {\n            className: cls.EMPTY_MEMBER_CLASS + ' ' + cls.ICON_DISABLE,\n            innerHTML: this.parent.localeObj.getConstant('noMatches')\n        });\n        if (this.parent.dataType === 'olap' && this.parent.control.loadOnDemandInMemberEditor &&\n            !this.parent.engineModule.fieldList[fieldName].isHierarchy &&\n            !this.parent.engineModule.fieldList[fieldName].isNamedSets) {\n            searchWrapper.appendChild(levelWrapper);\n            this.createLevelWrapper(levelWrapper, fieldName);\n        }\n        selectAllWrapper.appendChild(selectAllContainer);\n        editorTreeWrapper.appendChild(searchWrapper);\n        editorTreeWrapper.appendChild(selectAllWrapper);\n        editorTreeWrapper.appendChild(promptDiv);\n        this.editorSearch = new MaskedTextBox({\n            placeholder: this.parent.localeObj.getConstant('search') + ' ' + '\"' + filterCaption + '\"',\n            enableRtl: this.parent.enableRtl,\n            cssClass: cls.EDITOR_SEARCH_CLASS,\n            showClearButton: true,\n            change: function (e) {\n                if (_this.parent.dataType === 'olap') {\n                    _this.searchOlapTreeView(e, promptDiv, fieldCaption);\n                }\n                else {\n                    _this.parent.eventBase.searchTreeNodes(e, _this.memberTreeView, false);\n                    var filterDialog = _this.dialogPopUp.element;\n                    var liList = [].slice.call(_this.memberTreeView.element.querySelectorAll('li'));\n                    if (liList.length === 0) {\n                        _this.allMemberSelect.disableNodes([_this.allMemberSelect.element.querySelector('li')]);\n                        filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n                        removeClass([promptDiv], cls.ICON_DISABLE);\n                    }\n                    else {\n                        _this.allMemberSelect.enableNodes([_this.allMemberSelect.element.querySelector('li')]);\n                        filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n                        addClass([promptDiv], cls.ICON_DISABLE);\n                    }\n                    _this.updateCheckedState(fieldCaption);\n                }\n            }\n        });\n        this.editorSearch.isStringTemplate = true;\n        this.editorSearch.appendTo(editorSearch);\n        var nodeAttr = { 'data-fieldName': fieldName };\n        var data = [{ id: 'all', name: this.parent.localeObj.getConstant('all'), isSelected: true, htmlAttributes: nodeAttr }];\n        this.allMemberSelect = new TreeView({\n            fields: { dataSource: data, id: 'id', text: 'name', isChecked: 'isSelected' },\n            showCheckBox: true,\n            expandOn: 'None',\n            enableRtl: this.parent.enableRtl,\n            nodeClicked: this.nodeCheck.bind(this, true),\n            keyPress: this.nodeCheck.bind(this, true),\n            nodeSelected: function (args) {\n                removeClass([args.node], 'e-active');\n                args.cancel = true;\n            }\n        });\n        this.allMemberSelect.isStringTemplate = true;\n        if (!isNullOrUndefined(this.parent.currentTreeItems)) {\n            for (var i = 0; i < this.parent.currentTreeItems.length; i++) {\n                if (this.parent.currentTreeItems[i].id.indexOf(\"\\n\") || this.parent.currentTreeItems[i].id.startsWith(\"\\n\")) {\n                    this.parent.currentTreeItems[i].id = this.parent.currentTreeItems[i].id.replace('\\n', ' ');\n                }\n            }\n        }\n        this.allMemberSelect.appendTo(selectAllContainer);\n        treeOuterDiv.appendChild(treeViewContainer);\n        editorTreeWrapper.appendChild(treeOuterDiv);\n        this.memberTreeView = new TreeView({\n            fields: { dataSource: treeData, id: 'id', text: 'name', isChecked: 'isSelected', parentID: 'pid' },\n            showCheckBox: true,\n            enableRtl: this.parent.enableRtl,\n            nodeChecking: this.validateTreeNode.bind(this),\n            nodeClicked: this.nodeCheck.bind(this, false),\n            keyPress: this.nodeCheck.bind(this, false),\n            nodeExpanding: this.updateChildNodes.bind(this),\n            nodeSelected: function (args) {\n                removeClass([args.node], 'e-active');\n                args.cancel = true;\n            },\n            expandOn: 'None'\n        });\n        this.memberTreeView.isStringTemplate = true;\n        this.memberTreeView.appendTo(treeViewContainer);\n        editorTreeWrapper.appendChild(labelWrapper);\n        return editorTreeWrapper;\n    };\n    FilterDialog.prototype.createSortOptions = function (fieldName, target, treeData) {\n        if (this.parent.dataType === 'pivot' && treeData && treeData.length > 0) {\n            var sortOrder = this.parent.engineModule.fieldList[fieldName].sort;\n            var sortWrapper = createElement('div', {\n                className: cls.FILTER_SORT_CLASS + ' e-btn-group' + (this.parent.enableRtl ? ' ' + cls.RTL : ''),\n                id: this.parent.element.id + '_Member_Sort'\n            });\n            this.parent.element.appendChild(sortWrapper);\n            var sortAscendElement = createElement('button', {\n                className: (sortOrder === 'Ascending' ? cls.SORT_SELECTED_CLASS + ' ' : '') + cls.MEMBER_SORT_CLASS,\n                id: this.parent.element.id + '_Sort_Ascend', attrs: { 'type': 'button' }\n            });\n            var sortDescendElement = createElement('button', {\n                className: (sortOrder === 'Descending' ? cls.SORT_SELECTED_CLASS + ' ' : '') + cls.MEMBER_SORT_CLASS,\n                id: this.parent.element.id + '_Sort_Descend', attrs: { 'type': 'button' }\n            });\n            var sortBtnElement = new Button({\n                iconCss: cls.ICON + ' ' + cls.SORT_ASCEND_ICON_CLASS, enableRtl: this.parent.enableRtl\n            });\n            sortBtnElement.appendTo(sortAscendElement);\n            sortBtnElement = new Button({\n                iconCss: cls.ICON + ' ' + cls.SORT_DESCEND_ICON_CLASS, enableRtl: this.parent.enableRtl\n            });\n            sortBtnElement.appendTo(sortDescendElement);\n            sortWrapper.appendChild(sortAscendElement);\n            sortWrapper.appendChild(sortDescendElement);\n            target.appendChild(sortWrapper);\n            this.unWireEvent(sortAscendElement, fieldName);\n            this.unWireEvent(sortDescendElement, fieldName);\n            this.wireEvent(sortAscendElement, fieldName);\n            this.wireEvent(sortDescendElement, fieldName);\n        }\n    };\n    FilterDialog.prototype.createLevelWrapper = function (levelWrapper, fieldName) {\n        var _this = this;\n        var engineModule = this.parent.engineModule;\n        var levels = engineModule.fieldList[fieldName].levels;\n        var levelCount = engineModule.fieldList[fieldName].levelCount;\n        var items = [];\n        for (var i = 0, cnt = levels.length; i < cnt; i++) {\n            items.push({ id: levels[i].id, text: levels[i].name });\n        }\n        this.dropMenu = new DropDownButton({\n            cssClass: 'e-level-drop',\n            items: items, iconCss: 'e-icons e-dropdown-icon',\n            disabled: (levelCount === levels.length),\n            beforeOpen: function (args) {\n                var items = [].slice.call(args.element.querySelectorAll('li'));\n                var engineModule = _this.parent.engineModule;\n                var levelCount = engineModule.fieldList[fieldName].levelCount;\n                removeClass(items, cls.MENU_DISABLE);\n                for (var i = 0, cnt = items.length; i < cnt; i++) {\n                    if (i < levelCount) {\n                        addClass([items[i]], cls.MENU_DISABLE);\n                    }\n                }\n            },\n            select: function (args) {\n                var fieldName = _this.dialogPopUp.element.getAttribute('data-fieldname');\n                var engineModule = _this.parent.engineModule;\n                var selectedLevel;\n                for (var i = 0, cnt = items.length; i < cnt; i++) {\n                    if (items[i].id === args.item.id) {\n                        selectedLevel = i;\n                    }\n                }\n                engineModule.getFilterMembers(_this.parent.dataSourceSettings, fieldName, selectedLevel + 1, false, true);\n            },\n            close: function () {\n                var engineModule = _this.parent.engineModule;\n                var levels = engineModule.fieldList[fieldName].levels;\n                var levelCount = engineModule.fieldList[fieldName].levelCount;\n                if (levelCount === levels.length) {\n                    _this.dropMenu.disabled = true;\n                    _this.dropMenu.dataBind();\n                }\n                else {\n                    _this.dropMenu.disabled = false;\n                }\n            }\n        });\n        this.dropMenu.appendTo(levelWrapper);\n    };\n    FilterDialog.prototype.searchOlapTreeView = function (e, promptDiv, fieldCaption) {\n        var popupInstance = this;\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(function () {\n            var engineModule = popupInstance.parent.engineModule;\n            var filterDialog = popupInstance.dialogPopUp.element;\n            var fieldName = filterDialog.getAttribute('data-fieldname');\n            var nodeLimit = popupInstance.parent.control.maxNodeLimitInMemberEditor ?\n                popupInstance.parent.control.maxNodeLimitInMemberEditor : 5000;\n            if (!engineModule.fieldList[fieldName].isHierarchy) {\n                if (popupInstance.dropMenu && e.value !== '') {\n                    popupInstance.dropMenu.disabled = true;\n                }\n                else {\n                    popupInstance.dropMenu.disabled = false;\n                }\n                if (!popupInstance.parent.control.loadOnDemandInMemberEditor) {\n                    engineModule.getSearchMembers(popupInstance.parent.dataSourceSettings, fieldName, e.value.toLowerCase(), nodeLimit, true);\n                }\n                else {\n                    var levelCount = engineModule.fieldList[fieldName].levelCount ? engineModule.fieldList[fieldName].levelCount : 1;\n                    engineModule.getSearchMembers(popupInstance.parent.dataSourceSettings, fieldName, e.value.toLowerCase(), nodeLimit, false, levelCount);\n                }\n                popupInstance.parent.eventBase.searchTreeNodes(e, popupInstance.memberTreeView, false, false);\n            }\n            else {\n                popupInstance.parent.eventBase.searchTreeNodes(e, popupInstance.memberTreeView, false, true);\n            }\n            var liList = [].slice.call(popupInstance.memberTreeView.element.querySelectorAll('li'));\n            // for (let element of liList) {\n            //     if (element.querySelector('.interaction')) {\n            //         setStyleAttribute(element.querySelector('.interaction'), { display: 'none' });\n            //     }\n            // }\n            if (liList.length === 0) {\n                popupInstance.allMemberSelect.disableNodes([popupInstance.allMemberSelect.element.querySelector('li')]);\n                filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n                removeClass([promptDiv], cls.ICON_DISABLE);\n            }\n            else {\n                popupInstance.allMemberSelect.enableNodes([popupInstance.allMemberSelect.element.querySelector('li')]);\n                filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n                addClass([promptDiv], cls.ICON_DISABLE);\n            }\n            popupInstance.updateCheckedState(fieldCaption);\n        }, 500);\n    };\n    /* tslint:enable */\n    /* tslint:disable:no-any */\n    FilterDialog.prototype.nodeCheck = function (isAllMember, args) {\n        var checkedNode = [args.node];\n        var target = args.event.target;\n        if (target.classList.contains('e-fullrow') || args.event.key === 'Enter') {\n            var memberObj = isAllMember ? this.allMemberSelect : this.memberTreeView;\n            var getNodeDetails = memberObj.getNode(args.node);\n            if (getNodeDetails.isChecked === 'true') {\n                memberObj.uncheckAll(checkedNode);\n            }\n            else {\n                memberObj.checkAll(checkedNode);\n            }\n        }\n        else if (args.event.keyCode === 38 && !isAllMember) {\n            removeClass(this.memberTreeView.element.querySelectorAll('li.e-prev-active-node'), 'e-prev-active-node');\n            addClass(checkedNode, 'e-prev-active-node');\n        }\n    };\n    /* tslint:enable:no-any */\n    FilterDialog.prototype.applySorting = function (fieldName, args) {\n        var target = closest(args.target, '.' + cls.MEMBER_SORT_CLASS);\n        if (target) {\n            var sortElements = [].slice.call(closest(target, '.' + cls.FILTER_SORT_CLASS).querySelectorAll('.' + cls.MEMBER_SORT_CLASS));\n            if (target.querySelector('.' + cls.SORT_ASCEND_ICON_CLASS) && !target.classList.contains(cls.SORT_SELECTED_CLASS)) {\n                this.updateFilterMembers('Ascending', fieldName);\n                addClass([target], cls.SORT_SELECTED_CLASS);\n                removeClass([sortElements[1]], cls.SORT_SELECTED_CLASS);\n            }\n            else if (target.querySelector('.' + cls.SORT_DESCEND_ICON_CLASS) && !target.classList.contains(cls.SORT_SELECTED_CLASS)) {\n                this.updateFilterMembers('Descending', fieldName);\n                addClass([target], cls.SORT_SELECTED_CLASS);\n                removeClass([sortElements[0]], cls.SORT_SELECTED_CLASS);\n            }\n            else {\n                this.updateFilterMembers('None', fieldName);\n                removeClass(sortElements, cls.SORT_SELECTED_CLASS);\n            }\n        }\n    };\n    FilterDialog.prototype.updateFilterMembers = function (order, fieldName) {\n        var members = order === 'None' ?\n            PivotUtil.getClonedData(this.parent.engineModule.fieldList[fieldName].dateMember) : this.parent.currentTreeItems.slice();\n        this.parent.currentTreeItems = [];\n        this.parent.searchTreeItems = [];\n        var treeData = [];\n        /* tslint:disable:typedef */\n        members = order === 'Ascending' ? (members.sort(function (a, b) { return (a.actualText > b.actualText) ? 1 :\n            ((b.actualText > a.actualText) ? -1 : 0); })) : order === 'Descending' ?\n            (members.sort(function (a, b) { return (a.actualText < b.actualText) ? 1 :\n                ((b.actualText < a.actualText) ? -1 : 0); })) : members;\n        /* tslint:enable:typedef */\n        for (var i = 0, lnt = members.length; i < lnt; i++) {\n            if (order === 'None') {\n                var memberName = (this.parent.isDateField ? members[i].formattedText : members[i].actualText).toString();\n                var obj = {\n                    id: members[i].actualText.toString(),\n                    actualText: members[i].actualText,\n                    name: memberName,\n                    isSelected: this.parent.currentTreeItemsPos[members[i].actualText].isSelected\n                };\n                this.parent.currentTreeItems.push(obj);\n                if (this.editorSearch.value !== '') {\n                    if (obj.name.toLowerCase().indexOf(this.editorSearch.value.toLowerCase()) > -1) {\n                        this.parent.searchTreeItems.push(obj);\n                        treeData.push(obj);\n                    }\n                }\n                else {\n                    this.parent.searchTreeItems.push(obj);\n                    treeData.push(obj);\n                }\n            }\n            else {\n                this.parent.currentTreeItems.push(members[i]);\n                if (this.editorSearch.value !== '') {\n                    if (members[i].name.toLowerCase().indexOf(this.editorSearch.value.toLowerCase()) > -1) {\n                        this.parent.searchTreeItems.push(members[i]);\n                        treeData.push(members[i]);\n                    }\n                }\n                else {\n                    this.parent.searchTreeItems.push(members[i]);\n                    treeData.push(members[i]);\n                }\n            }\n            this.parent.currentTreeItemsPos[members[i].actualText].index = i;\n        }\n        var dataCount = this.memberTreeView.fields.dataSource.length;\n        /* tslint:disable-next-line:max-line-length */\n        this.memberTreeView.fields = { dataSource: treeData.slice(0, dataCount), id: 'id', text: 'name', isChecked: 'isSelected', parentID: 'pid' };\n        this.memberTreeView.dataBind();\n    };\n    FilterDialog.prototype.updateChildNodes = function (args) {\n        if (this.parent.dataType === 'olap') {\n            var engineModule = this.parent.engineModule;\n            var fieldName = args.node.getAttribute('data-fieldname');\n            var fieldList = engineModule.fieldList[fieldName];\n            var filterItems = [];\n            if (fieldList && fieldList.filterMembers.length > 0 && !this.isSearchEnabled &&\n                !fieldList.members[args.nodeData.id].isNodeExpand) {\n                var childNodes = [];\n                for (var _i = 0, _a = fieldList.filterMembers; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    if (item.pid === args.nodeData.id.toString()) {\n                        childNodes.push(item);\n                    }\n                }\n                if (childNodes.length === 0) {\n                    fieldList.childMembers = [];\n                    engineModule.getChildMembers(this.parent.dataSourceSettings, args.nodeData.id.toString(), fieldName);\n                    childNodes = fieldList.childMembers;\n                    fieldList.childMembers = [];\n                }\n                var treeData = PivotUtil.getClonedData(childNodes);\n                var curTreeData = this.memberTreeView.fields.dataSource;\n                var isInclude = false;\n                if (!isNullOrUndefined(this.filterObject)) {\n                    isInclude = this.filterObject.type === 'Include' ? true : false;\n                    filterItems = this.filterObject.items ? this.filterObject.items : [];\n                }\n                treeData = this.updateChildData(isInclude, treeData, filterItems, fieldName, args.nodeData);\n                treeData = this.parent.eventBase.sortOlapFilterData(treeData, engineModule.fieldList[fieldName].sort);\n                for (var _b = 0, treeData_1 = treeData; _b < treeData_1.length; _b++) {\n                    var node = treeData_1[_b];\n                    curTreeData.push(node);\n                }\n                fieldList.members[args.nodeData.id].isNodeExpand = true;\n                this.memberTreeView.addNodes(treeData, args.node);\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    FilterDialog.prototype.updateChildData = function (isInclude, members, filterItems, fieldName, parentNode) {\n        var memberCount = Object.keys(this.parent.currentTreeItemsPos).length;\n        var fieldList = this.parent.engineModule.fieldList[fieldName];\n        var list = [];\n        var childMemberCount = 1;\n        for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n            var member = members_1[_i];\n            var obj = member;\n            var memberName = member.id.toString();\n            fieldList.members[memberName].isNodeExpand = false;\n            member.isSelected = (parentNode.isChecked === 'true');\n            if (childMemberCount <= this.parent.control.maxNodeLimitInMemberEditor) {\n                list.push(obj);\n            }\n            this.parent.currentTreeItems.push(obj);\n            this.parent.searchTreeItems.push(obj);\n            this.parent.currentTreeItemsPos[memberName] = { index: memberCount, isSelected: obj.isSelected };\n            memberCount++;\n            childMemberCount++;\n        }\n        this.parent.isDataOverflow = false;\n        return list;\n    };\n    FilterDialog.prototype.createTabMenu = function (treeData, fieldCaption, fieldName) {\n        var wrapper = createElement('div', {\n            className: 'e-filter-tab-wrapper'\n        });\n        this.dialogPopUp.content = wrapper;\n        this.dialogPopUp.dataBind();\n        var types = ['Label', 'Value', 'Include', 'Exclude'];\n        var regx = '((-|\\\\+)?[0-9]+(\\\\.[0-9]+)?)+';\n        var member = Object.keys(this.parent.engineModule.fieldList[fieldName].members)[0];\n        var fieldType = this.parent.engineModule.fieldList[fieldName].type;\n        var formatObj = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.formatSettings);\n        var items = [\n            {\n                header: {\n                    text: this.parent.localeObj.getConstant('member'),\n                    iconCss: (this.filterObject && types.indexOf(this.filterObject.type) > 1 ? cls.SELECTED_OPTION_ICON_CLASS : '')\n                },\n                content: this.createTreeView(treeData, fieldCaption, fieldName)\n            }\n        ];\n        for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {\n            var type = types_1[_i];\n            if (((type === 'Label') && this.parent.dataSourceSettings.allowLabelFilter) ||\n                (type === 'Value' && this.parent.dataSourceSettings.allowValueFilter)) {\n                var filterType = (type === 'Label' && member && ((member).match(regx) &&\n                    (member).match(regx)[0].length === (member).length) && fieldType === 'number') ? 'Number' :\n                    (type === 'Label' && member && (new Date(member).toString() !== 'Invalid Date') &&\n                        ((formatObj && formatObj.type) || (this.filterObject && this.filterObject.type === 'Date'))) ? 'Date' : type;\n                var item = {\n                    header: {\n                        text: (filterType === 'Number' ? this.parent.localeObj.getConstant('label') :\n                            this.parent.localeObj.getConstant(filterType.toLowerCase())),\n                        iconCss: (this.filterObject && this.filterObject.type === filterType ? cls.SELECTED_OPTION_ICON_CLASS : '')\n                    },\n                    /* tslint:disable-next-line:max-line-length */\n                    content: this.createCustomFilter(fieldName, (this.filterObject && this.filterObject.type === filterType ? this.filterObject : undefined), filterType.toLowerCase())\n                };\n                items.push(item);\n            }\n        }\n        var selectedIndex = (this.filterObject ? (['Label', 'Date', 'Number'].indexOf(this.filterObject.type) >= 0) ?\n            1 : this.filterObject.type === 'Value' ?\n            (this.parent.dataSourceSettings.allowLabelFilter && this.parent.dataSourceSettings.allowValueFilter) ? 2 : 1 : 0 : 0);\n        selectedIndex = (!this.parent.dataSourceSettings.allowMemberFilter && selectedIndex === 0) ? 1 : selectedIndex;\n        this.tabObj = new Tab({\n            heightAdjustMode: 'Auto',\n            items: items,\n            height: '100%',\n            selectedItem: selectedIndex,\n            enableRtl: this.parent.enableRtl\n        });\n        this.tabObj.isStringTemplate = true;\n        this.tabObj.appendTo(wrapper);\n        if (!this.parent.dataSourceSettings.allowMemberFilter) {\n            this.tabObj.hideTab(0);\n        }\n        if (selectedIndex > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            addClass([this.dialogPopUp.element.querySelector('.e-filter-div-content' + '.' + (selectedIndex === 1 && this.parent.dataSourceSettings.allowLabelFilter ? 'e-label-filter' : 'e-value-filter'))], 'e-selected-tab');\n        }\n    };\n    /* tslint:disable */\n    FilterDialog.prototype.createCustomFilter = function (fieldName, filterObject, type) {\n        var dataSource = [];\n        var valueOptions = [];\n        var levelOptions = [];\n        var measures = this.parent.dataSourceSettings.values;\n        var selectedOption = 'DoesNotEquals';\n        var selectedValueIndex = 0;\n        var selectedLevelIndex = 0;\n        var options = {\n            label: ['Equals', 'DoesNotEquals', 'BeginWith', 'DoesNotBeginWith', 'EndsWith',\n                'DoesNotEndsWith', 'Contains', 'DoesNotContains', 'GreaterThan',\n                'GreaterThanOrEqualTo', 'LessThan', 'LessThanOrEqualTo', 'Between', 'NotBetween'],\n            date: ['Equals', 'DoesNotEquals', 'Before', 'BeforeOrEqualTo', 'After', 'AfterOrEqualTo',\n                'Between', 'NotBetween'],\n            value: ['Equals', 'DoesNotEquals', 'GreaterThan', 'GreaterThanOrEqualTo', 'LessThan',\n                'LessThanOrEqualTo', 'Between', 'NotBetween']\n        };\n        var betweenOperators = ['Between', 'NotBetween'];\n        var operatorCollection = (type === 'label' ? options.label : type === 'date' ? options.date : options.value);\n        for (var _i = 0, operatorCollection_1 = operatorCollection; _i < operatorCollection_1.length; _i++) {\n            var operator = operatorCollection_1[_i];\n            selectedOption = ((filterObject && operator === filterObject.condition) ?\n                operatorCollection.indexOf(filterObject.condition) >= 0 ?\n                    filterObject.condition : operatorCollection[0] : selectedOption);\n            dataSource.push({ value: operator, text: this.parent.localeObj.getConstant(operator) });\n        }\n        var len = measures.length;\n        while (len--) {\n            valueOptions.unshift({ value: measures[len].name, text: (measures[len].caption ? measures[len].caption : measures[len].name) });\n            selectedValueIndex = filterObject && filterObject.type === 'Value' &&\n                filterObject.measure === measures[len].name &&\n                filterObject.condition === selectedOption ? len : selectedValueIndex;\n        }\n        if (this.parent.dataType === 'olap') {\n            var engineModule = this.parent.engineModule;\n            var levels = engineModule.fieldList[fieldName].levels;\n            if (this.parent.engineModule.fieldList[fieldName].isHierarchy) {\n                var levelObj = void 0;\n                var fieldlistData = this.parent.engineModule.fieldListData;\n                for (var _a = 0, fieldlistData_1 = fieldlistData; _a < fieldlistData_1.length; _a++) {\n                    var item = fieldlistData_1[_a];\n                    if (item && item.pid === fieldName) {\n                        levelObj = item;\n                        break;\n                    }\n                }\n                levelOptions.push({\n                    value: levelObj ? levelObj.id : fieldName,\n                    text: levelObj ? levelObj.caption : engineModule.fieldList[fieldName].name\n                });\n                selectedLevelIndex = 0;\n                if (filterObject && filterObject.name === fieldName && filterObject.type.toLowerCase() === type) {\n                    levelOptions[levelOptions.length - 1]['iconClass'] = cls.ICON + ' ' + cls.SELECTED_LEVEL_ICON_CLASS;\n                }\n            }\n            else {\n                for (var i = 0, cnt = levels.length; i < cnt; i++) {\n                    selectedLevelIndex = (filterObject &&\n                        filterObject.selectedField === levels[i].id ? i : selectedLevelIndex);\n                    levelOptions.push({ value: levels[i].id, text: levels[i].name });\n                    for (var _b = 0, _c = this.parent.dataSourceSettings.filterSettings; _b < _c.length; _b++) {\n                        var field = _c[_b];\n                        if (field.name === fieldName && field.selectedField === levels[i].id && field.type.toLowerCase() === type) {\n                            levelOptions[levelOptions.length - 1]['iconClass'] = cls.ICON + ' ' + cls.SELECTED_LEVEL_ICON_CLASS;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        var mainDiv = createElement('div', {\n            className: cls.FILTER_DIV_CONTENT_CLASS + ' e-' + ((['date', 'number']).indexOf(type) >= 0 ? 'label' : type) + '-filter',\n            id: this.parent.parentID + '_' + type + '_filter_div_content',\n            attrs: {\n                'data-type': type, 'data-fieldName': fieldName, 'data-operator': selectedOption,\n                'data-selectedField': (this.parent.dataType === 'olap' &&\n                    levelOptions.length > 0 ? levelOptions[selectedLevelIndex].value.toString() : ''),\n                'data-measure': (this.parent.dataSourceSettings.values.length > 0 ?\n                    this.parent.dataSourceSettings.values[selectedValueIndex].name : ''),\n                'data-value1': (filterObject && selectedOption === filterObject.condition ?\n                    filterObject.value1 ? filterObject.value1.toString() : '' : ''),\n                'data-value2': (filterObject && selectedOption === filterObject.condition ?\n                    filterObject.value2 ? filterObject.value2.toString() : '' : '')\n            }\n        });\n        var textContentdiv = createElement('div', {\n            className: cls.FILTER_TEXT_DIV_CLASS,\n            innerHTML: this.parent.localeObj.getConstant(type + 'TextContent')\n        });\n        var betweenTextContentdiv = createElement('div', {\n            className: cls.BETWEEN_TEXT_DIV_CLASS + ' ' +\n                (betweenOperators.indexOf(selectedOption) === -1 ? cls.ICON_DISABLE : ''),\n            innerHTML: this.parent.localeObj.getConstant('And')\n        });\n        var separatordiv = createElement('div', { className: cls.SEPARATOR_DIV_CLASS });\n        var filterWrapperDiv1 = createElement('div', { className: cls.FILTER_OPTION_WRAPPER_1_CLASS });\n        var levelWrapperDiv = createElement('div', {\n            className: 'e-level-option-wrapper' + ' ' +\n                (this.parent.dataType === 'olap' ? '' : cls.ICON_DISABLE),\n        });\n        var optionWrapperDiv1 = createElement('div', {\n            className: 'e-measure-option-wrapper' + ' ' + (((['label', 'date', 'number']).indexOf(type) >= 0) ? cls.ICON_DISABLE : ''),\n        });\n        var optionWrapperDiv2 = createElement('div', { className: 'e-condition-option-wrapper' });\n        var filterWrapperDiv2 = createElement('div', { className: cls.FILTER_OPTION_WRAPPER_2_CLASS });\n        var levelDropOption = createElement('div', { id: this.parent.parentID + '_' + type + '_level_option_wrapper' });\n        var dropOptionDiv1 = createElement('div', { id: this.parent.parentID + '_' + type + '_measure_option_wrapper' });\n        var dropOptionDiv2 = createElement('div', { id: this.parent.parentID + '_' + type + '_contition_option_wrapper' });\n        var inputDiv1 = createElement('div', { className: cls.FILTER_INPUT_DIV_1_CLASS });\n        var inputDiv2 = createElement('div', {\n            className: cls.FILTER_INPUT_DIV_2_CLASS + ' ' +\n                (betweenOperators.indexOf(selectedOption) === -1 ? cls.ICON_DISABLE : '')\n        });\n        var inputField1 = createElement('input', {\n            id: this.parent.parentID + '_' + type + '_input_option_1', attrs: { 'type': 'text' }\n        });\n        var inputField2 = createElement('input', {\n            id: this.parent.parentID + '_' + type + '_input_option_2', attrs: { 'type': 'text' }\n        });\n        inputDiv1.appendChild(inputField1);\n        inputDiv2.appendChild(inputField2);\n        levelWrapperDiv.appendChild(levelDropOption);\n        levelWrapperDiv.appendChild(separatordiv.cloneNode(true));\n        optionWrapperDiv1.appendChild(dropOptionDiv1);\n        optionWrapperDiv1.appendChild(separatordiv);\n        optionWrapperDiv2.appendChild(dropOptionDiv2);\n        filterWrapperDiv1.appendChild(levelWrapperDiv);\n        filterWrapperDiv1.appendChild(optionWrapperDiv1);\n        filterWrapperDiv1.appendChild(optionWrapperDiv2);\n        filterWrapperDiv2.appendChild(inputDiv1);\n        filterWrapperDiv2.appendChild(betweenTextContentdiv);\n        filterWrapperDiv2.appendChild(inputDiv2);\n        this.createElements(filterObject, betweenOperators, dropOptionDiv1, dropOptionDiv2, inputField1, inputField2, valueOptions, dataSource, selectedValueIndex, selectedOption, type, levelDropOption, levelOptions, selectedLevelIndex);\n        mainDiv.appendChild(textContentdiv);\n        mainDiv.appendChild(filterWrapperDiv1);\n        mainDiv.appendChild(filterWrapperDiv2);\n        return mainDiv;\n    };\n    FilterDialog.prototype.createElements = function (filterObj, operators, optionDiv1, optionDiv2, inputDiv1, inputDiv2, vDataSource, oDataSource, valueIndex, option, type, levelDropOption, lDataSource, levelIndex) {\n        var popupInstance = this;\n        if (this.parent.dataType === 'olap') {\n            var levelWrapper = new DropDownList({\n                dataSource: lDataSource, enableRtl: this.parent.enableRtl,\n                fields: { value: 'value', text: 'text', iconCss: 'iconClass' },\n                index: levelIndex,\n                cssClass: cls.LEVEL_OPTIONS_CLASS, width: '100%',\n                change: function (args) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    var fieldName = element.getAttribute('data-fieldName');\n                    var type = element.getAttribute('data-type');\n                    if (!isNullOrUndefined(element)) {\n                        popupInstance.updateInputValues(element, type, inputDiv1, inputDiv2);\n                        setStyleAndAttributes(element, { 'data-selectedField': args.value });\n                        var filterObj_1;\n                        for (var _i = 0, _a = popupInstance.parent.dataSourceSettings.filterSettings; _i < _a.length; _i++) {\n                            var field = _a[_i];\n                            if (field.name === fieldName && field.selectedField === args.value) {\n                                filterObj_1 = field;\n                                break;\n                            }\n                        }\n                        if (filterObj_1) {\n                            if (type === 'value' && filterObj_1.measure && filterObj_1.measure !== '') {\n                                optionWrapper1.value = filterObj_1.measure ? filterObj_1.measure : vDataSource[0].value;\n                            }\n                            if (filterObj_1.condition) {\n                                optionWrapper.value = filterObj_1.condition ? filterObj_1.condition : 'DoesNotEquals';\n                            }\n                            else {\n                                optionWrapper.value = 'DoesNotEquals';\n                            }\n                            var inputObj1 = void 0;\n                            var inputObj2 = void 0;\n                            if (type === 'value') {\n                                /* tslint:disable-next-line:no-any */\n                                inputObj1 = inputDiv1.ej2_instances[0];\n                                /* tslint:disable-next-line:no-any */\n                                inputObj2 = inputDiv2.ej2_instances[0];\n                                if (inputObj1) {\n                                    inputObj1.value = filterObj_1.value1 ? parseInt(filterObj_1.value1, 10) : undefined;\n                                }\n                                if (inputObj2) {\n                                    inputObj2.value = filterObj_1.value2 ? parseInt(filterObj_1.value2, 10) : undefined;\n                                }\n                            }\n                            else {\n                                /* tslint:disable-next-line:no-any */\n                                inputObj1 = inputDiv1.ej2_instances[0];\n                                /* tslint:disable-next-line:no-any */\n                                inputObj2 = inputDiv2.ej2_instances[0];\n                                if (inputObj1) {\n                                    inputObj1.value = filterObj_1.value1 ? filterObj_1.value1 : '';\n                                }\n                                if (inputObj2) {\n                                    inputObj2.value = filterObj_1.value2 ? filterObj_1.value2 : '';\n                                }\n                            }\n                        }\n                        popupInstance.updateInputValues(element, type, inputDiv1, inputDiv2);\n                    }\n                    else {\n                        return;\n                    }\n                }\n            });\n            levelWrapper.isStringTemplate = true;\n            levelWrapper.appendTo(levelDropOption);\n        }\n        var optionWrapper1 = new DropDownList({\n            dataSource: vDataSource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' }, index: valueIndex,\n            cssClass: cls.VALUE_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                if (!isNullOrUndefined(element)) {\n                    popupInstance.updateInputValues(element, type, inputDiv1, inputDiv2);\n                    setStyleAndAttributes(element, { 'data-measure': args.value });\n                }\n                else {\n                    return;\n                }\n            }\n        });\n        optionWrapper1.isStringTemplate = true;\n        optionWrapper1.appendTo(optionDiv1);\n        var optionWrapper = new DropDownList({\n            dataSource: oDataSource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' }, value: option,\n            cssClass: cls.FILTER_OPERATOR_CLASS, width: '100%',\n            change: function (args) {\n                var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                if (!isNullOrUndefined(element)) {\n                    popupInstance.updateInputValues(element, type, inputDiv1, inputDiv2);\n                    var disabledClasses = [cls.BETWEEN_TEXT_DIV_CLASS, cls.FILTER_INPUT_DIV_2_CLASS];\n                    for (var _i = 0, disabledClasses_1 = disabledClasses; _i < disabledClasses_1.length; _i++) {\n                        var className = disabledClasses_1[_i];\n                        if (operators.indexOf(args.value) >= 0) {\n                            removeClass([element.querySelector('.' + className)], cls.ICON_DISABLE);\n                        }\n                        else {\n                            addClass([element.querySelector('.' + className)], cls.ICON_DISABLE);\n                        }\n                    }\n                    setStyleAndAttributes(element, { 'data-operator': args.value });\n                }\n                else {\n                    return;\n                }\n            }\n        });\n        optionWrapper.isStringTemplate = true;\n        optionWrapper.appendTo(optionDiv2);\n        if (type === 'date') {\n            var inputObj1_1 = new DateTimePicker({\n                placeholder: this.parent.localeObj.getConstant('chooseDate'),\n                enableRtl: this.parent.enableRtl,\n                format: 'dd/MM/yyyy hh:mm:ss a',\n                showClearButton: true,\n                value: (filterObj && option === filterObj.condition ?\n                    (typeof (filterObj.value1) === 'string' ? new Date(filterObj.value1) : filterObj.value1) : null),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, { 'data-value1': e.value, 'data-value2': inputObj2_1.value });\n                    }\n                    else {\n                        return;\n                    }\n                },\n                width: '100%',\n            });\n            var inputObj2_1 = new DateTimePicker({\n                placeholder: this.parent.localeObj.getConstant('chooseDate'),\n                enableRtl: this.parent.enableRtl,\n                format: 'dd/MM/yyyy hh:mm:ss a',\n                showClearButton: true,\n                value: (filterObj && option === filterObj.condition ?\n                    (typeof (filterObj.value2) === 'string' ? new Date(filterObj.value2) : filterObj.value2) : null),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, { 'data-value1': inputObj1_1.value, 'data-value2': e.value });\n                    }\n                    else {\n                        return;\n                    }\n                },\n                width: '100%',\n            });\n            inputObj1_1.isStringTemplate = true;\n            inputObj1_1.appendTo(inputDiv1);\n            inputObj2_1.isStringTemplate = true;\n            inputObj2_1.appendTo(inputDiv2);\n        }\n        else if (type === 'value') {\n            var inputObj1_2 = new NumericTextBox({\n                placeholder: this.parent.localeObj.getConstant('enterValue'),\n                enableRtl: this.parent.enableRtl,\n                showClearButton: true,\n                format: '###.##',\n                value: (filterObj && option === filterObj.condition ? parseInt(filterObj.value1, 10) : undefined),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, {\n                            'data-value1': (e.value ? e.value.toString() : '0'),\n                            'data-value2': (inputObj2_2.value ? inputObj2_2.value.toString() : '0')\n                        });\n                    }\n                    else {\n                        return;\n                    }\n                }, width: '100%'\n            });\n            var inputObj2_2 = new NumericTextBox({\n                placeholder: this.parent.localeObj.getConstant('enterValue'),\n                enableRtl: this.parent.enableRtl,\n                showClearButton: true,\n                format: '###.##',\n                value: (filterObj && option === filterObj.condition ? parseInt(filterObj.value2, 10) : undefined),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, {\n                            'data-value1': (inputObj1_2.value ? inputObj1_2.value.toString() : '0'),\n                            'data-value2': (e.value ? e.value.toString() : '0')\n                        });\n                    }\n                    else {\n                        return;\n                    }\n                }, width: '100%'\n            });\n            inputObj1_2.isStringTemplate = true;\n            inputObj1_2.appendTo(inputDiv1);\n            inputObj2_2.isStringTemplate = true;\n            inputObj2_2.appendTo(inputDiv2);\n        }\n        else {\n            var inputObj1_3 = new MaskedTextBox({\n                placeholder: this.parent.localeObj.getConstant('enterValue'),\n                enableRtl: this.parent.enableRtl,\n                showClearButton: true,\n                value: (filterObj && option === filterObj.condition ? filterObj.value1 : ''),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, { 'data-value1': e.value, 'data-value2': inputObj2_3.value });\n                    }\n                    else {\n                        return;\n                    }\n                }, width: '100%'\n            });\n            var inputObj2_3 = new MaskedTextBox({\n                placeholder: this.parent.localeObj.getConstant('enterValue'),\n                enableRtl: this.parent.enableRtl,\n                showClearButton: true,\n                value: (filterObj && option === filterObj.condition ? filterObj.value2 : ''),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, { 'data-value1': inputObj1_3.value, 'data-value2': e.value });\n                    }\n                    else {\n                        return;\n                    }\n                }, width: '100%'\n            });\n            inputObj1_3.isStringTemplate = true;\n            inputObj1_3.appendTo(inputDiv1);\n            inputObj2_3.isStringTemplate = true;\n            inputObj2_3.appendTo(inputDiv2);\n        }\n    };\n    /* tslint:enable */\n    FilterDialog.prototype.updateInputValues = function (element, type, inputDiv1, inputDiv2) {\n        var value1;\n        var value2;\n        /* tslint:disable:no-any */\n        if (type === 'date') {\n            var inputObj1 = inputDiv1.ej2_instances[0];\n            var inputObj2 = inputDiv2.ej2_instances[0];\n            value1 = !isNullOrUndefined(inputObj1.value) ? inputObj1.value.toString() : '';\n            value2 = !isNullOrUndefined(inputObj2.value) ? inputObj2.value.toString() : '';\n        }\n        else {\n            var inputObj1 = inputDiv1.ej2_instances[0];\n            var inputObj2 = inputDiv2.ej2_instances[0];\n            value1 = inputObj1.value;\n            value2 = inputObj2.value;\n        }\n        /* tslint:enable:no-any */\n        setStyleAndAttributes(element, { 'data-value1': value1, 'data-value2': value2 });\n    };\n    FilterDialog.prototype.validateTreeNode = function (e) {\n        if (e.node.classList.contains(cls.ICON_DISABLE)) {\n            e.cancel = true;\n        }\n        else {\n            return;\n        }\n    };\n    /**\n     * Update filter state while Member check/uncheck.\n     * @hidden\n     */\n    FilterDialog.prototype.updateCheckedState = function (fieldCaption) {\n        var filterDialog = this.dialogPopUp.element;\n        setStyleAndAttributes(filterDialog, { 'role': 'menu', 'aria-haspopup': 'true' });\n        var list = [].slice.call(this.memberTreeView.element.querySelectorAll('li'));\n        var fieldName = filterDialog.getAttribute('data-fieldname');\n        var uncheckedNodes = this.getUnCheckedNodes(fieldName);\n        var checkedNodes = this.getCheckedNodes(fieldName);\n        var firstNode = this.allMemberSelect.element.querySelector('li').querySelector('span.' + cls.CHECK_BOX_FRAME_CLASS);\n        if (list.length > 0) {\n            if (checkedNodes > 0) {\n                if (uncheckedNodes > 0) {\n                    removeClass([firstNode], cls.NODE_CHECK_CLASS);\n                    addClass([firstNode], cls.NODE_STOP_CLASS);\n                }\n                else if (uncheckedNodes === 0) {\n                    removeClass([firstNode], cls.NODE_STOP_CLASS);\n                    addClass([firstNode], cls.NODE_CHECK_CLASS);\n                }\n                this.dialogPopUp.buttons[0].buttonModel.disabled = false;\n                filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n            }\n            else if (uncheckedNodes > 0 && checkedNodes === 0) {\n                removeClass([firstNode], [cls.NODE_CHECK_CLASS, cls.NODE_STOP_CLASS]);\n                if (this.getCheckedNodes(fieldName) === checkedNodes) {\n                    this.dialogPopUp.buttons[0].buttonModel.disabled = true;\n                    filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n                }\n            }\n        }\n        else {\n            this.dialogPopUp.buttons[0].buttonModel.disabled = true;\n            filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n        }\n    };\n    FilterDialog.prototype.getCheckedNodes = function (fieldName) {\n        var engineModule = this.parent.engineModule;\n        var nodeList = [];\n        var checkeNodes = [];\n        if (this.parent.dataType === 'olap' && engineModule &&\n            !engineModule.fieldList[fieldName].isHierarchy) {\n            nodeList = this.memberTreeView.getAllCheckedNodes();\n            return nodeList.length;\n        }\n        else {\n            for (var _i = 0, _a = this.parent.searchTreeItems; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.isSelected) {\n                    checkeNodes.push(item);\n                }\n            }\n            return checkeNodes.length;\n        }\n    };\n    FilterDialog.prototype.getUnCheckedNodes = function (fieldName) {\n        var unCheckeNodes = [];\n        var nodeList = [];\n        var engineModule = this.parent.engineModule;\n        if (this.parent.dataType === 'olap' && engineModule && !engineModule.fieldList[fieldName].isHierarchy) {\n            nodeList = this.memberTreeView.getAllCheckedNodes();\n            return (this.memberTreeView.fields.dataSource.length -\n                nodeList.length);\n        }\n        else {\n            // unCheckeNodes = this.parent.searchTreeItems.filter((item: { [key: string]: object }) => {\n            //     return !item.isSelected;\n            // });\n            for (var _i = 0, _a = this.parent.searchTreeItems; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (!item.isSelected) {\n                    unCheckeNodes.push(item);\n                }\n            }\n            return unCheckeNodes.length;\n        }\n    };\n    FilterDialog.prototype.isExcelFilter = function (fieldName) {\n        var isFilterField = false;\n        for (var _i = 0, _a = this.parent.dataSourceSettings.filters; _i < _a.length; _i++) {\n            var field = _a[_i];\n            if (field.name === fieldName) {\n                isFilterField = true;\n                break;\n            }\n        }\n        if (!isFilterField && (this.parent.dataSourceSettings.allowLabelFilter || this.parent.dataSourceSettings.allowValueFilter)) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    FilterDialog.prototype.getFilterObject = function (fieldName) {\n        /* tslint:disable-next-line:max-line-length */\n        var filterObj = PivotUtil.getFilterItemByName(fieldName, PivotUtil.cloneFilterSettings(this.parent.dataSourceSettings.filterSettings));\n        if (filterObj && (((['Label', 'Date', 'Number'].indexOf(filterObj.type) >= 0) &&\n            this.parent.dataSourceSettings.allowLabelFilter) ||\n            (filterObj.type === 'Value' && this.parent.dataSourceSettings.allowValueFilter) ||\n            (['Include', 'Exclude'].indexOf(filterObj.type) >= 0 &&\n                this.parent.eventBase.isValidFilterItemsAvail(fieldName, filterObj)))) {\n            return filterObj;\n        }\n        return undefined;\n    };\n    FilterDialog.prototype.wireEvent = function (element, fieldName) {\n        EventHandler.add(element, 'click', this.applySorting.bind(this, fieldName), this);\n    };\n    FilterDialog.prototype.unWireEvent = function (element, fieldName) {\n        EventHandler.remove(element, 'click', this.applySorting);\n    };\n    /**\n     * To close filter dialog.\n     * @hidden\n     */\n    FilterDialog.prototype.closeFilterDialog = function () {\n        if (this.allowExcelLikeFilter) {\n            if (this.tabObj && !this.tabObj.isDestroyed) {\n                this.tabObj.destroy();\n            }\n        }\n        if (this.dropMenu && !this.dropMenu.isDestroyed) {\n            this.dropMenu.destroy();\n        }\n        if (document.getElementById(this.parent.parentID + '_LevelDiv-popup')) {\n            remove(document.getElementById(this.parent.parentID + '_LevelDiv-popup'));\n        }\n        this.dialogPopUp.close();\n    };\n    FilterDialog.prototype.removeFilterDialog = function () {\n        if (this.dialogPopUp && !this.dialogPopUp.isDestroyed) {\n            this.dialogPopUp.destroy();\n        }\n        if (document.getElementById(this.parent.parentID + '_EditorTreeView')) {\n            remove(document.getElementById(this.parent.parentID + '_EditorTreeView'));\n        }\n    };\n    return FilterDialog;\n}());\nexport { FilterDialog };\n","import { CommonKeyboardInteraction } from '../actions/keyboard';\nimport { EventBase } from '../actions/event-base';\nimport { NodeStateModified } from '../actions/node-state-modified';\nimport { DataSourceUpdate } from '../actions/dataSource-update';\nimport { ErrorDialog } from '../popups/error-dialog';\nimport { FilterDialog } from '../popups/filter-dialog';\n/**\n * PivotCommon is used to manipulate the relational or Multi-Dimensional public methods by using their dataSource\n * @hidden\n */\n/** @hidden */\nvar PivotCommon = /** @class */ (function () {\n    /**\n     * Constructor for Pivot Common class\n     * @param  {CommonArgs} control?\n     * @hidden\n     */\n    function PivotCommon(control) {\n        /** @hidden */\n        this.currentTreeItems = [];\n        /** @hidden */\n        this.savedTreeFilterPos = {};\n        /** @hidden */\n        this.currentTreeItemsPos = {};\n        /** @hidden */\n        this.searchTreeItems = [];\n        /** @hidden */\n        this.isDataOverflow = false;\n        /** @hidden */\n        this.isDateField = false;\n        this.element = control.element;\n        this.moduleName = control.moduleName;\n        this.dataSourceSettings = control.dataSourceSettings;\n        this.engineModule = control.pivotEngine;\n        this.enableRtl = control.enableRtl;\n        this.isAdaptive = control.isAdaptive;\n        this.renderMode = control.renderMode;\n        this.parentID = control.id;\n        this.localeObj = control.localeObj;\n        this.dataType = control.dataType;\n        this.nodeStateModified = new NodeStateModified(this);\n        this.dataSourceUpdate = new DataSourceUpdate(this);\n        this.eventBase = new EventBase(this);\n        this.filterDialog = new FilterDialog(this);\n        this.errorDialog = new ErrorDialog(this);\n        this.keyboardModule = new CommonKeyboardInteraction(this);\n        return this;\n    }\n    /**\n     * To destroy the groupingbar\n     * @return {void}\n     * @hidden\n     */\n    PivotCommon.prototype.destroy = function () {\n        if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n        }\n    };\n    return PivotCommon;\n}());\nexport { PivotCommon };\n","import * as events from '../../common/base/constant';\nimport { PivotCommon } from '../../common/base/pivot-common';\nimport { Browser } from '@syncfusion/ej2-base';\n/**\n * Module for PivotCommon rendering\n */\n/** @hidden */\nvar Common = /** @class */ (function () {\n    /** Constructor for Common module */\n    function Common(parent) {\n        this.parent = parent;\n        this.parent.commonModule = this;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Common.prototype.getModuleName = function () {\n        return 'common';\n    };\n    Common.prototype.initiateCommonModule = function () {\n        if (!this.parent.pivotCommon) {\n            var args = {\n                pivotEngine: this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule,\n                dataSourceSettings: this.parent.dataSourceSettings.properties ?\n                    this.parent.dataSourceSettings.properties : this.parent.dataSourceSettings,\n                id: this.parent.element.id,\n                element: this.parent.element,\n                moduleName: this.parent.getModuleName(),\n                enableRtl: this.parent.enableRtl,\n                isAdaptive: Browser.isDevice,\n                renderMode: 'Popup',\n                localeObj: this.parent.localeObj,\n                dataType: this.parent.dataType\n            };\n            this.parent.pivotCommon = new PivotCommon(args);\n        }\n        else {\n            this.parent.pivotCommon.element = this.parent.element;\n            this.parent.pivotCommon.engineModule = this.parent.dataType === 'olap' ?\n                this.parent.olapEngineModule : this.parent.engineModule;\n            this.parent.pivotCommon.parentID = this.parent.element.id;\n            this.parent.pivotCommon.dataSourceSettings = this.parent.dataSourceSettings.properties ?\n                this.parent.dataSourceSettings.properties : this.parent.dataSourceSettings;\n            this.parent.pivotCommon.moduleName = this.parent.getModuleName();\n            this.parent.pivotCommon.enableRtl = this.parent.enableRtl;\n            this.parent.pivotCommon.isAdaptive = Browser.isDevice;\n            this.parent.pivotCommon.renderMode = 'Popup';\n            this.parent.pivotCommon.localeObj = this.parent.localeObj;\n            this.parent.pivotCommon.dataType = this.parent.dataType;\n        }\n        this.parent.pivotCommon.control = this.parent;\n    };\n    /**\n     * @hidden\n     */\n    Common.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.initiateCommonModule\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initialLoad, this.handlers.load, this);\n        this.parent.on(events.uiUpdate, this.handlers.load, this);\n    };\n    /**\n     * @hidden\n     */\n    Common.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initialLoad, this.handlers.load);\n        this.parent.off(events.uiUpdate, this.handlers.load);\n    };\n    /**\n     * To destroy the groupingbar\n     * @return {void}\n     * @hidden\n     */\n    Common.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.parent.pivotCommon) {\n            this.parent.pivotCommon.destroy();\n        }\n    };\n    return Common;\n}());\nexport { Common };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, Collection, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Allows specific fields associated with field information that needs to be displayed in the field axes of pivot table. The following configurations which are applicable are as follows:\n * * `name`: Allows you to set the field name that needs to be displayed in row/column/value/filter axis of pivot table.\n * * `caption`: Allows you to set caption to the specific field. It will be used to display instead of its name in pivot table component's UI.\n * * `type`: Allows to display the values in the pivot table with appropriate aggregations such as sum, product, count, average, etc… **Note: It is applicable only for relational data source.**\n * * `axis`: Allows you to set the axis name to the specific field. This will help to display the field in specified axis such as row/column/value/filter axis of pivot table.\n * * `showNoDataItems`: Allows you to display all members items of a specific field to the pivot table,\n * even doesn't have any data in its row/column intersection in data source. **Note: It is applicable only for relational data source.**\n * * `baseField`: Allows you to set the selective field, which used to display the values with either\n *  DifferenceFrom or PercentageOfDifferenceFrom or PercentageOfParentTotal aggregate types. **Note: It is applicable only for relational data source.**\n * * `baseItem`: Allows you to set the selective item of a specific field, which used to display the values with either DifferenceFrom or PercentageOfDifferenceFrom aggregate types.\n * The selective item should be set the from field specified in the baseField property. **Note: It is applicable only for relational data source.**\n * * `showSubTotals`: Allows to show or hide sub-totals to a specific field in row/column axis of the pivot table.\n * * `isNamedSet`: Allows you to set whether the specified field is a named set or not. In general,\n * the named set is a set of dimension members or a set expression (MDX query) to be created as a dimension in the SSAS OLAP cube itself. **Note: It is applicable only for OLAP data source.**\n * * `isCalculatedField`: Allows to set whether the specified field is a calculated field or not.\n * In general, the calculated field is created from the bound data source or using simple formula with basic arithmetic operators in the pivot table. **Note: It is applicable only for OLAP data source.**\n * * `showFilterIcon`: Allows you to show or hide the filter icon of a specific field that used to be displayed on the pivot button of the grouping bar and field list UI.\n * This filter icon is used to filter the members of a specified field at runtime in the pivot table.\n * * `showSortIcon`: Allows you to show or hide the sort icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This sort icon is used to order members of a specified field either in ascending or descending at runtime.\n * * `showRemoveIcon`: Allows you to show or hide the remove icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This remove icon is used to remove the specified field during runtime.\n * * `showValueTypeIcon`: Allows you to show or hide the value type icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This value type icon helps to select the appropriate aggregation type to specified value field at runtime.\n * * `showEditIcon`: Allows you to show or hide the edit icon of a specific field that used to be displayed on the pivot button of the grouping bar and field list UI.\n * This edit icon is used to modify caption, formula, and format of a specified calculated field at runtime that to be displayed in the pivot table.\n * * `allowDragAndDrop`: Allows you to restrict the specific field's pivot button that is used to drag on runtime in the grouping bar and field list UI.\n * This will prevent you from modifying the current report.\n */\nvar FieldOptions = /** @class */ (function (_super) {\n    __extends(FieldOptions, _super);\n    function FieldOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"caption\", void 0);\n    __decorate([\n        Property('Sum')\n    ], FieldOptions.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"axis\", void 0);\n    __decorate([\n        Property(false)\n    ], FieldOptions.prototype, \"showNoDataItems\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"baseField\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"baseItem\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showSubTotals\", void 0);\n    __decorate([\n        Property(false)\n    ], FieldOptions.prototype, \"isNamedSet\", void 0);\n    __decorate([\n        Property(false)\n    ], FieldOptions.prototype, \"isCalculatedField\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showFilterIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showSortIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showRemoveIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showValueTypeIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showEditIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"allowDragAndDrop\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"dataType\", void 0);\n    return FieldOptions;\n}(ChildProperty));\nexport { FieldOptions };\n/**\n * Allows specific fields associated with field information that needs to be displayed in the field axes of pivot table. The following configurations which are applicable are as follows:\n * * `name`: Allows you to set the field name that needs to be displayed in row/column/value/filter axis of pivot table.\n * * `caption`: Allows you to set caption to the specific field. It will be used to display instead of its name in pivot table component's UI.\n * * `type`: Allows to display the values in the pivot table with appropriate aggregations such as sum, product, count, average, etc… **Note: It is applicable only for relational data source.**\n * * `axis`: Allows you to set the axis name to the specific field. This will help to display the field in specified axis such as row/column/value/filter axis of pivot table.\n * * `showNoDataItems`: Allows you to display all members items of a specific field to the pivot table,\n * even doesn't have any data in its row/column intersection in data source. **Note: It is applicable only for relational data source.**\n * * `baseField`: Allows you to set the selective field, which used to display the values with either\n *  DifferenceFrom or PercentageOfDifferenceFrom or PercentageOfParentTotal aggregate types. **Note: It is applicable only for relational data source.**\n * * `baseItem`: Allows you to set the selective item of a specific field, which used to display the values with either DifferenceFrom or PercentageOfDifferenceFrom aggregate types.\n * The selective item should be set the from field specified in the baseField property. **Note: It is applicable only for relational data source.**\n * * `showSubTotals`: Allows to show or hide sub-totals to a specific field in row/column axis of the pivot table.\n * * `isNamedSet`: Allows you to set whether the specified field is a named set or not. In general,\n * the named set is a set of dimension members or a set expression (MDX query) to be created as a dimension in the SSAS OLAP cube itself. **Note: It is applicable only for OLAP data source.**\n * * `isCalculatedField`: Allows to set whether the specified field is a calculated field or not.\n * In general, the calculated field is created from the bound data source or using simple formula with basic arithmetic operators in the pivot table. **Note: It is applicable only for OLAP data source.**\n * * `showFilterIcon`: Allows you to show or hide the filter icon of a specific field that used to be displayed on the pivot button of the grouping bar and field list UI.\n * This filter icon is used to filter the members of a specified field at runtime in the pivot table.\n * * `showSortIcon`: Allows you to show or hide the sort icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This sort icon is used to order members of a specified field either in ascending or descending at runtime.\n * * `showRemoveIcon`: Allows you to show or hide the remove icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This remove icon is used to remove the specified field during runtime.\n * * `showValueTypeIcon`: Allows you to show or hide the value type icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This value type icon helps to select the appropriate aggregation type to specified value field at runtime.\n * * `showEditIcon`: Allows you to show or hide the edit icon of a specific field that used to be displayed on the pivot button of the grouping bar and field list UI.\n * This edit icon is used to modify caption, formula, and format of a specified calculated field at runtime that to be displayed in the pivot table.\n * * `allowDragAndDrop`: Allows you to restrict the specific field's pivot button that is used to drag on runtime in the grouping bar and field list UI.\n * This will prevent you from modifying the current report.\n */\nvar FieldListFieldOptions = /** @class */ (function (_super) {\n    __extends(FieldListFieldOptions, _super);\n    function FieldListFieldOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return FieldListFieldOptions;\n}(FieldOptions));\nexport { FieldListFieldOptions };\n/**\n * Allows the style information to cusotmize the pivot table cell apprearance.\n */\nvar Style = /** @class */ (function (_super) {\n    __extends(Style, _super);\n    function Style() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Style.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property()\n    ], Style.prototype, \"color\", void 0);\n    __decorate([\n        Property()\n    ], Style.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property()\n    ], Style.prototype, \"fontSize\", void 0);\n    return Style;\n}(ChildProperty));\nexport { Style };\n/**\n * Allows specific fields associated with either selective or conditional-based filter members that used to be displayed in the pivot table.\n */\nvar Filter = /** @class */ (function (_super) {\n    __extends(Filter, _super);\n    function Filter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Filter.prototype, \"name\", void 0);\n    __decorate([\n        Property('Include')\n    ], Filter.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"items\", void 0);\n    __decorate([\n        Property('DoesNotEquals')\n    ], Filter.prototype, \"condition\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"value1\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"value2\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"measure\", void 0);\n    __decorate([\n        Property(1)\n    ], Filter.prototype, \"levelCount\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"selectedField\", void 0);\n    return Filter;\n}(ChildProperty));\nexport { Filter };\n/**\n * Allows a collection of values fields to change the appearance of the pivot table value cells with different style properties such as background color, font color, font family, and font size based on specific conditions.\n */\nvar ConditionalFormatSettings = /** @class */ (function (_super) {\n    __extends(ConditionalFormatSettings, _super);\n    function ConditionalFormatSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"measure\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"label\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"conditions\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"value1\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"value2\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"style\", void 0);\n    __decorate([\n        Property(true)\n    ], ConditionalFormatSettings.prototype, \"applyGrandTotals\", void 0);\n    return ConditionalFormatSettings;\n}(ChildProperty));\nexport { ConditionalFormatSettings };\n/**\n * Allows specific fields associated with sort settings to order their members either in ascending or descending that used to be displayed in the pivot table.\n */\nvar Sort = /** @class */ (function (_super) {\n    __extends(Sort, _super);\n    function Sort() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Sort.prototype, \"name\", void 0);\n    __decorate([\n        Property('Ascending')\n    ], Sort.prototype, \"order\", void 0);\n    return Sort;\n}(ChildProperty));\nexport { Sort };\n/**\n * Allows specific fields used to display the values with specific format that used to be displayed in the pivot table.\n * For example, to display a specific field with currency formatted values in the pivot table, the set the `format` property to be **C**.\n */\nvar FormatSettings = /** @class */ (function (_super) {\n    __extends(FormatSettings, _super);\n    function FormatSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"minimumFractionDigits\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"maximumFractionDigits\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"minimumSignificantDigits\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"maximumSignificantDigits\", void 0);\n    __decorate([\n        Property(true)\n    ], FormatSettings.prototype, \"useGrouping\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"skeleton\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"currency\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"minimumIntegerDigits\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"format\", void 0);\n    return FormatSettings;\n}(ChildProperty));\nexport { FormatSettings };\n/**\n * Allows specific fields to group their data on the basis of their type.\n * For example, the date type fields can be formatted and displayed based on year, quarter, month, and more. Likewise, the number type fields can be grouped range-wise, such as 1-5, 6-10, etc.\n * You can perform custom group to the string type fields that used to displayed in the pivot table.\n */\nvar GroupSettings = /** @class */ (function (_super) {\n    __extends(GroupSettings, _super);\n    function GroupSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"groupInterval\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"startingAt\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"endingAt\", void 0);\n    __decorate([\n        Property('Date')\n    ], GroupSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"rangeInterval\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"caption\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"customGroups\", void 0);\n    return GroupSettings;\n}(ChildProperty));\nexport { GroupSettings };\n/**\n * Allows to specify the custom group information of specific field to create custom groups.\n */\nvar CustomGroups = /** @class */ (function (_super) {\n    __extends(CustomGroups, _super);\n    function CustomGroups() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], CustomGroups.prototype, \"groupName\", void 0);\n    __decorate([\n        Property([])\n    ], CustomGroups.prototype, \"items\", void 0);\n    return CustomGroups;\n}(ChildProperty));\nexport { CustomGroups };\n/**\n * Allows options to create new calculated fields from the bound data source or using simple formula with basic arithmetic operators in the pivot table.\n */\nvar CalculatedFieldSettings = /** @class */ (function (_super) {\n    __extends(CalculatedFieldSettings, _super);\n    function CalculatedFieldSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], CalculatedFieldSettings.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], CalculatedFieldSettings.prototype, \"formula\", void 0);\n    __decorate([\n        Property()\n    ], CalculatedFieldSettings.prototype, \"hierarchyUniqueName\", void 0);\n    __decorate([\n        Property()\n    ], CalculatedFieldSettings.prototype, \"formatString\", void 0);\n    return CalculatedFieldSettings;\n}(ChildProperty));\nexport { CalculatedFieldSettings };\n/**\n * Allows specific fields used to display their the headers to be either expanded or collapsed in the pivot table.\n */\nvar DrillOptions = /** @class */ (function (_super) {\n    __extends(DrillOptions, _super);\n    function DrillOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], DrillOptions.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], DrillOptions.prototype, \"items\", void 0);\n    __decorate([\n        Property()\n    ], DrillOptions.prototype, \"delimiter\", void 0);\n    return DrillOptions;\n}(ChildProperty));\nexport { DrillOptions };\n/**\n * Allows to sort individual value field and its aggregated values either in row or column axis to ascending or descending order.\n */\nvar ValueSortSettings = /** @class */ (function (_super) {\n    __extends(ValueSortSettings, _super);\n    function ValueSortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ValueSortSettings.prototype, \"headerText\", void 0);\n    __decorate([\n        Property('.')\n    ], ValueSortSettings.prototype, \"headerDelimiter\", void 0);\n    __decorate([\n        Property('None')\n    ], ValueSortSettings.prototype, \"sortOrder\", void 0);\n    __decorate([\n        Property()\n    ], ValueSortSettings.prototype, \"measure\", void 0);\n    return ValueSortSettings;\n}(ChildProperty));\nexport { ValueSortSettings };\n/**\n * Allows you to set the credential information to access the specified SSAS cube.\n * > It is applicable only for OLAP data source.\n */\nvar Authentication = /** @class */ (function (_super) {\n    __extends(Authentication, _super);\n    function Authentication() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Authentication.prototype, \"userName\", void 0);\n    __decorate([\n        Property()\n    ], Authentication.prototype, \"password\", void 0);\n    return Authentication;\n}(ChildProperty));\nexport { Authentication };\n/**\n * Allows the following pivot report information such as rows, columns, values, filters, etc., that are used to render the pivot table and field list.\n * * `catalog`: Allows to set the database name of SSAS cube as string type that used to retrieve the data from the specified connection string. **Note: It is applicable only for OLAP data source.**\n * * `cube`: Allows you to set the SSAS cube name as string type that used to retrieve data for pivot table rendering. **Note: It is applicable only for OLAP data source.**\n * * `providerType`: Allows to set the provider type to identify the given connection is either Relational or SSAS to render the pivot table and field list.\n * * `url`: Allows to set the URL as string type, which helps to identify the service endpoint where the data are processed and retrieved to render the pivot table and field list. **Note: It is applicable only for OLAP data source.**\n * * `localeIdentifier`: Allows you to set the specific culture code as number type to render pivot table with desired localization.\n * By default, the pivot table displays with culture code **1033**, which indicates \"en-US\" locale. **Note: It is applicale only for OLAP data source.**\n * * `dataSource`: Allows you to set the data source as JSON collection to the pivot report either from local or from remote server to the render the pivot that and field list.\n * You can fetch JSON data from remote server by using DataManager. **Note: It is applicable only for relational data source.**\n * * `rows`: Allows specific fields associated with field information that needs to be displayed in row axis of pivot table.\n * * `columns`: Allows specific fields associated with field information that needs to be displayed in column axis of pivot table.\n * * `values`: Allows specific fields associated with field information that needs to be displayed as aggregated numeric values in pivot table.\n * * `filters`: Allows to filter the values in other axis based on the collection of filter fields in pivot table.\n * * `excludeFields`: Allows you to restrict the specific field(s) from displaying it in the field list UI.\n * You may also be unable to render the pivot table with this field(s) by doing so. **Note: It is applicable only for relational data source.**\n * * `expandAll`: Allows you to either expand or collapse all the headers that are displayed in the pivot table.\n * By default, all the headers are collapsed in the pivot table. **Note: It is applicable only for Relational data.**\n * * `valueAxis`: Allows you to set the value fields that to be plotted either in row or column axis in the pivot table.\n * * `filterSettings`: Allows specific fields associated with either selective or conditional-based filter members that used to be displayed in the pivot table.\n * * `sortSettings`: Allows specific fields associated with sort settings to order their members either in ascending or descending that used to be displayed in the pivot table.\n * By default, the data source containing fields are display with Ascending order alone. To use this option, it requires the `enableSorting` property to be **true**.\n * * `enableSorting`: Allows to perform sort operation to order members of a specific fields either in ascending or descending that used to be displayed in the pivot table.\n * * `formatSettings`: Allows specific fields used to display the values with specific format that used to be displayed in the pivot table.\n * For example, to display a specific field with currency formatted values in the pivot table, the set the `format` property to be **C**.\n * * `drilledMembers`: Allows specific fields used to display their the headers to be either expanded or collapsed in the pivot table.\n * * `valueSortSettings`: Allows to sort individual value field and its aggregated values either in row or column axis to ascending or descending order.\n * * `calculatedFieldSettings`: Allows to create new calculated fields from the bound data source or using simple formula with basic arithmetic operators in the pivot table.\n * * `allowMemberFilter`: Allows to perform filter operation based on the selective filter members of the specific fields used to be displayed in the pivot table.\n * * `allowLabelFilter`: Allows to perform filter operation based on the selective headers used to be displayed in the pivot table.\n * * `allowValueFilter`: Allows to perform filter operation based only on value fields and its resultant aggregated values over other fields defined in row and column axes that used to be displayed in the pivot table.\n * * `showSubTotals`: Allows to show or hide sub-totals in both rows and columns axis of the pivot table.\n * * `showRowSubTotals`: Allows to show or hide sub-totals in row axis of the pivot table.\n * * `showColumnSubTotals`: Allows to show or hide sub-totals in column axis of the pivot table.\n * * `showGrandTotals`: Allows to show or hide grand totals in both rows and columns axis of the pivot table.\n * * `showRowGrandTotals`: Allows to show or hide grand totals in row axis of the pivot table.\n * * `showColumnGrandTotals`: Allows to show or hide grand totals in column axis of the pivot table.\n * * `showHeaderWhenEmpty`: Allows the undefined headers to be displayed in the pivot table, when the specific field(s) are not defined in the raw data.\n * For example, if the raw data for the field ‘Country’ is defined as “United Kingdom” and “State” is not defined means, it will be shown as “United Kingdom >> Undefined” in the header section.\n * * `alwaysShowValueHeader`: Allows to show the value field header always in pivot table, even if it holds a single field in the value field axis.\n * * `conditionalFormatSettings`: Allows a collection of values fields to change the appearance of the pivot table value cells with different style properties such as background color, font color, font family, and font size based on specific conditions.\n * * `emptyCellsTextContent`: Allows to show custom string to the empty value cells that used to display in the pivot table. You can fill empty value cells with any value like “0”, ”-”, ”*”, “(blank)”, etc.\n * * `groupSettings`: Allows specific fields to group their data on the basis of their type.\n * For example, the date type fields can be formatted and displayed based on year, quarter, month, and more. Likewise, the number type fields can be grouped range-wise, such as 1-5, 6-10, etc.\n * You can perform custom group to the string type fields that used to displayed in the pivot table.\n * * `showAggregationOnValueField`: Allows the pivot button with specific value field caption along with the aggregation type, to be displayed in the grouping bar and field list UI.\n * For example, if the value field \"Sold Amount\" is aggregated with Sum, it will be displayed with caption \"Sum of Sold Amount\" in its pivot button.\n * * `authentication`: Allows you to set the credential information to access the specified SSAS cube. **Note: It is applicable only for OLAP data source**.\n */\nvar DataSourceSettings = /** @class */ (function (_super) {\n    __extends(DataSourceSettings, _super);\n    function DataSourceSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"catalog\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"cube\", void 0);\n    __decorate([\n        Property('Relational')\n    ], DataSourceSettings.prototype, \"providerType\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"url\", void 0);\n    __decorate([\n        Property(1033)\n    ], DataSourceSettings.prototype, \"localeIdentifier\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"dataSource\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"rows\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"values\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"filters\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"fieldMapping\", void 0);\n    __decorate([\n        Property([])\n    ], DataSourceSettings.prototype, \"excludeFields\", void 0);\n    __decorate([\n        Property(false)\n    ], DataSourceSettings.prototype, \"expandAll\", void 0);\n    __decorate([\n        Property('column')\n    ], DataSourceSettings.prototype, \"valueAxis\", void 0);\n    __decorate([\n        Collection([], Filter)\n    ], DataSourceSettings.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Collection([], Sort)\n    ], DataSourceSettings.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"enableSorting\", void 0);\n    __decorate([\n        Property('JSON')\n    ], DataSourceSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"allowMemberFilter\", void 0);\n    __decorate([\n        Property(false)\n    ], DataSourceSettings.prototype, \"allowLabelFilter\", void 0);\n    __decorate([\n        Property(false)\n    ], DataSourceSettings.prototype, \"allowValueFilter\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showSubTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showRowSubTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showColumnSubTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showGrandTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showRowGrandTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showColumnGrandTotals\", void 0);\n    __decorate([\n        Property(false)\n    ], DataSourceSettings.prototype, \"alwaysShowValueHeader\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showHeaderWhenEmpty\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showAggregationOnValueField\", void 0);\n    __decorate([\n        Collection([], FormatSettings)\n    ], DataSourceSettings.prototype, \"formatSettings\", void 0);\n    __decorate([\n        Collection([], DrillOptions)\n    ], DataSourceSettings.prototype, \"drilledMembers\", void 0);\n    __decorate([\n        Complex({}, ValueSortSettings)\n    ], DataSourceSettings.prototype, \"valueSortSettings\", void 0);\n    __decorate([\n        Collection([], CalculatedFieldSettings)\n    ], DataSourceSettings.prototype, \"calculatedFieldSettings\", void 0);\n    __decorate([\n        Collection([], ConditionalFormatSettings)\n    ], DataSourceSettings.prototype, \"conditionalFormatSettings\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"emptyCellsTextContent\", void 0);\n    __decorate([\n        Collection([], GroupSettings)\n    ], DataSourceSettings.prototype, \"groupSettings\", void 0);\n    __decorate([\n        Complex({}, Authentication)\n    ], DataSourceSettings.prototype, \"authentication\", void 0);\n    return DataSourceSettings;\n}(ChildProperty));\nexport { DataSourceSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Event } from '@syncfusion/ej2-base';\n/**\n * Interface for a class SelectionSettings\n */\nvar PivotSelectionSettings = /** @class */ (function (_super) {\n    __extends(PivotSelectionSettings, _super);\n    function PivotSelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], PivotSelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], PivotSelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], PivotSelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], PivotSelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSelectionSettings.prototype, \"enableSimpleMultiRowSelection\", void 0);\n    return PivotSelectionSettings;\n}(ChildProperty));\nexport { PivotSelectionSettings };\n/**\n *  Represents Pivot widget model class.\n */\nvar GridSettings = /** @class */ (function (_super) {\n    __extends(GridSettings, _super);\n    function GridSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('auto')\n    ], GridSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], GridSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('Both')\n    ], GridSettings.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property(false)\n    ], GridSettings.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Property(false)\n    ], GridSettings.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(true)\n    ], GridSettings.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(null)\n    ], GridSettings.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(110)\n    ], GridSettings.prototype, \"columnWidth\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], GridSettings.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property(false)\n    ], GridSettings.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Property(-1)\n    ], GridSettings.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Property({ mode: 'Row', cellSelectionMode: 'Flow', type: 'Single' })\n    ], GridSettings.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property({ wrapMode: 'Both' })\n    ], GridSettings.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], GridSettings.prototype, \"printMode\", void 0);\n    __decorate([\n        Property()\n    ], GridSettings.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"columnRender\", void 0);\n    return GridSettings;\n}(ChildProperty));\nexport { GridSettings };\n","import { Workbook } from '@syncfusion/ej2-excel-export';\nimport * as events from '../../common/base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../../base/util';\n/**\n * @hidden\n * `ExcelExport` module is used to handle the Excel export action.\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for the PivotGrid Excel Export module.\n     * @hidden\n     */\n    function ExcelExport(parent) {\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'excelExport';\n    };\n    /* tslint:disable:max-func-body-length */\n    /**\n     * Method to perform excel export.\n     * @hidden\n     */\n    ExcelExport.prototype.exportToExcel = function (type) {\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        /** Event trigerring */\n        var clonedValues;\n        var currentPivotValues = PivotUtil.getClonedPivotValues(this.engine.pivotValues);\n        if (this.parent.exportAllPages && this.parent.enableVirtualization && this.parent.dataType !== 'olap') {\n            var pageSettings = this.engine.pageSettings;\n            this.engine.pageSettings = null;\n            this.engine.generateGridData(this.parent.dataSourceSettings);\n            this.parent.applyFormatting(this.engine.pivotValues);\n            clonedValues = PivotUtil.getClonedPivotValues(this.engine.pivotValues);\n            this.engine.pivotValues = currentPivotValues;\n            this.engine.pageSettings = pageSettings;\n        }\n        else {\n            clonedValues = currentPivotValues;\n        }\n        var args = {\n            fileName: 'default', header: '', footer: '', dataCollections: [clonedValues]\n        };\n        var fileName;\n        var header;\n        var footer;\n        var dataCollections;\n        this.parent.trigger(events.beforeExport, args, function (observedArgs) {\n            fileName = observedArgs.fileName;\n            header = observedArgs.header;\n            footer = observedArgs.footer;\n            dataCollections = observedArgs.dataCollections;\n        });\n        /** Fill data and export */\n        /* tslint:disable-next-line:no-any */\n        var workSheets = [];\n        for (var dataColl = 0; dataColl < dataCollections.length; dataColl++) {\n            var pivotValues = dataCollections[dataColl];\n            var colLen = 0;\n            var rowLen = pivotValues.length;\n            var actualrCnt = 0;\n            var formatList = this.parent.renderModule.getFormatList();\n            var rows = [];\n            var maxLevel = 0;\n            for (var rCnt = 0; rCnt < rowLen; rCnt++) {\n                if (pivotValues[rCnt]) {\n                    actualrCnt++;\n                    colLen = pivotValues[rCnt].length;\n                    var cells = [];\n                    for (var cCnt = 0; cCnt < colLen; cCnt++) {\n                        if (pivotValues[rCnt][cCnt]) {\n                            var pivotCell = pivotValues[rCnt][cCnt];\n                            if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                var cellValue = pivotCell.axis === 'value' ? pivotCell.value : pivotCell.formattedText;\n                                if (pivotCell.type === 'grand sum') {\n                                    cellValue = this.parent.localeObj.getConstant('grandTotal');\n                                }\n                                else if (pivotCell.type === 'sum') {\n                                    cellValue = cellValue.toString().replace('Total', this.parent.localeObj.getConstant('total'));\n                                }\n                                else {\n                                    cellValue = cellValue;\n                                }\n                                if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                    cells.push({\n                                        index: cCnt + 1, value: cellValue,\n                                        colSpan: pivotCell.colSpan, rowSpan: (pivotCell.rowSpan === -1 ? 1 : pivotCell.rowSpan),\n                                    });\n                                    if (pivotCell.axis === 'value') {\n                                        if (isNaN(pivotCell.value) || pivotCell.formattedText === '' ||\n                                            pivotCell.formattedText === undefined || isNullOrUndefined(pivotCell.value)) {\n                                            cells[cells.length - 1].value = '';\n                                        }\n                                        var field = (this.parent.dataSourceSettings.valueAxis === 'row' &&\n                                            this.parent.dataType === 'olap' && pivotCell.rowOrdinal &&\n                                            this.engine.tupRowInfo[pivotCell.rowOrdinal]) ?\n                                            this.engine.tupRowInfo[pivotCell.rowOrdinal].measureName :\n                                            pivotCell.actualText;\n                                        cells[cells.length - 1].style = {\n                                            numberFormat: formatList[field], bold: false, wrapText: true\n                                        };\n                                        if (pivotCell.style) {\n                                            cells[cells.length - 1].style.backColor = pivotCell.style.backgroundColor;\n                                            cells[cells.length - 1].style.fontColor = pivotCell.style.color;\n                                            cells[cells.length - 1].style.fontName = pivotCell.style.fontFamily;\n                                            cells[cells.length - 1].style.fontSize = Number(pivotCell.style.fontSize.split('px')[0]);\n                                        }\n                                    }\n                                    else {\n                                        cells[cells.length - 1].style = {\n                                            bold: true, vAlign: 'Center', wrapText: true, indent: cCnt === 0 ? pivotCell.level * 10 : 0\n                                        };\n                                        if (pivotCell.axis === 'row' && cCnt === 0) {\n                                            cells[cells.length - 1].style.hAlign = 'Left';\n                                            if (this.parent.dataType === 'olap') {\n                                                var indent = this.parent.renderModule.indentCollection[rCnt];\n                                                cells[cells.length - 1].style.indent = indent * 2;\n                                                maxLevel = maxLevel > indent ? maxLevel : indent;\n                                            }\n                                            else {\n                                                cells[cells.length - 1].style.indent = pivotCell.level * 2;\n                                                maxLevel = pivotCell.level > maxLevel ? pivotCell.level : maxLevel;\n                                            }\n                                        }\n                                    }\n                                    cells[cells.length - 1].style.borders = { color: '#000000', lineStyle: 'Thin' };\n                                }\n                            }\n                            cCnt = cCnt + (pivotCell.colSpan ? (pivotCell.colSpan - 1) : 0);\n                        }\n                        else {\n                            cells.push({\n                                index: cCnt + 1, value: '', colSpan: 1, rowSpan: 1,\n                            });\n                        }\n                    }\n                    rows.push({ index: actualrCnt, cells: cells });\n                }\n            }\n            var columns = [];\n            for (var cCnt = 0; cCnt < colLen; cCnt++) {\n                columns.push({ index: cCnt + 1, width: 100 });\n            }\n            if (maxLevel > 0) {\n                columns[0].width = 100 + (maxLevel * 20);\n            }\n            workSheets.push({ columns: columns, rows: rows });\n        }\n        var book = new Workbook({ worksheets: workSheets }, type === 'Excel' ? 'xlsx' : 'csv', undefined, this.parent.currencyCode);\n        book.save(fileName + (type === 'Excel' ? '.xlsx' : '.csv'));\n    };\n    /**\n     * To destroy the excel export module\n     * @returns void\n     * @hidden\n     */\n    /* tslint:disable-next-line:no-empty */\n    ExcelExport.prototype.destroy = function () {\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { PdfGrid, PdfPen, PointF, PdfDocument, PdfStandardFont, PdfFontFamily, PdfSolidBrush, PdfColor, PdfStringFormat, PdfVerticalAlignment, PdfTextAlignment, PdfFontStyle, PdfPageTemplateElement, RectangleF, PdfBorders } from '@syncfusion/ej2-pdf-export';\nimport * as events from '../../common/base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../../base/util';\n/**\n * @hidden\n * `PDFExport` module is used to handle the PDF export action.\n */\nvar PDFExport = /** @class */ (function () {\n    /**\n     * Constructor for the PivotGrid PDF Export module.\n     * @hidden\n     */\n    function PDFExport(parent) {\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PDFExport.prototype.getModuleName = function () {\n        return 'pdfExport';\n    };\n    PDFExport.prototype.addPage = function (eventParams) {\n        var page = eventParams.document.pages.add();\n        var header = eventParams.args.header;\n        var footer = eventParams.args.footer;\n        var font = new PdfStandardFont(PdfFontFamily.TimesRoman, 15, PdfFontStyle.Regular);\n        var brush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        var pen = new PdfPen(new PdfColor(0, 0, 0), .5);\n        /** Header and Footer to be set */\n        var headerTemplate = new PdfPageTemplateElement(new RectangleF(0, 0, page.graphics.clientSize.width, 20));\n        headerTemplate.graphics.drawString(header, font, pen, brush, 0, 0, new PdfStringFormat(PdfTextAlignment.Center));\n        eventParams.document.template.top = headerTemplate;\n        var footerTemplate = new PdfPageTemplateElement(new RectangleF(0, 0, page.graphics.clientSize.width, 20));\n        footerTemplate.graphics.drawString(footer, font, pen, brush, 0, 0, new PdfStringFormat(PdfTextAlignment.Center));\n        eventParams.document.template.bottom = footerTemplate;\n        return page;\n    };\n    PDFExport.prototype.hexDecToRgb = function (hexDec) {\n        if (hexDec === null || hexDec === '' || hexDec.length !== 7) {\n            throw new Error('please set valid hex value for color..');\n        }\n        hexDec = hexDec.substring(1);\n        var bigint = parseInt(hexDec, 16);\n        var r = (bigint >> 16) & 255;\n        var g = (bigint >> 8) & 255;\n        var b = bigint & 255;\n        return { r: r, g: g, b: b };\n    };\n    PDFExport.prototype.getFontStyle = function (theme) {\n        var fontType = PdfFontStyle.Regular;\n        if (!isNullOrUndefined(theme) && theme.bold) {\n            fontType |= PdfFontStyle.Bold;\n        }\n        if (!isNullOrUndefined(theme) && theme.italic) {\n            fontType |= PdfFontStyle.Italic;\n        }\n        if (!isNullOrUndefined(theme) && theme.underline) {\n            fontType |= PdfFontStyle.Underline;\n        }\n        if (!isNullOrUndefined(theme) && theme.strikeout) {\n            fontType |= PdfFontStyle.Strikeout;\n        }\n        return fontType;\n    };\n    PDFExport.prototype.getBorderStyle = function (borderStyle) {\n        var borders = new PdfBorders();\n        if (!isNullOrUndefined(borderStyle)) {\n            var borderWidth = borderStyle.width;\n            // set border width\n            var width = (!isNullOrUndefined(borderWidth) && typeof borderWidth === 'number') ? borderWidth * 0.75 : undefined;\n            // set border color\n            var color = new PdfColor(196, 196, 196);\n            if (!isNullOrUndefined(borderStyle.color)) {\n                var borderColor = this.hexDecToRgb(borderStyle.color);\n                color = new PdfColor(borderColor.r, borderColor.g, borderColor.b);\n            }\n            var pen = new PdfPen(color, width);\n            // set border dashStyle 'Solid <default>, Dash, Dot, DashDot, DashDotDot'\n            if (!isNullOrUndefined(borderStyle.dashStyle)) {\n                pen.dashStyle = this.getDashStyle(borderStyle.dashStyle);\n            }\n            borders.all = pen;\n        }\n        else {\n            var pdfColor = new PdfColor(234, 234, 234);\n            borders.all = new PdfPen(pdfColor);\n        }\n        return borders;\n    };\n    PDFExport.prototype.getDashStyle = function (dashType) {\n        switch (dashType) {\n            case 'Dash':\n                return 1;\n            case 'Dot':\n                return 2;\n            case 'DashDot':\n                return 3;\n            case 'DashDotDot':\n                return 4;\n            default:\n                return 0;\n        }\n    };\n    PDFExport.prototype.getStyle = function () {\n        var border = new PdfBorders();\n        if (!isNullOrUndefined(this.gridStyle)) {\n            var fontFamily = !isNullOrUndefined(this.gridStyle.header.fontName) ?\n                this.getFontFamily(this.gridStyle.header.fontName) : PdfFontFamily.Helvetica;\n            var fontStyle = this.getFontStyle(this.gridStyle.header);\n            var fontSize = !isNullOrUndefined(this.gridStyle.header.fontSize) ? this.gridStyle.header.fontSize : 10.5;\n            var pdfColor = new PdfColor();\n            if (!isNullOrUndefined(this.gridStyle.header.fontColor)) {\n                var penBrushColor = this.hexDecToRgb(this.gridStyle.header.fontColor);\n                pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n            }\n            var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n            if (!isNullOrUndefined(this.gridStyle.header.font)) {\n                font = this.gridStyle.header.font;\n            }\n            return {\n                border: this.getBorderStyle(this.gridStyle.header.border), font: font, brush: new PdfSolidBrush(pdfColor)\n            };\n        }\n        else {\n            return {\n                brush: new PdfSolidBrush(new PdfColor()),\n                border: border, font: undefined\n            };\n        }\n    };\n    PDFExport.prototype.setRecordThemeStyle = function (row, border) {\n        if (!isNullOrUndefined(this.gridStyle) && !isNullOrUndefined(this.gridStyle.record)) {\n            var fontFamily = !isNullOrUndefined(this.gridStyle.record.fontName) ?\n                this.getFontFamily(this.gridStyle.record.fontName) : PdfFontFamily.Helvetica;\n            var fontSize = !isNullOrUndefined(this.gridStyle.record.fontSize) ? this.gridStyle.record.fontSize : 9.75;\n            var fontStyle = this.getFontStyle(this.gridStyle.record);\n            var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n            if (!isNullOrUndefined(this.gridStyle.record.font)) {\n                font = this.gridStyle.record.font;\n            }\n            row.style.setFont(font);\n            var pdfColor = new PdfColor();\n            if (!isNullOrUndefined(this.gridStyle.record.fontColor)) {\n                var penBrushColor = this.hexDecToRgb(this.gridStyle.record.fontColor);\n                pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n            }\n            row.style.setTextBrush(new PdfSolidBrush(pdfColor));\n        }\n        var borderRecord = this.gridStyle && this.gridStyle.record &&\n            this.gridStyle.record.border ? this.getBorderStyle(this.gridStyle.record.border) : border;\n        row.style.setBorder(borderRecord);\n        return row;\n    };\n    /**\n     * Method to perform pdf export.\n     * @hidden\n     */\n    /* tslint:disable:max-func-body-length */\n    PDFExport.prototype.exportToPDF = function () {\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        var eventParams = this.applyEvent();\n        var headerStyle = this.getStyle();\n        var indent = this.parent.renderModule.maxIndent ? this.parent.renderModule.maxIndent : 5;\n        var firstColumnWidth = 100 + (indent * 20);\n        var size = Math.floor((540 - firstColumnWidth) / 90) + 1;\n        /** Fill data and export */\n        var dataCollIndex = 0;\n        var pivotValues = eventParams.args.dataCollections[dataCollIndex];\n        for (var vLen = 0; eventParams.args.allowRepeatHeader && size > 1 && vLen < pivotValues.length; vLen++) {\n            for (var vCnt = size; pivotValues[vLen] && vCnt < pivotValues[vLen].length; vCnt += size) {\n                pivotValues[vLen].splice(vCnt, 0, pivotValues[vLen][0]);\n            }\n        }\n        var colLength = pivotValues && pivotValues.length > 0 ? pivotValues[0].length : 0;\n        var integratedCnt = 0;\n        do {\n            var page = this.addPage(eventParams);\n            var pdfGrid = new PdfGrid();\n            var pageSize = size > 1 ? size : 5;\n            if (pivotValues && pivotValues.length > 0) {\n                pdfGrid.columns.add(pivotValues[0].length - integratedCnt >= pageSize ? pageSize : pivotValues[0].length - integratedCnt);\n                var rowLen = pivotValues.length;\n                var actualrCnt = 0;\n                var maxLevel = 0;\n                for (var rCnt = 0; rCnt < rowLen; rCnt++) {\n                    if (pivotValues[rCnt]) {\n                        var isColHeader = !(pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row');\n                        var colLen = pivotValues[rCnt].length > (integratedCnt + pageSize) ? (integratedCnt + pageSize) :\n                            pivotValues[rCnt].length;\n                        if (isColHeader) {\n                            pdfGrid.headers.add(1);\n                        }\n                        var pdfGridRow = !isColHeader ? pdfGrid.rows.addRow() : pdfGrid.headers.getHeader(actualrCnt);\n                        if (isColHeader) {\n                            pdfGridRow.style.setBorder(headerStyle.border);\n                            if (headerStyle.font) {\n                                pdfGridRow.style.setFont(headerStyle.font);\n                            }\n                            pdfGridRow.style.setTextBrush(headerStyle.brush);\n                        }\n                        else {\n                            this.setRecordThemeStyle(pdfGridRow, headerStyle.border);\n                        }\n                        var localCnt = 0;\n                        var isEmptyRow = true;\n                        for (var cCnt = integratedCnt; cCnt < colLen; cCnt++) {\n                            var isValueCell = false;\n                            if (pivotValues[rCnt][cCnt]) {\n                                var pivotCell = pivotValues[rCnt][cCnt];\n                                if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                    var cellValue = pivotCell.formattedText;\n                                    cellValue = pivotCell.type === 'grand sum' ? this.parent.localeObj.getConstant('grandTotal') :\n                                        (pivotCell.type === 'sum' ?\n                                            cellValue.toString().replace('Total', this.parent.localeObj.getConstant('total')) : cellValue);\n                                    if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                        pdfGridRow.cells.getCell(localCnt).columnSpan = pivotCell.colSpan ?\n                                            (pageSize - localCnt < pivotCell.colSpan ? pageSize - localCnt : pivotCell.colSpan) : 1;\n                                        if (isColHeader && pivotCell.rowSpan && pivotCell.rowSpan > 1) {\n                                            pdfGridRow.cells.getCell(localCnt).rowSpan = pivotCell.rowSpan ? pivotCell.rowSpan : 1;\n                                        }\n                                        pdfGridRow.cells.getCell(localCnt).value = cellValue ? cellValue.toString() : '';\n                                    }\n                                    if (cellValue !== '') {\n                                        isEmptyRow = false;\n                                    }\n                                }\n                                maxLevel = pivotCell.level > maxLevel ? pivotCell.level : maxLevel;\n                                isValueCell = pivotCell.axis === 'value';\n                                cCnt = cCnt + (pdfGridRow.cells.getCell(localCnt).columnSpan ?\n                                    (pdfGridRow.cells.getCell(localCnt).columnSpan - 1) : 0);\n                                localCnt = localCnt + (pdfGridRow.cells.getCell(localCnt).columnSpan ?\n                                    (pdfGridRow.cells.getCell(localCnt).columnSpan - 1) : 0);\n                                if (pivotCell.style) {\n                                    pdfGridRow = this.applyStyle(pdfGridRow, pivotCell, localCnt);\n                                }\n                                var args = {\n                                    style: (pivotCell && pivotCell.isSum) ? { bold: true } : undefined,\n                                    pivotCell: pivotCell,\n                                    cell: pdfGridRow.cells.getCell(localCnt)\n                                };\n                                this.parent.trigger(events.onPdfCellRender, args);\n                                if (args.style) {\n                                    this.processCellStyle(pdfGridRow.cells.getCell(localCnt), args);\n                                }\n                            }\n                            else {\n                                var args = {\n                                    style: undefined,\n                                    pivotCell: undefined,\n                                    cell: pdfGridRow.cells.getCell(localCnt)\n                                };\n                                this.parent.trigger(events.onPdfCellRender, args);\n                                if (args.style) {\n                                    this.processCellStyle(pdfGridRow.cells.getCell(localCnt), args);\n                                }\n                                pdfGridRow.cells.getCell(localCnt).value = '';\n                                if (cCnt === 0 && isColHeader && this.parent.dataSourceSettings.columns &&\n                                    this.parent.dataSourceSettings.columns.length > 0) {\n                                    pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan++;\n                                }\n                                else if (cCnt !== 0 && isColHeader && this.parent.dataSourceSettings.columns &&\n                                    this.parent.dataSourceSettings.columns.length > 0 &&\n                                    pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan <\n                                        Object.keys(this.engine.headerContent).length) {\n                                    pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan++;\n                                }\n                            }\n                            var stringFormat = new PdfStringFormat();\n                            if (this.parent.dataType === 'olap') {\n                                var indent_1 = (!isColHeader && localCnt === 0 && pivotValues[rCnt][cCnt]) ?\n                                    (this.parent.renderModule.indentCollection[pivotValues[rCnt][cCnt].rowIndex]) : 0;\n                                stringFormat.paragraphIndent = indent_1 * 15;\n                                maxLevel = maxLevel > indent_1 ? maxLevel : indent_1;\n                            }\n                            else {\n                                stringFormat.paragraphIndent = (!isColHeader && localCnt === 0 && pivotValues[rCnt][cCnt] &&\n                                    pivotValues[rCnt][cCnt].level !== -1) ?\n                                    pivotValues[rCnt][cCnt].level * 15 : 0;\n                            }\n                            stringFormat.alignment = isValueCell ? PdfTextAlignment.Right : PdfTextAlignment.Left;\n                            stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n                            pdfGridRow.cells.getCell(localCnt).style.stringFormat = stringFormat;\n                            localCnt++;\n                        }\n                        if (isEmptyRow) {\n                            pdfGridRow.height = 16;\n                        }\n                        actualrCnt++;\n                    }\n                }\n                pdfGrid.columns.getColumn(0).width = 100 + (maxLevel * 20);\n            }\n            if (integratedCnt === 0 && this.parent.dataSourceSettings.columns && this.parent.dataSourceSettings.columns.length > 0) {\n                pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan--;\n            }\n            pdfGrid.draw(page, new PointF(10, 20));\n            integratedCnt = integratedCnt + pageSize;\n            if (integratedCnt >= colLength && eventParams.args.dataCollections.length > (dataCollIndex + 1)) {\n                dataCollIndex++;\n                pivotValues = eventParams.args.dataCollections[dataCollIndex];\n                colLength = pivotValues && pivotValues.length > 0 ? pivotValues[0].length : 0;\n                integratedCnt = 0;\n            }\n        } while (integratedCnt < colLength);\n        eventParams.document.save(eventParams.args.fileName + '.pdf');\n        eventParams.document.destroy();\n    };\n    PDFExport.prototype.applyStyle = function (pdfGridRow, pivotCell, localCnt) {\n        var color = this.parent.conditionalFormattingModule.hexToRgb(pivotCell.style.backgroundColor);\n        var brush = new PdfSolidBrush(new PdfColor(color.r, color.g, color.b));\n        pdfGridRow.cells.getCell(localCnt).style.backgroundBrush = brush;\n        var size = Number(pivotCell.style.fontSize.split('px')[0]);\n        var font = new PdfStandardFont(PdfFontFamily.TimesRoman, size, PdfFontStyle.Regular);\n        pdfGridRow.cells.getCell(localCnt).style.font = font;\n        color = this.parent.conditionalFormattingModule.hexToRgb(pivotCell.style.color);\n        brush = new PdfSolidBrush(new PdfColor(color.r, color.g, color.b));\n        pdfGridRow.cells.getCell(localCnt).style.textBrush = brush;\n        return pdfGridRow;\n    };\n    PDFExport.prototype.getFontFamily = function (family) {\n        switch (family) {\n            case 'TimesRoman':\n                return 2;\n            case 'Courier':\n                return 1;\n            case 'Symbol':\n                return 3;\n            case 'ZapfDingbats':\n                return 4;\n            default:\n                return 0;\n        }\n    };\n    /* tslint:disable-next-line:no-any */\n    PDFExport.prototype.getFont = function (theme) {\n        if (theme.style.font) {\n            return theme.style.font;\n        }\n        var fontSize = (theme.cell.cellStyle.font && theme.cell.cellStyle.font.fontSize) ? theme.cell.cellStyle.font.fontSize :\n            (!isNullOrUndefined(theme.style.fontSize)) ? (theme.style.fontSize * 0.75) : 9.75;\n        var fontFamily = (!isNullOrUndefined(theme.style.fontFamily)) ?\n            (this.getFontFamily(theme.style.fontFamily)) : PdfFontFamily.TimesRoman;\n        var fontStyle = PdfFontStyle.Regular;\n        if (!isNullOrUndefined(theme.style.bold) && theme.style.bold) {\n            fontStyle |= PdfFontStyle.Bold;\n        }\n        if (!isNullOrUndefined(theme.style.italic) && theme.style.italic) {\n            fontStyle |= PdfFontStyle.Italic;\n        }\n        if (!isNullOrUndefined(theme.style.underline) && theme.style.underline) {\n            fontStyle |= PdfFontStyle.Underline;\n        }\n        if (!isNullOrUndefined(theme.style.strikeout) && theme.style.strikeout) {\n            fontStyle |= PdfFontStyle.Strikeout;\n        }\n        return new PdfStandardFont(fontFamily, fontSize, fontStyle);\n    };\n    PDFExport.prototype.processCellStyle = function (gridCell, arg) {\n        if (!isNullOrUndefined(arg.style.backgroundColor)) {\n            var backColor = this.hexDecToRgb(arg.style.backgroundColor);\n            gridCell.style.backgroundBrush = new PdfSolidBrush(new PdfColor(backColor.r, backColor.g, backColor.b));\n        }\n        if (!isNullOrUndefined(arg.style.textBrushColor)) {\n            var textBrushColor = this.hexDecToRgb(arg.style.textBrushColor);\n            gridCell.style.textBrush = new PdfSolidBrush(new PdfColor(textBrushColor.r, textBrushColor.g, textBrushColor.b));\n        }\n        if (!isNullOrUndefined(arg.style.textPenColor)) {\n            var textColor = this.hexDecToRgb(arg.style.textPenColor);\n            gridCell.style.textPen = new PdfPen(new PdfColor(textColor.r, textColor.g, textColor.b));\n        }\n        if (!isNullOrUndefined(arg.style.fontFamily) || !isNullOrUndefined(arg.style.fontSize) || !isNullOrUndefined(arg.style.bold) ||\n            !isNullOrUndefined(arg.style.italic) || !isNullOrUndefined(arg.style.underline) || !isNullOrUndefined(arg.style.strikeout)) {\n            gridCell.style.font = this.getFont(arg);\n        }\n        if (!isNullOrUndefined(arg.style.border)) {\n            var border = new PdfBorders();\n            var borderWidth = arg.style.border.width;\n            // set border width\n            var width = (!isNullOrUndefined(borderWidth) && typeof borderWidth === 'number') ? (borderWidth * 0.75) : (undefined);\n            // set border color\n            var color = new PdfColor(196, 196, 196);\n            if (!isNullOrUndefined(arg.style.border.color)) {\n                var borderColor = this.hexDecToRgb(arg.style.border.color);\n                color = new PdfColor(borderColor.r, borderColor.g, borderColor.b);\n            }\n            var pen = new PdfPen(color, width);\n            // set border dashStyle 'Solid <default>, Dash, Dot, DashDot, DashDotDot'\n            if (!isNullOrUndefined(arg.style.border.dashStyle)) {\n                pen.dashStyle = this.getDashStyle(arg.style.border.dashStyle);\n            }\n            border.all = pen;\n            gridCell.style.borders = border;\n        }\n    };\n    PDFExport.prototype.applyEvent = function () {\n        var _this = this;\n        /** Event trigerring */\n        var clonedValues;\n        var currentPivotValues = PivotUtil.getClonedPivotValues(this.engine.pivotValues);\n        if (this.parent.exportAllPages && this.parent.enableVirtualization && this.parent.dataType !== 'olap') {\n            var pageSettings = this.engine.pageSettings;\n            this.engine.pageSettings = null;\n            this.engine.generateGridData(this.parent.dataSourceSettings);\n            this.parent.applyFormatting(this.engine.pivotValues);\n            clonedValues = PivotUtil.getClonedPivotValues(this.engine.pivotValues);\n            this.engine.pivotValues = currentPivotValues;\n            this.engine.pageSettings = pageSettings;\n        }\n        else {\n            clonedValues = currentPivotValues;\n        }\n        var style;\n        var args = {\n            fileName: 'default', header: '', footer: '', dataCollections: [clonedValues], allowRepeatHeader: true, style: style\n        };\n        var argument;\n        this.parent.trigger(events.beforeExport, args, function (observedArgs) {\n            _this.gridStyle = observedArgs.style;\n            argument = observedArgs;\n        });\n        var document = new PdfDocument();\n        return { document: document, args: argument };\n    };\n    /**\n     * To destroy the pdf export module\n     * @returns void\n     * @hidden\n     */\n    /* tslint:disable-next-line:no-empty */\n    PDFExport.prototype.destroy = function () {\n    };\n    return PDFExport;\n}());\nexport { PDFExport };\n","import { KeyboardEvents, closest, addClass, isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\n/**\n * PivotView Keyboard interaction\n */\n/** @hidden */\nvar KeyboardInteraction = /** @class */ (function () {\n    /**\n     * Constructor\n     */\n    function KeyboardInteraction(parent) {\n        this.keyConfigs = {\n            tab: 'tab',\n            shiftTab: 'shift+tab',\n            enter: 'enter',\n            shiftUp: 'shift+upArrow',\n            shiftDown: 'shift+downArrow',\n            shiftLeft: 'shift+leftArrow',\n            shiftRight: 'shift+rightArrow',\n            shiftEnter: 'shift+enter',\n            ctrlEnter: 'ctrl+enter',\n            upArrow: 'upArrow',\n            downArrow: 'downArrow',\n            leftArrow: 'leftArrow',\n            rightArrow: 'rightArrow',\n            escape: 'escape',\n            ctrlShiftF: 'ctrl+shift+f'\n        };\n        this.parent = parent;\n        this.event = undefined;\n        this.parent.element.tabIndex = this.parent.element.tabIndex === -1 ? 0 : this.parent.element.tabIndex;\n        this.pivotViewKeyboardModule = new KeyboardEvents(this.parent.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n    }\n    KeyboardInteraction.prototype.keyActionHandler = function (e) {\n        switch (e.action) {\n            case 'tab':\n                this.processTab(e);\n                break;\n            case 'shiftTab':\n                this.processShiftTab(e);\n                break;\n            case 'enter':\n            case 'shiftEnter':\n            case 'ctrlEnter':\n                this.processEnter(e);\n                break;\n            case 'shiftUp':\n            case 'shiftDown':\n            case 'shiftLeft':\n            case 'shiftRight':\n            case 'upArrow':\n            case 'downArrow':\n            case 'leftArrow':\n            case 'rightArrow':\n                this.processSelection(e);\n                break;\n            case 'escape':\n                this.clearSelection();\n                break;\n            case 'ctrlShiftF':\n                this.toggleFieldList(e);\n                break;\n        }\n    };\n    KeyboardInteraction.prototype.getNextButton = function (target) {\n        var allPivotButtons = this.allpivotButtons(target);\n        removeClass(allPivotButtons, 'e-btn-focused');\n        if (this.parent.grid.element.querySelector('.' + cls.PIVOT_BUTTON_CLASS)) {\n            var len = allPivotButtons.length;\n            for (var i = 0; i < len; i++) {\n                if (allPivotButtons[i].getAttribute('data-uid') === target.getAttribute('data-uid')) {\n                    return (allPivotButtons[i + 1] ? allPivotButtons[i + 1] : target);\n                }\n            }\n        }\n        return target;\n    };\n    KeyboardInteraction.prototype.getPrevButton = function (target) {\n        var allPivotButtons = this.allpivotButtons(target);\n        removeClass(allPivotButtons, 'e-btn-focused');\n        if (this.parent.grid.element.querySelector('.' + cls.PIVOT_BUTTON_CLASS)) {\n            var len = allPivotButtons.length;\n            for (var i = 0; i < len; i++) {\n                if (allPivotButtons[i].getAttribute('data-uid') === target.getAttribute('data-uid')) {\n                    return (allPivotButtons[i - 1] ? allPivotButtons[i - 1] : target);\n                }\n            }\n        }\n        return target;\n    };\n    KeyboardInteraction.prototype.allpivotButtons = function (target) {\n        var buttons;\n        var columnFilterValueGroup = closest(target, '.' + cls.GRID_GROUPING_BAR_CLASS);\n        var rowGroup = closest(target, '.' + cls.GROUP_PIVOT_ROW);\n        var chartGroup = closest(target, '.' + cls.CHART_GROUPING_BAR_CLASS);\n        var tableAxis = target.classList.contains(cls.ROWSHEADER);\n        var chartAxis;\n        var rowAxis;\n        var columnFilterValueAxis;\n        if (columnFilterValueGroup !== null) {\n            rowAxis = columnFilterValueGroup.classList.contains(cls.GRID_GROUPING_BAR_CLASS);\n        }\n        else if (rowGroup !== null) {\n            columnFilterValueAxis = rowGroup.classList.contains(cls.GROUP_PIVOT_ROW);\n        }\n        else if (chartGroup !== null) {\n            chartAxis = chartGroup.classList.contains(cls.CHART_GROUPING_BAR_CLASS);\n        }\n        if (rowAxis || columnFilterValueAxis || tableAxis) {\n            /* tslint:disable */\n            var groupingbarButton = [].slice.call(this.parent.element.querySelector('.' + cls.GRID_GROUPING_BAR_CLASS).querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n            var headerButton = [].slice.call(this.parent.element.querySelector('.' + cls.GROUP_PIVOT_ROW).querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n            buttons = groupingbarButton.concat(headerButton);\n        }\n        else if (chartAxis) {\n            buttons = [].slice.call(this.parent.element.querySelector('.' + cls.CHART_GROUPING_BAR_CLASS).querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n        }\n        /* tslint:enable */\n        return buttons;\n    };\n    KeyboardInteraction.prototype.processTab = function (e) {\n        var target = e.target;\n        if (target && (closest(target, '.' + cls.PIVOT_BUTTON_CLASS) || target.classList.contains('e-group-row'))) {\n            if (this.parent.grid) {\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                if (target.classList.contains('e-group-row') && target.querySelector('.e-btn-focused')) {\n                    target = target.querySelector('.e-btn-focused');\n                }\n                else if (target.classList.contains('e-group-row')) {\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                    e.preventDefault();\n                    return;\n                }\n                var nextButton = this.getNextButton(target);\n                if (nextButton.getAttribute('data-uid') !== target.getAttribute('data-uid')) {\n                    if (this.parent.element.querySelector('.e-focused')) {\n                        this.parent.element.querySelector('.e-focused').setAttribute('tabindex', '-1');\n                        removeClass(this.parent.element.querySelectorAll('.e-focus'), 'e-focus');\n                        removeClass(this.parent.element.querySelectorAll('.e-focused'), 'e-focused');\n                        gridFocus.setFocusedElement(this.parent.element.querySelector('.e-headercell'));\n                        this.parent.element.querySelector('.e-headercell').setAttribute('tabindex', '0');\n                    }\n                    else {\n                        gridFocus.currentInfo.skipAction = true;\n                    }\n                    addClass([nextButton], 'e-btn-focused');\n                    nextButton.focus();\n                }\n                else {\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                }\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (!this.parent.showGroupingBar && this.parent.showFieldList &&\n            target && closest(target, '.' + cls.TOGGLE_FIELD_LIST_CLASS)) {\n            if (this.parent.grid) {\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                gridFocus.focus();\n                var element = gridFocus.getFocusedElement();\n                addClass([element], ['e-focused', 'e-focus']);\n                element.setAttribute('tabindex', '0');\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (!this.parent.showGroupingBar && !this.parent.showFieldList &&\n            target && closest(target, '.' + cls.PIVOT_VIEW_CLASS) && !closest(target, '.e-popup.e-popup-open')) {\n            if (this.parent.grid) {\n                var gridElement = closest(target, '.' + cls.PIVOT_VIEW_CLASS);\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                var rows = [].slice.call(gridElement.getElementsByTagName('tr'));\n                if (target.innerHTML === (rows[rows.length - 1]).lastChild.innerHTML) {\n                    gridFocus.currentInfo.skipAction = true;\n                }\n                else {\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                    e.preventDefault();\n                    return;\n                }\n            }\n        }\n        else if (target && closest(target, '.' + cls.GRID_TOOLBAR) && this.parent.toolbar && this.parent.toolbarModule) {\n            clearTimeout(this.timeOutObj);\n            this.timeOutObj = setTimeout(function () {\n                removeClass(closest(target, '.' + cls.GRID_TOOLBAR).querySelectorAll('.e-menu-item.e-focused'), 'e-focused');\n                if (document.activeElement && document.activeElement.classList.contains('e-menu-item')) {\n                    addClass([document.activeElement], 'e-focused');\n                }\n            });\n        }\n        else if (target.classList.contains('e-numerictextbox')) {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            gridFocus.focus();\n            var element = gridFocus.getFocusedElement();\n            removeClass([element], ['e-focused', 'e-focus']);\n            element.setAttribute('tabindex', '0');\n            e.preventDefault();\n        }\n    };\n    KeyboardInteraction.prototype.processShiftTab = function (e) {\n        var target = e.target;\n        if (target && (closest(target, '.' + cls.PIVOT_BUTTON_CLASS) || target.classList.contains('e-group-row'))) {\n            if (this.parent.grid) {\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                if (target.classList.contains('e-group-row') && target.querySelector('.e-btn-focused')) {\n                    target = target.querySelector('.e-btn-focused');\n                }\n                else if (target.classList.contains('e-group-row')) {\n                    target = this.parent.element.querySelector('.e-btn-focused') ? this.parent.element.querySelector('.e-btn-focused') :\n                        this.parent.element.querySelector('.' + cls.GRID_GROUPING_BAR_CLASS);\n                    var allPivotButtons = this.allpivotButtons(target);\n                    if (allPivotButtons.length > 0 && allPivotButtons[allPivotButtons.length - 1]) {\n                        gridFocus.currentInfo.skipAction = true;\n                        allPivotButtons[allPivotButtons.length - 1].focus();\n                        removeClass(allPivotButtons, 'e-btn-focused');\n                        addClass([allPivotButtons[allPivotButtons.length - 1]], 'e-btn-focused');\n                        e.preventDefault();\n                        return;\n                    }\n                }\n                var prevButton = this.getPrevButton(target);\n                if (prevButton.getAttribute('data-uid') !== target.getAttribute('data-uid')) {\n                    gridFocus.currentInfo.skipAction = true;\n                    prevButton.focus();\n                    e.preventDefault();\n                    return;\n                }\n            }\n        }\n        else if (target && this.parent.grid && (target.classList.contains('e-movablefirst') ||\n            (target.classList.contains('e-rowsheader') && closest(target, 'tr').getAttribute('data-uid') ===\n                this.parent.grid.element.querySelector('.e-frozencontent tr').getAttribute('data-uid')))) {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            if (target.classList.contains('e-movablefirst')) {\n                target = (this.parent.element.querySelector('.' + cls.GROUP_ROW_CLASS + ' .e-btn-focused')) ?\n                    (this.parent.element.querySelector('.' + cls.GROUP_ROW_CLASS + ' .e-btn-focused')) :\n                    (this.parent.element.querySelector('.' + cls.GROUP_ROW_CLASS));\n                var element = gridFocus.getFocusedElement();\n                removeClass([element], ['e-focused', 'e-focus']);\n            }\n            var allPivotButtons_1 = this.allpivotButtons(target);\n            if (allPivotButtons_1.length > 0) {\n                gridFocus.currentInfo.skipAction = true;\n                setTimeout(function () {\n                    allPivotButtons_1[allPivotButtons_1.length - 1].focus();\n                });\n                removeClass(allPivotButtons_1, 'e-btn-focused');\n                addClass([allPivotButtons_1[allPivotButtons_1.length - 1]], 'e-btn-focused');\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (target && closest(target, '.' + cls.GRID_TOOLBAR) &&\n            this.parent.toolbar && this.parent.toolbarModule) {\n            clearTimeout(this.timeOutObj);\n            this.timeOutObj = setTimeout(function () {\n                removeClass(closest(target, '.' + cls.GRID_TOOLBAR).querySelectorAll('.e-menu-item.e-focused'), 'e-focused');\n                if (document.activeElement && document.activeElement.classList.contains('e-menu-item')) {\n                    addClass([document.activeElement], 'e-focused');\n                }\n            });\n        }\n        else if (target.classList.contains('e-numerictextbox')) {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            gridFocus.focus();\n            var element = gridFocus.getFocusedElement();\n            removeClass([element], ['e-focused', 'e-focus']);\n            element.setAttribute('tabindex', '0');\n            e.preventDefault();\n        }\n    };\n    KeyboardInteraction.prototype.processEnter = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.GRID_CLASS)) {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            if (e.keyCode === 13 && !e.shiftKey && !e.ctrlKey) {\n                if (target.querySelector('.' + cls.ICON)) {\n                    this.event = e;\n                    target.querySelector('.' + cls.ICON).click();\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                }\n                else if (target.classList.contains('e-valuescontent')) {\n                    target.dispatchEvent(new MouseEvent('dblclick', {\n                        'view': window,\n                        'bubbles': true,\n                        'cancelable': true\n                    }));\n                    if (target.querySelector('.e-numerictextbox')) {\n                        target.click();\n                    }\n                }\n                else if (target.classList.contains('e-numerictextbox')) {\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    removeClass([element], ['e-focused', 'e-focus']);\n                }\n            }\n            else if (e.keyCode === 13 && e.shiftKey && !e.ctrlKey) {\n                if (this.parent.enableValueSorting) {\n                    this.event = e;\n                    target.click();\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                }\n            }\n            else if (e.keyCode === 13 && !e.shiftKey && e.ctrlKey) {\n                if (this.parent.hyperlinkSettings && target.querySelector('a')) {\n                    target.querySelector('a').click();\n                }\n            }\n            e.preventDefault();\n            return;\n        }\n    };\n    KeyboardInteraction.prototype.clearSelection = function () {\n        var control = this.parent;\n        /* tslint:disable */\n        removeClass(control.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR + ',.' + cls.SELECTED_BGCOLOR), [cls.SELECTED_BGCOLOR, cls.CELL_SELECTED_BGCOLOR, cls.CELL_ACTIVE_BGCOLOR]);\n        this.parent.renderModule.selected();\n        /* tslint:enable */\n    };\n    KeyboardInteraction.prototype.processSelection = function (e) {\n        var target = e.target;\n        if (this.parent.grid && this.parent.gridSettings.allowSelection && this.parent.gridSettings.selectionSettings.mode !== 'Row' &&\n            !target.classList.contains('e-numerictextbox')) {\n            var control_1 = this.parent;\n            var colIndex_1 = Number(e.target.getAttribute('aria-colIndex'));\n            var rowIndex_1 = Number(e.target.getAttribute('index'));\n            var ele_1;\n            /* tslint:disable */\n            if (target.nodeName === 'TH' || target.nodeName === 'TD') {\n                if (e.action === 'shiftUp' || e.action === 'upArrow') {\n                    ele_1 = (rowIndex_1 === 0 || colIndex_1 === 0 || (target.nodeName !== 'TH' &&\n                        control_1.renderModule.rowStartPos !== rowIndex_1)) ? null : this.getParentElement(control_1, ele_1, colIndex_1, rowIndex_1 - 1);\n                }\n                else if (e.action === 'shiftDown' || e.action === 'downArrow') {\n                    ele_1 = control_1.element.querySelector('th[aria-colindex=\"' + colIndex_1 + '\"][index=\"' + (rowIndex_1 + 1) + '\"]');\n                }\n                else if (e.action === 'shiftLeft' || e.action === 'leftArrow') {\n                    ele_1 = e.target.previousSibling;\n                }\n                else {\n                    ele_1 = e.target.nextSibling;\n                }\n            }\n            if (!isNullOrUndefined(ele_1)) {\n                if (control_1.gridSettings.selectionSettings.mode === 'Both' ? !ele_1.classList.contains(cls.ROW_CELL_CLASS) : true) {\n                    colIndex_1 = Number(ele_1.getAttribute('aria-colindex'));\n                    rowIndex_1 = Number(ele_1.getAttribute('index'));\n                    var colSpan_1 = Number(ele_1.getAttribute('aria-colspan'));\n                    control_1.clearSelection(ele_1, e, colIndex_1, rowIndex_1);\n                    var selectArgs = {\n                        cancel: false,\n                        isCellClick: true,\n                        currentCell: ele_1,\n                        data: control_1.pivotValues[rowIndex_1][colIndex_1]\n                    };\n                    control_1.trigger(events.cellSelecting, selectArgs, function (observedArgs) {\n                        if (!observedArgs.cancel) {\n                            control_1.applyColumnSelection(e, ele_1, colIndex_1, colIndex_1 + (colSpan_1 > 0 ? (colSpan_1 - 1) : 0), rowIndex_1);\n                        }\n                    });\n                }\n                else {\n                    control_1.clearSelection(ele_1, e, colIndex_1, rowIndex_1);\n                }\n            }\n            else {\n                if (e.action === 'upArrow') {\n                    ele_1 = control_1.element.querySelector('[aria-colindex=\"' + colIndex_1 + '\"][index=\"' + (rowIndex_1 - 1) + '\"]');\n                    rowIndex_1--;\n                }\n                else if (e.action === 'downArrow') {\n                    ele_1 = control_1.element.querySelector('[aria-colindex=\"' + colIndex_1 + '\"][index=\"' + (rowIndex_1 + 1) + '\"]');\n                    rowIndex_1++;\n                }\n                if (!isNullOrUndefined(ele_1)) {\n                    control_1.clearSelection(ele_1, e, colIndex_1, rowIndex_1);\n                }\n            }\n        }\n        else if (target && (e.keyCode === 37 || e.keyCode === 38) &&\n            this.parent && this.parent.showGroupingBar && this.parent.groupingBarModule && !target.classList.contains('e-numerictextbox')) {\n            if (this.parent.grid && this.parent.element.querySelector('.e-frozenheader') && this.parent.element.querySelector('.e-frozenheader').querySelectorAll('.e-focus').length > 0) {\n                removeClass(this.parent.element.querySelector('.e-frozenheader').querySelectorAll('.e-focus'), 'e-focus');\n                removeClass(this.parent.element.querySelector('.e-frozenheader').querySelectorAll('.e-focused'), 'e-focused');\n                this.parent.element.querySelector('.e-headercell').setAttribute('tabindex', '-1');\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                gridFocus.setFocusedElement(target);\n                addClass([target], ['e-focused', 'e-focus']);\n                target.setAttribute('tabindex', '0');\n                target.focus();\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (target.classList.contains('e-numerictextbox') && e.action === 'rightArrow' || e.action === 'leftArrow') {\n            target.click();\n        }\n        /* tslint:enable */\n    };\n    KeyboardInteraction.prototype.getParentElement = function (control, ele, colIndex, rowIndex) {\n        while (!ele) {\n            ele = control.element.querySelector('[aria-colindex=\"' + colIndex + '\"][index=\"' + rowIndex + '\"]');\n            colIndex--;\n        }\n        return ele;\n    };\n    KeyboardInteraction.prototype.toggleFieldList = function (e) {\n        var target = e.target;\n        if (this.parent && !this.parent.isDestroyed && this.parent.showFieldList &&\n            this.parent.pivotFieldListModule && !this.parent.pivotFieldListModule.isDestroyed &&\n            this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)) {\n            if (!this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).classList.contains(cls.ICON_HIDDEN)) {\n                this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).click();\n                e.preventDefault();\n                return;\n            }\n            else if (this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).classList.contains(cls.ICON_HIDDEN) &&\n                this.parent.pivotFieldListModule.dialogRenderer && this.parent.pivotFieldListModule.dialogRenderer.fieldListDialog &&\n                !this.parent.pivotFieldListModule.dialogRenderer.fieldListDialog.isDestroyed) {\n                this.parent.pivotFieldListModule.dialogRenderer.fieldListDialog.hide();\n            }\n        }\n    };\n    /**\n     * To destroy the keyboard module.\n     * @return {void}\n     * @private\n     */\n    KeyboardInteraction.prototype.destroy = function () {\n        if (this.pivotViewKeyboardModule) {\n            this.pivotViewKeyboardModule.destroy();\n        }\n        else {\n            return;\n        }\n    };\n    return KeyboardInteraction;\n}());\nexport { KeyboardInteraction };\n","import { createElement, remove } from '@syncfusion/ej2-base';\nimport { addClass, removeClass } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport { ContextMenu } from '@syncfusion/ej2-navigations';\n/**\n * Module to render Pivot button\n */\n/** @hidden */\nvar PivotContextMenu = /** @class */ (function () {\n    /** Constructor for render module */\n    function PivotContextMenu(parent) {\n        this.parent = parent;\n        this.parent.contextMenuModule = this;\n    }\n    /**\n     * Initialize the pivot table rendering\n     * @returns void\n     * @private\n     */\n    PivotContextMenu.prototype.render = function () {\n        this.renderContextMenu();\n    };\n    PivotContextMenu.prototype.renderContextMenu = function () {\n        var menuItems = [\n            { text: this.parent.localeObj.getConstant('addToFilter'), id: this.parent.element.id + '_Filters' },\n            { text: this.parent.localeObj.getConstant('addToRow'), id: this.parent.element.id + '_Rows' },\n            { text: this.parent.localeObj.getConstant('addToColumn'), id: this.parent.element.id + '_Columns' },\n            { text: this.parent.localeObj.getConstant('addToValue'), id: this.parent.element.id + '_Values' }\n        ];\n        var menuOptions = {\n            cssClass: cls.PIVOT_CONTEXT_MENU_CLASS,\n            items: menuItems,\n            enableRtl: this.parent.enableRtl,\n            beforeOpen: this.onBeforeMenuOpen.bind(this),\n            select: this.onSelectContextMenu.bind(this)\n        };\n        var cMenu = createElement('ul', {\n            id: this.parent.element.id + '_PivotContextMenu'\n        });\n        this.parent.element.appendChild(cMenu);\n        this.menuObj = new ContextMenu(menuOptions);\n        this.menuObj.isStringTemplate = true;\n        this.menuObj.appendTo(cMenu);\n    };\n    PivotContextMenu.prototype.onBeforeMenuOpen = function (args) {\n        var items = [].slice.call(args.element.querySelectorAll('li'));\n        var fieldType = this.parent.dataType === 'olap' ? this.fieldElement.getAttribute('data-type') :\n            this.fieldElement.querySelector('.' + cls.PIVOT_BUTTON_CONTENT_CLASS).getAttribute('data-type');\n        removeClass(items, cls.MENU_DISABLE);\n        if (fieldType === 'CalculatedField' || fieldType === 'isMeasureFieldsAvail') {\n            for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n                var item = items_1[_i];\n                if (item.textContent !== this.parent.localeObj.getConstant('addToValue')) {\n                    addClass([item], cls.MENU_DISABLE);\n                }\n            }\n        }\n        else if (fieldType === 'isMeasureAvail') {\n            for (var _a = 0, items_2 = items; _a < items_2.length; _a++) {\n                var item = items_2[_a];\n                if (item.textContent !== this.parent.localeObj.getConstant('addToRow') &&\n                    item.textContent !== this.parent.localeObj.getConstant('addToColumn')) {\n                    addClass([item], cls.MENU_DISABLE);\n                }\n            }\n        }\n        else if (this.parent.dataType === 'olap') {\n            for (var _b = 0, items_3 = items; _b < items_3.length; _b++) {\n                var item = items_3[_b];\n                if (item.textContent === this.parent.localeObj.getConstant('addToValue')) {\n                    addClass([item], cls.MENU_DISABLE);\n                    break;\n                }\n            }\n        }\n    };\n    PivotContextMenu.prototype.onSelectContextMenu = function (menu) {\n        if (menu.element.textContent !== null) {\n            var fieldName = this.fieldElement.getAttribute('data-uid');\n            var dropClass = menu.item.id.replace(this.parent.element.id + '_', '').toLowerCase();\n            this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ? this.parent :\n                (this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent);\n            this.parent.pivotCommon.dataSourceUpdate.btnElement = this.fieldElement;\n            this.parent.pivotCommon.dataSourceUpdate.updateDataSource(fieldName, dropClass, -1);\n            this.parent.updateDataSource(true);\n            this.fieldElement = undefined;\n        }\n    };\n    /**\n     * To destroy the pivot button event listener\n     * @return {void}\n     * @hidden\n     */\n    PivotContextMenu.prototype.destroy = function () {\n        if (!this.parent.isDestroyed) {\n            return;\n        }\n        if (this.menuObj && !this.menuObj.isDestroyed) {\n            this.menuObj.destroy();\n            if (document.querySelector('#' + this.parent.element.id + '_PivotContextMenu')) {\n                remove(document.querySelector('#' + this.parent.element.id + '_PivotContextMenu'));\n            }\n        }\n        else {\n            return;\n        }\n    };\n    return PivotContextMenu;\n}());\nexport { PivotContextMenu };\n","import { EventHandler, setStyleAttribute, isBlazor, } from '@syncfusion/ej2-base';\nimport { contentReady } from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\n/**\n * `VirtualScroll` module is used to handle scrolling behavior.\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for PivotView scrolling.\n     * @hidden\n     */\n    function VirtualScroll(parent) {\n        this.previousValues = { top: 0, left: 0 };\n        this.frozenPreviousValues = { top: 0, left: 0 };\n        this.eventType = '';\n        this.parent = parent;\n        this.engineModule = this.parent.dataType === 'pivot' ? this.parent.engineModule : this.parent.olapEngineModule;\n        this.addInternalEvents();\n    }\n    /**\n     * It returns the Module name.\n     * @returns string\n     * @hidden\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualscroll';\n    };\n    VirtualScroll.prototype.addInternalEvents = function () {\n        this.parent.on(contentReady, this.wireEvents, this);\n    };\n    VirtualScroll.prototype.wireEvents = function () {\n        var mCont = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV);\n        var fCont = this.parent.element.querySelector('.' + cls.FROZENCONTENT_DIV);\n        var mHdr = this.parent.element.querySelector('.' + cls.MOVABLEHEADER_DIV);\n        EventHandler.clearEvents(mCont);\n        EventHandler.clearEvents(fCont);\n        if (this.engineModule) {\n            EventHandler.add(mCont, 'scroll touchmove pointermove', this.onHorizondalScroll(mHdr, mCont, fCont), this);\n            EventHandler.add(mCont, 'scroll wheel touchmove pointermove keyup keydown', this.onVerticalScroll(fCont, mCont), this);\n            EventHandler.add(mCont, 'mouseup touchend', this.common(mHdr, mCont, fCont), this);\n            EventHandler.add(fCont, 'wheel', this.onWheelScroll(mCont, fCont), this);\n            EventHandler.add(fCont, 'touchstart pointerdown', this.setPageXY(), this);\n            EventHandler.add(fCont, 'touchmove pointermove', this.onTouchScroll(mHdr, mCont, fCont), this);\n            EventHandler.add(mHdr, 'touchstart pointerdown', this.setPageXY(), this);\n            EventHandler.add(mHdr, 'touchmove pointermove', this.onTouchScroll(mHdr, mCont, fCont), this);\n        }\n        this.parent.grid.isPreventScrollEvent = true;\n    };\n    VirtualScroll.prototype.onWheelScroll = function (mCont, fCont) {\n        var _this = this;\n        var element = mCont;\n        return function (e) {\n            var top = element.scrollTop + (e.deltaMode === 1 ? e.deltaY * 30 : e.deltaY);\n            if (_this.frozenPreviousValues.top === top) {\n                return;\n            }\n            e.preventDefault();\n            fCont.scrollTop = top;\n            element.scrollTop = top;\n            _this.frozenPreviousValues.top = top;\n            _this.eventType = e.type;\n        };\n    };\n    VirtualScroll.prototype.getPointXY = function (e) {\n        var pageXY = { x: 0, y: 0 };\n        if (!(e.touches && e.touches.length)) {\n            pageXY.x = e.pageX;\n            pageXY.y = e.pageY;\n        }\n        else {\n            pageXY.x = e.touches[0].pageX;\n            pageXY.y = e.touches[0].pageY;\n        }\n        return pageXY;\n    };\n    VirtualScroll.prototype.onTouchScroll = function (mHdr, mCont, fCont) {\n        var _this = this;\n        var element = mCont;\n        return function (e) {\n            if (e.pointerType === 'mouse') {\n                return;\n            }\n            var pageXY = _this.getPointXY(e);\n            var top = element.scrollTop + (_this.pageXY.y - pageXY.y);\n            var left = element.scrollLeft + (_this.pageXY.x - pageXY.x);\n            if (_this.parent.element.querySelector('.' + cls.HEADERCONTENT).contains(e.target)) {\n                if (_this.frozenPreviousValues.left === left || left < 0) {\n                    return;\n                }\n                mHdr.scrollLeft = left;\n                element.scrollLeft = left;\n                _this.pageXY.x = pageXY.x;\n                _this.frozenPreviousValues.left = left;\n            }\n            else {\n                if (_this.frozenPreviousValues.top === top || top < 0) {\n                    return;\n                }\n                fCont.scrollTop = top;\n                element.scrollTop = top;\n                _this.pageXY.y = pageXY.y;\n                _this.frozenPreviousValues.top = top;\n            }\n            _this.eventType = e.type;\n        };\n    };\n    VirtualScroll.prototype.update = function (mHdr, mCont, top, left, e) {\n        var _this = this;\n        this.parent.isScrolling = true;\n        var engine = this.parent.dataType === 'pivot' ? this.parent.engineModule : this.parent.olapEngineModule;\n        if (isBlazor() || this.parent.dataSourceSettings.mode === 'Server') {\n            engine.pageSettings = this.parent.pageSettings;\n        }\n        if (this.parent.pageSettings && engine.pageSettings) {\n            if (this.direction === 'vertical') {\n                var rowValues_1 = this.parent.dataType === 'pivot' ?\n                    (this.parent.dataSourceSettings.valueAxis === 'row' ? this.parent.dataSourceSettings.values.length : 1) : 1;\n                var exactSize_1 = (this.parent.pageSettings.rowSize * rowValues_1 * this.parent.gridSettings.rowHeight);\n                var section = Math.ceil(top / exactSize_1);\n                if ((this.parent.scrollPosObject.vertical === section ||\n                    engine.pageSettings.rowSize >= engine.rowCount)) {\n                    this.parent.hideWaitingPopup();\n                    return;\n                }\n                this.parent.showWaitingPopup();\n                this.parent.scrollPosObject.vertical = section;\n                engine.pageSettings.rowCurrentPage = section > 1 ? section : 1;\n                var rowStartPos_1 = 0;\n                if (this.parent.dataType === 'pivot') {\n                    if (isBlazor()) {\n                        var pivot_1 = this.parent;\n                        var sfBlazor = 'sfBlazor';\n                        /* tslint:disable-next-line */\n                        var dataSourceSettings = window[sfBlazor].\n                            copyWithoutCircularReferences([pivot_1.dataSourceSettings], pivot_1.dataSourceSettings);\n                        /* tslint:disable-next-line */\n                        var pageSettings = window[sfBlazor].\n                            copyWithoutCircularReferences([engine.pageSettings], engine.pageSettings);\n                        /* tslint:disable-next-line */\n                        pivot_1.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'generateGridData', {\n                            'dataSourceSettings': dataSourceSettings,\n                            'pageSettings': pageSettings, 'isScrolling': true\n                        }).then(\n                        /* tslint:disable-next-line */\n                        function (data) {\n                            pivot_1.updateBlazorData(data, pivot_1);\n                            pivot_1.pivotValues = engine.pivotValues;\n                            rowStartPos_1 = _this.parent.engineModule.rowStartPos;\n                            var exactPage = Math.ceil(rowStartPos_1 / (pivot_1.pageSettings.rowSize * rowValues_1));\n                            var pos = exactSize_1 * exactPage -\n                                (engine.rowFirstLvl * rowValues_1 * pivot_1.gridSettings.rowHeight);\n                            pivot_1.scrollPosObject.verticalSection = pos;\n                        });\n                    }\n                    else if (this.parent.dataSourceSettings.mode === 'Server') {\n                        this.parent.getEngine('onScroll', null, null, null, null, null, null);\n                    }\n                    else {\n                        this.parent.engineModule.generateGridData(this.parent.dataSourceSettings, this.parent.engineModule.headerCollection);\n                        rowStartPos_1 = this.parent.engineModule.rowStartPos;\n                    }\n                }\n                else {\n                    this.parent.olapEngineModule.scrollPage('scroll');\n                    rowStartPos_1 = this.parent.olapEngineModule.pageRowStartPos;\n                }\n                if (!(isBlazor() && this.parent.dataType === 'pivot')) {\n                    this.parent.pivotValues = engine.pivotValues;\n                    var exactPage = Math.ceil(rowStartPos_1 / (this.parent.pageSettings.rowSize * rowValues_1));\n                    var pos = exactSize_1 * exactPage -\n                        (engine.rowFirstLvl * rowValues_1 * this.parent.gridSettings.rowHeight);\n                    this.parent.scrollPosObject.verticalSection = pos;\n                }\n            }\n            else {\n                var colValues_1 = this.parent.dataType === 'pivot' ?\n                    (this.parent.dataSourceSettings.valueAxis === 'column' ? this.parent.dataSourceSettings.values.length : 1) : 1;\n                var exactSize_2 = (this.parent.pageSettings.columnSize *\n                    colValues_1 * this.parent.gridSettings.columnWidth);\n                var section = Math.ceil(left / exactSize_2);\n                if (this.parent.scrollPosObject.horizontal === section) {\n                    this.parent.hideWaitingPopup();\n                    return;\n                }\n                this.parent.showWaitingPopup();\n                var pivot = this.parent;\n                pivot.scrollPosObject.horizontal = section;\n                engine.pageSettings.columnCurrentPage = section > 1 ? section : 1;\n                var colStartPos_1 = 0;\n                if (pivot.dataType === 'pivot') {\n                    if (isBlazor()) {\n                        var sfBlazor = 'sfBlazor';\n                        var pivot_2 = this.parent;\n                        /* tslint:disable-next-line */\n                        var pageSettings = window[sfBlazor].\n                            copyWithoutCircularReferences([engine.pageSettings], engine.pageSettings);\n                        /* tslint:disable-next-line */\n                        var dataSourceSettings = window[sfBlazor].\n                            copyWithoutCircularReferences([pivot_2.dataSourceSettings], pivot_2.dataSourceSettings);\n                        /* tslint:disable-next-line */\n                        pivot_2.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'generateGridData', {\n                            'dataSourceSettings': dataSourceSettings,\n                            'pageSettings': pageSettings, 'isScrolling': true\n                        }).then(\n                        /* tslint:disable-next-line */\n                        function (data) {\n                            pivot_2.updateBlazorData(data, pivot_2);\n                            colStartPos_1 = pivot_2.engineModule.colStartPos;\n                            pivot_2.pivotValues = engine.pivotValues;\n                            var exactPage = Math.ceil(colStartPos_1 / (pivot_2.pageSettings.columnSize * colValues_1));\n                            var pos = exactSize_2 * exactPage - (engine.colFirstLvl *\n                                colValues_1 * pivot_2.gridSettings.columnWidth);\n                            pivot_2.scrollPosObject.horizontalSection = pos;\n                        });\n                    }\n                    else if (this.parent.dataSourceSettings.mode === 'Server') {\n                        this.parent.getEngine('onScroll', null, null, null, null, null, null);\n                    }\n                    else {\n                        pivot.engineModule.generateGridData(pivot.dataSourceSettings, pivot.engineModule.headerCollection);\n                        colStartPos_1 = pivot.engineModule.colStartPos;\n                    }\n                }\n                else {\n                    pivot.olapEngineModule.scrollPage('scroll');\n                    colStartPos_1 = pivot.olapEngineModule.pageColStartPos;\n                }\n                if (!(isBlazor() && pivot.dataType === 'pivot')) {\n                    pivot.pivotValues = engine.pivotValues;\n                    var exactPage = Math.ceil(colStartPos_1 / (pivot.pageSettings.columnSize * colValues_1));\n                    var pos = exactSize_2 * exactPage - (engine.colFirstLvl *\n                        colValues_1 * pivot.gridSettings.columnWidth);\n                    pivot.scrollPosObject.horizontalSection = pos;\n                }\n            }\n        }\n    };\n    VirtualScroll.prototype.setPageXY = function () {\n        var _this = this;\n        return function (e) {\n            if (e.pointerType === 'mouse') {\n                return;\n            }\n            _this.pageXY = _this.getPointXY(e);\n        };\n    };\n    VirtualScroll.prototype.common = function (mHdr, mCont, fCont) {\n        var _this = this;\n        return function (e) {\n            _this.update(mHdr, mCont, mCont.scrollTop * _this.parent.verticalScrollScale, mCont.scrollLeft * _this.parent.horizontalScrollScale, e);\n        };\n    };\n    VirtualScroll.prototype.onHorizondalScroll = function (mHdr, mCont, fCont) {\n        var _this = this;\n        /* tslint:disable-next-line */\n        var timeOutObj;\n        return function (e) {\n            var left = mCont.scrollLeft * _this.parent.horizontalScrollScale;\n            if (e.type === 'wheel' || e.type === 'touchmove' || _this.eventType === 'wheel' || _this.eventType === 'touchmove') {\n                clearTimeout(timeOutObj);\n                /* tslint:disable */\n                timeOutObj = setTimeout(function () {\n                    left = e.type === 'touchmove' ? mCont.scrollLeft : left;\n                    _this.update(mHdr, mCont, mCont.scrollTop * _this.parent.verticalScrollScale, left, e);\n                }, 300);\n            }\n            if (_this.previousValues.left === left) {\n                fCont.scrollTop = mCont.scrollTop;\n                return;\n            }\n            _this.parent.scrollDirection = _this.direction = 'horizondal';\n            var horiOffset = -((left - _this.parent.scrollPosObject.horizontalSection - mCont.scrollLeft));\n            var vertiOffset = mCont.querySelector('.' + cls.TABLE).style.transform.split(',').length > 1 ?\n                mCont.querySelector('.' + cls.TABLE).style.transform.split(',')[1].trim() : \"0px)\";\n            if (mCont.scrollLeft < _this.parent.scrollerBrowserLimit) {\n                setStyleAttribute(mCont.querySelector('.e-table'), {\n                    transform: 'translate(' + horiOffset + 'px,' + vertiOffset\n                });\n                setStyleAttribute(mHdr.querySelector('.e-table'), {\n                    transform: 'translate(' + horiOffset + 'px,' + 0 + 'px)'\n                });\n            }\n            var excessMove = _this.parent.scrollPosObject.horizontalSection > left ?\n                -(_this.parent.scrollPosObject.horizontalSection - left) : ((left + mHdr.offsetWidth) -\n                (_this.parent.scrollPosObject.horizontalSection + mCont.querySelector('.e-table').offsetWidth));\n            var notLastPage = Math.ceil(_this.parent.scrollPosObject.horizontalSection / _this.parent.horizontalScrollScale) <\n                _this.parent.scrollerBrowserLimit;\n            if (_this.parent.scrollPosObject.horizontalSection > left ? true : (excessMove > 1 && notLastPage)) {\n                //  showSpinner(this.parent.element);\n                if (left > mHdr.clientWidth) {\n                    if (_this.parent.scrollPosObject.left < 1) {\n                        _this.parent.scrollPosObject.left = mHdr.clientWidth;\n                    }\n                    _this.parent.scrollPosObject.left = _this.parent.scrollPosObject.left - 50;\n                    excessMove = _this.parent.scrollPosObject.horizontalSection > left ?\n                        (excessMove - _this.parent.scrollPosObject.left) : (excessMove + _this.parent.scrollPosObject.left);\n                }\n                else {\n                    excessMove = -_this.parent.scrollPosObject.horizontalSection;\n                }\n                horiOffset = -((left - (_this.parent.scrollPosObject.horizontalSection + excessMove) - mCont.scrollLeft));\n                var vWidth = (_this.parent.gridSettings.columnWidth * _this.engineModule.columnCount\n                    - _this.parent.grid.columns[0].width);\n                if (vWidth > _this.parent.scrollerBrowserLimit) {\n                    _this.parent.horizontalScrollScale = vWidth / _this.parent.scrollerBrowserLimit;\n                    vWidth = _this.parent.scrollerBrowserLimit;\n                }\n                if (horiOffset > vWidth && horiOffset > left) {\n                    horiOffset = left;\n                    excessMove = 0;\n                }\n                setStyleAttribute(mCont.querySelector('.e-table'), {\n                    transform: 'translate(' + horiOffset + 'px,' + vertiOffset\n                });\n                setStyleAttribute(mHdr.querySelector('.e-table'), {\n                    transform: 'translate(' + horiOffset + 'px,' + 0 + 'px)'\n                });\n                _this.parent.scrollPosObject.horizontalSection = _this.parent.scrollPosObject.horizontalSection + excessMove;\n            }\n            _this.previousValues.left = left;\n            _this.frozenPreviousValues.left = left;\n            _this.eventType = '';\n            mHdr.scrollLeft = mCont.scrollLeft;\n        };\n    };\n    VirtualScroll.prototype.onVerticalScroll = function (fCont, mCont) {\n        var _this = this;\n        var timeOutObj;\n        return function (e) {\n            var top = mCont.scrollTop * _this.parent.verticalScrollScale;\n            if (e.type === 'wheel' || e.type === 'touchmove' || _this.eventType === 'wheel' || _this.eventType === 'touchmove' || e.type === 'keyup' || e.type === 'keydown') {\n                clearTimeout(timeOutObj);\n                timeOutObj = setTimeout(function () {\n                    _this.update(null, mCont, mCont.scrollTop * _this.parent.verticalScrollScale, mCont.scrollLeft * _this.parent.horizontalScrollScale, e);\n                }, 300);\n            }\n            /* tslint:enable */\n            if (_this.previousValues.top === top) {\n                return;\n            }\n            _this.parent.scrollDirection = _this.direction = 'vertical';\n            var vertiOffset = -((top - _this.parent.scrollPosObject.verticalSection - mCont.scrollTop));\n            var horiOffset = mCont.querySelector('.' + cls.TABLE).style.transform.split(',')[0].trim();\n            if (mCont.scrollTop < _this.parent.scrollerBrowserLimit) {\n                setStyleAttribute(fCont.querySelector('.e-table'), {\n                    transform: 'translate(' + 0 + 'px,' + vertiOffset + 'px)'\n                });\n                setStyleAttribute(mCont.querySelector('.e-table'), {\n                    transform: horiOffset + ',' + vertiOffset + 'px)'\n                });\n            }\n            var excessMove = _this.parent.scrollPosObject.verticalSection > top ?\n                -(_this.parent.scrollPosObject.verticalSection - top) : ((top + fCont.clientHeight) -\n                (_this.parent.scrollPosObject.verticalSection + fCont.querySelector('.e-table').offsetHeight));\n            var notLastPage = Math.ceil(_this.parent.scrollPosObject.verticalSection / _this.parent.verticalScrollScale) <\n                _this.parent.scrollerBrowserLimit;\n            if (_this.parent.scrollPosObject.verticalSection > top ? true : (excessMove > 1 && notLastPage)) {\n                //  showSpinner(this.parent.element);\n                if (top > fCont.clientHeight) {\n                    if (_this.parent.scrollPosObject.top < 1) {\n                        _this.parent.scrollPosObject.top = fCont.clientHeight;\n                    }\n                    _this.parent.scrollPosObject.top = _this.parent.scrollPosObject.top - 50;\n                    excessMove = _this.parent.scrollPosObject.verticalSection > top ?\n                        (excessMove - _this.parent.scrollPosObject.top) : (excessMove + _this.parent.scrollPosObject.top);\n                }\n                else {\n                    excessMove = -_this.parent.scrollPosObject.verticalSection;\n                }\n                var movableTable = _this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV).querySelector('.e-table');\n                vertiOffset = -((top - (_this.parent.scrollPosObject.verticalSection + excessMove) - mCont.scrollTop));\n                var vHeight = (_this.parent.gridSettings.rowHeight * _this.engineModule.rowCount + 0.1\n                    - movableTable.clientHeight);\n                if (vHeight > _this.parent.scrollerBrowserLimit) {\n                    _this.parent.verticalScrollScale = vHeight / _this.parent.scrollerBrowserLimit;\n                    vHeight = _this.parent.scrollerBrowserLimit;\n                }\n                if (vertiOffset > vHeight && vertiOffset > top) {\n                    vertiOffset = top;\n                    excessMove = 0;\n                }\n                setStyleAttribute(fCont.querySelector('.e-table'), {\n                    transform: 'translate(' + 0 + 'px,' + vertiOffset + 'px)'\n                });\n                setStyleAttribute(mCont.querySelector('.e-table'), {\n                    transform: horiOffset + ',' + vertiOffset + 'px)'\n                });\n                _this.parent.scrollPosObject.verticalSection = _this.parent.scrollPosObject.verticalSection + excessMove;\n            }\n            _this.previousValues.top = top;\n            _this.frozenPreviousValues.top = top;\n            _this.eventType = '';\n            fCont.scrollTop = mCont.scrollTop;\n            mCont.scrollTop = fCont.scrollTop;\n        };\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeInternalEvents = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(contentReady, this.wireEvents);\n    };\n    /**\n     * To destroy the virtualscrolling event listener\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeInternalEvents();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\n","import { Dialog } from '@syncfusion/ej2-popups';\nimport { createElement, setStyleAttribute, remove, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport { Grid, Reorder, Resize, ColumnChooser, Toolbar } from '@syncfusion/ej2-grids';\nimport { VirtualScroll, Selection, Edit, Page, CommandColumn } from '@syncfusion/ej2-grids';\nimport * as events from '../../common/base/constant';\nimport { NumericTextBox } from '@syncfusion/ej2-inputs';\n/**\n * `DrillThroughDialog` module to create drill-through dialog.\n */\n/** @hidden */\nvar DrillThroughDialog = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function DrillThroughDialog(parent) {\n        /** @hidden */\n        this.indexString = [];\n        this.clonedData = [];\n        this.isUpdated = false;\n        this.gridIndexObjects = {};\n        this.gridData = [];\n        this.parent = parent;\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n    }\n    DrillThroughDialog.prototype.frameHeaderWithKeys = function (header) {\n        var keys = Object.keys(header);\n        var keyPos = 0;\n        var framedHeader = {};\n        while (keyPos < keys.length) {\n            framedHeader[keys[keyPos]] = header[keys[keyPos]];\n            keyPos++;\n        }\n        return framedHeader;\n    };\n    /** @hidden */\n    DrillThroughDialog.prototype.showDrillThroughDialog = function (eventArgs) {\n        var _this = this;\n        this.gridData = eventArgs.rawData;\n        for (var i = 0; i < eventArgs.rawData.length; i++) {\n            this.clonedData.push(this.frameHeaderWithKeys(eventArgs.rawData[i]));\n        }\n        var actualText = eventArgs.currentCell.actualText.toString();\n        if (this.engine.fieldList[actualText].aggregateType !== 'Count' && this.parent.editSettings.allowInlineEditing &&\n            this.parent.editSettings.allowEditing && eventArgs.rawData.length === 1 &&\n            this.engine.fieldList[actualText].aggregateType !== 'DistinctCount' && typeof (eventArgs.rawData[0][actualText]) !== 'string') {\n            this.editCell(eventArgs);\n        }\n        else {\n            this.removeDrillThroughDialog();\n            var drillThroughDialog = createElement('div', {\n                id: this.parent.element.id + '_drillthrough',\n                className: cls.DRILLTHROUGH_DIALOG\n            });\n            this.parent.element.appendChild(drillThroughDialog);\n            this.dialogPopUp = new Dialog({\n                animationSettings: { effect: 'Fade' },\n                allowDragging: false,\n                header: this.parent.localeObj.getConstant('details'),\n                content: this.createDrillThroughGrid(eventArgs),\n                beforeOpen: function () {\n                    /* tslint:disable:align */\n                    _this.drillThroughGrid.setProperties({\n                        dataSource: _this.parent.editSettings.allowEditing ?\n                            _this.dataWithPrimarykey(eventArgs) : _this.gridData,\n                        height: !_this.parent.editSettings.allowEditing ? 300 : 220,\n                        rowHeight: _this.parent.gridSettings.rowHeight\n                    }, false);\n                },\n                beforeClose: function () {\n                    if (_this.parent.editSettings.allowEditing && _this.isUpdated) {\n                        if (_this.parent.dataSourceSettings.type === 'CSV') {\n                            _this.updateData(_this.drillThroughGrid.dataSource);\n                        }\n                        var gridIndexObjectsValue = Object.keys(_this.gridIndexObjects);\n                        var previousPosition = [];\n                        for (var _i = 0, gridIndexObjectsValue_1 = gridIndexObjectsValue; _i < gridIndexObjectsValue_1.length; _i++) {\n                            var value = gridIndexObjectsValue_1[_i];\n                            previousPosition.push(_this.gridIndexObjects[value]);\n                        }\n                        var count = Object.keys(_this.gridIndexObjects).length;\n                        var addItems = [];\n                        var prevItems = [];\n                        var index = 0;\n                        /* tslint:disable:no-string-literal */\n                        for (var _a = 0, _b = _this.drillThroughGrid.dataSource; _a < _b.length; _a++) {\n                            var item = _b[_a];\n                            if (isNullOrUndefined(item['__index']) || item['__index'] === '') {\n                                for (var _c = 0, _d = _this.engine.fields; _c < _d.length; _c++) {\n                                    var field = _d[_c];\n                                    if (isNullOrUndefined(item[field])) {\n                                        delete item[field];\n                                    }\n                                }\n                                delete item['__index'];\n                                addItems.push(item);\n                            }\n                            else if (count > 0) {\n                                if (isBlazor() && _this.parent.editSettings.allowCommandColumns) {\n                                    _this.parent.engineModule.data[Number(item['__index'])] = item;\n                                }\n                                delete _this.gridIndexObjects[item['__index'].toString()];\n                                prevItems.push(item);\n                                count--;\n                            }\n                            if (_this.parent.dataSourceSettings.mode === 'Server') {\n                                if (item['__index']) {\n                                    delete item['__index'];\n                                }\n                                if (_this.gridData[index]['__index']) {\n                                    delete _this.gridData[index]['__index'];\n                                }\n                            }\n                            index++;\n                        }\n                        count = 0;\n                        if (isBlazor() && _this.parent.enableVirtualization) {\n                            var currModule_1 = _this;\n                            /* tslint:disable:no-any */\n                            currModule_1.parent.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'updateRawData', {\n                                'AddItem': addItems, 'RemoveItem': currModule_1.gridIndexObjects, 'ModifiedItem': currModule_1.gridData\n                            }).then(function (data) {\n                                currModule_1.parent.updateBlazorData(data, currModule_1.parent);\n                                currModule_1.parent.allowServerDataBinding = false;\n                                currModule_1.parent.setProperties({ pivotValues: currModule_1.parent.engineModule.pivotValues }, true);\n                                delete currModule_1.parent.bulkChanges.pivotValues;\n                                currModule_1.parent.allowServerDataBinding = true;\n                                currModule_1.isUpdated = false;\n                                currModule_1.gridIndexObjects = {};\n                            });\n                            /* tslint:enable:no-any */\n                        }\n                        else if (_this.parent.dataSourceSettings.mode === 'Server') {\n                            var gridIndex = [];\n                            var keys = Object.keys(_this.gridIndexObjects);\n                            for (var len = 0; len < keys.length; len++) {\n                                delete _this.parent.drillThroughValue.indexObject[_this.gridIndexObjects[keys[len]]];\n                                gridIndex.push({ Key: keys[len], Value: _this.gridIndexObjects[keys[len]] });\n                            }\n                            var indexObject = [];\n                            keys = Object.keys(_this.parent.drillThroughValue.indexObject);\n                            for (var len = 0; len < keys.length; len++) {\n                                indexObject.push({ Key: keys[len], Value: _this.parent.drillThroughValue.indexObject[keys[len]] });\n                            }\n                            _this.parent.getEngine('updateRawData', null, null, null, null, null, null, null, { 'addedData': addItems, 'removedData': gridIndex, 'updatedData': prevItems, indexObject: indexObject });\n                        }\n                        else {\n                            var items = [];\n                            var data = (_this.parent.allowDataCompression && _this.parent.enableVirtualization) ?\n                                _this.parent.engineModule.actualData : _this.parent.engineModule.data;\n                            for (var _e = 0, _f = data; _e < _f.length; _e++) {\n                                var item = _f[_e];\n                                delete item['__index'];\n                                if (_this.gridIndexObjects[count.toString()] === undefined) {\n                                    items.push(item);\n                                }\n                                count++;\n                            }\n                            /* tslint:enable:no-string-literal */\n                            items = items.concat(addItems);\n                            var eventArgs_1 = {\n                                currentData: _this.drillThroughGrid.dataSource,\n                                previousData: _this.clonedData,\n                                previousPosition: previousPosition,\n                                cancel: false\n                            };\n                            _this.parent.trigger(events.editCompleted, eventArgs_1);\n                            if (!eventArgs_1.cancel) {\n                                _this.parent.setProperties({ dataSourceSettings: { dataSource: items } }, true);\n                                _this.engine.updateGridData(_this.parent.dataSourceSettings);\n                                _this.parent.pivotValues = _this.engine.pivotValues;\n                            }\n                        }\n                    }\n                    if (!(isBlazor() && _this.parent.enableVirtualization)) {\n                        _this.isUpdated = false;\n                        _this.gridIndexObjects = {};\n                    }\n                },\n                isModal: true,\n                visible: true,\n                showCloseIcon: true,\n                locale: this.parent.locale,\n                enableRtl: this.parent.enableRtl,\n                width: this.parent.isAdaptive ? '100%' : '60%',\n                position: { X: 'center', Y: 'center' },\n                closeOnEscape: true,\n                target: document.body,\n                close: this.removeDrillThroughDialog.bind(this)\n            });\n            this.dialogPopUp.isStringTemplate = true;\n            this.dialogPopUp.appendTo(drillThroughDialog);\n            // this.dialogPopUp.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('details');\n            setStyleAttribute(this.dialogPopUp.element, { 'visibility': 'visible' });\n        }\n    };\n    DrillThroughDialog.prototype.editCell = function (eventArgs) {\n        var _this = this;\n        var gridResize = this.parent.gridSettings.allowResizing;\n        var actualText = eventArgs.currentCell.actualText.toString();\n        var indexObject = Number(Object.keys(eventArgs.currentCell.indexObject));\n        eventArgs.currentTarget.firstElementChild.style.display = 'none';\n        var cellValue = Number(eventArgs.rawData[0][actualText]);\n        var previousData = this.frameHeaderWithKeys(eventArgs.rawData[eventArgs.rawData.length - 1]);\n        var currentData = eventArgs.rawData[eventArgs.rawData.length - 1];\n        if (eventArgs.currentCell.actualText in previousData) {\n            currentData[eventArgs.currentCell.actualText] = eventArgs.currentCell.actualValue;\n        }\n        this.numericTextBox = new NumericTextBox({\n            value: cellValue,\n            enableRtl: this.parent.enableRtl,\n            enabled: true,\n            format: '####.##',\n            locale: this.parent.locale,\n            change: function () {\n                var textBoxValue = _this.numericTextBox.value;\n                var indexValue = eventArgs.currentCell.indexObject[indexObject];\n                eventArgs.rawData[0][actualText] = textBoxValue;\n                _this.parent.engineModule.data[indexValue] = eventArgs.rawData[0];\n            },\n            blur: function () {\n                var eventArgs = {\n                    currentData: currentData,\n                    previousData: previousData,\n                    previousPosition: currentData.index,\n                    cancel: false\n                };\n                _this.parent.trigger(events.editCompleted, eventArgs);\n                if (!eventArgs.cancel) {\n                    _this.parent.setProperties({ dataSourceSettings: { dataSource: _this.parent.engineModule.data } }, true);\n                    _this.engine.updateGridData(_this.parent.dataSourceSettings);\n                    _this.parent.pivotValues = _this.engine.pivotValues;\n                    _this.parent.gridSettings.allowResizing = gridResize;\n                }\n            },\n        });\n        var textBoxElement = createElement('input', {\n            id: this.parent.element.id + '_inputbox',\n        });\n        eventArgs.currentTarget.appendChild(textBoxElement);\n        this.numericTextBox.appendTo(textBoxElement);\n        eventArgs.currentCell.value = this.numericTextBox.value;\n        this.numericTextBox.focusIn();\n        this.parent.gridSettings.allowResizing = false;\n    };\n    /* tslint:disable:typedef no-any */\n    DrillThroughDialog.prototype.updateData = function (dataSource) {\n        var dataPos = 0;\n        var data = (this.parent.allowDataCompression && this.parent.enableVirtualization) ?\n            this.parent.engineModule.actualData : this.parent.engineModule.data;\n        while (dataPos < dataSource.length) {\n            var fields = Object.keys(dataSource[dataPos]);\n            var keyPos = 0;\n            var framedSet = [];\n            while (keyPos < fields.length) {\n                if (!isNullOrUndefined(this.parent.engineModule.fieldKeys[fields[keyPos]])) {\n                    framedSet[this.parent.engineModule.fieldKeys[fields[keyPos]]] = dataSource[dataPos][fields[keyPos]];\n                }\n                keyPos++;\n            }\n            data[dataSource[dataPos]['__index']] = framedSet;\n            dataPos++;\n        }\n        if (this.parent.allowDataCompression && this.parent.enableVirtualization) {\n            this.parent.engineModule.actualData = data;\n        }\n        else {\n            this.parent.engineModule.data = data;\n        }\n    };\n    DrillThroughDialog.prototype.removeDrillThroughDialog = function () {\n        if (this.dialogPopUp && !this.dialogPopUp.isDestroyed) {\n            this.dialogPopUp.destroy();\n        }\n        var dialogElement = document.getElementById(this.parent.element.id + '_drillthrough');\n        if (dialogElement) {\n            remove(dialogElement);\n        }\n        if (document.getElementById(this.parent.element.id + '_drillthroughgrid_ccdlg')) {\n            remove(document.getElementById(this.parent.element.id + '_drillthroughgrid_ccdlg'));\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    DrillThroughDialog.prototype.createDrillThroughGrid = function (eventArgs) {\n        var drillThroughBody = createElement('div', { id: this.parent.element.id + '_drillthroughbody', className: cls.DRILLTHROUGH_BODY_CLASS });\n        var drillThroughBodyHeader = createElement('div', {\n            id: this.parent.element.id +\n                '_drillthroughbodyheader', className: cls.DRILLTHROUGH_BODY_HEADER_CONTAINER_CLASS\n        });\n        if (eventArgs.rowHeaders !== '') {\n            drillThroughBodyHeader.innerHTML = '<span class=' +\n                cls.DRILLTHROUGH_BODY_HEADER_COMMON_CLASS + '><span class=' + cls.DRILLTHROUGH_BODY_HEADER_CLASS + '>' +\n                this.parent.localeObj.getConstant('row') + '</span> :<span class=' +\n                cls.DRILLTHROUGH_BODY_HEADER_VALUE_CLASS + '>' + eventArgs.rowHeaders + '</span></span>';\n        }\n        if (eventArgs.columnHeaders !== '') {\n            drillThroughBodyHeader.innerHTML = drillThroughBodyHeader.innerHTML + '<span class=' +\n                cls.DRILLTHROUGH_BODY_HEADER_COMMON_CLASS + '><span class=' +\n                cls.DRILLTHROUGH_BODY_HEADER_CLASS + '>' + this.parent.localeObj.getConstant('column') +\n                '</span> :<span class=' + cls.DRILLTHROUGH_BODY_HEADER_VALUE_CLASS + '>' +\n                eventArgs.columnHeaders + '</span></span>';\n        }\n        if (eventArgs.value !== '') {\n            var measure = eventArgs.value.split('(')[0];\n            var value = eventArgs.value.split('(')[1].split(')')[0];\n            if (value !== '0') {\n                drillThroughBodyHeader.innerHTML = drillThroughBodyHeader.innerHTML + '<span class=' +\n                    cls.DRILLTHROUGH_BODY_HEADER_COMMON_CLASS + '><span class=' +\n                    cls.DRILLTHROUGH_BODY_HEADER_CLASS + '>' +\n                    measure + '</span> :<span class=' + cls.DRILLTHROUGH_BODY_HEADER_VALUE_CLASS + '>' + value + '</span></span>';\n            }\n        }\n        var toolbarItems = ['ColumnChooser'];\n        if (this.parent.editSettings.allowEditing) {\n            if (this.parent.editSettings.allowCommandColumns) {\n                toolbarItems = ['ColumnChooser', 'Add'];\n            }\n            else if (this.parent.editSettings.mode === 'Batch') {\n                toolbarItems = ['ColumnChooser', 'Add', 'Delete', 'Update', 'Cancel'];\n            }\n            else if (this.parent.editSettings.mode === 'Dialog') {\n                toolbarItems = ['ColumnChooser', 'Add', 'Edit', 'Delete'];\n            }\n            else {\n                toolbarItems = ['ColumnChooser', 'Add', 'Edit', 'Delete', 'Update', 'Cancel'];\n            }\n        }\n        var drillThroughGrid = createElement('div', { id: this.parent.element.id + '_drillthroughgrid', className: cls.DRILLTHROUGH_GRID_CLASS });\n        Grid.Inject(Selection, Reorder, Resize, Toolbar, ColumnChooser);\n        this.drillThroughGrid = new Grid({\n            gridLines: 'Default',\n            allowResizing: true,\n            allowReordering: true,\n            showColumnChooser: true,\n            enableHover: false,\n            toolbar: toolbarItems,\n            columns: eventArgs.gridColumns,\n            locale: this.parent.locale,\n            enableRtl: this.parent.enableRtl,\n            enableVirtualization: !this.parent.editSettings.allowEditing,\n            allowPaging: this.parent.editSettings.allowEditing\n        });\n        if (isBlazor()) {\n            /* tslint:disable-next-line */\n            this.drillThroughGrid['isJsComponent'] = true;\n        }\n        if (this.parent.dataType === 'olap') {\n            this.formatData();\n        }\n        var dialogModule = this;\n        this.parent.trigger(events.beginDrillThrough, {\n            cellInfo: eventArgs,\n            gridObj: isBlazor() ? undefined : this.drillThroughGrid,\n            type: 'editing'\n        });\n        if (this.parent.editSettings.allowEditing) {\n            Grid.Inject(Edit, Page);\n            this.drillThroughGrid.editSettings = this.parent.editSettings;\n            if (this.parent.editSettings.allowCommandColumns) {\n                this.drillThroughGrid.editSettings.mode = 'Normal';\n                this.drillThroughGrid.editSettings.allowEditOnDblClick = false;\n                Grid.Inject(CommandColumn);\n                this.drillThroughGrid.columns.push({\n                    headerText: this.parent.localeObj.getConstant('manageRecords'), width: 160, showInColumnChooser: false,\n                    commands: [\n                        { type: 'Edit', buttonOption: { iconCss: ' e-icons e-edit', cssClass: 'e-flat' } },\n                        { type: 'Delete', buttonOption: { iconCss: 'e-icons e-delete', cssClass: 'e-flat' } },\n                        { type: 'Save', buttonOption: { iconCss: 'e-icons e-update', cssClass: 'e-flat' } },\n                        { type: 'Cancel', buttonOption: { iconCss: 'e-icons e-cancel-icon', cssClass: 'e-flat' } }\n                    ]\n                });\n            }\n            else {\n                this.drillThroughGrid.editSettings.allowEditOnDblClick = this.parent.editSettings.allowEditOnDblClick;\n            }\n            /* tslint:disable:align */\n            this.drillThroughGrid.columns.push({\n                field: '__index', visible: false, isPrimaryKey: true, type: 'string', showInColumnChooser: false\n            });\n            /* tslint:disable-next-line:no-any */\n            this.drillThroughGrid.actionComplete = function (args) {\n                if (args.requestType === 'batchsave' || args.requestType === 'save' || args.requestType === 'delete') {\n                    dialogModule.isUpdated = true;\n                }\n                if ((dialogModule.drillThroughGrid.editSettings.mode === 'Normal' && args.requestType === 'save' &&\n                    dialogModule.drillThroughGrid.element.querySelectorAll('.e-tbar-btn:hover').length > 0 &&\n                    !dialogModule.parent.editSettings.allowCommandColumns) || args.requestType === 'batchsave') {\n                    dialogModule.dialogPopUp.hide();\n                }\n            };\n            this.drillThroughGrid.beforeBatchSave = function () {\n                dialogModule.isUpdated = true;\n            };\n            /* tslint:enable:align */\n        }\n        else {\n            Grid.Inject(VirtualScroll);\n        }\n        document.body.appendChild(drillThroughGrid);\n        this.drillThroughGrid.isStringTemplate = true;\n        this.drillThroughGrid.appendTo(drillThroughGrid);\n        drillThroughBody.appendChild(drillThroughBodyHeader);\n        drillThroughBody.appendChild(drillThroughGrid);\n        return drillThroughBody;\n    };\n    /** @hidden */\n    DrillThroughDialog.prototype.frameGridColumns = function (rawData) {\n        var keys = this.parent.dataType === 'olap' ? rawData[0] ? Object.keys(rawData[0]) : [] :\n            Object.keys(this.engine.fieldList);\n        var columns = [];\n        if (this.parent.dataType === 'olap') {\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                columns.push({\n                    field: key.replace(/_x005B_|_x0020_|_x005D_|_x0024_/g, '').replace('].[', '').split('.').reverse().join(''),\n                    headerText: key.replace(/_x005B_|_x005D_|_x0024_/g, '').replace(/_x0020_/g, ' ').\n                        replace('].[', '').split('.').reverse().join('.'),\n                    width: 120,\n                    visible: true,\n                    validationRules: { required: true },\n                    type: 'string'\n                });\n            }\n        }\n        else {\n            for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n                var key = keys_2[_a];\n                if (this.engine.fieldList[key].aggregateType !== 'CalculatedField') {\n                    var editType = '';\n                    if (this.engine.fieldList[key].type === 'number') {\n                        editType = 'numericedit';\n                    }\n                    else if (this.engine.fieldList[key].type === 'date') {\n                        editType = 'datepickeredit';\n                    }\n                    else {\n                        editType = 'defaultedit';\n                    }\n                    columns.push({\n                        field: key,\n                        headerText: this.engine.fieldList[key].caption,\n                        width: 120,\n                        visible: this.engine.fieldList[key].isSelected,\n                        validationRules: { required: true },\n                        editType: editType,\n                        type: 'string'\n                    });\n                }\n            }\n        }\n        return columns;\n    };\n    DrillThroughDialog.prototype.formatData = function () {\n        var index = 0;\n        while (index < this.gridData.length) {\n            var data = this.gridData[index];\n            var keys = Object.keys(this.gridData[index]);\n            var newData = {};\n            var i = 0;\n            while (i < keys.length) {\n                var key = keys[i].replace(/_x005B_|_x0020_|_x005D_|_x0024_/g, '').replace('].[', '').split('.').reverse().join('');\n                newData[key] = data[keys[i]];\n                i++;\n            }\n            this.gridData[index] = newData;\n            index++;\n        }\n    };\n    DrillThroughDialog.prototype.dataWithPrimarykey = function (eventArgs) {\n        var indexString = this.indexString.length > 0 ? this.indexString : Object.keys(eventArgs.currentCell.indexObject);\n        var rawData = this.gridData;\n        var count = 0;\n        for (var _i = 0, rawData_1 = rawData; _i < rawData_1.length; _i++) {\n            var item = rawData_1[_i];\n            /* tslint:disable-next-line:no-string-literal */\n            item['__index'] = indexString[count];\n            this.gridIndexObjects[indexString[count].toString()] = Number(indexString[count]);\n            count++;\n        }\n        return rawData;\n    };\n    return DrillThroughDialog;\n}());\nexport { DrillThroughDialog };\n","import { contentReady } from '../../common/base/constant';\nimport * as events from '../../common/base/constant';\nimport { DrillThroughDialog } from '../../common/popups/drillthrough-dialog';\nimport { EventHandler, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\n/**\n * `DrillThrough` module.\n */\nvar DrillThrough = /** @class */ (function () {\n    /**\n     * Constructor.\n     * @hidden\n     */\n    function DrillThrough(parent) {\n        this.parent = parent;\n        this.drillThroughDialog = new DrillThroughDialog(this.parent);\n        this.addInternalEvents();\n    }\n    /**\n     * It returns the Module name.\n     * @returns string\n     * @hidden\n     */\n    DrillThrough.prototype.getModuleName = function () {\n        return 'drillthrough';\n    };\n    DrillThrough.prototype.addInternalEvents = function () {\n        this.parent.on(contentReady, this.wireEvents, this);\n    };\n    DrillThrough.prototype.wireEvents = function () {\n        this.unWireEvents();\n        EventHandler.add(this.parent.element, 'dblclick', this.mouseClickHandler, this);\n    };\n    DrillThrough.prototype.unWireEvents = function () {\n        EventHandler.remove(this.parent.element, 'dblclick', this.mouseClickHandler);\n    };\n    DrillThrough.prototype.mouseClickHandler = function (e) {\n        var target = e.target;\n        var ele = null;\n        if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-cellvalue') ||\n            target.classList.contains('e-headercelldiv')) {\n            ele = target.parentElement;\n        }\n        else if (target.classList.contains('e-headercell') || target.classList.contains('e-rowcell')) {\n            ele = target;\n        }\n        else if (target.classList.contains('e-headertext')) {\n            ele = target.parentElement.parentElement;\n        }\n        if (ele) {\n            if (this.parent.allowDrillThrough && ele.classList.contains('e-valuescontent') || this.parent.editSettings.allowEditing) {\n                var colIndex = Number(ele.getAttribute('aria-colindex'));\n                var rowIndex = Number(ele.getAttribute('index'));\n                this.executeDrillThrough(this.parent.pivotValues[rowIndex][colIndex], rowIndex, colIndex, ele);\n            }\n        }\n    };\n    /** @hidden */\n    DrillThrough.prototype.executeDrillThrough = function (pivotValue, rowIndex, colIndex, element) {\n        this.parent.drillThroughElement = element;\n        this.parent.drillThroughValue = pivotValue;\n        var engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        var valueCaption = '';\n        var aggType = '';\n        var rawData = [];\n        if (pivotValue.rowHeaders !== undefined && pivotValue.columnHeaders !== undefined && !isNullOrUndefined(pivotValue.value)) {\n            if (this.parent.dataType === 'olap') {\n                var tupleInfo = void 0;\n                if (this.parent.dataSourceSettings.valueAxis === 'row') {\n                    tupleInfo = engine.tupRowInfo[pivotValue.rowOrdinal];\n                }\n                else {\n                    tupleInfo = engine.tupColumnInfo[pivotValue.colOrdinal];\n                }\n                var measureName = tupleInfo ?\n                    engine.getUniqueName(tupleInfo.measureName) : pivotValue.actualText;\n                if (engine.fieldList[measureName] && engine.fieldList[measureName].isCalculatedField) {\n                    this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('drillError'));\n                    return;\n                }\n                valueCaption = engine.fieldList[measureName || pivotValue.actualText].caption;\n                aggType = engine.fieldList[measureName || pivotValue.actualText].aggregateType;\n                this.parent.olapEngineModule.getDrillThroughData(pivotValue, this.parent.maxRowsInDrillThrough);\n                try {\n                    rawData = JSON.parse(engine.gridJSON);\n                }\n                catch (exception) {\n                    this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), engine.gridJSON);\n                    return;\n                }\n            }\n            else {\n                valueCaption = engine.fieldList[pivotValue.actualText.toString()] ?\n                    engine.fieldList[pivotValue.actualText.toString()].caption : pivotValue.actualText.toString();\n                aggType = engine.fieldList[pivotValue.actualText] ? engine.fieldList[pivotValue.actualText].aggregateType : '';\n                var currModule_1 = this;\n                if (isBlazor() && this.parent.enableVirtualization) {\n                    /* tslint:disable:no-any */\n                    currModule_1.parent.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'fetchRawData', { 'RowIndex': rowIndex, 'ColumnIndex': colIndex }).then(function (data) {\n                        rawData = JSON.parse(data.rawData);\n                        var parsedObj = JSON.parse(data.indexObject);\n                        var indexObject = {};\n                        for (var len = 0; len < parsedObj.length; len++) {\n                            indexObject[parsedObj[len].Key] = parsedObj[len].Value;\n                        }\n                        pivotValue.indexObject = indexObject;\n                        currModule_1.triggerDialog(valueCaption, aggType, rawData, pivotValue, element);\n                        /* tslint:enable:no-any */\n                    });\n                }\n                else if (this.parent.dataSourceSettings.mode === 'Server') {\n                    this.parent.getEngine('fetchRawData', null, null, null, null, null, null, { rowIndex: rowIndex, columnIndex: colIndex });\n                }\n                else {\n                    if (this.parent.enableVirtualization && this.parent.allowDataCompression) {\n                        var indexArray = Object.keys(pivotValue.indexObject);\n                        this.drillThroughDialog.indexString = [];\n                        for (var _i = 0, indexArray_1 = indexArray; _i < indexArray_1.length; _i++) {\n                            var cIndex = indexArray_1[_i];\n                            for (var _a = 0, _b = this.parent.engineModule.groupRawIndex[Number(cIndex)]; _a < _b.length; _a++) {\n                                var aIndex = _b[_a];\n                                rawData.push(this.parent.engineModule.actualData[aIndex]);\n                                this.drillThroughDialog.indexString.push(aIndex.toString());\n                            }\n                        }\n                    }\n                    else {\n                        var indexArray = Object.keys(pivotValue.indexObject);\n                        for (var _c = 0, indexArray_2 = indexArray; _c < indexArray_2.length; _c++) {\n                            var index = indexArray_2[_c];\n                            rawData.push(this.parent.engineModule.data[Number(index)]);\n                        }\n                    }\n                }\n            }\n            if (!(isBlazor() && this.parent.enableVirtualization) && this.parent.dataSourceSettings.mode !== 'Server') {\n                this.triggerDialog(valueCaption, aggType, rawData, pivotValue, element);\n            }\n        }\n    };\n    /* tslint:disable:typedef no-any */\n    DrillThrough.prototype.frameData = function (eventArgs) {\n        var keyPos = 0;\n        var dataPos = 0;\n        var data = [];\n        while (dataPos < eventArgs.rawData.length) {\n            var framedHeader = {};\n            while (keyPos < eventArgs.gridColumns.length) {\n                framedHeader[eventArgs.gridColumns[keyPos].field] = this.parent.dataSourceSettings.mode === 'Server' ?\n                    eventArgs.rawData[dataPos][this.parent.engineModule.fields.indexOf(eventArgs.gridColumns[keyPos].field) !== -1 ? this.parent.engineModule.fields.indexOf(eventArgs.gridColumns[keyPos].field) : 0] :\n                    eventArgs.rawData[dataPos][this.parent.engineModule.fieldKeys[eventArgs.gridColumns[keyPos].field]];\n                keyPos++;\n            }\n            data.push(framedHeader);\n            dataPos++;\n            keyPos = 0;\n        }\n        eventArgs.rawData = data;\n        return eventArgs;\n    };\n    /** @hidden */\n    DrillThrough.prototype.triggerDialog = function (valueCaption, aggType, rawData, pivotValue, element) {\n        var valuetText = aggType === 'CalculatedField' ? valueCaption.toString() : aggType !== '' ?\n            (this.parent.localeObj.getConstant(aggType) + ' ' + this.parent.localeObj.getConstant('of') + ' ' + valueCaption) :\n            valueCaption;\n        var eventArgs = {\n            currentTarget: element,\n            currentCell: pivotValue,\n            rawData: rawData,\n            rowHeaders: pivotValue.rowHeaders === '' ? '' : pivotValue.rowHeaders.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).join(' - '),\n            columnHeaders: pivotValue.columnHeaders === '' ? '' : pivotValue.columnHeaders.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).join(' - '),\n            value: valuetText + '(' + pivotValue.formattedText + ')',\n            gridColumns: this.drillThroughDialog.frameGridColumns(rawData),\n            cancel: false\n        };\n        if (this.parent.dataSourceSettings.type === 'CSV') {\n            eventArgs = this.frameData(eventArgs);\n        }\n        var drillThrough = this;\n        var gridColumns = eventArgs.gridColumns;\n        this.parent.trigger(events.drillThrough, eventArgs, function (observedArgs) {\n            if (isBlazor()) {\n                for (var i = 0; i < observedArgs.gridColumns.length; i++) {\n                    if (gridColumns[i].field === observedArgs.gridColumns[i].field) {\n                        gridColumns[i].field = observedArgs.gridColumns[i].field;\n                        gridColumns[i].editType = observedArgs.gridColumns[i].editType;\n                        gridColumns[i].headerText = observedArgs.gridColumns[i].headerText;\n                        gridColumns[i].type = observedArgs.gridColumns[i].type;\n                        gridColumns[i].validationRules = observedArgs.gridColumns[i].validationRules;\n                        gridColumns[i].visible = observedArgs.gridColumns[i].visible;\n                        gridColumns[i].width = observedArgs.gridColumns[i].width;\n                    }\n                }\n                observedArgs.gridColumns = gridColumns;\n            }\n            if (!eventArgs.cancel) {\n                drillThrough.drillThroughDialog.showDrillThroughDialog(observedArgs);\n            }\n        });\n    };\n    return DrillThrough;\n}());\nexport { DrillThrough };\n","import * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { Chart, ColumnSeries, LineSeries, Legend, Tooltip, Category, AreaSeries, Selection, StripLine, DataLabel } from '@syncfusion/ej2-charts';\nimport { AccumulationChart, PieSeries, FunnelSeries, PyramidSeries } from '@syncfusion/ej2-charts';\nimport { SplineAreaSeries, MultiColoredLineSeries, RangeAreaSeries, StackingAreaSeries, StepAreaSeries } from '@syncfusion/ej2-charts';\nimport { MultiColoredAreaSeries, SplineSeries, StepLineSeries, AccumulationLegend, AccumulationTooltip } from '@syncfusion/ej2-charts';\nimport { StackingColumnSeries, RangeColumnSeries, BarSeries, StackingBarSeries, ScatterSeries } from '@syncfusion/ej2-charts';\nimport { RadarSeries } from '@syncfusion/ej2-charts';\nimport { ScrollBar, Zoom, PolarSeries } from '@syncfusion/ej2-charts';\nimport { ParetoSeries, Export, Crosshair, MultiLevelLabel } from '@syncfusion/ej2-charts';\nimport { BubbleSeries } from '@syncfusion/ej2-charts';\nimport { AccumulationDataLabel } from '@syncfusion/ej2-charts';\nimport { createElement, remove, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../../base/util';\nimport { ContextMenu } from '@syncfusion/ej2-navigations';\nvar PivotChart = /** @class */ (function () {\n    function PivotChart() {\n        this.headerColl = {};\n        this.maxLevel = 0;\n        this.columnGroupObject = {};\n        this.fieldPosition = [];\n        this.measurePos = -1;\n        this.measuresNames = {};\n        this.accumulationType = ['Pie', 'Pyramid', 'Doughnut', 'Funnel'];\n        /* tslint:enable:no-empty */\n    }\n    /**\n     * Get component name.\n     * @returns string\n     * @private\n     */\n    PivotChart.prototype.getModuleName = function () {\n        return 'pivotchart';\n    };\n    /* tslint:disable */\n    PivotChart.prototype.loadChart = function (parent, chartSettings) {\n        this.parent = parent;\n        this.measuresNames = {};\n        this.engineModule = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        this.dataSourceSettings = this.parent.dataSourceSettings;\n        this.chartSettings = chartSettings;\n        var isDataAvail = parent.dataType === 'olap' ?\n            (parent.olapEngineModule.tupColumnInfo.length > 0 && parent.olapEngineModule.tupRowInfo.length > 0 &&\n                (!isNullOrUndefined(parent.olapEngineModule.colMeasurePos) || !isNullOrUndefined(parent.olapEngineModule.rowMeasurePos)))\n            : parent.dataSourceSettings.values.length > 0;\n        if (isDataAvail) {\n            if (!this.parent.chart && (this.parent.element.querySelector('.e-chart') || this.parent.element.querySelector('.e-accumulationchart'))) {\n                remove(this.parent.element.querySelector('#' + this.parent.element.id + '_chart'));\n            }\n            if (this.chartSettings.enableMultiAxis && this.accumulationType.indexOf(chartSettings.chartSeries.type) < 0) {\n                this.measureList = this.dataSourceSettings.values.map(function (item) { return item.name; });\n            }\n            else {\n                this.measureList = [chartSettings.value === '' ? this.dataSourceSettings.values[0].name : chartSettings.value];\n            }\n            for (var _i = 0, _a = this.dataSourceSettings.values; _i < _a.length; _i++) {\n                var field = _a[_i];\n                var fieldName = field.name.replace(/[^A-Z0-9]+/ig, '_');\n                this.measuresNames[field.name] = fieldName;\n                this.measuresNames[fieldName] = field.name;\n            }\n        }\n        else if (this.parent.chart) {\n            if (this.parent.element.querySelector('.e-chart')) {\n                this.parent.chart.series = [];\n                this.parent.chart.rows = [];\n                this.parent.chart.primaryXAxis.title = '';\n                this.parent.chart.primaryYAxis.title = '';\n                this.parent.chart.primaryXAxis.multiLevelLabels = [];\n                this.parent.chart.primaryYAxis.multiLevelLabels = [];\n                if (this.parent.chart.axes.length > 0) {\n                    this.parent.chart.axes[0].title = '';\n                }\n                this.parent.chart.primaryXAxis.zoomFactor = 1;\n            }\n            else if (this.parent.element.querySelector('.e-accumulationchart')) {\n                this.parent.chart.series[0].dataSource = [{}];\n                this.parent.chart.series[0].dataLabel = {};\n            }\n            this.parent.chart.refresh();\n            return;\n        }\n        else {\n            if (!this.parent.element.querySelector('#' + this.parent.element.id + '_chart')) {\n                if (this.parent.displayOption.view === 'Both') {\n                    this.parent.displayOption.primary === 'Chart' ?\n                        (this.parent.element.insertBefore((createElement('div', {\n                            className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n                        })), this.parent.element.querySelector('.' + cls.GRID_CLASS))) :\n                        (this.parent.element.appendChild(createElement('div', {\n                            className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n                        })));\n                }\n                else {\n                    this.parent.element.appendChild(createElement('div', {\n                        className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n                    }));\n                }\n                var width = this.parent.width.toString();\n                if (this.parent.showToolbar && this.parent.grid) {\n                    width = this.parent.getGridWidthAsNumber().toString();\n                }\n                var height = this.getChartHeight();\n                var tmpChart = void 0;\n                if (this.chartSettings && this.chartSettings.chartSeries && this.accumulationType.indexOf(this.chartSettings.chartSeries.type) > -1) {\n                    tmpChart = new AccumulationChart({ width: width, height: height });\n                }\n                else {\n                    tmpChart = new Chart({ width: width, height: height });\n                }\n                tmpChart.appendTo('#' + this.parent.element.id + '_chart');\n                if (this.parent.showToolbar) {\n                    if (this.parent.displayOption.view === 'Both' && this.parent.currentView === 'Chart') {\n                        this.parent.grid.element.style.display = 'none';\n                    }\n                    if (this.parent.currentView !== 'Chart') {\n                        this.parent.element.querySelector('#' + this.parent.element.id + '_chart').style.display = 'none';\n                    }\n                }\n            }\n            this.parent.notify(events.contentReady, {});\n            return;\n        }\n        this.columnGroupObject = {};\n        this.accEmptyPoint = false;\n        var pivotValues = this.engineModule.pivotValues;\n        this.currentMeasure = (chartSettings.enableMultiAxis && this.accumulationType.indexOf(chartSettings.chartSeries.type) < 0) ? this.measureList[0] :\n            (((chartSettings.value === '' || this.dataSourceSettings.values.filter(function (item) {\n                return item.name === chartSettings.value;\n            }).length === 0) && this.dataSourceSettings.values.length > 0) ? this.dataSourceSettings.values[0].name : chartSettings.value);\n        var totColIndex = this.getColumnTotalIndex(pivotValues);\n        var rKeys = Object.keys(pivotValues);\n        var prevLevel;\n        var firstLevelUName;\n        var levelCollection = {};\n        var prevCell;\n        var integratedLevel = 0;\n        var indexCount = -0.5;\n        this.headerColl = {};\n        this.maxLevel = 0;\n        var levelPos = {};\n        var lastHierarchy = '';\n        var lastDimension = '';\n        var memberCell;\n        var drillDimension = '';\n        var isDrill = false;\n        if (this.parent.dataType === 'olap') {\n            levelPos = this.groupHierarchyWithLevels(pivotValues);\n            lastHierarchy = this.fieldPosition[this.fieldPosition.length - 1];\n            lastDimension = (this.measurePos === (this.fieldPosition.length - 1) && this.fieldPosition.length > 1) ?\n                this.fieldPosition[this.fieldPosition.length - 2] : lastHierarchy;\n            drillDimension = lastDimension;\n        }\n        for (var _b = 0, rKeys_1 = rKeys; _b < rKeys_1.length; _b++) {\n            var rKey = rKeys_1[_b];\n            var rowIndex = Number(rKey);\n            if (!isNullOrUndefined(pivotValues[rowIndex])) {\n                if (pivotValues[rowIndex][0] && pivotValues[rowIndex][0].axis === 'row' &&\n                    (this.dataSourceSettings.rows.length === 0 ? true : pivotValues[rowIndex][0].type !== 'grand sum')) {\n                    var firstRowCell = pivotValues[rowIndex][0];\n                    var tupInfo = this.parent.dataType === 'olap' ?\n                        this.engineModule.tupRowInfo[firstRowCell.ordinal] : undefined;\n                    var fieldPos = -1;\n                    var currrentLevel = firstRowCell.level;\n                    if (this.parent.dataType === 'olap') {\n                        isDrill = firstRowCell.hierarchy === '[Measures]' ? isDrill : this.isAttributeDrill(firstRowCell.hierarchy, tupInfo.drillInfo);\n                        drillDimension = drillDimension === lastDimension ? lastDimension : (firstRowCell.hierarchy === '[Measures]' || firstRowCell.isNamedSet || (this.engineModule.fieldList[firstRowCell.hierarchy] && !this.engineModule.fieldList[firstRowCell.hierarchy].hasAllMember)) ? lastDimension : drillDimension;\n                        fieldPos = tupInfo.drillInfo.length - 1;\n                        if (firstRowCell.memberType !== 3 && (tupInfo.measureName ?\n                            tupInfo.measureName === this.dataSourceSettings.values[0].name : true)) {\n                            firstLevelUName = firstLevelUName === undefined ? firstRowCell.levelUniqueName : firstLevelUName;\n                            integratedLevel = firstLevelUName === firstRowCell.levelUniqueName ? 0 : integratedLevel;\n                            levelCollection = integratedLevel === 0 ? {} : levelCollection;\n                            integratedLevel = (prevCell && firstLevelUName !== firstRowCell.levelUniqueName) ?\n                                (prevCell.hierarchy === firstRowCell.hierarchy ?\n                                    (integratedLevel + (firstRowCell.level - prevCell.level)) :\n                                    (isNullOrUndefined(levelCollection[firstRowCell.levelUniqueName]) ?\n                                        (levelPos[firstRowCell.hierarchy].start) :\n                                        levelCollection[firstRowCell.levelUniqueName])) : integratedLevel;\n                            levelCollection[firstRowCell.levelUniqueName] = integratedLevel;\n                            currrentLevel = integratedLevel;\n                            indexCount += (prevCell && drillDimension === prevCell.hierarchy && !(prevCell.isDrilled && prevCell.hasChild)) ? 1 : 0;\n                            drillDimension = isDrill ? firstRowCell.hierarchy : lastDimension;\n                            prevLevel = integratedLevel;\n                            prevCell = firstRowCell;\n                        }\n                    }\n                    else if (firstRowCell.type !== 'value') {\n                        if (!(prevLevel === undefined || prevLevel < currrentLevel)) {\n                            indexCount++;\n                        }\n                        prevLevel = currrentLevel;\n                    }\n                    this.maxLevel = currrentLevel > this.maxLevel ? currrentLevel : this.maxLevel;\n                    var name_1 = this.parent.dataType === 'olap' ? firstRowCell.formattedText :\n                        (firstRowCell.actualText ? firstRowCell.actualText.toString() : firstRowCell.formattedText.toString());\n                    var text = firstRowCell.formattedText ? firstRowCell.formattedText.toString() : name_1;\n                    var caption = (firstRowCell.hasChild && !firstRowCell.isNamedSet) ?\n                        ((firstRowCell.isDrilled ? ' - ' : ' + ') + text) : text;\n                    var levelName = tupInfo ? tupInfo.uNameCollection : firstRowCell.valueSort.levelName.toString();\n                    var cellInfo = {\n                        name: name_1,\n                        text: caption,\n                        hasChild: firstRowCell.hasChild,\n                        isDrilled: firstRowCell.isDrilled,\n                        levelName: levelName,\n                        level: currrentLevel,\n                        fieldName: firstRowCell.valueSort.axis ? firstRowCell.valueSort.axis.toString() : '',\n                        rowIndex: rowIndex,\n                        colIndex: 0,\n                        cell: firstRowCell\n                    };\n                    if (this.parent.dataType === 'olap' ? firstRowCell.memberType !== 3 : firstRowCell.type !== 'value') {\n                        if (this.headerColl[indexCount]) {\n                            this.headerColl[indexCount][currrentLevel] = cellInfo;\n                        }\n                        else {\n                            this.headerColl[indexCount] = {};\n                            this.headerColl[indexCount][currrentLevel] = cellInfo;\n                        }\n                    }\n                    var rows = pivotValues[rowIndex];\n                    var cKeys = Object.keys(rows);\n                    var prevMemberCell = void 0;\n                    if (this.parent.dataType === 'olap') {\n                        memberCell = firstRowCell.memberType !== 3 ? firstRowCell : memberCell;\n                    }\n                    else {\n                        memberCell = firstRowCell.type !== 'value' ? firstRowCell : memberCell;\n                    }\n                    for (var _c = 0, cKeys_1 = cKeys; _c < cKeys_1.length; _c++) {\n                        var cKey = cKeys_1[_c];\n                        var cellIndex = Number(cKey);\n                        var cell = pivotValues[rowIndex][cellIndex];\n                        var measureAllow = cell.rowHeaders === '' ? this.dataSourceSettings.rows.length === 0 : true;\n                        var actualText = (this.parent.dataType === 'olap' && tupInfo && tupInfo.measureName) ?\n                            tupInfo.measureName : cell.actualText;\n                        if (!cell.isGrandSum && !totColIndex[cell.colIndex] && cell.axis === 'value' && firstRowCell.type !== 'header' &&\n                            actualText !== '' && ((chartSettings.enableMultiAxis && this.accumulationType.indexOf(chartSettings.chartSeries.type) < 0) ? true : actualText === this.currentMeasure)) {\n                            if (isNullOrUndefined(firstRowCell.members)) {\n                                firstRowCell.members = [];\n                            }\n                            if (this.parent.dataType === 'olap' ? ((lastHierarchy === firstRowCell.hierarchy || isDrill) ?\n                                ((firstRowCell.memberType === 3 && prevMemberCell) ?\n                                    (fieldPos === this.measurePos ? (prevMemberCell.isDrilled && prevMemberCell.hasChild) : true) : (firstRowCell.isDrilled && firstRowCell.hasChild)) : true)\n                                : (((firstRowCell.type === 'value' && prevMemberCell) ?\n                                    prevMemberCell.members.length > 0 : firstRowCell.members.length > 0) || !measureAllow)) {\n                                break;\n                            }\n                            var colHeaders = this.parent.dataType === 'olap' ? cell.columnHeaders.toString().split(/~~|::/).join(' - ')\n                                : cell.columnHeaders.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).join(' - ');\n                            var rowHeaders = this.parent.dataType === 'olap' ? cell.rowHeaders.toString().split(/~~|::/).join(' - ')\n                                : cell.rowHeaders.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).join(' - ');\n                            var columnSeries = colHeaders + ' | ' + actualText;\n                            var yValue = (this.parent.dataType === 'pivot' ? (this.engineModule.aggregatedValueMatrix[rowIndex] &&\n                                !isNullOrUndefined(this.engineModule.aggregatedValueMatrix[rowIndex][cellIndex])) ?\n                                Number(this.engineModule.aggregatedValueMatrix[rowIndex][cellIndex]) : Number(cell.value) : Number(cell.value));\n                            if (yValue === 0) {\n                                this.accEmptyPoint = true;\n                            }\n                            if (this.columnGroupObject[columnSeries]) {\n                                this.columnGroupObject[columnSeries].push({\n                                    x: this.dataSourceSettings.rows.length === 0 ? firstRowCell.formattedText : rowHeaders,\n                                    y: yValue,\n                                    rIndex: rowIndex,\n                                    cIndex: cellIndex\n                                });\n                            }\n                            else {\n                                this.columnGroupObject[columnSeries] = [{\n                                        x: this.dataSourceSettings.rows.length === 0 ? firstRowCell.formattedText : rowHeaders,\n                                        y: yValue,\n                                        rIndex: rowIndex,\n                                        cIndex: cellIndex\n                                    }];\n                            }\n                        }\n                        prevMemberCell = memberCell;\n                    }\n                }\n            }\n        }\n        this.refreshChart();\n    };\n    /**\n     * Refreshing chart based on the updated chartSettings.\n     * @returns void\n     */\n    PivotChart.prototype.refreshChart = function () {\n        this.chartSeries = [];\n        var columnKeys = Object.keys(this.columnGroupObject);\n        this.persistSettings = JSON.parse(this.parent.getPersistData()).chartSettings;\n        var delimiter = this.parent.chartSettings.columnDelimiter ? this.parent.chartSettings.columnDelimiter : '-';\n        var columnHeader = (this.parent.chartSettings.columnHeader && this.parent.chartSettings.columnHeader !== '') ?\n            this.parent.chartSettings.columnHeader.split(delimiter).join(' - ') : '';\n        var chartType = this.chartSettings.chartSeries ? this.chartSettings.chartSeries.type : undefined;\n        if (this.accumulationType.indexOf(chartType) > -1) {\n            this.currentColumn = (columnKeys.indexOf(columnHeader + ' | ' + this.currentMeasure) > -1 && columnHeader !== undefined) ? columnHeader + ' | ' + this.currentMeasure : columnKeys[0];\n            var currentSeries = {};\n            currentSeries = this.persistSettings.chartSeries ? this.frameChartSeries(this.persistSettings.chartSeries) : currentSeries;\n            currentSeries.dataSource = this.columnGroupObject[this.currentColumn];\n            currentSeries.xName = 'x';\n            currentSeries.yName = 'y';\n            if (isBlazor()) {\n                if (isNullOrUndefined(this.persistSettings.chartSeries.dataLabel.visible)) {\n                    this.persistSettings.chartSeries.dataLabel.visible = true;\n                    this.persistSettings.chartSeries.dataLabel.position = \"Outside\";\n                }\n            }\n            if (this.persistSettings.chartSeries && this.persistSettings.chartSeries.dataLabel) {\n                currentSeries.dataLabel = this.persistSettings.chartSeries.dataLabel;\n                currentSeries.dataLabel.name = 'x';\n            }\n            else {\n                currentSeries.dataLabel = { visible: true, position: \"Outside\", name: 'x' };\n                this.parent.setProperties({ chartSettings: { chartSeries: { dataLabel: { visible: true, position: \"Outside\" } } } }, true);\n            }\n            if (this.accEmptyPoint && currentSeries.emptyPointSettings) {\n                currentSeries.emptyPointSettings.mode = 'Zero';\n            }\n            else if (this.accEmptyPoint) {\n                currentSeries.emptyPointSettings = { mode: 'Zero' };\n            }\n            currentSeries.name = this.currentColumn;\n            if (chartType === 'Doughnut') {\n                currentSeries.type = 'Pie';\n                currentSeries.innerRadius = this.chartSettings.chartSeries.innerRadius ? this.chartSettings.chartSeries.innerRadius : '40%';\n            }\n            else if (chartType === 'Pie') {\n                currentSeries.innerRadius = this.chartSettings.chartSeries.innerRadius ? this.chartSettings.chartSeries.innerRadius : '0';\n            }\n            this.chartSeries = this.chartSeries.concat(currentSeries);\n        }\n        else {\n            for (var _i = 0, columnKeys_1 = columnKeys; _i < columnKeys_1.length; _i++) {\n                var key = columnKeys_1[_i];\n                var currentSeries = {};\n                currentSeries = this.persistSettings.chartSeries ? this.frameChartSeries(this.persistSettings.chartSeries) : currentSeries;\n                currentSeries.dataSource = this.columnGroupObject[key];\n                currentSeries.xName = 'x';\n                currentSeries.yName = 'y';\n                currentSeries.name = this.chartSettings.enableMultiAxis ? key : key.split(' | ')[0];\n                if (['Radar', 'Polar'].indexOf(chartType) < 0) {\n                    var measure = key.split(' | ')[1];\n                    currentSeries.yAxisName = this.measuresNames[measure] ? this.measuresNames[measure] : measure;\n                }\n                if (this.persistSettings.chartSeries && this.persistSettings.chartSeries.emptyPointSettings) {\n                    currentSeries.emptyPointSettings = this.persistSettings.chartSeries.emptyPointSettings;\n                }\n                this.chartSeries = this.chartSeries.concat(currentSeries);\n            }\n        }\n        var seriesEvent = { series: this.chartSeries, cancel: false };\n        var pivotChart = this;\n        this.parent.trigger(events.chartSeriesCreated, seriesEvent, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                pivotChart.bindChart();\n            }\n            else {\n                if (pivotChart.element) {\n                    remove(pivotChart.element);\n                }\n                pivotChart.parent.notify(events.contentReady, {});\n            }\n        });\n    };\n    PivotChart.prototype.frameObjectWithKeys = function (series) {\n        var keys = Object.keys(series);\n        var keyPos = 0;\n        var framedSeries = {};\n        while (keyPos < keys.length) {\n            framedSeries[keys[keyPos]] = series[keys[keyPos]];\n            keyPos++;\n        }\n        return framedSeries;\n    };\n    PivotChart.prototype.frameChartSeries = function (series) {\n        var keys = Object.keys(series);\n        var keyPos = 0;\n        var framedSeries = {};\n        while (keyPos < keys.length) {\n            if ((this.accumulationType.indexOf(this.parent.chartSettings.chartSeries.type) > -1 && ['fill', 'dashArray', 'width', 'segmentAxis',\n                'drawType', 'isClosed', 'segments', 'stackingGroup', 'marker', 'errorBar', 'trendlines', 'minRadius',\n                'splineType', 'maxRadius', 'cardinalSplineTension', 'columnWidth', 'columnSpacing', 'cornerRadius'].indexOf(keys[keyPos]) > -1) ||\n                (this.accumulationType.indexOf(this.parent.chartSettings.chartSeries.type) < 0 && ['endAngle', 'explode', 'explodeAll', 'explodeIndex',\n                    'explodeOffset', 'gapRatio', 'groupMode', 'groupTo', 'neckHeight', 'neckWidth', 'pyramidMode', 'startAngle',\n                    'dataLabel', 'innerRadius'].indexOf(keys[keyPos]) > -1)) {\n                keyPos++;\n                continue;\n            }\n            framedSeries[keys[keyPos]] = series[keys[keyPos]];\n            keyPos++;\n        }\n        return framedSeries;\n    };\n    PivotChart.prototype.bindChart = function () {\n        this.parent.showWaitingPopup();\n        var currentXAxis = this.configXAxis();\n        var currentTooltipSettings = this.configTooltipSettings();\n        var currentLegendSettings = this.configLegendSettings();\n        var currentZoomSettings = this.configZoomSettings();\n        var axesWithRows = this.frameAxesWithRows();\n        var type = this.chartSettings.chartSeries.type;\n        if (this.parent.displayOption.view === 'Both') {\n            this.element = this.parent.displayOption.primary === 'Chart' ?\n                (this.parent.element.insertBefore((!this.element ?\n                    (createElement('div', {\n                        className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n                    }))\n                    : this.element), this.parent.element.querySelector('.' + cls.GRID_CLASS))) :\n                (this.parent.element.appendChild(!this.element ? (createElement('div', {\n                    className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n                })) : this.element));\n        }\n        else if (!this.element) {\n            this.element = this.parent.element.appendChild(createElement('div', {\n                className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n            }));\n        }\n        if (!this.chartElement && this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis) {\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).innerHTML = '';\n            this.chartElement = this.parent.element.querySelector('.' + cls.PIVOTCHART).appendChild(createElement('div', {\n                className: cls.PIVOTCHART_INNER, id: this.parent.element.id + '_chartInner',\n            }));\n        }\n        if (this.parent.element.querySelector('.' + cls.PIVOTCHART_INNER)) {\n            this.parent.element.querySelector('.' + cls.PIVOTCHART_INNER).innerHTML = '';\n        }\n        if (this.parent.showGroupingBar) {\n            this.element.style.minWidth = '400px !important';\n        }\n        else {\n            this.element.style.minWidth = '310px !important';\n        }\n        var width = this.parent.width.toString();\n        if (this.parent.showToolbar && this.parent.grid) {\n            width = this.parent.getGridWidthAsNumber().toString();\n        }\n        var height = this.getChartHeight();\n        if (this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis &&\n            this.accumulationType.indexOf(type) < 0) {\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).style.height =\n                (height === 'auto' ? this.getChartAutoHeight() : height) + 'px';\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).style.width = width + 'px';\n            if (this.parent.chartSettings.chartSeries.type !== 'Polar' && this.parent.chartSettings.chartSeries.type !== 'Radar') {\n                this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflow = 'auto';\n                this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflowX = 'hidden';\n            }\n        }\n        if (this.parent.chart && ((this.parent.chart.getModuleName() === 'accumulationchart' &&\n            this.accumulationType.indexOf(type) < 0) || (this.parent.chart.getModuleName() === 'chart' &&\n            this.accumulationType.indexOf(type) > -1))) {\n            this.parent.chart.destroy();\n            if (this.parent.element.querySelector('#' + this.parent.element.id + '_chart')) {\n                this.parent.element.querySelector('#' + this.parent.element.id + '_chart').innerHTML = '';\n                this.parent.element.querySelector('#' + this.parent.element.id + '_chart').appendChild(createElement('div', {\n                    className: cls.PIVOTCHART_INNER, id: this.parent.element.id + '_chartInner',\n                }));\n            }\n        }\n        if (!(this.parent.chart && this.parent.chart.element && this.parent.element.querySelector('.e-chart') || this.parent.element.querySelector('.e-accumulationchart')) ||\n            (this.parent.toolbarModule && this.parent.toolbarModule.isMultiAxisChange)) {\n            if (this.parent.toolbarModule && this.parent.toolbarModule.isMultiAxisChange && this.parent.chart) {\n                if (!this.parent.chart.isDestroyed) {\n                    this.parent.chart.destroy();\n                }\n                this.parent.chart = undefined;\n                this.parent.element.querySelector('#' + this.parent.element.id + '_chart').innerHTML = '';\n                this.parent.element.querySelector('#' + this.parent.element.id + '_chart').appendChild(createElement('div', {\n                    className: cls.PIVOTCHART_INNER, id: this.parent.element.id + '_chartInner',\n                }));\n                this.parent.toolbarModule.isMultiAxisChange = false;\n            }\n            Chart.Inject(ColumnSeries, StackingColumnSeries, RangeColumnSeries, BarSeries, StackingBarSeries, ScatterSeries, BubbleSeries, LineSeries, StepLineSeries, SplineSeries, SplineAreaSeries, MultiColoredLineSeries, PolarSeries, RadarSeries, AreaSeries, RangeAreaSeries, StackingAreaSeries, StepAreaSeries, MultiColoredAreaSeries, ParetoSeries, Legend, Tooltip, Category, MultiLevelLabel, ScrollBar, Zoom, Export, Crosshair, Selection, StripLine, DataLabel);\n            AccumulationChart.Inject(PieSeries, FunnelSeries, PyramidSeries, AccumulationDataLabel, AccumulationLegend, AccumulationTooltip, Export);\n            if (this.accumulationType.indexOf(type) > -1) {\n                this.parent.chart = new AccumulationChart({\n                    series: this.chartSeries.length > 0 ? this.chartSeries : [{}],\n                    legendSettings: currentLegendSettings,\n                    tooltip: currentTooltipSettings,\n                    width: width,\n                    height: height.toString(),\n                    title: this.chartSettings.title,\n                    enableSmartLabels: this.chartSettings.enableSmartLabels,\n                    center: this.chartSettings.pieCenter,\n                    enableBorderOnMouseMove: this.chartSettings.enableBorderOnMouseMove,\n                    highLightMode: this.chartSettings.highlightMode,\n                    highlightPattern: this.chartSettings.highlightPattern,\n                    titleStyle: this.chartSettings.titleStyle,\n                    subTitle: this.chartSettings.subTitle,\n                    subTitleStyle: this.chartSettings.subTitleStyle,\n                    margin: this.chartSettings.margin,\n                    border: this.chartSettings.border,\n                    background: this.chartSettings.background,\n                    theme: this.chartSettings.theme,\n                    selectionMode: this.chartSettings.accumulationSelectionMode,\n                    isMultiSelect: this.chartSettings.isMultiSelect,\n                    enableExport: this.chartSettings.enableExport,\n                    selectedDataIndexes: this.chartSettings.selectedDataIndexes,\n                    enableAnimation: this.chartSettings.enableAnimation,\n                    useGroupingSeparator: this.chartSettings.useGroupingSeparator,\n                    locale: this.parent.locale,\n                    beforePrint: this.chartSettings.beforePrint ? this.chartSettings.beforePrint.bind(this) : undefined,\n                    animationComplete: this.chartSettings.animationComplete ? this.chartSettings.animationComplete.bind(this) : undefined,\n                    legendRender: this.chartSettings.legendRender ? this.chartSettings.legendRender.bind(this) : undefined,\n                    textRender: this.chartSettings.textRender ? this.chartSettings.textRender.bind(this) : undefined,\n                    pointRender: this.chartSettings.pointRender ? this.chartSettings.pointRender.bind(this) : undefined,\n                    seriesRender: this.chartSettings.seriesRender ? this.chartSettings.seriesRender.bind(this) : undefined,\n                    chartMouseMove: this.chartSettings.chartMouseMove ? this.chartSettings.chartMouseMove.bind(this) : undefined,\n                    chartMouseClick: this.chartSettings.chartMouseClick ? this.chartSettings.chartMouseClick.bind(this) : undefined,\n                    pointMove: this.chartSettings.pointMove ? this.chartSettings.pointMove.bind(this) : undefined,\n                    pointClick: this.pointClick.bind(this),\n                    chartMouseLeave: this.chartSettings.chartMouseLeave ? this.chartSettings.chartMouseLeave.bind(this) : undefined,\n                    chartMouseDown: this.chartSettings.chartMouseDown ? this.chartSettings.chartMouseDown.bind(this) : undefined,\n                    chartMouseUp: this.chartSettings.chartMouseUp ? this.chartSettings.chartMouseUp.bind(this) : undefined,\n                    tooltipRender: this.tooltipRender.bind(this),\n                    loaded: this.loaded.bind(this),\n                    load: this.load.bind(this),\n                    resized: this.resized.bind(this)\n                });\n            }\n            else {\n                this.parent.chart = new Chart({\n                    series: this.chartSeries.length > 0 ? this.chartSeries : [{}],\n                    legendSettings: currentLegendSettings,\n                    tooltip: currentTooltipSettings,\n                    zoomSettings: currentZoomSettings,\n                    axes: (type === 'Polar' || type === 'Radar') ? [] : axesWithRows.axes,\n                    rows: (type === 'Polar' || type === 'Radar') ? [{}] :\n                        (type === 'Bar' || type === 'StackingBar' || type === 'StackingBar100' &&\n                            this.chartSettings.enableMultiAxis) ? [{ height: '100%' }] : axesWithRows.rows,\n                    columns: (type === 'Polar' || type === 'Radar') ? [{}] :\n                        (type === 'Bar' || type === 'StackingBar' || type === 'StackingBar100' &&\n                            this.chartSettings.enableMultiAxis) ? axesWithRows.columns : [{ width: '100%' }],\n                    primaryYAxis: (type === 'Polar' || type === 'Radar') ? axesWithRows.axes[0] : { visible: false },\n                    primaryXAxis: currentXAxis,\n                    width: width,\n                    height: (this.parent.chartSettings.chartSeries.type !== 'Polar' &&\n                        this.parent.chartSettings.chartSeries.type !== 'Radar' && this.parent.chartSettings.enableScrollOnMultiAxis &&\n                        this.parent.chartSettings.enableMultiAxis && this.parent.dataSourceSettings.values.length > 0) ?\n                        Number(height) > (this.parent.dataSourceSettings.values.length * 235) + 100 ? isNaN(Number(height)) ?\n                            height.toString() : (Number(height) - 5).toString() :\n                            (!isNaN(Number(height)) || this.parent.dataSourceSettings.values.length > 1) ?\n                                ((this.parent.dataSourceSettings.values.length * 235) + 100).toString() :\n                                height.toString() : height.toString(),\n                    title: this.chartSettings.title,\n                    titleStyle: this.chartSettings.titleStyle,\n                    subTitle: this.chartSettings.subTitle,\n                    subTitleStyle: this.chartSettings.subTitleStyle,\n                    margin: this.chartSettings.margin,\n                    border: this.chartSettings.border,\n                    background: this.chartSettings.background,\n                    chartArea: this.chartSettings.chartArea,\n                    palettes: this.chartSettings.palettes,\n                    theme: this.chartSettings.theme,\n                    crosshair: this.chartSettings.crosshair,\n                    selectionMode: this.chartSettings.selectionMode,\n                    isMultiSelect: this.chartSettings.isMultiSelect,\n                    enableExport: this.chartSettings.enableExport,\n                    selectedDataIndexes: this.chartSettings.selectedDataIndexes,\n                    isTransposed: this.chartSettings.isTransposed,\n                    enableAnimation: this.chartSettings.enableAnimation,\n                    useGroupingSeparator: this.chartSettings.useGroupingSeparator,\n                    description: this.chartSettings.description,\n                    tabIndex: this.chartSettings.tabIndex,\n                    locale: this.parent.locale,\n                    enableSideBySidePlacement: this.chartSettings.enableSideBySidePlacement,\n                    beforePrint: this.chartSettings.beforePrint ? this.chartSettings.beforePrint.bind(this) : undefined,\n                    animationComplete: this.chartSettings.animationComplete ? this.chartSettings.animationComplete.bind(this) : undefined,\n                    legendRender: this.chartSettings.legendRender ? this.chartSettings.legendRender.bind(this) : undefined,\n                    textRender: this.chartSettings.textRender ? this.chartSettings.textRender.bind(this) : undefined,\n                    pointRender: this.chartSettings.pointRender ? this.chartSettings.pointRender.bind(this) : undefined,\n                    seriesRender: this.chartSettings.seriesRender ? this.chartSettings.seriesRender.bind(this) : undefined,\n                    chartMouseMove: this.chartSettings.chartMouseMove ? this.chartSettings.chartMouseMove.bind(this) : undefined,\n                    chartMouseClick: this.chartSettings.chartMouseClick ? this.chartSettings.chartMouseClick.bind(this) : undefined,\n                    pointMove: this.chartSettings.pointMove ? this.chartSettings.pointMove.bind(this) : undefined,\n                    pointClick: this.pointClick.bind(this),\n                    chartMouseLeave: this.chartSettings.chartMouseLeave ? this.chartSettings.chartMouseLeave.bind(this) : undefined,\n                    chartMouseDown: this.chartSettings.chartMouseDown ? this.chartSettings.chartMouseDown.bind(this) : undefined,\n                    chartMouseUp: this.chartSettings.chartMouseUp ? this.chartSettings.chartMouseUp.bind(this) : undefined,\n                    dragComplete: this.chartSettings.dragComplete ? this.chartSettings.dragComplete.bind(this) : undefined,\n                    zoomComplete: this.chartSettings.zoomComplete ? this.chartSettings.zoomComplete.bind(this) : undefined,\n                    scrollStart: this.chartSettings.scrollStart ? this.chartSettings.scrollStart.bind(this) : undefined,\n                    scrollEnd: this.chartSettings.scrollEnd ? this.chartSettings.scrollEnd.bind(this) : undefined,\n                    scrollChanged: this.chartSettings.scrollChanged ? this.chartSettings.scrollChanged.bind(this) : undefined,\n                    tooltipRender: this.tooltipRender.bind(this),\n                    loaded: this.loaded.bind(this),\n                    load: this.load.bind(this),\n                    resized: this.resized.bind(this),\n                    axisLabelRender: this.axisLabelRender.bind(this),\n                    multiLevelLabelClick: this.multiLevelLabelClick.bind(this),\n                });\n            }\n            this.parent.chart.isStringTemplate = true;\n        }\n        else {\n            this.parent.chart.series = this.chartSeries;\n            if (type === 'Polar' || type === 'Radar') {\n                this.parent.chart.primaryXAxis = currentXAxis;\n                this.parent.chart.primaryYAxis.visible = true;\n                this.parent.chart.primaryYAxis = axesWithRows.axes[0];\n                this.parent.chart.axes = [];\n                this.parent.chart.rows = [{}];\n            }\n            else if ((this.accumulationType.indexOf(type) < 0) && this.parent.chart.getModuleName() === 'chart') {\n                this.parent.chart.primaryYAxis.visible = false;\n                this.parent.chart.primaryXAxis = currentXAxis;\n                this.parent.chart.axes = axesWithRows.axes;\n                if (type === 'Bar' || type === 'StackingBar' || type === 'StackingBar100' &&\n                    this.chartSettings.enableMultiAxis) {\n                    this.parent.chart.rows = [{ height: '100%' }];\n                    this.parent.chart.columns = axesWithRows.columns;\n                }\n                else {\n                    this.parent.chart.rows = axesWithRows.rows;\n                    this.parent.chart.columns = [{ width: '100%' }];\n                }\n            }\n            this.parent.chart.refresh();\n        }\n        if (this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis) {\n            this.parent.chart.appendTo('#' + this.parent.element.id + '_chartInner');\n        }\n        else {\n            this.parent.chart.appendTo('#' + this.parent.element.id + '_chart');\n        }\n    };\n    PivotChart.prototype.pointClick = function (args) {\n        var dataSource = args.series.dataSource ? args.series.dataSource : this.parent.chart.series[args.seriesIndex].dataSource;\n        if ((['Pie', 'Funnel', 'Doughnut', 'Pyramid', 'Radar', 'Polar'].indexOf(this.parent.chartSettings.chartSeries.type) > -1) || !this.parent.chartSettings.showMultiLevelLabels) {\n            this.pivotIndex = {\n                rIndex: dataSource ? dataSource[args.pointIndex].rIndex : undefined,\n                cIndex: dataSource ? dataSource[args.pointIndex].cIndex : undefined,\n            };\n            this.creatMenu();\n            var pos = this.parent.element.getBoundingClientRect();\n            var y = (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 0) +\n                (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                    this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 0) +\n                (window.scrollY || document.documentElement.scrollTop) + pos.top;\n            this.accumulationMenu.open(y + args.y, args.x + pos.left + (window.scrollX || document.documentElement.scrollLeft));\n        }\n        else if ((this.parent.allowDrillThrough || this.parent.editSettings.allowEditing) && this.parent.drillThroughModule) {\n            var rIndex = dataSource[args.pointIndex].rIndex;\n            var cIndex = dataSource[args.pointIndex].cIndex;\n            this.parent.drillThroughModule.executeDrillThrough(this.parent.pivotValues[rIndex][cIndex], rIndex, cIndex);\n        }\n        this.parent.trigger(events.chartPointClick, args);\n    };\n    /* tslint:enable */\n    PivotChart.prototype.frameAxesWithRows = function () {\n        var axes = [];\n        var rows = [];\n        var columns = [];\n        var percentChart = this.persistSettings.chartSeries && (this.persistSettings.chartSeries.type === 'StackingColumn100' ||\n            this.persistSettings.chartSeries.type === 'StackingBar100' ||\n            this.persistSettings.chartSeries.type === 'StackingArea100');\n        var percentAggregateTypes = ['PercentageOfGrandTotal', 'PercentageOfColumnTotal', 'PercentageOfRowTotal',\n            'PercentageOfDifferenceFrom', 'PercentageOfParentRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentTotal'];\n        if (this.chartSettings.enableMultiAxis) {\n            var valCnt = 0;\n            var divider = (100 / this.dataSourceSettings.values.length) + '%';\n            for (var _i = 0, _a = this.dataSourceSettings.values; _i < _a.length; _i++) {\n                var item = _a[_i];\n                var measureField = this.engineModule.fieldList[item.name];\n                var measureAggregatedName = (this.parent.dataType === 'olap' ? '' : (this.parent.localeObj.getConstant(measureField.aggregateType) + ' ' +\n                    this.parent.localeObj.getConstant('of') + ' ')) + measureField.caption;\n                // let formatSetting: IFormatSettings = this.dataSourceSettings.formatSettings.filter((itm: IFormatSettings) => {\n                //     return itm.name === item.name;\n                // })[0];\n                var formatSetting = void 0;\n                for (var _b = 0, _c = this.dataSourceSettings.formatSettings; _b < _c.length; _b++) {\n                    var field = _c[_b];\n                    if (field.name === item.name) {\n                        formatSetting = field;\n                        break;\n                    }\n                }\n                var format = PivotUtil.inArray(measureField.aggregateType, percentAggregateTypes) !== -1 ? 'P2' : (formatSetting ?\n                    (formatSetting.format.toLowerCase().match(/n|p|c/) === null ? 'N' : formatSetting.format) :\n                    this.parent.dataType === 'olap' ? this.getFormat(measureField.formatString) : 'N');\n                var resFormat = (this.chartSettings.chartSeries.type === 'Polar' || this.chartSettings.chartSeries.type === 'Radar') ? true : false;\n                var currentYAxis = {};\n                currentYAxis = this.persistSettings.primaryYAxis ?\n                    this.frameObjectWithKeys(this.persistSettings.primaryYAxis) : currentYAxis;\n                currentYAxis.labelFormat = currentYAxis.labelFormat ?\n                    currentYAxis.labelFormat : (percentChart ? '' : (!resFormat ? format : 'N'));\n                currentYAxis.title = currentYAxis.title ? currentYAxis.title : measureAggregatedName;\n                currentYAxis.plotOffsetTop = currentYAxis.plotOffsetTop ? currentYAxis.plotOffsetTop :\n                    this.chartSettings.chartSeries.type === 'Bar' || this.chartSettings.chartSeries.type === 'StackingBar' ||\n                        this.chartSettings.chartSeries.type === 'StackingBar100' ? 50 : 30;\n                currentYAxis.rowIndex = valCnt;\n                currentYAxis.columnIndex = valCnt;\n                if (!resFormat) {\n                    currentYAxis.name = this.measuresNames[item.name] ? this.measuresNames[item.name] : item.name;\n                }\n                axes = axes.concat(currentYAxis);\n                rows.push({ height: divider });\n                columns.push({ width: divider });\n                valCnt++;\n            }\n        }\n        else {\n            var measureField = this.engineModule.fieldList[this.currentMeasure];\n            var measureAggregatedName = (this.parent.dataType === 'olap' ? '' :\n                (this.parent.localeObj.getConstant(measureField.aggregateType) + ' ' +\n                    this.parent.localeObj.getConstant('of') + ' ')) + measureField.caption;\n            // let formatSetting: IFormatSettings = this.dataSourceSettings.formatSettings.filter((item: IFormatSettings) => {\n            //     return item.name === this.currentMeasure;\n            // })[0];\n            var formatSetting = void 0;\n            for (var _d = 0, _e = this.dataSourceSettings.formatSettings; _d < _e.length; _d++) {\n                var item = _e[_d];\n                if (item.name === this.currentMeasure) {\n                    formatSetting = item;\n                    break;\n                }\n            }\n            var lengthofFormat = void 0;\n            if (formatSetting) {\n                lengthofFormat = formatSetting.format.length;\n            }\n            var currentYAxis = {};\n            var format = PivotUtil.inArray(measureField.aggregateType, percentAggregateTypes) !== -1 ? 'P2' : (formatSetting ?\n                (((formatSetting.format.toLowerCase().match(/n[0-10]|p[0-10]|c[0-10]/) === null) || lengthofFormat > 3) ? 'N' : formatSetting.format) :\n                this.parent.dataType === 'olap' ? this.getFormat(measureField.formatString) : 'N');\n            currentYAxis = this.persistSettings.primaryYAxis ? this.frameObjectWithKeys(this.persistSettings.primaryYAxis) : currentYAxis;\n            currentYAxis.rowIndex = 0;\n            currentYAxis.columnIndex = 0;\n            if (!(this.chartSettings.chartSeries.type === 'Polar' || this.chartSettings.chartSeries.type === 'Radar')) {\n                currentYAxis.name = this.measuresNames[this.currentMeasure] ? this.measuresNames[this.currentMeasure] : this.currentMeasure;\n            }\n            currentYAxis.labelFormat = currentYAxis.labelFormat ? currentYAxis.labelFormat : (percentChart ? '' : format);\n            currentYAxis.title = currentYAxis.title ? currentYAxis.title : measureAggregatedName;\n            axes = axes.concat(currentYAxis);\n            rows.push({ height: '100%' });\n            columns.push({ width: '100%' });\n        }\n        return { axes: axes, rows: rows, columns: columns };\n    };\n    PivotChart.prototype.getFormat = function (format) {\n        if (format === 'Currency') {\n            format = 'C';\n        }\n        else if (format === 'Percent') {\n            format = 'P';\n        }\n        else {\n            format = 'N';\n        }\n        return format;\n    };\n    /** @hidden */\n    PivotChart.prototype.getColumnTotalIndex = function (pivotValues) {\n        var colIndexColl = {};\n        var rKeys = Object.keys(pivotValues);\n        for (var _i = 0, rKeys_2 = rKeys; _i < rKeys_2.length; _i++) {\n            var rowIndex = rKeys_2[_i];\n            var rows = pivotValues[Number(rowIndex)];\n            var cKeys = void 0;\n            if (!isNullOrUndefined(rows)) {\n                cKeys = Object.keys(rows);\n                for (var _a = 0, cKeys_2 = cKeys; _a < cKeys_2.length; _a++) {\n                    var cellIndex = cKeys_2[_a];\n                    var cell = rows[Number(cellIndex)];\n                    if (!isNullOrUndefined(cell)) {\n                        if (cell.axis !== 'column') {\n                            return colIndexColl;\n                        }\n                        else if ((cell.type === 'sum' || (this.dataSourceSettings.columns.length === 0 ? false : cell.type === 'grand sum'))\n                            && cell.rowSpan !== -1) {\n                            colIndexColl[cell.colIndex] = cell.colIndex;\n                        }\n                    }\n                }\n            }\n        }\n        return colIndexColl;\n    };\n    PivotChart.prototype.groupHierarchyWithLevels = function (pivotValues) {\n        var _a, _b;\n        this.fieldPosition = [];\n        var group = {};\n        var fieldCount = 0;\n        var levelPos = {};\n        this.measurePos = this.engineModule.tupRowInfo[0].measurePosition;\n        for (var rowPos = 0; rowPos < pivotValues.length; rowPos++) {\n            var cell = pivotValues[rowPos][0];\n            if (cell && cell.axis === 'row' && cell.type !== 'grand sum') {\n                if (isNullOrUndefined(group[cell.hierarchy])) {\n                    if (cell.memberType === 3) {\n                        if (fieldCount === this.measurePos) {\n                            this.fieldPosition[this.measurePos] = cell.hierarchy;\n                            group[cell.hierarchy] = (_a = {}, _a[cell.levelUniqueName] = cell.levelUniqueName, _a);\n                        }\n                        else {\n                            fieldCount--;\n                        }\n                    }\n                    else {\n                        this.fieldPosition[fieldCount] = cell.hierarchy;\n                        group[cell.hierarchy] = (_b = {}, _b[cell.levelUniqueName] = cell.levelUniqueName, _b);\n                    }\n                    fieldCount++;\n                }\n                else {\n                    group[cell.hierarchy][cell.levelUniqueName] = cell.levelUniqueName;\n                }\n            }\n        }\n        var lastEnd = -1;\n        for (var pos = 0; pos < this.fieldPosition.length; pos++) {\n            if (this.measurePos !== pos) {\n                levelPos[this.fieldPosition[pos]] = {\n                    start: (lastEnd + 1),\n                    end: (lastEnd + Object.keys(group[this.fieldPosition[pos]]).length)\n                };\n                lastEnd = levelPos[this.fieldPosition[pos]].end;\n            }\n        }\n        return levelPos;\n    };\n    /* tslint:disable */\n    PivotChart.prototype.frameMultiLevelLabels = function () {\n        var startKeys = Object.keys(this.headerColl);\n        var parentHeaders = this.headerColl[-0.5];\n        for (var _i = 0, startKeys_1 = startKeys; _i < startKeys_1.length; _i++) {\n            var startKey = startKeys_1[_i];\n            var sKey = Number(startKey);\n            var headers = this.headerColl[sKey];\n            var levelPos = 0;\n            var isAvail = false;\n            while (levelPos <= this.maxLevel) {\n                if (!isAvail) {\n                    if (!headers[levelPos]) {\n                        headers[levelPos] = parentHeaders[levelPos];\n                    }\n                    else {\n                        isAvail = true;\n                    }\n                }\n                else if (!headers[levelPos]) {\n                    headers[levelPos] = {\n                        name: headers[levelPos - 1].name,\n                        // text: headers[levelPos - 1].text,\n                        text: '',\n                        hasChild: headers[levelPos - 1].hasChild,\n                        isDrilled: headers[levelPos - 1].isDrilled,\n                        levelName: headers[levelPos - 1].levelName,\n                        level: headers[levelPos - 1].level,\n                        fieldName: headers[levelPos - 1].fieldName,\n                        rowIndex: headers[levelPos - 1].rowIndex,\n                        colIndex: headers[levelPos - 1].colIndex,\n                        span: -1,\n                    };\n                    // headers[levelPos - 1].span = 0;\n                }\n                levelPos++;\n            }\n            parentHeaders = this.headerColl[sKey];\n        }\n        var gRows = {};\n        for (var _a = 0, startKeys_2 = startKeys; _a < startKeys_2.length; _a++) {\n            var startKey = startKeys_2[_a];\n            var sKey = Number(startKey);\n            var headers = this.headerColl[sKey];\n            var lKeys = Object.keys(headers);\n            for (var _b = 0, lKeys_1 = lKeys; _b < lKeys_1.length; _b++) {\n                var levelKey = lKeys_1[_b];\n                var lKey = Number(levelKey);\n                if (gRows[lKey]) {\n                    var len = gRows[lKey].length;\n                    if (headers[lKey].levelName === parentHeaders[lKey].levelName) {\n                        gRows[lKey][len - 1].end = gRows[lKey][len - 1].end + 1;\n                    }\n                    else {\n                        gRows[lKey].push({\n                            start: sKey, end: sKey + 1, text: headers[lKey].text,\n                            type: (headers[lKey].span === -1 ? 'WithoutTopandBottomBorder' : 'WithoutTopBorder'),\n                            customAttributes: headers[lKey]\n                        });\n                    }\n                }\n                else {\n                    gRows[lKey] = [{\n                            start: sKey, end: sKey + 1, text: headers[lKey].text,\n                            type: (headers[lKey].span === -1 ? 'WithoutTopandBottomBorder' : 'WithoutTopBorder'),\n                            customAttributes: headers[lKey]\n                        }];\n                }\n            }\n            parentHeaders = headers;\n        }\n        var levellength = Object.keys(gRows).length;\n        var multiLevelLabels = [];\n        for (var level = levellength - 1; level > -1; level--) {\n            multiLevelLabels.push({ categories: gRows[level], border: { width: 1 }, overflow: 'Trim' });\n        }\n        return multiLevelLabels;\n    };\n    /* tslint:enable */\n    PivotChart.prototype.getZoomFactor = function () {\n        if (!isNaN(Number(this.parent.width))) {\n            this.calculatedWidth = Number(this.parent.width);\n        }\n        else if (this.parent.width.indexOf('%') > -1) {\n            this.calculatedWidth = this.parent.element.clientWidth * (parseFloat(this.parent.width) / 100);\n        }\n        else if (this.parent.width.indexOf('px') > -1) {\n            this.calculatedWidth = Number(this.parent.width.toString().split('px')[0]);\n        }\n        else {\n            this.calculatedWidth = this.parent.element.clientWidth;\n        }\n        var seriesLength = (this.chartSeries.length * 10) > 120 ? (this.chartSeries.length * 10) : 120;\n        var zoomFactor = this.chartSeries.length > 0 ?\n            (this.calculatedWidth / (Object.keys(this.chartSeries[0].dataSource).length * seriesLength)) : 1;\n        zoomFactor = (zoomFactor < 1 && zoomFactor > 0) ? zoomFactor : 1;\n        return zoomFactor;\n    };\n    PivotChart.prototype.configTooltipSettings = function () {\n        var tooltip = this.chartSettings.tooltip;\n        tooltip.enable = tooltip.enable === undefined ? true : tooltip.enable;\n        if (tooltip.enable && tooltip.template) {\n            this.templateFn = this.parent.templateParser(tooltip.template);\n        }\n        if (this.parent.tooltipTemplate) {\n            tooltip.template = tooltip.template ? tooltip.template : this.parent.tooltipTemplate;\n        }\n        if (isBlazor()) {\n            this.parent.allowServerDataBinding = false;\n            this.parent.setProperties({ chartSettings: { tooltip: { header: tooltip.header ? tooltip.header : '' } } }, true);\n            this.parent.allowServerDataBinding = true;\n        }\n        else {\n            tooltip.header = tooltip.header ? tooltip.header : '';\n        }\n        tooltip.enableMarker = tooltip.enableMarker === undefined ? true : tooltip.enableMarker;\n        return tooltip;\n    };\n    /* tslint:disable:no-any */\n    PivotChart.prototype.configLegendSettings = function () {\n        var legendSettings = {};\n        if (this.chartSettings.legendSettings) {\n            var keyPos = 0;\n            var keys = Object.keys(this.chartSettings.legendSettings);\n            while (keyPos < keys.length) {\n                legendSettings[keys[keyPos]] = this.chartSettings.legendSettings[keys[keyPos]];\n                keyPos++;\n            }\n        }\n        if (this.accumulationType.indexOf(this.chartSettings.chartSeries.type) > -1 && legendSettings.visible === undefined) {\n            legendSettings.visible = false;\n        }\n        legendSettings.padding = legendSettings.padding ? legendSettings.padding : 25;\n        legendSettings.shapePadding = legendSettings.shapePadding ? legendSettings.shapePadding : 10;\n        return legendSettings;\n    };\n    /* tslint:enable:no-any */\n    PivotChart.prototype.configXAxis = function () {\n        var currentXAxis = {};\n        currentXAxis = this.persistSettings.primaryXAxis ? this.frameObjectWithKeys(this.persistSettings.primaryXAxis) : currentXAxis;\n        currentXAxis.valueType = 'Category';\n        currentXAxis.labelIntersectAction = currentXAxis.labelIntersectAction ? currentXAxis.labelIntersectAction : 'Rotate45';\n        currentXAxis.title = currentXAxis.title ? currentXAxis.title :\n            this.dataSourceSettings.rows.map(function (args) { return args.caption || args.name; }).join(' / ');\n        currentXAxis.zoomFactor = this.getZoomFactor();\n        if (!this.parent.chartSettings.zoomSettings.enableScrollbar) {\n            currentXAxis.zoomFactor = 1;\n        }\n        if (this.chartSettings.showMultiLevelLabels) {\n            currentXAxis.multiLevelLabels = this.frameMultiLevelLabels();\n            currentXAxis.border = { width: 1, type: 'WithoutTopandBottomBorder' };\n            currentXAxis.majorTickLines = { width: 0, height: -10 };\n        }\n        return currentXAxis;\n    };\n    PivotChart.prototype.configZoomSettings = function () {\n        var zoomSettings = this.chartSettings.zoomSettings;\n        zoomSettings.enableSelectionZooming = zoomSettings.enableSelectionZooming === undefined ? true :\n            zoomSettings.enableSelectionZooming;\n        zoomSettings.enableScrollbar = zoomSettings.enableScrollbar === undefined ? true : zoomSettings.enableScrollbar;\n        return zoomSettings;\n    };\n    PivotChart.prototype.tooltipRender = function (args) {\n        var measure = args.series.yAxisName ? (args.series.yAxisName.split('_CumulativeAxis')[0]) :\n            ((this.chartSettings.enableMultiAxis && this.accumulationType.indexOf(this.chartSettings.chartSeries.type) < 0) ?\n                args.series.name ? args.series.name.split(' | ')[1] : args.data.seriesName ?\n                    args.data.seriesName.split(' | ')[1] : this.currentMeasure : this.measuresNames[this.currentMeasure] ?\n                this.measuresNames[this.currentMeasure] : this.currentMeasure);\n        /* tslint:disable:no-any */\n        var dataSource = args.series.dataSource ? args.series.dataSource : this.parent.chart.series[args.data.seriesIndex].dataSource;\n        var rowIndex = dataSource ? dataSource[args.data.pointIndex].rIndex : undefined;\n        var colIndex = dataSource ? dataSource[args.data.pointIndex].cIndex : undefined;\n        var measureField = this.engineModule.fieldList[this.measuresNames[measure] ? this.measuresNames[measure] : measure];\n        var aggregateType = this.parent.dataType === 'olap' ? '' : this.parent.localeObj.getConstant(measureField.aggregateType);\n        var measureAggregatedName = (this.parent.dataType === 'olap' ? '' : aggregateType + ' ' +\n            this.parent.localeObj.getConstant('of') + ' ') + measureField.caption;\n        var formattedText = this.accumulationType.indexOf(this.parent.chartSettings.chartSeries.type) < 0 ?\n            args.text.split('<b>')[1].split('</b>')[0] : this.engineModule.pivotValues[rowIndex][colIndex].formattedText;\n        var formatField = this.engineModule.formatFields[measureField.id];\n        var formattedValue = ((formatField && formatField.format && formatField.format.toLowerCase().match(/n|p|c/) !== null &&\n            this.chartSettings.useGroupingSeparator) ? this.parent.dataType === 'olap' ?\n            this.engineModule.getFormattedValue(args.point.y, measureField.id, formattedText) :\n            this.parent.engineModule.getFormattedValue(args.point.y, measureField.id).formattedText :\n            formattedText);\n        var columnText = (args.series.name ? args.series.name.split(' | ')[0] : args.data.seriesName.split(' | ')[0]);\n        var rowText = args.point.x;\n        if (this.parent.tooltipTemplate && this.parent.getTooltipTemplate() !== undefined || this.chartSettings.tooltip.template) {\n            var rowFields = dataSource ? this.parent.getHeaderField(rowIndex, colIndex, 'row') : '';\n            var columnFields = dataSource ? this.parent.getHeaderField(rowIndex, colIndex, 'Column') : '';\n            var templateVariable = {\n                rowHeaders: rowText,\n                columnHeaders: columnText,\n                aggregateType: aggregateType,\n                value: formattedValue,\n                valueField: measureField.caption,\n                rowFields: rowFields,\n                columnFields: columnFields\n            };\n            var template = void 0;\n            if (this.parent.chartSettings && this.parent.chartSettings.tooltip &&\n                this.parent.chartSettings.tooltip.enable && this.parent.chartSettings.tooltip.template) {\n                template = this.tooltipTemplateFn()(templateVariable, this, 'tooltipTemplate', this.element.id + '1tooltipTemplate')[0].outerHTML;\n            }\n            else {\n                /* tslint:enable:no-any */\n                template = this.parent.getTooltipTemplate()(templateVariable, this, 'tooltipTemplate', this.element.id + 'tooltipTemplate')[0].outerHTML;\n            }\n            args.template = template;\n        }\n        else {\n            args.text = measureAggregatedName + ': ' + formattedValue +\n                (this.dataSourceSettings.columns.length === 0 ? '' :\n                    (' <br/>' + this.parent.localeObj.getConstant('column') + ': ' + columnText)) +\n                (this.dataSourceSettings.rows.length === 0 ? '' :\n                    (' <br/>' + this.parent.localeObj.getConstant('row') + ': ' + rowText));\n            this.parent.trigger(events.chartTooltipRender, args);\n        }\n    };\n    PivotChart.prototype.tooltipTemplateFn = function () {\n        return this.templateFn;\n    };\n    PivotChart.prototype.loaded = function (args) {\n        this.parent.isChartLoaded = true;\n        if (this.parent.chart && this.parent.showGroupingBar && this.parent.groupingBarModule &&\n            this.parent.showFieldList && this.parent.currentView === 'Chart') {\n            this.parent.groupingBarModule.alignIcon();\n        }\n        if (this.chartSettings.showMultiLevelLabels) {\n            var multilabelAxisName = PivotUtil.inArray(this.chartSettings.chartSeries.type, ['Bar', 'StackingBar', 'StackingBar100']) > -1 ?\n                '_chartYAxisMultiLevelLabel0' : '_chartXAxisMultiLevelLabel0';\n            if (!isNullOrUndefined(this.parent.element.querySelector('#' + this.parent.element.id + multilabelAxisName))) {\n                this.parent.element.querySelector('#' + this.parent.element.id + multilabelAxisName).setAttribute('cursor', 'pointer');\n            }\n        }\n        if ((['Pie', 'Funnel', 'Pyramid', 'Doughnut', 'Radar', 'Polar'].indexOf(this.parent.chartSettings.chartSeries.type) >= 0)\n            && this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis) {\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflow = 'visible';\n        }\n        else if (this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis) {\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflow = 'auto';\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflowX = 'hidden';\n        }\n        this.parent.chart.height = ['Pie', 'Funnel', 'Pyramid', 'Doughnut', 'Radar', 'Polar'].indexOf(this.parent.chartSettings.chartSeries.type) < 0 &&\n            this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis &&\n            this.parent.dataSourceSettings.values.length > 0 ? Number(this.parent.chart.height) > (this.parent.dataSourceSettings.values.length * 235) + 100 ?\n            isNaN(Number(this.getChartHeight())) ? this.getChartHeight().toString() : (Number(this.getChartHeight()) - 5).toString() :\n            (!isNaN(Number(this.getChartHeight())) || this.parent.dataSourceSettings.values.length > 1) ?\n                ((this.parent.dataSourceSettings.values.length * 235) + 100).toString() :\n                this.getChartHeight().toString() : this.getChartHeight().toString();\n        this.updateView();\n        this.parent.notify(events.contentReady, {});\n        this.parent.trigger(events.chartLoaded, args);\n        this.parent.hideWaitingPopup();\n    };\n    /** @hidden */\n    PivotChart.prototype.updateView = function () {\n        if (this.parent.grid && this.parent.chart && this.parent.showToolbar) {\n            if (this.parent.currentView === 'Table') {\n                this.parent.grid.element.style.display = '';\n                this.parent.chart.element.style.display = 'none';\n                if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n                    this.parent.element.querySelector('.e-pivot-grouping-bar') &&\n                    this.parent.element.querySelector('.e-chart-grouping-bar')) {\n                    this.parent.element.querySelector('.e-pivot-grouping-bar').style.display = '';\n                    this.parent.element.querySelector('.e-chart-grouping-bar').style.display = 'none';\n                }\n                if (this.parent.chartSettings.enableMultiAxis && this.parent.chartSettings.enableScrollOnMultiAxis) {\n                    this.parent.element.querySelector('.e-pivotchart').style.display = 'none';\n                }\n            }\n            else {\n                this.parent.grid.element.style.display = 'none';\n                this.parent.chart.element.style.display = '';\n                if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n                    this.parent.element.querySelector('.e-pivot-grouping-bar') &&\n                    this.parent.element.querySelector('.e-chart-grouping-bar')) {\n                    this.parent.element.querySelector('.e-pivot-grouping-bar').style.display = 'none';\n                    this.parent.element.querySelector('.e-chart-grouping-bar').style.display = '';\n                }\n                if (this.parent.chartSettings.enableMultiAxis && this.parent.chartSettings.enableScrollOnMultiAxis) {\n                    this.parent.element.querySelector('.e-pivotchart').style.display = '';\n                }\n            }\n        }\n    };\n    PivotChart.prototype.creatMenu = function () {\n        if (this.accumulationMenu && !this.accumulationMenu.isDestroyed) {\n            this.accumulationMenu.destroy();\n        }\n        var items = ((this.parent.allowDrillThrough || this.parent.editSettings.allowEditing)\n            && this.parent.drillThroughModule) ? ['expand', 'collapse', 'drillThrough', 'exit'] :\n            ['expand', 'collapse', 'exit'];\n        var option = [];\n        for (var i = 0; i < items.length; i++) {\n            option.push({\n                id: this.parent.element.id + '_DrillMenuChart_' + items[i],\n                text: this.parent.localeObj.getConstant(items[i]),\n                items: [],\n            });\n        }\n        var getString = this.getMenuItems();\n        var expand = [];\n        var collapse = [];\n        for (var i = 0; i < getString.length; i++) {\n            if (getString[i].type === 'expand') {\n                expand.push({ id: this.element.id + 'drillExpand_' + getString[i].key, text: getString[i].value });\n            }\n            else {\n                collapse.push({ id: this.element.id + 'drillCollapse_' + getString[i].key, text: getString[i].value });\n            }\n        }\n        if (expand.length > 0) {\n            option[0].items = expand;\n        }\n        if (collapse.length > 0) {\n            option[1].items = collapse;\n        }\n        var menuOptions = {\n            cssClass: this.parent.element.id + '_accumulationChart',\n            items: option,\n            enableRtl: this.parent.enableRtl,\n            beforeOpen: this.drillMenuOpen.bind(this),\n            select: this.drillMenuSelect.bind(this),\n        };\n        this.accumulationMenu = new ContextMenu(menuOptions);\n        var contextMenu;\n        if (this.parent.element.querySelector('#' + this.parent.element.id + '_accumulationChart')) {\n            contextMenu = this.parent.element.querySelector('#' + this.parent.element.id + '_accumulationChart');\n            contextMenu.innerHTML = '';\n        }\n        else {\n            contextMenu = createElement('ul', {\n                id: this.parent.element.id + '_accumulationChart'\n            });\n            this.parent.element.appendChild(contextMenu);\n        }\n        this.accumulationMenu.isStringTemplate = true;\n        this.accumulationMenu.appendTo(contextMenu);\n    };\n    PivotChart.prototype.drillMenuOpen = function (args) {\n        if (args.items[0] && args.items[0].text === this.parent.localeObj.getConstant('expand') &&\n            args.items[0].items && args.items[0].items.length === 0) {\n            this.accumulationMenu.enableItems([this.parent.localeObj.getConstant('expand')], false);\n        }\n        if (args.items[1] && args.items[1].text === this.parent.localeObj.getConstant('collapse') &&\n            args.items[1].items && args.items[1].items.length === 0) {\n            this.accumulationMenu.enableItems([this.parent.localeObj.getConstant('collapse')], false);\n        }\n    };\n    PivotChart.prototype.getMenuItems = function () {\n        var rowIndex = this.pivotIndex.rIndex;\n        var menuItem = [];\n        var pivotValues = this.engineModule.pivotValues;\n        var levelCol = [];\n        var pivotValue = pivotValues[rowIndex][this.pivotIndex.cIndex];\n        // let hierarchy: string = pivotValues[rowIndex][0].hierarchy;\n        var level = (!pivotValues[rowIndex][0].isNamedSet && pivotValues[rowIndex][0].hasChild) ?\n            pivotValues[rowIndex][0].level : undefined;\n        var levels = this.parent.dataType === 'olap' ? pivotValue.rowHeaders.toString().split(/~~|::/)\n            : pivotValue.rowHeaders.toString().split(this.engineModule.valueSortSettings.headerDelimiter);\n        while (pivotValues[rowIndex][0]) {\n            pivotValue = pivotValues[rowIndex][0];\n            if ((levels.length !== 0) && (levels.indexOf(pivotValue.formattedText.toString()) === (levels.length - 1))) {\n                if (pivotValue.hasChild && !pivotValue.isNamedSet && levelCol.indexOf(pivotValue.level) < 0 &&\n                    (level ? level >= pivotValue.level : (level === 0 ? (pivotValue.level === 0) : true))) {\n                    if (!(pivotValue.isDrilled && pivotValue.hasChild)) {\n                        menuItem.push({\n                            key: rowIndex,\n                            type: 'expand',\n                            value: pivotValue.formattedText\n                        });\n                    }\n                    else {\n                        menuItem.push({\n                            key: rowIndex,\n                            type: 'collapse',\n                            value: pivotValue.formattedText\n                        });\n                    }\n                    levelCol.push(pivotValue.level);\n                    level = level ? (level - 1) : (pivotValue.level - 1);\n                }\n                var index = levels.indexOf(pivotValue.formattedText.toString());\n                levels.splice(index, 1);\n            }\n            if (pivotValue.level === 0 && pivotValue.hasChild && !pivotValue.isNamedSet) {\n                level = undefined;\n                levelCol = [];\n            }\n            rowIndex--;\n        }\n        return menuItem;\n    };\n    PivotChart.prototype.drillMenuSelect = function (args) {\n        var pivotValues = (this.parent.dataType === 'olap' ?\n            this.parent.olapEngineModule.pivotValues : this.parent.engineModule.pivotValues);\n        var option = (args.element.id).split('_DrillMenuChart_')[1];\n        if (args.element.id.indexOf(this.element.id + 'drill') === 0) {\n            var type = args.element.id.split(this.element.id + 'drill')[1].indexOf('Expand') >= 0 ? 'drillExpand' : 'drillCollapse';\n            var rowIndex = Number(args.element.id.split(this.element.id + type + '_')[1]);\n            var pivotValue = pivotValues[rowIndex][0];\n            var name_2 = this.parent.dataType === 'olap' ? pivotValue.formattedText :\n                (pivotValue.actualText ? pivotValue.actualText.toString() : pivotValue.formattedText.toString());\n            var text = pivotValue.formattedText ? pivotValue.formattedText.toString() : name_2;\n            var caption = (pivotValue.hasChild && !pivotValue.isNamedSet) ?\n                ((pivotValue.isDrilled ? ' - ' : ' + ') + text) : text;\n            var tupInfo = this.parent.dataType === 'olap' ?\n                this.engineModule.tupRowInfo[pivotValue.ordinal] : undefined;\n            var levelName = tupInfo ? tupInfo.uNameCollection : pivotValue.valueSort.levelName.toString();\n            var customAttributes = {\n                fieldName: pivotValue.valueSort.axis,\n                level: pivotValue.level,\n                hasChild: pivotValue.hasChild,\n                levelName: levelName,\n                name: name_2,\n                text: caption,\n                rowIndex: rowIndex,\n                colIndex: 0,\n                isDrilled: pivotValue.isDrilled,\n                cell: pivotValue\n            };\n            if (this.parent.dataType === 'olap') {\n                this.parent.onDrill(undefined, customAttributes);\n            }\n            else {\n                this.onDrill({ customAttributes: customAttributes });\n            }\n        }\n        else if (option === 'drillThrough') {\n            /* tslint:disable-next-line:max-line-length */\n            this.parent.drillThroughModule.executeDrillThrough(pivotValues[this.pivotIndex.rIndex][this.pivotIndex.cIndex], this.pivotIndex.rIndex, this.pivotIndex.rIndex);\n        }\n        else if (option === 'exit') {\n            this.accumulationMenu.close();\n        }\n    };\n    PivotChart.prototype.getChartHeight = function () {\n        var height = isNullOrUndefined(this.parent.getHeightAsNumber()) ? 'auto' :\n            this.parent.getHeightAsNumber().toString();\n        if (!isNullOrUndefined(this.parent.getHeightAsNumber())) {\n            if (this.parent.showToolbar && this.parent.showGroupingBar) {\n                height = (this.parent.getHeightAsNumber() - (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                    this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 42) -\n                    (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                        this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 76)).toString();\n            }\n            else if (this.parent.showToolbar) {\n                height = (this.parent.getHeightAsNumber() - (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                    this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 42)).toString();\n            }\n            else if (this.parent.showGroupingBar) {\n                height = (this.parent.getHeightAsNumber() - (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                    this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 76)).toString();\n            }\n            else if ((this.parent.chart && parseInt(this.parent.chart.height, 10) < 200) || this.parent.getHeightAsNumber() < 200) {\n                height = '200';\n            }\n        }\n        else {\n            height = 'auto';\n        }\n        return height;\n    };\n    PivotChart.prototype.getChartAutoHeight = function () {\n        var height = this.parent.element.offsetHeight;\n        if (this.parent.showToolbar && this.parent.showGroupingBar) {\n            height = this.parent.element.offsetHeight - (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 42) -\n                (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                    this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 76);\n        }\n        else if (this.parent.showToolbar) {\n            height = this.parent.element.offsetHeight - (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 42);\n        }\n        else if (this.parent.showGroupingBar) {\n            height = this.parent.element.offsetHeight - (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 76);\n        }\n        return height;\n    };\n    PivotChart.prototype.axisLabelRender = function (args) {\n        if (this.chartSettings.showMultiLevelLabels) {\n            if (args.axis.name === 'primaryXAxis') {\n                args.text = '';\n            }\n        }\n        this.parent.trigger(events.chartAxisLabelRender, args);\n    };\n    PivotChart.prototype.multiLevelLabelClick = function (args) {\n        var eventArgs = {\n            axis: args.axis,\n            text: args.text,\n            cell: !isNullOrUndefined(args.customAttributes) ? args.customAttributes.cell : undefined,\n            cancel: false\n        };\n        this.parent.trigger(events.multiLevelLabelClick, eventArgs);\n        /* tslint:disable-next-line:no-any */\n        if (!eventArgs.cancel && args.customAttributes && args.customAttributes.hasChild && !args.customAttributes.cell.isNamedSet) {\n            if (this.parent.dataType === 'olap') {\n                this.parent.onDrill(undefined, args.customAttributes);\n            }\n            else {\n                this.onDrill(args);\n            }\n        }\n    };\n    /* tslint:disable:no-any */\n    /** @hidden */\n    PivotChart.prototype.onDrill = function (args) {\n        var labelInfo = args.customAttributes;\n        /* tslint:enable:no-any */\n        var delimiter = (this.dataSourceSettings.drilledMembers[0] && this.dataSourceSettings.drilledMembers[0].delimiter) ?\n            this.dataSourceSettings.drilledMembers[0].delimiter : '**';\n        var fieldName = labelInfo.fieldName;\n        var currentCell = this.engineModule.pivotValues[labelInfo.rowIndex][labelInfo.colIndex];\n        var memberUqName = currentCell.valueSort.levelName.\n            split(this.engineModule.valueSortSettings.headerDelimiter).join(delimiter);\n        var fieldAvail = false;\n        if (this.dataSourceSettings.drilledMembers.length === 0) {\n            this.parent.setProperties({\n                dataSourceSettings: { drilledMembers: [{ name: fieldName, items: [memberUqName], delimiter: delimiter }] }\n            }, true);\n        }\n        else {\n            for (var fCnt = 0; fCnt < this.dataSourceSettings.drilledMembers.length; fCnt++) {\n                var field = this.dataSourceSettings.drilledMembers[fCnt];\n                memberUqName = memberUqName.split(delimiter).join(field.delimiter ? field.delimiter : delimiter);\n                delimiter = field.delimiter = field.delimiter ? field.delimiter : delimiter;\n                if (field.name === fieldName) {\n                    fieldAvail = true;\n                    var memIndex = field.items.indexOf(memberUqName);\n                    if (memIndex > -1) {\n                        field.items.splice(memIndex, 1);\n                    }\n                    else {\n                        field.items.push(memberUqName);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n            if (!fieldAvail) {\n                this.dataSourceSettings.drilledMembers.push({ name: fieldName, items: [memberUqName], delimiter: delimiter });\n            }\n        }\n        this.parent.showWaitingPopup();\n        var pivot = this;\n        //setTimeout(() => {\n        var drilledItem = {\n            fieldName: fieldName, memberName: memberUqName, delimiter: delimiter,\n            axis: 'row',\n            action: labelInfo.isDrilled ? 'up' : 'down',\n            currentCell: currentCell\n        };\n        var drillArgs = {\n            drillInfo: drilledItem,\n            pivotview: isBlazor() ? undefined : pivot.parent\n        };\n        pivot.parent.trigger(events.drill, drillArgs);\n        if (pivot.parent.enableVirtualization) {\n            if (isBlazor()) {\n                /* tslint:disable */\n                var sfBlazor = 'sfBlazor';\n                var dataSourceSettings = window[sfBlazor].copyWithoutCircularReferences([pivot.dataSourceSettings], pivot.dataSourceSettings);\n                var drillItem = window[sfBlazor].copyWithoutCircularReferences([drilledItem], drilledItem);\n                var args_1 = window[sfBlazor].copyWithoutCircularReferences([drillArgs], drillArgs);\n                pivot.parent.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'onDrill', { 'dataSourceSettings': dataSourceSettings, 'drilledItem': drillItem }).then(function (data) {\n                    pivot.parent.updateBlazorData(data, pivot.parent);\n                    pivot.parent.engineModule.drilledMembers = pivot.dataSourceSettings.drilledMembers;\n                    pivot.parent.allowServerDataBinding = false;\n                    pivot.parent.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                    delete pivot.parent.bulkChanges.pivotValues;\n                    pivot.parent.allowServerDataBinding = true;\n                    pivot.parent.renderPivotGrid();\n                });\n                /* tslint:enable */\n            }\n            else if (pivot.parent.dataSourceSettings.mode === 'Server') {\n                pivot.parent.getEngine('onDrill', drilledItem, null, null, null, null, null);\n            }\n            else {\n                pivot.engineModule.drilledMembers = pivot.dataSourceSettings.drilledMembers;\n                pivot.engineModule.onDrill(drilledItem);\n            }\n        }\n        else if (pivot.parent.dataSourceSettings.mode === 'Server') {\n            pivot.parent.getEngine('onDrill', drilledItem, null, null, null, null, null);\n        }\n        else {\n            pivot.engineModule.generateGridData(pivot.dataSourceSettings);\n        }\n        pivot.parent.allowServerDataBinding = false;\n        pivot.parent.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n        /* tslint:disable-next-line:no-any */\n        delete pivot.parent.bulkChanges.pivotValues;\n        pivot.parent.allowServerDataBinding = true;\n        pivot.parent.renderPivotGrid();\n        //});\n    };\n    PivotChart.prototype.isAttributeDrill = function (hierarchy, drillInfo) {\n        var isDrill = false;\n        for (var i = 0; i < this.dataSourceSettings.drilledMembers.length; i++) {\n            if (this.dataSourceSettings.drilledMembers[i].name === hierarchy) {\n                for (var j = 0; j < this.dataSourceSettings.drilledMembers[i].items.length; j++) {\n                    var drillItems = this.dataSourceSettings.drilledMembers[i].items[j].split(this.dataSourceSettings.drilledMembers[i].delimiter);\n                    var levelName = '';\n                    for (var k = 0; k < drillItems.length; k++) {\n                        if (drillInfo[k] && drillInfo[k].uName) {\n                            levelName = levelName + (levelName === '' ? '' : this.dataSourceSettings.drilledMembers[i].delimiter) + (drillInfo[k].uName.indexOf('[Measures]') > -1 ? '[Measures]' : drillInfo[k].uName);\n                        }\n                    }\n                    if (levelName === this.dataSourceSettings.drilledMembers[i].items[j]) {\n                        isDrill = true;\n                        break;\n                    }\n                }\n            }\n        }\n        return isDrill;\n    };\n    PivotChart.prototype.load = function (args) {\n        if (args.chart.zoomModule) {\n            args.chart.zoomModule.isZoomed = true;\n        }\n        this.parent.trigger(events.chartLoad, args);\n    };\n    PivotChart.prototype.resized = function (args) {\n        if (isBlazor()) {\n            args.chart = this.parent.chart;\n        }\n        if (this.accumulationType.indexOf(this.chartSettings.chartSeries.type) < 0) {\n            args.chart.primaryXAxis.zoomFactor = this.getZoomFactor();\n            if (!this.parent.chartSettings.zoomSettings.enableScrollbar) {\n                args.chart.primaryXAxis.zoomFactor = 1;\n            }\n        }\n        this.parent.trigger(events.chartResized, args);\n    };\n    /**\n     * To destroy the chart module\n     * @returns void\n     * @hidden\n     */\n    /* tslint:disable:no-empty */\n    PivotChart.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        if (this.parent.chart && !this.parent.chart.isDestroyed) {\n            if (this.accumulationMenu && this.accumulationMenu.isDestroyed) {\n                this.accumulationMenu.destroy();\n            }\n            this.parent.chart.destroy();\n        }\n        else {\n            return;\n        }\n    };\n    return PivotChart;\n}());\nexport { PivotChart };\n","/**\n * Specifies Chart Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.axisTitleFont = {\n        size: '14px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.chartTitleFont = {\n        size: '15px',\n        fontWeight: '500',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.chartSubTitleFont = {\n        size: '11px',\n        fontWeight: '500',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.crosshairLabelFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.tooltipLabelFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.legendLabelFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.stripLineLabelFont = {\n        size: '12px',\n        fontWeight: 'Regular',\n        color: '#353535',\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.stockEventFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n})(Theme || (Theme = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Event, Complex, Collection } from '@syncfusion/ej2-base';\nimport { Theme } from '../../common/base/themes';\n/**\n * Allows to configure the animation behavior for chart series such as animation duration and delay.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    __decorate([\n        Property(0)\n    ], Animation.prototype, \"delay\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Allows to customize specific region for line type series with a variety of means such as value, color, pattern of dashes.\n */\nvar ChartSegment = /** @class */ (function (_super) {\n    __extends(ChartSegment, _super);\n    function ChartSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ChartSegment.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ChartSegment.prototype, \"color\", void 0);\n    __decorate([\n        Property('0')\n    ], ChartSegment.prototype, \"dashArray\", void 0);\n    return ChartSegment;\n}(ChildProperty));\nexport { ChartSegment };\n/**\n * Allows to customize the apprearance of the text in the chart such as font style, font size, font weight, font color, font family, text alignment, opacity, text overflow.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('Center')\n    ], Font.prototype, \"textAlignment\", void 0);\n    __decorate([\n        Property('Segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Trim')\n    ], Font.prototype, \"textOverflow\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Allow options to customize the left, right, top and bottom margins of the pivot chart.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Allow options to customize the border of the chart such as color and border size in the pivot chart.\n * For example, to display the chart border color as red, set the properties `color` to either **\"red\"**\n * or **\"#FF0000\"** or **\"rgba(255,0,0,1.0)\"** and `width` to **0.5**.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Allows to configure the position of the marker such as top and left in the chart.\n */\nvar Offset = /** @class */ (function (_super) {\n    __extends(Offset, _super);\n    function Offset() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Offset.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Offset.prototype, \"y\", void 0);\n    return Offset;\n}(ChildProperty));\nexport { Offset };\n/**\n * Allows you to highlight a specific point of the series while rendering the pivot chart.\n * For example, to highlight first point in the first series, set the properties series to 0 and points to 1. To use this option, it requires the property `selectionMode` to be **Point** or **Series**.\n * @public\n */\nvar Indexes = /** @class */ (function (_super) {\n    __extends(Indexes, _super);\n    function Indexes() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Indexes.prototype, \"series\", void 0);\n    __decorate([\n        Property(0)\n    ], Indexes.prototype, \"point\", void 0);\n    return Indexes;\n}(ChildProperty));\nexport { Indexes };\n/**\n * Allow options to customize the chart area with a variety of settings such as background color, border, opacity and background image in the pivot chart.\n * For example, to change the of the pivot chart's background, set the property `opacity` to **0.5**.\n */\nvar ChartArea = /** @class */ (function (_super) {\n    __extends(ChartArea, _super);\n    function ChartArea() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Border)\n    ], ChartArea.prototype, \"border\", void 0);\n    __decorate([\n        Property('transparent')\n    ], ChartArea.prototype, \"background\", void 0);\n    __decorate([\n        Property(1)\n    ], ChartArea.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ChartArea.prototype, \"backgroundImage\", void 0);\n    return ChartArea;\n}(ChildProperty));\nexport { ChartArea };\n/**\n * Allow options to customize the crosshair line with different settings such as color and width of the line,\n * line types that are shown horizontally and vertically to indicate the value of the axis at the mouse hover or touch position in the pivot chart.\n */\nvar CrosshairSettings = /** @class */ (function (_super) {\n    __extends(CrosshairSettings, _super);\n    function CrosshairSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], CrosshairSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('')\n    ], CrosshairSettings.prototype, \"dashArray\", void 0);\n    __decorate([\n        Complex({ color: null, width: 1 }, Border)\n    ], CrosshairSettings.prototype, \"line\", void 0);\n    __decorate([\n        Property('Both')\n    ], CrosshairSettings.prototype, \"lineType\", void 0);\n    return CrosshairSettings;\n}(ChildProperty));\nexport { CrosshairSettings };\n/**\n * Allows to configure the data label with different settings such as name, fill color, opacity, rotation angle, border, marging, etc in the chart.\n */\nvar DataLabelSettings = /** @class */ (function (_super) {\n    __extends(DataLabelSettings, _super);\n    function DataLabelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], DataLabelSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(null)\n    ], DataLabelSettings.prototype, \"name\", void 0);\n    __decorate([\n        Property('transparent')\n    ], DataLabelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], DataLabelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(0)\n    ], DataLabelSettings.prototype, \"angle\", void 0);\n    __decorate([\n        Property(false)\n    ], DataLabelSettings.prototype, \"enableRotation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], DataLabelSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property(5)\n    ], DataLabelSettings.prototype, \"rx\", void 0);\n    __decorate([\n        Property(5)\n    ], DataLabelSettings.prototype, \"ry\", void 0);\n    __decorate([\n        Property('Center')\n    ], DataLabelSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({ width: null, color: null }, Border)\n    ], DataLabelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ left: 5, right: 5, top: 5, bottom: 5 }, Margin)\n    ], DataLabelSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ size: '11px', color: '', fontStyle: 'Normal', fontWeight: 'Normal', fontFamily: 'Segoe UI' }, Font)\n    ], DataLabelSettings.prototype, \"font\", void 0);\n    __decorate([\n        Property(null)\n    ], DataLabelSettings.prototype, \"template\", void 0);\n    return DataLabelSettings;\n}(ChildProperty));\nexport { DataLabelSettings };\n/**\n * Allow options to customize the pie, funnel, doughnut and pyramid chart data label connector.\n */\nvar PivotChartConnectorStyle = /** @class */ (function (_super) {\n    __extends(PivotChartConnectorStyle, _super);\n    function PivotChartConnectorStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Line')\n    ], PivotChartConnectorStyle.prototype, \"type\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartConnectorStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartConnectorStyle.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartConnectorStyle.prototype, \"length\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartConnectorStyle.prototype, \"dashArray\", void 0);\n    return PivotChartConnectorStyle;\n}(ChildProperty));\nexport { PivotChartConnectorStyle };\n/**\n * Allow options to customize the pie, funnel, doughnut and pyramid chart data label connector.\n */\nvar PivotChartDataLabel = /** @class */ (function (_super) {\n    __extends(PivotChartDataLabel, _super);\n    function PivotChartDataLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], PivotChartDataLabel.prototype, \"visible\", void 0);\n    __decorate([\n        Property('transparent')\n    ], PivotChartDataLabel.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartDataLabel.prototype, \"angle\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotChartDataLabel.prototype, \"enableRotation\", void 0);\n    __decorate([\n        Property('Outside')\n    ], PivotChartDataLabel.prototype, \"position\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartDataLabel.prototype, \"rx\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartDataLabel.prototype, \"ry\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartDataLabel.prototype, \"template\", void 0);\n    __decorate([\n        Complex({}, PivotChartConnectorStyle)\n    ], PivotChartDataLabel.prototype, \"connectorStyle\", void 0);\n    return PivotChartDataLabel;\n}(ChildProperty));\nexport { PivotChartDataLabel };\n/**\n *  Allows to configure the marker of the series such as shape, width, height, border, position, fill color, opacity, data label etc in the chart\n */\nvar MarkerSettings = /** @class */ (function (_super) {\n    __extends(MarkerSettings, _super);\n    function MarkerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], MarkerSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Circle')\n    ], MarkerSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], MarkerSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(5)\n    ], MarkerSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], MarkerSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ width: 2, color: null }, Border)\n    ], MarkerSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Offset)\n    ], MarkerSettings.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], MarkerSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], MarkerSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, DataLabelSettings)\n    ], MarkerSettings.prototype, \"dataLabel\", void 0);\n    return MarkerSettings;\n}(ChildProperty));\nexport { MarkerSettings };\n/**\n * Allows to configure the error bar cap settings such as cap width, length, color, opacity.\n */\nvar ErrorBarCapSettings = /** @class */ (function (_super) {\n    __extends(ErrorBarCapSettings, _super);\n    function ErrorBarCapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(1)\n    ], ErrorBarCapSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], ErrorBarCapSettings.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], ErrorBarCapSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarCapSettings.prototype, \"opacity\", void 0);\n    return ErrorBarCapSettings;\n}(ChildProperty));\nexport { ErrorBarCapSettings };\n/**\n * Allows options for customize the error bar chart with diffent settings such as type, direction, mode, color, width, etc.\n * @public\n */\nvar ErrorBarSettings = /** @class */ (function (_super) {\n    __extends(ErrorBarSettings, _super);\n    function ErrorBarSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], ErrorBarSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Fixed')\n    ], ErrorBarSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property('Both')\n    ], ErrorBarSettings.prototype, \"direction\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ErrorBarSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"verticalError\", void 0);\n    __decorate([\n        Property(null)\n    ], ErrorBarSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"horizontalError\", void 0);\n    __decorate([\n        Property(3)\n    ], ErrorBarSettings.prototype, \"verticalNegativeError\", void 0);\n    __decorate([\n        Property(3)\n    ], ErrorBarSettings.prototype, \"verticalPositiveError\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"horizontalNegativeError\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"horizontalPositiveError\", void 0);\n    __decorate([\n        Complex(null, ErrorBarCapSettings)\n    ], ErrorBarSettings.prototype, \"errorBarCap\", void 0);\n    return ErrorBarSettings;\n}(ChildProperty));\nexport { ErrorBarSettings };\n/**\n * Allows to configure the trendlines of the chart such as name, period, type, tooltip, marker, animation, color, legend shape, etc.\n */\nvar Trendline = /** @class */ (function (_super) {\n    __extends(Trendline, _super);\n    function Trendline() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Trendline.prototype, \"name\", void 0);\n    __decorate([\n        Property('0')\n    ], Trendline.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(true)\n    ], Trendline.prototype, \"visible\", void 0);\n    __decorate([\n        Property(2)\n    ], Trendline.prototype, \"period\", void 0);\n    __decorate([\n        Property('Linear')\n    ], Trendline.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Trendline.prototype, \"backwardForecast\", void 0);\n    __decorate([\n        Property(0)\n    ], Trendline.prototype, \"forwardForecast\", void 0);\n    __decorate([\n        Property(2)\n    ], Trendline.prototype, \"polynomialOrder\", void 0);\n    __decorate([\n        Complex({}, MarkerSettings)\n    ], Trendline.prototype, \"marker\", void 0);\n    __decorate([\n        Property(true)\n    ], Trendline.prototype, \"enableTooltip\", void 0);\n    __decorate([\n        Complex({}, Animation)\n    ], Trendline.prototype, \"animation\", void 0);\n    __decorate([\n        Property('')\n    ], Trendline.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], Trendline.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Trendline.prototype, \"intercept\", void 0);\n    __decorate([\n        Property('SeriesType')\n    ], Trendline.prototype, \"legendShape\", void 0);\n    return Trendline;\n}(ChildProperty));\nexport { Trendline };\n/**\n * Allows to configure the empty points with a variety of means such as fill color, border and mode in the chart.\n */\nvar EmptyPointSettings = /** @class */ (function (_super) {\n    __extends(EmptyPointSettings, _super);\n    function EmptyPointSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], EmptyPointSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], EmptyPointSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Gap')\n    ], EmptyPointSettings.prototype, \"mode\", void 0);\n    return EmptyPointSettings;\n}(ChildProperty));\nexport { EmptyPointSettings };\n/**\n * Allows to customize the rounded corners of the column series in the chart.\n */\nvar CornerRadius = /** @class */ (function (_super) {\n    __extends(CornerRadius, _super);\n    function CornerRadius() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], CornerRadius.prototype, \"topLeft\", void 0);\n    __decorate([\n        Property(0)\n    ], CornerRadius.prototype, \"topRight\", void 0);\n    __decorate([\n        Property(0)\n    ], CornerRadius.prototype, \"bottomLeft\", void 0);\n    __decorate([\n        Property(0)\n    ], CornerRadius.prototype, \"bottomRight\", void 0);\n    return CornerRadius;\n}(ChildProperty));\nexport { CornerRadius };\n/**\n * Allows to configure the crosshair tooltip with text style and fill color in the chart.\n */\nvar CrosshairTooltip = /** @class */ (function (_super) {\n    __extends(CrosshairTooltip, _super);\n    function CrosshairTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], CrosshairTooltip.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], CrosshairTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex(Theme.crosshairLabelFont, Font)\n    ], CrosshairTooltip.prototype, \"textStyle\", void 0);\n    return CrosshairTooltip;\n}(ChildProperty));\nexport { CrosshairTooltip };\n/**\n * Allows to congifure the strip line properties such as line position, size, color, size type, border, text and opacity in the chart.\n */\nvar StripLineSettings = /** @class */ (function (_super) {\n    __extends(StripLineSettings, _super);\n    function StripLineSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], StripLineSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], StripLineSettings.prototype, \"startFromAxis\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"size\", void 0);\n    __decorate([\n        Property('#808080')\n    ], StripLineSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property('Auto')\n    ], StripLineSettings.prototype, \"sizeType\", void 0);\n    __decorate([\n        Property(false)\n    ], StripLineSettings.prototype, \"isRepeat\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"repeatEvery\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"repeatUntil\", void 0);\n    __decorate([\n        Property(false)\n    ], StripLineSettings.prototype, \"isSegmented\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"segmentStart\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"segmentEnd\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"segmentAxisName\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 1 }, Border)\n    ], StripLineSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('')\n    ], StripLineSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"rotation\", void 0);\n    __decorate([\n        Property('Middle')\n    ], StripLineSettings.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Middle')\n    ], StripLineSettings.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex(Theme.stripLineLabelFont, Font)\n    ], StripLineSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Behind')\n    ], StripLineSettings.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(1)\n    ], StripLineSettings.prototype, \"opacity\", void 0);\n    return StripLineSettings;\n}(ChildProperty));\nexport { StripLineSettings };\n/**\n * Allows to customize the label border with a variety of means such as label color, width and labe type in the chart.\n */\nvar LabelBorder = /** @class */ (function (_super) {\n    __extends(LabelBorder, _super);\n    function LabelBorder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], LabelBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], LabelBorder.prototype, \"width\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], LabelBorder.prototype, \"type\", void 0);\n    return LabelBorder;\n}(ChildProperty));\nexport { LabelBorder };\n/**\n * Allows to configure the major grid lines such as line width, color and dashArray in the `axis`.\n */\nvar MajorGridLines = /** @class */ (function (_super) {\n    __extends(MajorGridLines, _super);\n    function MajorGridLines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(1)\n    ], MajorGridLines.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], MajorGridLines.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], MajorGridLines.prototype, \"color\", void 0);\n    return MajorGridLines;\n}(ChildProperty));\nexport { MajorGridLines };\n/**\n * Allows to configure the minor grid lines such as line width, dashArray and color in the `axis`.\n */\nvar MinorGridLines = /** @class */ (function (_super) {\n    __extends(MinorGridLines, _super);\n    function MinorGridLines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0.7)\n    ], MinorGridLines.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], MinorGridLines.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], MinorGridLines.prototype, \"color\", void 0);\n    return MinorGridLines;\n}(ChildProperty));\nexport { MinorGridLines };\n/**\n * Allows to configure the axis line such as line width, dashArray and color in a chart.\n */\nvar AxisLine = /** @class */ (function (_super) {\n    __extends(AxisLine, _super);\n    function AxisLine() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(1)\n    ], AxisLine.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], AxisLine.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], AxisLine.prototype, \"color\", void 0);\n    return AxisLine;\n}(ChildProperty));\nexport { AxisLine };\n/**\n * Allows to configure the major tick lines such as width, height and color in the chart.\n */\nvar MajorTickLines = /** @class */ (function (_super) {\n    __extends(MajorTickLines, _super);\n    function MajorTickLines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(1)\n    ], MajorTickLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], MajorTickLines.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], MajorTickLines.prototype, \"color\", void 0);\n    return MajorTickLines;\n}(ChildProperty));\nexport { MajorTickLines };\n/**\n * Allows to configure the minor tick lines such as width, height and color in the chart.\n */\nvar MinorTickLines = /** @class */ (function (_super) {\n    __extends(MinorTickLines, _super);\n    function MinorTickLines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0.7)\n    ], MinorTickLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], MinorTickLines.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], MinorTickLines.prototype, \"color\", void 0);\n    return MinorTickLines;\n}(ChildProperty));\nexport { MinorTickLines };\n/**\n * Allows to configure the position of the legend such as top and left in the chart.\n */\nvar ChartLocation = /** @class */ (function (_super) {\n    __extends(ChartLocation, _super);\n    function ChartLocation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ChartLocation.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], ChartLocation.prototype, \"y\", void 0);\n    return ChartLocation;\n}(ChildProperty));\nexport { ChartLocation };\n/**\n * Allow options to customize the border of the chart series such as color and border size in the pivot chart.\n * For example, to display the chart series border color as red, set the properties `color` to either **\"red\"** or **\"#FF0000\"** or **\"rgba(255,0,0,1.0)\"** and `width` to **0.5**.\n */\nvar PivotChartSeriesBorder = /** @class */ (function () {\n    function PivotChartSeriesBorder() {\n    }\n    __decorate([\n        Property('')\n    ], PivotChartSeriesBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesBorder.prototype, \"width\", void 0);\n    return PivotChartSeriesBorder;\n}());\nexport { PivotChartSeriesBorder };\n/**\n * Allows to configure the animation behavior for chart series such as animation duration and delay.\n */\nvar PivotChartSeriesAnimation = /** @class */ (function () {\n    function PivotChartSeriesAnimation() {\n    }\n    __decorate([\n        Property(true)\n    ], PivotChartSeriesAnimation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], PivotChartSeriesAnimation.prototype, \"duration\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesAnimation.prototype, \"delay\", void 0);\n    return PivotChartSeriesAnimation;\n}());\nexport { PivotChartSeriesAnimation };\n/**\n * Allows to customize specific region for line type series with a variety of means such as value, color, pattern of dashes.\n */\nvar PivotChartSeriesSegment = /** @class */ (function () {\n    function PivotChartSeriesSegment() {\n    }\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesSegment.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesSegment.prototype, \"color\", void 0);\n    __decorate([\n        Property('0')\n    ], PivotChartSeriesSegment.prototype, \"dashArray\", void 0);\n    return PivotChartSeriesSegment;\n}());\nexport { PivotChartSeriesSegment };\n/**\n *  Allows to configure the marker of the series such as shape, width, height, border, position, fill color, opacity, data label etc in the chart\n */\nvar PivotChartSeriesMarkerSettings = /** @class */ (function () {\n    function PivotChartSeriesMarkerSettings() {\n    }\n    __decorate([\n        Property(false)\n    ], PivotChartSeriesMarkerSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Circle')\n    ], PivotChartSeriesMarkerSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartSeriesMarkerSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartSeriesMarkerSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartSeriesMarkerSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ width: 2, color: null }, Border)\n    ], PivotChartSeriesMarkerSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesMarkerSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesMarkerSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, DataLabelSettings)\n    ], PivotChartSeriesMarkerSettings.prototype, \"dataLabel\", void 0);\n    return PivotChartSeriesMarkerSettings;\n}());\nexport { PivotChartSeriesMarkerSettings };\n/**\n * Allows options for customize the error bar chart series with diffent settings such as type, direction, mode, color, width, etc.\n */\nvar PivotChartSeriesErrorSettings = /** @class */ (function () {\n    function PivotChartSeriesErrorSettings() {\n    }\n    __decorate([\n        Property(false)\n    ], PivotChartSeriesErrorSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Fixed')\n    ], PivotChartSeriesErrorSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property('Both')\n    ], PivotChartSeriesErrorSettings.prototype, \"direction\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], PivotChartSeriesErrorSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesErrorSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"verticalError\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"horizontalError\", void 0);\n    __decorate([\n        Property(3)\n    ], PivotChartSeriesErrorSettings.prototype, \"verticalPositiveError\", void 0);\n    __decorate([\n        Property(3)\n    ], PivotChartSeriesErrorSettings.prototype, \"verticalNegativeError\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"horizontalPositiveError\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"horizontalNegativeError\", void 0);\n    __decorate([\n        Complex(null, ErrorBarCapSettings)\n    ], PivotChartSeriesErrorSettings.prototype, \"errorBarCap\", void 0);\n    return PivotChartSeriesErrorSettings;\n}());\nexport { PivotChartSeriesErrorSettings };\n/**\n * Allows to configure the trendlines of the chart series such as name, period, type, tooltip, marker, animation, color, legend shape, etc.\n */\nvar PivotChartSeriesTrendline = /** @class */ (function () {\n    function PivotChartSeriesTrendline() {\n    }\n    __decorate([\n        Property('')\n    ], PivotChartSeriesTrendline.prototype, \"name\", void 0);\n    __decorate([\n        Property('Linear')\n    ], PivotChartSeriesTrendline.prototype, \"type\", void 0);\n    __decorate([\n        Property(2)\n    ], PivotChartSeriesTrendline.prototype, \"period\", void 0);\n    __decorate([\n        Property(2)\n    ], PivotChartSeriesTrendline.prototype, \"polynomialOrder\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesTrendline.prototype, \"backwardForecast\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesTrendline.prototype, \"forwardForecast\", void 0);\n    __decorate([\n        Complex({}, Animation)\n    ], PivotChartSeriesTrendline.prototype, \"animation\", void 0);\n    __decorate([\n        Complex({}, MarkerSettings)\n    ], PivotChartSeriesTrendline.prototype, \"marker\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotChartSeriesTrendline.prototype, \"enableTooltip\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesTrendline.prototype, \"intercept\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartSeriesTrendline.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesTrendline.prototype, \"width\", void 0);\n    __decorate([\n        Property('SeriesType')\n    ], PivotChartSeriesTrendline.prototype, \"legendShape\", void 0);\n    return PivotChartSeriesTrendline;\n}());\nexport { PivotChartSeriesTrendline };\n/**\n * Allows to configure the empty points with a variety of means such as fill color, border and mode in the chart.\n */\nvar PivotChartSeriesEmptyPointSettings = /** @class */ (function () {\n    function PivotChartSeriesEmptyPointSettings() {\n    }\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesEmptyPointSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], PivotChartSeriesEmptyPointSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Gap')\n    ], PivotChartSeriesEmptyPointSettings.prototype, \"mode\", void 0);\n    return PivotChartSeriesEmptyPointSettings;\n}());\nexport { PivotChartSeriesEmptyPointSettings };\n/**\n * Allows to customize the rounded corners of the column series in the chart.\n */\nvar PivotChartSeriesCornerRadius = /** @class */ (function () {\n    function PivotChartSeriesCornerRadius() {\n    }\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesCornerRadius.prototype, \"topLeft\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesCornerRadius.prototype, \"topRight\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesCornerRadius.prototype, \"bottomLeft\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesCornerRadius.prototype, \"bottomRight\", void 0);\n    return PivotChartSeriesCornerRadius;\n}());\nexport { PivotChartSeriesCornerRadius };\n/**\n * Allows to customize the apprearance of the text in the chart such as font style, font size, font weight, font color, font family, text alignment, opacity, text overflow.\n */\nvar PivotChartAxisFont = /** @class */ (function () {\n    function PivotChartAxisFont() {\n    }\n    __decorate([\n        Property('Normal')\n    ], PivotChartAxisFont.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property('16px')\n    ], PivotChartAxisFont.prototype, \"size\", void 0);\n    __decorate([\n        Property('Normal')\n    ], PivotChartAxisFont.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisFont.prototype, \"color\", void 0);\n    __decorate([\n        Property('Center')\n    ], PivotChartAxisFont.prototype, \"textAlignment\", void 0);\n    __decorate([\n        Property('Segoe UI')\n    ], PivotChartAxisFont.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartAxisFont.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Trim')\n    ], PivotChartAxisFont.prototype, \"textOverflow\", void 0);\n    return PivotChartAxisFont;\n}());\nexport { PivotChartAxisFont };\n/**\n * Allows to configure the crosshair tooltip with text style and fill color in the chart.\n */\nvar PivotChartAxisCrosshairTooltip = /** @class */ (function () {\n    function PivotChartAxisCrosshairTooltip() {\n    }\n    __decorate([\n        Property(false)\n    ], PivotChartAxisCrosshairTooltip.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisCrosshairTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex(Theme.crosshairLabelFont, Font)\n    ], PivotChartAxisCrosshairTooltip.prototype, \"textStyle\", void 0);\n    return PivotChartAxisCrosshairTooltip;\n}());\nexport { PivotChartAxisCrosshairTooltip };\n/**\n * Allows to configure the major tick lines such as width, height and color in the chart.\n */\nvar PivotChartAxisMajorTickLines = /** @class */ (function () {\n    function PivotChartAxisMajorTickLines() {\n    }\n    __decorate([\n        Property(1)\n    ], PivotChartAxisMajorTickLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartAxisMajorTickLines.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisMajorTickLines.prototype, \"color\", void 0);\n    return PivotChartAxisMajorTickLines;\n}());\nexport { PivotChartAxisMajorTickLines };\n/**\n * Allows to configure the major grid lines such as line width, color and dashArray in the `axis`.\n */\nvar PivotChartAxisMajorGridLines = /** @class */ (function () {\n    function PivotChartAxisMajorGridLines() {\n    }\n    __decorate([\n        Property(1)\n    ], PivotChartAxisMajorGridLines.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisMajorGridLines.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisMajorGridLines.prototype, \"color\", void 0);\n    return PivotChartAxisMajorGridLines;\n}());\nexport { PivotChartAxisMajorGridLines };\n/**\n * Allows to configure the minor tick lines such as width, height and color in the chart.\n */\nvar PivotChartAxisMinorTickLines = /** @class */ (function () {\n    function PivotChartAxisMinorTickLines() {\n    }\n    __decorate([\n        Property(0.7)\n    ], PivotChartAxisMinorTickLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartAxisMinorTickLines.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisMinorTickLines.prototype, \"color\", void 0);\n    return PivotChartAxisMinorTickLines;\n}());\nexport { PivotChartAxisMinorTickLines };\n/**\n * Allows to configure the minor grid lines such as line width, dashArray and color in the `axis`.\n */\nvar PivotChartAxisMinorGridLines = /** @class */ (function () {\n    function PivotChartAxisMinorGridLines() {\n    }\n    __decorate([\n        Property(0.7)\n    ], PivotChartAxisMinorGridLines.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisMinorGridLines.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisMinorGridLines.prototype, \"color\", void 0);\n    return PivotChartAxisMinorGridLines;\n}());\nexport { PivotChartAxisMinorGridLines };\n/**\n * Allows to configure the axis line such as line width, dashArray and color in a chart.\n */\nvar PivotChartAxisAxisLine = /** @class */ (function () {\n    function PivotChartAxisAxisLine() {\n    }\n    __decorate([\n        Property(1)\n    ], PivotChartAxisAxisLine.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisAxisLine.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisAxisLine.prototype, \"color\", void 0);\n    return PivotChartAxisAxisLine;\n}());\nexport { PivotChartAxisAxisLine };\n/**\n * Allows to congifure the strip line properties such as line position, size, color, size type, border, text and opacity in the chart.\n */\nvar PivotChartAxisStripLineSettings = /** @class */ (function () {\n    function PivotChartAxisStripLineSettings() {\n    }\n    __decorate([\n        Property(true)\n    ], PivotChartAxisStripLineSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotChartAxisStripLineSettings.prototype, \"startFromAxis\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"size\", void 0);\n    __decorate([\n        Property('#808080')\n    ], PivotChartAxisStripLineSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property('Auto')\n    ], PivotChartAxisStripLineSettings.prototype, \"sizeType\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotChartAxisStripLineSettings.prototype, \"isRepeat\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"repeatEvery\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"repeatUntil\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotChartAxisStripLineSettings.prototype, \"isSegmented\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"segmentStart\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"segmentEnd\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"segmentAxisName\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 1 }, Border)\n    ], PivotChartAxisStripLineSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisStripLineSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"rotation\", void 0);\n    __decorate([\n        Property('Middle')\n    ], PivotChartAxisStripLineSettings.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Middle')\n    ], PivotChartAxisStripLineSettings.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex(Theme.stripLineLabelFont, Font)\n    ], PivotChartAxisStripLineSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Behind')\n    ], PivotChartAxisStripLineSettings.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartAxisStripLineSettings.prototype, \"opacity\", void 0);\n    return PivotChartAxisStripLineSettings;\n}());\nexport { PivotChartAxisStripLineSettings };\n/**\n * Allows to customize the label border with a variety of means such as label color, width and labe type in the chart.\n */\nvar PivotChartAxisLabelBorder = /** @class */ (function () {\n    function PivotChartAxisLabelBorder() {\n    }\n    __decorate([\n        Property('')\n    ], PivotChartAxisLabelBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartAxisLabelBorder.prototype, \"width\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], PivotChartAxisLabelBorder.prototype, \"type\", void 0);\n    return PivotChartAxisLabelBorder;\n}());\nexport { PivotChartAxisLabelBorder };\n/**\n * Allow options to customize the chart area with a variety of settings such as background color, border, opacity and background image in the pivot chart.\n * For example, to change the of the pivot chart's background, set the property `opacity` to **0.5**.\n */\nvar PivotChartSettingsChartArea = /** @class */ (function () {\n    function PivotChartSettingsChartArea() {\n    }\n    __decorate([\n        Complex({}, Border)\n    ], PivotChartSettingsChartArea.prototype, \"border\", void 0);\n    __decorate([\n        Property('transparent')\n    ], PivotChartSettingsChartArea.prototype, \"background\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSettingsChartArea.prototype, \"opacity\", void 0);\n    return PivotChartSettingsChartArea;\n}());\nexport { PivotChartSettingsChartArea };\n/**\n * Allow options to customize the crosshair line with different settings such as color and width of the line,\n * line types that are shown horizontally and vertically to indicate the value of the axis at the mouse hover or touch position in the pivot chart.\n */\nvar PivotChartSettingsCrosshairSettings = /** @class */ (function () {\n    function PivotChartSettingsCrosshairSettings() {\n    }\n    __decorate([\n        Property(false)\n    ], PivotChartSettingsCrosshairSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartSettingsCrosshairSettings.prototype, \"dashArray\", void 0);\n    __decorate([\n        Complex({ color: null, width: 1 }, Border)\n    ], PivotChartSettingsCrosshairSettings.prototype, \"line\", void 0);\n    __decorate([\n        Property('Both')\n    ], PivotChartSettingsCrosshairSettings.prototype, \"lineType\", void 0);\n    return PivotChartSettingsCrosshairSettings;\n}());\nexport { PivotChartSettingsCrosshairSettings };\n/**\n * Allow options for customizing legends with different properties such as legend visibility,\n * height, width, position, legend padding, alignment, textStyle, border, margin, background, opacity, description, tabIndex in the pivot chart.\n */\nvar PivotChartSettingsLegendSettings = /** @class */ (function () {\n    function PivotChartSettingsLegendSettings() {\n    }\n    __decorate([\n        Property(true)\n    ], PivotChartSettingsLegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSettingsLegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSettingsLegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, ChartLocation)\n    ], PivotChartSettingsLegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property('Auto')\n    ], PivotChartSettingsLegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property(8)\n    ], PivotChartSettingsLegendSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property('Center')\n    ], PivotChartSettingsLegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], PivotChartSettingsLegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsLegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsLegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], PivotChartSettingsLegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], PivotChartSettingsLegendSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartSettingsLegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property('transparent')\n    ], PivotChartSettingsLegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSettingsLegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotChartSettingsLegendSettings.prototype, \"toggleVisibility\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSettingsLegendSettings.prototype, \"description\", void 0);\n    __decorate([\n        Property(3)\n    ], PivotChartSettingsLegendSettings.prototype, \"tabIndex\", void 0);\n    return PivotChartSettingsLegendSettings;\n}());\nexport { PivotChartSettingsLegendSettings };\n/**\n * Allows you to highlight a specific point of the series while rendering the pivot chart.\n * For example, to highlight first point in the first series, set the properties series to 0 and points to 1. To use this option, it requires the property `selectionMode` to be **Point** or **Series**.\n */\nvar PivotChartSettingsIndexes = /** @class */ (function () {\n    function PivotChartSettingsIndexes() {\n    }\n    __decorate([\n        Property(0)\n    ], PivotChartSettingsIndexes.prototype, \"series\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSettingsIndexes.prototype, \"point\", void 0);\n    return PivotChartSettingsIndexes;\n}());\nexport { PivotChartSettingsIndexes };\n/**\n * Allow options to customize the left, right, top and bottom margins of the pivot chart.\n */\nvar PivotChartSettingsMargin = /** @class */ (function () {\n    function PivotChartSettingsMargin() {\n    }\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsMargin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsMargin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsMargin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsMargin.prototype, \"bottom\", void 0);\n    return PivotChartSettingsMargin;\n}());\nexport { PivotChartSettingsMargin };\n/**\n * Allow options to customize the chart series with different settings such as fill color, animation of the series,\n * series width, border, visibility of the series, opacity, chart series types, marker, tooltip, trendlines, etc., in the pivot chart.\n * For example, to display the line type pivot chart, set the property `type` to **Line**.\n */\nvar PivotSeries = /** @class */ (function (_super) {\n    __extends(PivotSeries, _super);\n    function PivotSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"fill\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSeries.prototype, \"explode\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSeries.prototype, \"explodeAll\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"explodeIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"innerRadius\", void 0);\n    __decorate([\n        Property('30%')\n    ], PivotSeries.prototype, \"explodeOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotSeries.prototype, \"gapRatio\", void 0);\n    __decorate([\n        Property('Value')\n    ], PivotSeries.prototype, \"groupMode\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"groupTo\", void 0);\n    __decorate([\n        Property('20%')\n    ], PivotSeries.prototype, \"neckHeight\", void 0);\n    __decorate([\n        Property('20%')\n    ], PivotSeries.prototype, \"neckWidth\", void 0);\n    __decorate([\n        Property('Linear')\n    ], PivotSeries.prototype, \"pyramidMode\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotSeries.prototype, \"startAngle\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], PivotSeries.prototype, \"animation\", void 0);\n    __decorate([\n        Complex(null, PivotChartDataLabel)\n    ], PivotSeries.prototype, \"dataLabel\", void 0);\n    __decorate([\n        Property('0')\n    ], PivotSeries.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotSeries.prototype, \"width\", void 0);\n    __decorate([\n        Property('X')\n    ], PivotSeries.prototype, \"segmentAxis\", void 0);\n    __decorate([\n        Property('Line')\n    ], PivotSeries.prototype, \"drawType\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotSeries.prototype, \"isClosed\", void 0);\n    __decorate([\n        Collection([], ChartSegment)\n    ], PivotSeries.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], PivotSeries.prototype, \"stackingGroup\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], PivotSeries.prototype, \"border\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotSeries.prototype, \"visible\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotSeries.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Line')\n    ], PivotSeries.prototype, \"type\", void 0);\n    __decorate([\n        Complex(null, MarkerSettings)\n    ], PivotSeries.prototype, \"marker\", void 0);\n    __decorate([\n        Complex(null, ErrorBarSettings)\n    ], PivotSeries.prototype, \"errorBar\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotSeries.prototype, \"enableTooltip\", void 0);\n    __decorate([\n        Collection([], Trendline)\n    ], PivotSeries.prototype, \"trendlines\", void 0);\n    __decorate([\n        Property('')\n    ], PivotSeries.prototype, \"tooltipMappingName\", void 0);\n    __decorate([\n        Property('SeriesType')\n    ], PivotSeries.prototype, \"legendShape\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotSeries.prototype, \"minRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"selectionStyle\", void 0);\n    __decorate([\n        Property('Natural')\n    ], PivotSeries.prototype, \"splineType\", void 0);\n    __decorate([\n        Property(3)\n    ], PivotSeries.prototype, \"maxRadius\", void 0);\n    __decorate([\n        Property(0.5)\n    ], PivotSeries.prototype, \"cardinalSplineTension\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"columnWidth\", void 0);\n    __decorate([\n        Complex(null, EmptyPointSettings)\n    ], PivotSeries.prototype, \"emptyPointSettings\", void 0);\n    __decorate([\n        Complex(null, CornerRadius)\n    ], PivotSeries.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotSeries.prototype, \"columnSpacing\", void 0);\n    return PivotSeries;\n}(ChildProperty));\nexport { PivotSeries };\n/**\n * Allow options to customize the axis with different properties such as labelIntersectAction, labelStyle, title,\n * description, crosshairTooltip, labelFormat, titleStyle, plotOffset, edgeLabelPlacement, labelPlacement, tickPosition, opposedPosition, minor and\n * major grid lines, minor and major tick lines, border, etc. in the pivot chart.\n */\nvar PivotAxis = /** @class */ (function (_super) {\n    __extends(PivotAxis, _super);\n    function PivotAxis() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Rotate45')\n    ], PivotAxis.prototype, \"labelIntersectAction\", void 0);\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], PivotAxis.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property('')\n    ], PivotAxis.prototype, \"title\", void 0);\n    __decorate([\n        Complex({}, CrosshairTooltip)\n    ], PivotAxis.prototype, \"crosshairTooltip\", void 0);\n    __decorate([\n        Property('')\n    ], PivotAxis.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Complex(Theme.axisTitleFont, Font)\n    ], PivotAxis.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotAxis.prototype, \"isIndexed\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotAxis.prototype, \"plotOffset\", void 0);\n    __decorate([\n        Property('None')\n    ], PivotAxis.prototype, \"edgeLabelPlacement\", void 0);\n    __decorate([\n        Property('BetweenTicks')\n    ], PivotAxis.prototype, \"labelPlacement\", void 0);\n    __decorate([\n        Property('Outside')\n    ], PivotAxis.prototype, \"tickPosition\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotAxis.prototype, \"opposedPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotAxis.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Outside')\n    ], PivotAxis.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotAxis.prototype, \"labelRotation\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotAxis.prototype, \"minorTicksPerInterval\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotAxis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotAxis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(34)\n    ], PivotAxis.prototype, \"maximumLabelWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotAxis.prototype, \"interval\", void 0);\n    __decorate([\n        Complex({}, MajorTickLines)\n    ], PivotAxis.prototype, \"majorTickLines\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotAxis.prototype, \"enableTrim\", void 0);\n    __decorate([\n        Complex({}, MajorGridLines)\n    ], PivotAxis.prototype, \"majorGridLines\", void 0);\n    __decorate([\n        Complex({}, MinorTickLines)\n    ], PivotAxis.prototype, \"minorTickLines\", void 0);\n    __decorate([\n        Complex({}, AxisLine)\n    ], PivotAxis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Complex({}, MinorGridLines)\n    ], PivotAxis.prototype, \"minorGridLines\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotAxis.prototype, \"isInversed\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotAxis.prototype, \"description\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotAxis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(100)\n    ], PivotAxis.prototype, \"coefficient\", void 0);\n    __decorate([\n        Collection([], StripLineSettings)\n    ], PivotAxis.prototype, \"stripLines\", void 0);\n    __decorate([\n        Property(2)\n    ], PivotAxis.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0, type: 'Rectangle' }, LabelBorder)\n    ], PivotAxis.prototype, \"border\", void 0);\n    return PivotAxis;\n}(ChildProperty));\nexport { PivotAxis };\n/**\n * Allow options to customize the tooltip of the pivot chart with different properties such as visibility of the tooltip, enableMarker, fill color, opacity, header for tooltip,\n * format, textStyle, template, border, enableAnimation.\n */\nvar PivotTooltipSettings = /** @class */ (function (_super) {\n    __extends(PivotTooltipSettings, _super);\n    function PivotTooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], PivotTooltipSettings.prototype, \"enableMarker\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotTooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotTooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotTooltipSettings.prototype, \"shared\", void 0);\n    __decorate([\n        Property(0.75)\n    ], PivotTooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotTooltipSettings.prototype, \"header\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotTooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Complex(Theme.tooltipLabelFont, Font)\n    ], PivotTooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotTooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Complex({ color: '#cccccc', width: 0.5 }, Border)\n    ], PivotTooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotTooltipSettings.prototype, \"enableAnimation\", void 0);\n    return PivotTooltipSettings;\n}(ChildProperty));\nexport { PivotTooltipSettings };\n/**\n * Allow options to customize the center of the pivot pie series chart.\n */\nvar PivotPieChartCenter = /** @class */ (function (_super) {\n    __extends(PivotPieChartCenter, _super);\n    function PivotPieChartCenter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('50%')\n    ], PivotPieChartCenter.prototype, \"x\", void 0);\n    __decorate([\n        Property('50%')\n    ], PivotPieChartCenter.prototype, \"y\", void 0);\n    return PivotPieChartCenter;\n}(ChildProperty));\nexport { PivotPieChartCenter };\n/**\n * Allow options to customize the pivot chart zooming with different properties such as enablePinchZooming, enableSelectionZooming,\n * enableDeferredZooming, enableMouseWheelZooming, zoom modes, toolbarItems, enableScrollbar and enablePan.\n */\nvar PivotZoomSettings = /** @class */ (function (_super) {\n    __extends(PivotZoomSettings, _super);\n    function PivotZoomSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], PivotZoomSettings.prototype, \"enablePinchZooming\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotZoomSettings.prototype, \"enableSelectionZooming\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotZoomSettings.prototype, \"enableDeferredZooming\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotZoomSettings.prototype, \"enableMouseWheelZooming\", void 0);\n    __decorate([\n        Property('XY')\n    ], PivotZoomSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(['Zoom', 'ZoomIn', 'ZoomOut', 'Pan', 'Reset'])\n    ], PivotZoomSettings.prototype, \"toolbarItems\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotZoomSettings.prototype, \"enableScrollbar\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotZoomSettings.prototype, \"enablePan\", void 0);\n    return PivotZoomSettings;\n}(ChildProperty));\nexport { PivotZoomSettings };\n/**\n * Allows a set of options to customize a pivot chart with a variety of settings, such as chart series, chart area, axis labels, legends, border, crosshairs, theme, title, tooltip, zooming, etc.\n * The following options are available to customize the pivot chart.\n * * `background`: Allows you to change the background color of the chart series in the pivot chart.\n * For example, to display the chart series with background color as red, set the property `background` to either **\"red\"** or **\"#FF0000\"** or **\"rgba(255,0,0,1.0)\"**.\n * * `border`: Allow options to customize the border of the chart series such as color and border size in the pivot chart.\n * For example, to display the chart series border color as red, set the properties `color` to either **\"red\"** or **\"#FF0000\"** or **\"rgba(255,0,0,1.0)\"** and `width` to **0.5**.\n * * `chartArea`: Allow options to customize the chart area with a variety of settings such as background color, border, opacity and background image in the pivot chart.\n * For example, to change the of the pivot chart's background, set the property `opacity` to **0.5**.\n * * `chartSeries`: Allow options to customize the chart series with different settings such as fill color, animation of the series,\n * series width, border, visibility of the series, opacity, chart series types, marker, tooltip, trendlines, etc., in the pivot chart.\n * For example, to display the line type pivot chart, set the property `type` to **Line**.\n * * `crosshair`: Allow options to customize the crosshair line with different settings such as color and width of the line,\n * line types that are shown horizontally and vertically to indicate the value of the axis at the mouse hover or touch position in the pivot chart.\n * * `description`: Allows you to add a description of the pivot chart.\n * * `enableAnimation`: Allows you to enable/disable the tooltip animation while performing the mouse move from one point to another in the pivot chart.\n * * `enableExport`: Allows the pivot chart to be exported to either **PDF** or **PNG** or **JPEG** or **SVG** filter formats.\n * * `enableMultiAxis`: Allows you to draw the pivot chart with multiple value fields as separate chart area.\n * * `enableSideBySidePlacement`: Allows you to draw points of the column type pivot chart series as side by side.\n * * `isMultiSelect`: Allows you to perform multiple selection in the pivot chart. To enable this option, it requires the property `selectionMode` to be **Point** or **Series** or **Cluster**.\n * * `isTransposed`: Allows you to render the pivot chart in a transposed manner or not.\n * * `legendSettings`: Allow options for customizing legends with different properties such as legend visibility,\n * height, width, position, legend padding, alignment, textStyle, border, margin, background, opacity, description, tabIndex in the pivot chart.\n * * `margin`: Allow options to customize the left, right, top and bottom margins of the pivot chart.\n * * `palettes`: Allows you to draw the chart series points with custom color in the pivot chart.\n * * `primaryXAxis`: Allow options to customize the horzontal(row) axis with different properties such as labelIntersectAction, labelStyle, title,\n * description, crosshairTooltip, labelFormat, titleStyle, plotOffset, edgeLabelPlacement, labelPlacement, tickPosition, opposedPosition, minor and\n * major grid lines, minor and major tick lines, border, etc. in the pivot chart.\n * * `primaryYAxis`: Allow options to customize the vertical(value) axis with different properties such as labelIntersectAction, labelStyle,\n * title, description, crosshairTooltip, labelFormat, titleStyle, plotOffset, edgeLabelPlacement, labelPlacement, tickPosition, opposedPosition, minor and\n * major grid lines, minor and major tick lines, border, etc. in the pivot chart.\n * * `selectedDataIndexes`: Allows you to highlight a specific point of the series while rendering the pivot chart.\n * For example, to highlight first point in the first series, set the properties series to 0 and points to 1. To use this option, it requires the property `selectionMode` to be **Point** or **Series**.\n * * `selectionMode`: Allow options for customizing the selection mode to be done either by a specific series or point or cluster or by dragging it to the pivot chart.\n * For example, to highlight a specific point in a specific series of the pivot chart, set the property `selectionMode` to **Point**.\n * * `showMultiLevelLabels`: Allows you to display the multi-level label feature in the pivot chart. This multi-level labels used to perform drill operation in the pivot chart.\n * * `subTitle`: Allows you to add the subtitle to the pivot chart.\n * * `subTitleStyle`: Allow options to customize the subtitle in the pivot chart with different properties such as fontStyle, font size, fontWeight, font color, testAlignment, fontFamily, opacity, textOverflow.\n * * `tabIndex`: Allows you to highlight specific legends by clicking the mouse or by interacting with the keyboard in the pivot chart.\n * * `theme`: Allows you to draw a pivot chart with either material, fabric, bootstrap, highcontrast light, material dark, fabric dark, highcontrast, bootstrap dark, bootstrap4 theme.\n * * `title`: Allows you to add title to the pivot chart.\n * * `titleStyle`: Allow options to customize the title in the pivot chart with different properties such as fontStyle, font size, fontWeight, font color, testAlignment, fontFamily, opacity, textOverflow.\n * * `tooltip`: Allow options to customize the tooltip of the pivot chart with different properties such as visibility of the tooltip, enableMarker, fill color, opacity, header for tooltip,\n * format, textStyle, template, border, enableAnimation.\n * * `useGroupingSeparator`: Allows the group separator to be shown to the values in the pivot chart.\n * * `value`: Allows you to draw a pivot chart with a specific value field during initial loading.\n * * `zoomSettings`: Allow options to customize the pivot chart zooming with different properties such as enablePinchZooming, enableSelectionZooming,\n * enableDeferredZooming, enableMouseWheelZooming, zoom modes, toolbarItems, enableScrollbar and enablePan.\n */\nvar ChartSettings = /** @class */ (function (_super) {\n    __extends(ChartSettings, _super);\n    function ChartSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, PivotSeries)\n    ], ChartSettings.prototype, \"chartSeries\", void 0);\n    __decorate([\n        Complex({}, PivotAxis)\n    ], ChartSettings.prototype, \"primaryXAxis\", void 0);\n    __decorate([\n        Complex({}, PivotAxis)\n    ], ChartSettings.prototype, \"primaryYAxis\", void 0);\n    __decorate([\n        Property('')\n    ], ChartSettings.prototype, \"value\", void 0);\n    __decorate([\n        Property('')\n    ], ChartSettings.prototype, \"columnHeader\", void 0);\n    __decorate([\n        Property('-')\n    ], ChartSettings.prototype, \"columnDelimiter\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"enableMultiAxis\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"enableScrollOnMultiAxis\", void 0);\n    __decorate([\n        Complex(Theme.chartTitleFont, Font)\n    ], ChartSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('')\n    ], ChartSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex(Theme.chartSubTitleFont, Font)\n    ], ChartSettings.prototype, \"subTitleStyle\", void 0);\n    __decorate([\n        Property('')\n    ], ChartSettings.prototype, \"subTitle\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], ChartSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], ChartSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ border: { color: null, width: 0.5 }, background: 'transparent' }, ChartArea)\n    ], ChartSettings.prototype, \"chartArea\", void 0);\n    __decorate([\n        Property(null)\n    ], ChartSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], ChartSettings.prototype, \"theme\", void 0);\n    __decorate([\n        Property([])\n    ], ChartSettings.prototype, \"palettes\", void 0);\n    __decorate([\n        Complex({}, CrosshairSettings)\n    ], ChartSettings.prototype, \"crosshair\", void 0);\n    __decorate([\n        Complex({}, PivotTooltipSettings)\n    ], ChartSettings.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex(null, PivotPieChartCenter)\n    ], ChartSettings.prototype, \"pieCenter\", void 0);\n    __decorate([\n        Complex({}, PivotZoomSettings)\n    ], ChartSettings.prototype, \"zoomSettings\", void 0);\n    __decorate([\n        Property()\n    ], ChartSettings.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property('None')\n    ], ChartSettings.prototype, \"selectionMode\", void 0);\n    __decorate([\n        Property('None')\n    ], ChartSettings.prototype, \"accumulationSelectionMode\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableSmartLabels\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableBorderOnMouseMove\", void 0);\n    __decorate([\n        Property('None')\n    ], ChartSettings.prototype, \"highlightMode\", void 0);\n    __decorate([\n        Property('None')\n    ], ChartSettings.prototype, \"highlightPattern\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableExport\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"isMultiSelect\", void 0);\n    __decorate([\n        Collection([], Indexes)\n    ], ChartSettings.prototype, \"selectedDataIndexes\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"isTransposed\", void 0);\n    __decorate([\n        Property(1)\n    ], ChartSettings.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], ChartSettings.prototype, \"description\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"resized\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableSideBySidePlacement\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"textRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"legendRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"seriesRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"pointRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"multiLevelLabelClick\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseClick\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"pointMove\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"pointClick\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"dragComplete\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"scrollStart\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"zoomComplete\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"scrollChanged\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"scrollEnd\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"showMultiLevelLabels\", void 0);\n    return ChartSettings;\n}(ChildProperty));\nexport { ChartSettings };\n","import { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * This is a file to create MDX query for the provided OLAP datasource\n * @hidden\n */\n/** @hidden */\nvar MDXQuery = /** @class */ (function () {\n    function MDXQuery() {\n    }\n    /* tslint:disable:no-any */\n    /* tslint:disable-next-line:max-line-length */\n    MDXQuery.getCellSets = function (dataSourceSettings, olapEngine, refPaging, drillInfo, isQueryUpdate) {\n        /* tslint:enable:no-any */\n        this.engine = olapEngine;\n        this.isMondrian = olapEngine.isMondrian;\n        this.isMeasureAvail = olapEngine.isMeasureAvail;\n        this.isPaging = olapEngine.isPaging;\n        this.pageSettings = olapEngine.pageSettings;\n        this.rows = olapEngine.rows;\n        this.columns = olapEngine.columns;\n        this.values = olapEngine.values;\n        this.filters = olapEngine.filters;\n        this.allowLabelFilter = olapEngine.allowLabelFilter;\n        this.allowValueFilter = olapEngine.allowValueFilter;\n        this.valueSortSettings = dataSourceSettings.valueSortSettings ? dataSourceSettings.valueSortSettings : undefined;\n        this.drilledMembers = olapEngine.updateDrilledItems(dataSourceSettings.drilledMembers);\n        this.calculatedFieldSettings = olapEngine.calculatedFieldSettings;\n        this.valueAxis = dataSourceSettings.valueAxis === 'row' ? 'rows' : 'columns';\n        if (drillInfo) {\n            drillInfo.axis = drillInfo.axis === 'row' ? 'rows' : 'columns';\n        }\n        this.filterMembers = extend({}, olapEngine.filterMembers, null, true);\n        this.fieldDataObj = olapEngine.fieldListObj;\n        this.fieldList = olapEngine.fieldList;\n        /* tslint:disable-next-line:max-line-length */\n        this.cellSetInfo = '\\nDIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n        var measureQuery = this.getMeasuresQuery(this.values);\n        var rowQuery = this.getDimensionsQuery(this.rows, measureQuery, 'rows', drillInfo).replace(/\\&/g, '&amp;');\n        var columnQuery = this.getDimensionsQuery(this.columns, measureQuery, 'columns', drillInfo).replace(/\\&/g, '&amp;');\n        if (this.isPaging && refPaging && this.pageSettings !== undefined) {\n            var pagingQuery = this.getPagingQuery(rowQuery, columnQuery);\n            rowQuery = pagingQuery.rowQuery;\n            columnQuery = pagingQuery.columnQuery;\n        }\n        else if (this.isPaging && !refPaging && this.pageSettings !== undefined) {\n            var pagingQuery = this.getPagingCountQuery(rowQuery, columnQuery);\n            rowQuery = pagingQuery.rowQuery;\n            columnQuery = pagingQuery.columnQuery;\n        }\n        rowQuery = (rowQuery.length > 0 ? rowQuery + (this.isPaging && !refPaging ? '' : this.cellSetInfo + ' ON ROWS') : '');\n        columnQuery = (columnQuery.length > 0 ? columnQuery + (this.isPaging && !refPaging ? '' : this.cellSetInfo + ' ON COLUMNS') : '');\n        var slicerQuery = this.getSlicersQuery(this.filters, 'filters').replace(/\\&/g, '&amp;');\n        /* tslint:disable-next-line:max-line-length */\n        var filterQuery = this.getfilterQuery(this.filterMembers, dataSourceSettings.cube).replace(/\\&/g, '&amp;').replace(/\\>/g, '&gt;').replace(/\\</g, '&lt;');\n        var caclQuery = this.getCalculatedFieldQuery(this.calculatedFieldSettings).replace(/\\&/g, '&amp;');\n        var query = this.frameMDXQuery(rowQuery, columnQuery, slicerQuery, filterQuery, caclQuery, refPaging);\n        var args = {\n            catalog: dataSourceSettings.catalog,\n            cube: dataSourceSettings.cube,\n            url: dataSourceSettings.url,\n            request: query,\n            LCID: dataSourceSettings.localeIdentifier.toString()\n        };\n        olapEngine.mdxQuery = query.replace(/\\&amp;/g, '&').replace(/\\&gt;/g, '>').replace(/\\&lt;/g, '<').replace(/%280/g, '\\\"');\n        // console.log(olapEngine.mdxQuery);\n        if (drillInfo) {\n            drillInfo.axis = drillInfo.axis === 'rows' ? 'row' : 'column';\n        }\n        /* tslint:disable */\n        if (!isQueryUpdate) {\n            this.getTableCellData(args, (this.isPaging && !refPaging ? this.engine.generatePagingData.bind(this.engine) : this.engine.generateEngine.bind(this.engine)), drillInfo ? { action: drillInfo.action, drillInfo: drillInfo } : { dataSourceSettings: dataSourceSettings, action: 'loadTableElements' });\n        }\n        /* tslint:enable */\n    };\n    /* tslint:disable:max-line-length */\n    MDXQuery.getTableCellData = function (args, successMethod, customArgs) {\n        var connectionString = this.engine.getConnectionInfo(args.url, args.LCID);\n        var soapMessage = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"> <Header></Header> <Body> <Execute xmlns=\"urn:schemas-microsoft-com:xml-analysis\"> <Command> <Statement>' +\n            args.request + '</Statement> </Command> <Properties> <PropertyList> <Catalog>' +\n            args.catalog + '</Catalog> <LocaleIdentifier>' + connectionString.LCID +\n            '</LocaleIdentifier> </PropertyList> </Properties></Execute> </Body> </Envelope>';\n        this.engine.doAjaxPost('POST', connectionString.url, soapMessage, successMethod, customArgs);\n    };\n    MDXQuery.frameMDXQuery = function (rowQuery, columnQuery, slicerQuery, filterQuery, caclQuery, refPaging) {\n        var query = ((this.isPaging && !refPaging) ? caclQuery !== '' ? '' : '\\nWITH' : '\\nSelect ');\n        if (columnQuery.length > 0) {\n            query = query + columnQuery;\n        }\n        if (rowQuery.length > 0) {\n            query = query + (columnQuery.length > 0 ? this.isPaging && !refPaging ? '' : ', ' : '') + rowQuery;\n        }\n        query = caclQuery + query + (this.isPaging && !refPaging ? '\\nMEMBER [Measures].[3d268ce0-664d-4092-b9cb-fece97175006] AS Count([e16a30d0-2174-4874-8dae-a5085a75a3e2]) ' +\n            'MEMBER [Measures].[8d7fe8c1-f09f-410e-b9ba-eaab75a1fc3e] AS Count ([d1876d2b-e50e-4547-85fe-5b8ed9d629de])' +\n            '\\nSELECT { [Measures].[3d268ce0-664d-4092-b9cb-fece97175006] , [Measures].[8d7fe8c1-f09f-410e-b9ba-eaab75a1fc3e] } ON AXIS(0)' : '') +\n            filterQuery + slicerQuery + '\\nCELL PROPERTIES VALUE, FORMAT_STRING, FORMATTED_VALUE\\n';\n        return query;\n    };\n    MDXQuery.getPagingQuery = function (rowQuery, columnQuery) {\n        // let colCurrentPage: number = (Math.ceil(this.engine.columnCount / this.pageSettings.columnSize) < this.pageSettings.columnCurrentPage || this.pageSettings.columnCurrentPage === 0) ? ((Math.ceil(this.engine.columnCount / this.pageSettings.columnSize) < this.pageSettings.columnCurrentPage && this.engine.columnCount > 0) ? Math.ceil(this.engine.columnCount / this.pageSettings.columnSize) : this.pageSettings.columnCurrentPage) : this.pageSettings.columnCurrentPage;\n        // let rowCurrentPage: number = (Math.ceil(this.engine.rowCount / this.pageSettings.rowSize) < this.pageSettings.rowCurrentPage || this.pageSettings.rowCurrentPage === 0) ? ((Math.ceil(this.engine.rowCount / this.pageSettings.rowSize) < this.pageSettings.rowCurrentPage && this.engine.rowCount > 0) ? Math.ceil(this.engine.rowCount / this.pageSettings.rowSize) : this.pageSettings.rowSize) : this.pageSettings.rowCurrentPage;\n        rowQuery = rowQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        columnQuery = columnQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        var rowQueryCpy = rowQuery;\n        // let axisQuery: pagingQuery = {\n        //     rowQuery: rowQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + rowQuery + (!this.isMondrian && columnQuery !== '' ? ',' + columnQuery : '') + ')},' + (((rowCurrentPage === 0 ? 1 : rowCurrentPage) - 1) * (this.pageSettings.rowSize)) + ',' + this.pageSettings.rowSize + ')') : '',\n        //     columnQuery: columnQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + columnQuery + (!this.isMondrian && rowQueryCpy !== '' ? ',' + rowQueryCpy : '') + ')},' + (((colCurrentPage === 0 ? 1 : colCurrentPage) - 1) * (this.pageSettings.columnSize)) + ',' + this.pageSettings.columnSize + ')') : ''\n        // }\n        var calRowPage = (this.pageSettings.rowCurrentPage - 1) * this.pageSettings.rowSize;\n        var calColPage = (this.pageSettings.columnCurrentPage - 1) * this.pageSettings.columnSize;\n        var calRowSize = this.pageSettings.rowSize * 3;\n        var calColumnSize = this.pageSettings.columnSize * 3;\n        calRowPage = (this.engine.rowCount < (calRowPage + calRowSize)) ?\n            (this.engine.rowCount > calRowSize ? (this.engine.rowCount - calRowSize) : 0) : calRowPage;\n        this.engine.pageRowStartPos = calRowPage;\n        calColPage = (this.engine.columnCount < (calColPage + calColumnSize)) ?\n            (this.engine.columnCount > calColumnSize ? (this.engine.columnCount - calColumnSize) : 0) : calColPage;\n        this.engine.pageColStartPos = calColPage;\n        var axisQuery = {\n            rowQuery: rowQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + rowQuery + (!this.isMondrian && columnQuery !== '' ? ',' + columnQuery : '') + ')},' + (calRowPage) + ',' + calRowSize + ')') : '',\n            columnQuery: columnQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + columnQuery + (!this.isMondrian && rowQueryCpy !== '' ? ',' + rowQueryCpy : '') + ')},' + (calColPage) + ',' + calColumnSize + ')') : ''\n        };\n        return axisQuery;\n    };\n    MDXQuery.getPagingCountQuery = function (rowQuery, columnQuery) {\n        /* tslint:disable */\n        rowQuery = rowQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        columnQuery = columnQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        var rowQueryCpy = rowQuery;\n        'WITH  SET [e16a30d0-2174-4874-8dae-a5085a75a3e2] as';\n        'SET [d1876d2b-e50e-4547-85fe-5b8ed9d629de] as';\n        var axisQuery = {\n            rowQuery: rowQuery !== '' ? ('\\SET [d1876d2b-e50e-4547-85fe-5b8ed9d629de] as ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + rowQuery + (!this.isMondrian && columnQuery !== '' ? ',' + columnQuery : '') + ')\\n') : '',\n            columnQuery: columnQuery !== '' ? ('\\nSET [e16a30d0-2174-4874-8dae-a5085a75a3e2] as ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + columnQuery + (!this.isMondrian && rowQueryCpy !== '' ? ',' + rowQueryCpy : '') + ')\\n') : ''\n        };\n        return axisQuery;\n        /* tslint:enable */\n    };\n    /* tslint:enable:max-line-length */\n    MDXQuery.getDimensionsQuery = function (dimensions, measureQuery, axis, drillInfo) {\n        var query = '';\n        if (dimensions.length > 0) {\n            query = '\\nNON EMPTY ( ' + (this.drilledMembers.length > 0 ? 'HIERARCHIZE ({' : '');\n            var i = 0;\n            while (i < dimensions.length) {\n                var hierarchy = '';\n                if (i === 0) {\n                    if (dimensions[i].name.toLowerCase() === '[measures]') {\n                        if (measureQuery !== '') {\n                            query = query + measureQuery;\n                        }\n                    }\n                    else {\n                        hierarchy = '({' + this.getDimensionQuery(dimensions[i], axis) + '})';\n                        query = query + hierarchy;\n                    }\n                }\n                else {\n                    if (dimensions[i].name.toLowerCase() === '[measures]') {\n                        if (measureQuery !== '') {\n                            query = query + ' * ' + measureQuery;\n                        }\n                    }\n                    else {\n                        hierarchy = '({' + this.getDimensionQuery(dimensions[i], axis) + '})';\n                        query = query + ' * ' + hierarchy;\n                    }\n                }\n                i++;\n            }\n            // if (!this.isMeasureAvail && measureQuery !== '' && this.valueAxis === axis) {\n            //     query = query + ' * ' + measureQuery;\n            // }\n            /* tslint:disable:max-line-length */\n            var drillQueryObj = this.getDrillQuery(dimensions, measureQuery, axis, drillInfo);\n            query = (drillInfo && drillInfo.axis === axis ? '\\nNON EMPTY ( ' + (this.drilledMembers.length > 0 ? 'HIERARCHIZE ({' : '') + drillQueryObj.query : query + (drillQueryObj.query !== '' ? ',' : '') + drillQueryObj.query);\n            var drillQuery = this.getAttributeDrillQuery(dimensions, measureQuery, axis, drillInfo);\n            query = (this.valueAxis !== axis ? this.updateValueSortQuery(query, this.valueSortSettings) : query) +\n                (this.isPaging ? ((drillQuery !== '' ? '-' : '') + drillQuery) : '') + (this.drilledMembers.length > 0 ? '})' : '') + (!this.isPaging ? ((drillQuery !== '' ? '-' : '') + drillQuery) : '') + ')';\n        }\n        // else if (!this.isMeasureAvail && measureQuery !== '' && this.valueAxis === axis) {\n        //     query = 'NON EMPTY (' + (this.drilledMembers.length > 0 ? 'HIERARCHIZE({' : '') + measureQuery;\n        //     query = (this.valueAxis !== axis ? this.updateValueSortQuery(query, this.valueSortSettings) : query) +\n        //         (this.drilledMembers.length > 0 ? '})' : '') + ') ' + this.cellSetInfo + ' ON ' + axis.toUpperCase();\n        // }\n        /* tslint:enable:max-line-length */\n        return query;\n    };\n    MDXQuery.getAttributeDrillQuery = function (dimensions, measureQuery, axis, drillInfo) {\n        var query = '';\n        var drilledMembers = [];\n        var isOnDemandDrill = false;\n        if (drillInfo && drillInfo.axis === axis && drillInfo.action.toLowerCase() === 'down') {\n            isOnDemandDrill = true;\n            drilledMembers = [{ name: drillInfo.fieldName, items: [drillInfo.memberName], delimiter: '~~' }];\n        }\n        else {\n            drilledMembers = this.drilledMembers;\n        }\n        var measurePos = axis === this.valueAxis ? this.getMeasurePos(axis) : 0;\n        for (var _i = 0, drilledMembers_1 = drilledMembers; _i < drilledMembers_1.length; _i++) {\n            var field = drilledMembers_1[_i];\n            var isHierarchy = this.engine.fieldList[field.name] ? this.engine.fieldList[field.name].isHierarchy : false;\n            if (isHierarchy) {\n                for (var _a = 0, _b = field.items; _a < _b.length; _a++) {\n                    var item = _b[_a];\n                    var drillQuery = [];\n                    var drillInfo_1 = item.split(field.delimiter ? field.delimiter : '~~');\n                    var result = this.getDrillLevel(dimensions, drillInfo_1);\n                    var fieldPosition = this.getDimensionPos(axis, field.name);\n                    var index = dimensions.length - (measurePos > fieldPosition ? 1 : 0);\n                    var isExist = this.isPaging ? this.isAttributeMemberExist(field.name, item.split(field.delimiter ? field.delimiter : '~~'), field.delimiter, drillInfo_1, axis) : false;\n                    while (result.level > 0 && result.isDrill && (fieldPosition + 1) !== measurePos && !isExist) {\n                        var levelQuery = [];\n                        var i = 0;\n                        /* tslint:disable:max-line-length */\n                        while (i < dimensions.length) {\n                            if (dimensions[i].name.toLowerCase() === '[measures]') {\n                                if (measureQuery !== '') {\n                                    levelQuery.push('({{' + drillInfo_1[i] + '}})');\n                                }\n                            }\n                            else if (drillInfo_1[i] && (drillInfo_1[i].indexOf(dimensions[i].name) !== -1 ||\n                                (dimensions[i].isNamedSet && this.fieldList[dimensions[i].name] && drillInfo_1[i].indexOf(this.fieldList[dimensions[i].name].pid.split('Sets_')[1]) !== -1))) {\n                                levelQuery.push(this.getHierarchyQuery(drillInfo_1[i], false, false, false, result.level, true));\n                            }\n                            else if (!drillInfo_1[i] && dimensions[i]) {\n                                levelQuery.push(this.getHierarchyQuery(dimensions[i].name, ((this.isPaging && result.level === 2) || (!this.isPaging && index > i) ? true : false), dimensions[i].isNamedSet, dimensions[i].isCalculatedField, result.level, false));\n                            }\n                            else {\n                                levelQuery = [];\n                                break;\n                            }\n                            i++;\n                        }\n                        if (levelQuery.length > 0) {\n                            drillQuery.push('(' + levelQuery.join('*') + ')');\n                        }\n                        result.level--;\n                        index--;\n                    }\n                    if (drillQuery.length > 0) {\n                        query = query + (query !== '' ? '-' : '') + drillQuery.join(this.isPaging ? '+' : '-');\n                    }\n                }\n            }\n        }\n        return query;\n    };\n    MDXQuery.getDimensionPos = function (axis, field) {\n        var position = 0;\n        var dimensions = axis === 'rows' ? this.rows : this.columns;\n        for (var i = 0; i < dimensions.length; i++) {\n            if (dimensions[i].name === field) {\n                position = i;\n                break;\n            }\n        }\n        return position;\n    };\n    MDXQuery.getMeasurePos = function (axis) {\n        var position = 0;\n        var dimensions = axis === 'rows' ? this.rows : this.columns;\n        for (var i = 0; i < dimensions.length; i++) {\n            if (dimensions[i].name.indexOf('[Measures]') === 0) {\n                position = i;\n                break;\n            }\n        }\n        return position;\n    };\n    MDXQuery.getDrillLevel = function (dimensions, drillInfo) {\n        var level = dimensions.length;\n        var isDrill = false;\n        var i = 0;\n        while (i < dimensions.length) {\n            if (drillInfo[i] && drillInfo[i].indexOf(dimensions[i].name) !== -1) {\n                level -= 1;\n                if (dimensions[i + 1] && !(dimensions[i + 1].isNamedSet || dimensions[i + 1].name.indexOf('[Measures]') === 0 || (this.fieldList[dimensions[i + 1].name] && !this.fieldList[dimensions[i + 1].name].hasAllMember))) {\n                    isDrill = true;\n                }\n            }\n            else if (dimensions[i].isNamedSet || dimensions[i].name.indexOf('[Measures]') === 0 || (this.fieldList[dimensions[i].name] && !this.fieldList[dimensions[i].name].hasAllMember)) {\n                level -= 1;\n            }\n            i++;\n        }\n        return { level: this.isPaging ? 2 : level, isDrill: isDrill };\n    };\n    MDXQuery.getHierarchyQuery = function (name, isChildren, isNamedSet, isCalculatedField, level, isDrill) {\n        name = isCalculatedField ? this.fieldList[name].tag : name;\n        return ((this.fieldList[name] && !this.fieldList[name].hasAllMember && !isNamedSet && !isCalculatedField) ? '((' + name + ').levels(0).AllMembers)' : (isNamedSet || isCalculatedField) ? ('({' + name + '})') : this.isPaging ? ('({' + name) + (isChildren ? '.CHILDREN})' : (!isDrill && level === 1) ? '.[All]})' : '})') : ('({DrilldownLevel({' + name + (isChildren ? '.CHILDREN' : '') + '},,,INCLUDE_CALC_MEMBERS' + ')})'));\n    };\n    MDXQuery.isAttributeMemberExist = function (hierarchy, item, delimiter, drillInfo, axis) {\n        item.splice(drillInfo.length - 1, 1);\n        var isAvailable = false;\n        if (item.join(delimiter) !== '' && !(this.isPaging && item.length === 1 && item.join(delimiter) === '[Measures]') && this.engine.fieldList[hierarchy] && this.engine.fieldList[hierarchy].hasAllMember) {\n            var hierarchyPosition = this.getDimensionPos(axis, hierarchy);\n            for (var i = 0; i < this.drilledMembers.length; i++) {\n                if (hierarchy !== this.drilledMembers[i].name) {\n                    var isHierarchy = this.engine.fieldList[this.drilledMembers[i].name] ? this.engine.fieldList[this.drilledMembers[i].name].isHierarchy : false;\n                    if (isHierarchy) {\n                        var fieldPosition = this.getDimensionPos(axis, this.drilledMembers[i].name);\n                        for (var j = 0; j < this.drilledMembers[i].items.length; j++) {\n                            var result = this.getDrillLevel(axis === 'rows' ? this.rows : this.columns, this.drilledMembers[i].items[j].split(this.drilledMembers[i].delimiter ? this.drilledMembers[i].delimiter : '~~'));\n                            if ((this.isPaging ? (fieldPosition < hierarchyPosition && result.isDrill) : true) && (this.drilledMembers[i].items[j].indexOf(item.join(delimiter)) === 0 || item.join(delimiter).indexOf(this.drilledMembers[i].items[j]) === 0)) {\n                                isAvailable = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return isAvailable;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    MDXQuery.getDrillQuery = function (dimensions, measureQuery, axis, drillInfo) {\n        var query = '';\n        var rawDrillQuery = [];\n        var drilledMembers = [];\n        var isOnDemandDrill = false;\n        var onDemandDrillQuery = '';\n        if (drillInfo && drillInfo.axis === axis && drillInfo.action.toLowerCase() === 'down') {\n            isOnDemandDrill = true;\n            drilledMembers = [{ name: drillInfo.fieldName, items: [drillInfo.memberName], delimiter: '~~' }];\n        }\n        else {\n            drilledMembers = this.drilledMembers;\n        }\n        for (var _i = 0, drilledMembers_2 = drilledMembers; _i < drilledMembers_2.length; _i++) {\n            var field = drilledMembers_2[_i];\n            var isHierarchy = this.engine.fieldList[field.name] ? this.engine.fieldList[field.name].isHierarchy : false;\n            if (!isHierarchy) {\n                for (var _a = 0, _b = field.items; _a < _b.length; _a++) {\n                    var item = _b[_a];\n                    var drillQuery = [];\n                    var rawQuery = [];\n                    var i = 0;\n                    var drillInfo_2 = item.split(field.delimiter ? field.delimiter : '~~');\n                    var isExist = this.isAttributeMemberExist(field.name, item.split(field.delimiter ? field.delimiter : '~~'), (field.delimiter ? field.delimiter : '~~'), drillInfo_2, axis);\n                    /* tslint:disable:max-line-length */\n                    while (i < dimensions.length && !isExist) {\n                        if (drillInfo_2[i] && drillInfo_2[i].indexOf(dimensions[i].name) !== -1) {\n                            if (drillInfo_2[drillInfo_2.length - 1].indexOf(dimensions[i].name) !== -1) {\n                                if (isOnDemandDrill) {\n                                    onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + drillInfo_2[i] + '.CHILDREN})';\n                                }\n                                else {\n                                    drillQuery.push('(' + drillInfo_2[i] + '.CHILDREN)');\n                                    rawQuery.push('(' + drillInfo_2[i] + ')');\n                                }\n                            }\n                            else {\n                                if (drillInfo_2[i].toLowerCase() === '[measures]' && measureQuery !== '') {\n                                    if (isOnDemandDrill) {\n                                        onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '(' + measureQuery + ')';\n                                    }\n                                    else {\n                                        drillQuery.push('(' + measureQuery + ')');\n                                        rawQuery.push('(' + measureQuery + ')');\n                                    }\n                                }\n                                else if (drillInfo_2[i].toLowerCase().indexOf('[measures]') !== -1) {\n                                    if (isOnDemandDrill) {\n                                        onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + drillInfo_2[i] + '})';\n                                    }\n                                    else {\n                                        drillQuery.push('({' + drillInfo_2[i] + '})');\n                                        rawQuery.push('({' + drillInfo_2[i] + '})');\n                                    }\n                                }\n                                else {\n                                    if (isOnDemandDrill) {\n                                        onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + drillInfo_2[i] + '})';\n                                    }\n                                    else {\n                                        drillQuery.push('(' + drillInfo_2[i] + ')');\n                                        rawQuery.push('(' + drillInfo_2[i] + ')');\n                                    }\n                                }\n                            }\n                        }\n                        else if (!drillInfo_2[i] && dimensions[i]) {\n                            if (dimensions[i].name.toLowerCase() === '[measures]' && measureQuery !== '') {\n                                if (isOnDemandDrill) {\n                                    onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '(' + measureQuery + ')';\n                                }\n                                else {\n                                    drillQuery.push('(' + measureQuery + ')');\n                                    rawQuery.push('(' + measureQuery + ')');\n                                }\n                            }\n                            else {\n                                if (isOnDemandDrill) {\n                                    onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + this.getDimensionQuery(dimensions[i], axis) + '})';\n                                }\n                                else {\n                                    drillQuery.push('(' + this.getDimensionQuery(dimensions[i], axis) + ')');\n                                    rawQuery.push('(' + this.getDimensionQuery(dimensions[i], axis) + ')');\n                                }\n                            }\n                        }\n                        else {\n                            drillQuery = [];\n                            break;\n                        }\n                        i++;\n                    }\n                    if (drillQuery.length > 0 && drillQuery.length < drillInfo_2.length) {\n                        drillQuery = [];\n                        rawQuery = [];\n                    }\n                    // query = query + (query !== '' && drillQuery.length > 0 ? ',' : '') + (drillQuery.length > 0 ? '(' + drillQuery.toString().replace(/\\&/g, \"&amp;\") + ')' : '');\n                    query = query + (query !== '' && drillQuery.length > 0 ? ',' : '') + (drillQuery.length > 0 ? '(' + drillQuery.toString() + ')' : '');\n                    /* tslint:enable:max-line-length */\n                    if (rawQuery.length > 0) {\n                        rawDrillQuery.push(('(' + rawQuery.toString() + ')'));\n                    }\n                }\n            }\n        }\n        // return (isOnDemandDrill ? onDemandDrillQuery.replace(/\\&/g, \"&amp;\") : query);\n        var queryCollection = {\n            query: (isOnDemandDrill ? onDemandDrillQuery : query),\n            collection: (isOnDemandDrill ? [onDemandDrillQuery] : rawDrillQuery)\n        };\n        return queryCollection;\n    };\n    MDXQuery.updateValueSortQuery = function (query, valueSortSettings) {\n        if (valueSortSettings && valueSortSettings.measure && valueSortSettings.measure !== '') {\n            var heirarchize = (this.drilledMembers.length > 0 ? 'HIERARCHIZE ({' : '');\n            var measure = (this.fieldList[valueSortSettings.measure].isCalculatedField ?\n                this.fieldList[valueSortSettings.measure].tag : valueSortSettings.measure);\n            switch (valueSortSettings.sortOrder) {\n                case 'Ascending':\n                    query = query.replace('NON EMPTY ( ' + heirarchize, 'NON EMPTY ( ' + heirarchize + ' ORDER ({');\n                    query = query + '},(' + measure + '), ASC)';\n                    // query = query + '},(' + valueSortSettings.measure + '), ' +\n                    //     (valueSortSettings.preserveHierarchy ? 'BASC' : 'ASC') + ')';\n                    break;\n                case 'Descending':\n                    query = query.replace('NON EMPTY ( ' + heirarchize, 'NON EMPTY ( ' + heirarchize + ' ORDER ({');\n                    query = query + '},(' + measure + '), DESC)';\n                    // query = query + '},(' + valueSortSettings.measure + '), ' +\n                    //     (valueSortSettings.preserveHierarchy ? 'BDESC' : 'DESC') + ')';\n                    break;\n            }\n        }\n        return query;\n    };\n    /* tslint:disable */\n    MDXQuery.getSlicersQuery = function (slicers, axis) {\n        var _this = this;\n        var query = '';\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        if (slicers.length > 0) {\n            var i_1 = 0;\n            while (i_1 < slicers.length) {\n                var isCol = dataFields.filter(function (field) {\n                    var colUqName = _this.getDimensionUniqueName(field.name);\n                    var slicerUqName = _this.getDimensionUniqueName(slicers[i_1].name);\n                    var isMatch = false;\n                    isMatch = colUqName === slicerUqName &&\n                        !(_this.isMondrian && slicerUqName === '' && colUqName === '');\n                    return (isMatch);\n                }).length > 0;\n                if (!isCol) {\n                    if (slicers[i_1].name !== undefined && !this.filterMembers[slicers[i_1].name]) {\n                        query = query + (query !== '' ? ' * ' : '') + '{' + this.getDimensionQuery(slicers[i_1], axis) + '}';\n                    }\n                    else if (this.filterMembers[slicers[i_1].name]) {\n                        query = query + (query !== '' ? ' * ' : '') + '{' + (this.filterMembers[slicers[i_1].name].toString()) + '}';\n                    }\n                }\n                i_1++;\n            }\n            query = query === '' ? '' : '\\nWHERE (' + query.replace(/DrilldownLevel/g, '') + ')';\n        }\n        return query;\n    };\n    /* tslint:enable */\n    MDXQuery.getDimensionQuery = function (dimension, axis) {\n        var query = '';\n        var name = dimension.isCalculatedField ? this.fieldList[dimension.name].tag : dimension.name;\n        var hasAllMember = this.fieldList[dimension.name].hasAllMember;\n        if (!hasAllMember && !dimension.isNamedSet && !dimension.isCalculatedField) {\n            query = '((' + name + ').levels(0).AllMembers)';\n        }\n        else {\n            query = (dimension.isNamedSet ? '{' + name + '}' : this.isPaging ? name + '.CHILDREN' :\n                'DrilldownLevel({' + name + '}' + ((axis === 'rows' || axis === 'columns') ? ',,,INCLUDE_CALC_MEMBERS' : '') + ')');\n        }\n        return query;\n    };\n    MDXQuery.getDimensionUniqueName = function (headerText) {\n        var hierarchyNode = this.fieldDataObj.hierarchy;\n        var curElement = [];\n        if (hierarchyNode) {\n            // let curElement: IOlapField[] = hierarchyNode.filter((item: IOlapField) => {\n            //     return (item.id.toLowerCase() === headerText.toLowerCase());\n            // });\n            for (var _i = 0, hierarchyNode_1 = hierarchyNode; _i < hierarchyNode_1.length; _i++) {\n                var item = hierarchyNode_1[_i];\n                if (item.id.toLowerCase() === headerText.toLowerCase()) {\n                    curElement.push(item);\n                }\n            }\n            return (curElement.length > 0 ? curElement[0].pid : '');\n        }\n        else {\n            return headerText.split('.')[0];\n        }\n    };\n    MDXQuery.getMeasuresQuery = function (measures) {\n        var query = '';\n        if (measures.length > 0) {\n            query = '{{';\n            var values = '';\n            for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\n                var measure = measures_1[_i];\n                var name_1 = (measure.isCalculatedField ? this.fieldList[measure.name].tag : measure.name);\n                if (values.length > 0) {\n                    values = values + ', ' + name_1;\n                }\n                else {\n                    values = name_1;\n                }\n            }\n            query = query + values + '}}';\n        }\n        return query;\n    };\n    MDXQuery.getfilterQuery = function (filters, cube) {\n        var query = '\\nFROM [' + cube + ']';\n        var filterQuery = '\\nFROM( SELECT (';\n        var advancedFilters = [];\n        var advancedFilterQuery = [];\n        var rowFilter = [];\n        var columnFilter = [];\n        for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n            var field = _a[_i];\n            if (filters[field.name] && filters[field.name].length > 0) {\n                if (typeof filters[field.name][0] === 'string') {\n                    rowFilter.push(filters[field.name]);\n                }\n                else {\n                    filters[field.name][1] = filters[field.name][0].type;\n                    advancedFilters.push(filters[field.name]);\n                    delete filters[field.name];\n                }\n            }\n        }\n        for (var _b = 0, _c = this.columns; _b < _c.length; _b++) {\n            var field = _c[_b];\n            if (filters[field.name] && filters[field.name].length > 0) {\n                if (typeof filters[field.name][0] === 'string') {\n                    columnFilter.push(filters[field.name]);\n                }\n                else {\n                    /* tslint:disable:no-any */\n                    var filter = filters[field.name];\n                    /* tslint:enable:no-any */\n                    filter[1] = filter[0].type;\n                    advancedFilters.push(filters[field.name]);\n                    delete filters[field.name];\n                }\n            }\n        }\n        for (var _d = 0, _e = this.filters; _d < _e.length; _d++) {\n            var field = _e[_d];\n            var isFound = false;\n            for (var _f = 0, _g = this.columns; _f < _g.length; _f++) {\n                var column = _g[_f];\n                if (this.getDimensionUniqueName(column.name) === this.getDimensionUniqueName(field.name)) {\n                    if (filters[field.name]) {\n                        columnFilter.push(filters[field.name]);\n                        isFound = true;\n                    }\n                }\n            }\n            if (!isFound) {\n                for (var _h = 0, _j = this.rows; _h < _j.length; _h++) {\n                    var row = _j[_h];\n                    if (this.getDimensionUniqueName(row.name) === this.getDimensionUniqueName(field.name)) {\n                        if (filters[field.name]) {\n                            rowFilter.push(filters[field.name]);\n                        }\n                    }\n                }\n            }\n        }\n        if ((this.allowLabelFilter || this.allowValueFilter) && advancedFilters.length > 0) {\n            var axes = ['Value', 'Label'];\n            for (var _k = 0, axes_1 = axes; _k < axes_1.length; _k++) {\n                var axis = axes_1[_k];\n                for (var _l = 0, advancedFilters_1 = advancedFilters; _l < advancedFilters_1.length; _l++) {\n                    var filterItems = advancedFilters_1[_l];\n                    if (filterItems && filterItems.length === 2 &&\n                        typeof filterItems[1] === 'string' && filterItems[1] === axis) {\n                        advancedFilterQuery.push(this.getAdvancedFilterQuery(filterItems[0], filterQuery, 'COLUMNS'));\n                    }\n                }\n            }\n        }\n        for (var i = 0, cnt = columnFilter.length; i < cnt; i++) {\n            /* tslint:disable-next-line:max-line-length */\n            filterQuery = i === 0 ? filterQuery + '{' + columnFilter[i].toString() + '}' : filterQuery + ',{' + columnFilter[i].toString() + '}';\n        }\n        if (columnFilter.length > 0) {\n            filterQuery = (rowFilter.length > 0) ? filterQuery + ' ) ON COLUMNS ' + ',(' : filterQuery + ' ) ON COLUMNS';\n        }\n        for (var i = 0, cnt = rowFilter.length; i < cnt; i++) {\n            filterQuery = (i > 0) ? filterQuery + ',{' + rowFilter[i].toString() + '}' : filterQuery + '{' + rowFilter[i].toString() + '}';\n        }\n        filterQuery = (columnFilter.length > 0 && rowFilter.length > 0) ?\n            filterQuery = filterQuery + ') ON ROWS ' : (columnFilter.length === 0 && rowFilter.length > 0) ?\n            filterQuery + ') ON COLUMNS ' : filterQuery;\n        var updatedFilterQuery = '';\n        if (advancedFilterQuery.length > 0) {\n            updatedFilterQuery = advancedFilterQuery.join(' ') + ' ' +\n                ((columnFilter.length > 0 || rowFilter.length > 0) ? filterQuery : '') + ' '\n                + query + Array(advancedFilterQuery.length + 1 +\n                ((columnFilter.length > 0 || rowFilter.length > 0) ? 1 : 0)).join(')');\n        }\n        query = (columnFilter.length === 0 && rowFilter.length === 0) ? query : filterQuery + query + ')';\n        return (updatedFilterQuery.length > 0) ? updatedFilterQuery : query;\n    };\n    /* tslint:disable:max-line-length */\n    MDXQuery.getAdvancedFilterQuery = function (filterItem, query, currentAxis) {\n        var filterQuery = '\\nFROM (SELECT Filter(' + filterItem.selectedField + '.AllMembers, ' +\n            this.getAdvancedFilterCondtions(filterItem.name, filterItem.condition, filterItem.value1, filterItem.value2, filterItem.type, filterItem.measure) +\n            ')) on ' + currentAxis;\n        return filterQuery;\n    };\n    MDXQuery.getAdvancedFilterCondtions = function (fieldName, filterOperator, value1, value2, filterType, measures) {\n        var advancedFilterQuery = '';\n        switch (filterOperator) {\n            case 'Equals':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption =\\\"' + value1 + '\\\"') : (measures + ' = ' + value1));\n                break;\n            case 'DoesNotEquals':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption <>\\\"' + value1 + '\\\"') : (measures + ' <>' + value1));\n                break;\n            case 'Contains':\n                advancedFilterQuery = '( InStr (1,' + fieldName + '.CurrentMember.member_caption,\\\"' + value1 + '\\\") >0';\n                break;\n            case 'DoesNotContains':\n                advancedFilterQuery = '( InStr (1,' + fieldName + '.CurrentMember.member_caption,\\\"' + value1 + '\\\")=0';\n                break;\n            case 'BeginWith':\n                advancedFilterQuery = '( Left (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ')=\\\"' + value1 + '\\\"';\n                break;\n            case 'DoesNotBeginWith':\n                advancedFilterQuery = '( Left (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ') <>\\\"' + value1 + '\\\"';\n                break;\n            case 'EndsWith':\n                advancedFilterQuery = '( Right (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ')=\\\"' + value1 + '\\\"';\n                break;\n            case 'DoesNotEndsWith':\n                advancedFilterQuery = '( Right (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ') <>\\\"' + value1 + '\\\"';\n                break;\n            case 'GreaterThan':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption >\\\"' + value1 + '\\\"') : (measures + ' >' + value1 + ''));\n                break;\n            case 'GreaterThanOrEqualTo':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption >=\\\"' + value1 + '\\\"') : (measures + ' >=' + value1 + ''));\n                break;\n            case 'LessThan':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption <\\\"' + value1 + '\\\"') : (measures + ' <' + value1 + ''));\n                break;\n            case 'LessThanOrEqualTo':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption <=\\\"' + value1 + '\\\"') : (measures + ' <=' + value1 + ''));\n                break;\n            case 'Between':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption >=\\\"' + value1 + '\\\"AND ' + fieldName + '.CurrentMember.member_caption <=\\\"' + value2 + '\\\"') : (measures + ' >=' + value1 + ' AND ' + measures + ' <=' + value2));\n                break;\n            case 'NotBetween':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption >=\\\"' + value1 + '\\\"OR ' + fieldName + '.CurrentMember.member_caption <=\\\"' + value2 + '\\\"') : (measures + ' >=' + value1 + ' OR ' + measures + ' <=' + value2));\n                break;\n            default:\n                advancedFilterQuery = '( InStr (1,' + fieldName + '.CurrentMember.member_caption,\\\"' + value1 + '\\\") >0';\n                break;\n        }\n        return advancedFilterQuery;\n    };\n    /* tslint:enable:max-line-length */\n    MDXQuery.getCalculatedFieldQuery = function (calcMembers) {\n        var calcQuery = '';\n        if (calcMembers.length > 0) {\n            calcQuery = '\\nWITH';\n            for (var _i = 0, calcMembers_1 = calcMembers; _i < calcMembers_1.length; _i++) {\n                var member = calcMembers_1[_i];\n                var prefixName = (member.formula.indexOf('Measure') > -1 ? '[Measures].' : member.hierarchyUniqueName + '.');\n                var aliasName = prefixName + '[' + member.name + ']';\n                /* tslint:disable-next-line:max-line-length */\n                var formatString = (!isNullOrUndefined(member.formatString) ? member.formatString : null);\n                calcQuery += ('\\nMEMBER ' + aliasName + 'as (' + member.formula + ') ' + (!isNullOrUndefined(formatString) ? ', FORMAT_STRING =\\\"' + formatString.trim() + '\\\"' : ''));\n            }\n        }\n        return calcQuery;\n    };\n    return MDXQuery;\n}());\nexport { MDXQuery };\n","import { extend, Internationalization, isNullOrUndefined, Ajax } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../util';\nimport { MDXQuery } from './mdx-query';\nimport * as cls from '../../common/base/css-constant';\n/**\n * OlapEngine is used to manipulate the olap or Multi-Dimensional data as pivoting values.\n */\n/** @hidden */\nvar OlapEngine = /** @class */ (function () {\n    function OlapEngine() {\n        /** @hidden */\n        this.fieldList = {};\n        /** @hidden */\n        this.columnCount = 0;\n        /** @hidden */\n        this.rowCount = 0;\n        /** @hidden */\n        this.colFirstLvl = 0;\n        /** @hidden */\n        this.rowFirstLvl = 0;\n        /** @hidden */\n        this.pageColStartPos = 0;\n        /** @hidden */\n        this.enableSort = false;\n        /** @hidden */\n        this.enableValueSorting = false;\n        /** @hidden */\n        this.dataFields = {};\n        /** @hidden */\n        this.formatFields = {};\n        /** @hidden */\n        this.filterMembers = {};\n        /** @hidden */\n        this.drilledSets = {};\n        /** @hidden */\n        this.aggregatedValueMatrix = [];\n        /* tslint:disable-next-line:max-line-length */\n        this.customRegex = /^(('[^']+'|''|[^*#@0,.])*)(\\*.)?((([0#,]*[0,]*[0#]*)(\\.[0#]*)?)|([#,]*@+#*))(E\\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;\n        this.formatRegex = /(^[ncpae]{1})([0-1]?[0-9]|20)?$/i;\n        /** @hidden */\n        this.pivotValues = [];\n        /** @hidden */\n        this.valueContent = [];\n        /** @hidden */\n        this.headerContent = [];\n        /** @hidden */\n        this.rowStartPos = 0;\n        /** @hidden */\n        this.pageRowStartPos = 0;\n        /** @hidden */\n        this.tupColumnInfo = [];\n        /** @hidden */\n        this.tupRowInfo = [];\n        /** @hidden */\n        this.gridJSON = '';\n        /** @hidden */\n        this.namedSetsPosition = {};\n        this.colDepth = 0;\n        this.totalCollection = [];\n        this.parentObjCollection = {};\n        this.curDrillEndPos = -1;\n        this.headerGrouping = {};\n        this.lastLevel = [];\n        this.showRowSubTotals = true;\n        this.showColumnSubTotals = true;\n        this.hideRowTotalsObject = {};\n        this.hideColumnTotalsObject = {};\n        this.sortObject = {};\n        this.isColDrill = false;\n    }\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    OlapEngine.prototype.renderEngine = function (dataSourceSettings, customProperties) {\n        this.isEmptyData = false;\n        this.mdxQuery = '';\n        this.isMeasureAvail = false;\n        this.allowMemberFilter = false;\n        this.allowLabelFilter = false;\n        this.allowValueFilter = false;\n        this.isMondrian = false;\n        this.aggregatedValueMatrix = [];\n        this.measureReportItems = [];\n        this.calcChildMembers = [];\n        this.selectedItems = [];\n        this.savedFieldList = undefined;\n        this.savedFieldListData = undefined;\n        this.formatFields = {};\n        this.filterMembers = {};\n        this.dataFields = {};\n        this.valueAxis = '';\n        this.columnCount = 0;\n        this.rowCount = 0;\n        this.colFirstLvl = 0;\n        this.rowFirstLvl = 0;\n        this.pageColStartPos = 0;\n        this.enableValueSorting = false;\n        this.sortObject = {};\n        this.globalize = new Internationalization();\n        /* tslint:disable:no-any */\n        this.locale = this.globalize.getCulture();\n        /* tslint:enable:no-any */\n        this.localeObj = customProperties ? customProperties.localeObj : undefined;\n        this.enableValueSorting = customProperties ? customProperties.enableValueSorting : false;\n        if (dataSourceSettings.url) {\n            // this.isMondrian = (dataSourceSettings.providerType === 'mondrian');\n            this.dataSourceSettings = dataSourceSettings;\n            this.valueAxis = dataSourceSettings.valueAxis === 'row' ? 'row' : 'column';\n            this.getAxisFields();\n            this.formats = dataSourceSettings.formatSettings ? dataSourceSettings.formatSettings : [];\n            this.enableSort = dataSourceSettings.enableSorting === undefined ? true : dataSourceSettings.enableSorting;\n            this.valueSortSettings = dataSourceSettings.valueSortSettings ? dataSourceSettings.valueSortSettings : undefined;\n            this.filterSettings = dataSourceSettings.filterSettings ? dataSourceSettings.filterSettings : [];\n            this.sortSettings = dataSourceSettings.sortSettings ? dataSourceSettings.sortSettings : [];\n            this.allowMemberFilter = dataSourceSettings.allowMemberFilter ? true : false;\n            this.allowLabelFilter = dataSourceSettings.allowLabelFilter ? true : false;\n            this.allowValueFilter = dataSourceSettings.allowValueFilter ? true : false;\n            this.drilledMembers = dataSourceSettings.drilledMembers ? this.updateDrilledItems(dataSourceSettings.drilledMembers) : [];\n            this.calculatedFieldSettings = dataSourceSettings.calculatedFieldSettings ? dataSourceSettings.calculatedFieldSettings : [];\n            this.emptyCellTextContent = dataSourceSettings.emptyCellsTextContent ? dataSourceSettings.emptyCellsTextContent : '';\n            this.pageSettings = customProperties ? (customProperties.pageSettings ? customProperties.pageSettings : this.pageSettings)\n                : undefined;\n            this.isPaging = this.pageSettings ? true : false;\n            this.frameSortObject();\n            this.getFormattedFields(this.formats);\n            this.savedFieldList = customProperties ? customProperties.savedFieldList : undefined;\n            this.savedFieldListData = customProperties ? customProperties.savedFieldListData : undefined;\n            this.fieldListData = [];\n            this.fieldListObj = {};\n            this.setNamedSetsPosition();\n            if (!(this.savedFieldList && this.savedFieldListData)) {\n                this.getFieldList(dataSourceSettings);\n            }\n            else {\n                this.updateFieldlist(true);\n            }\n            this.loadCalculatedMemberElements(this.calculatedFieldSettings);\n            this.measureReportItems = [];\n            // this.updateAllMembers(dataSourceSettings, this.filters);\n            this.updateFilterItems(this.filterSettings);\n            this.generateGridData(dataSourceSettings);\n        }\n    };\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    OlapEngine.prototype.generateGridData = function (dataSourceSettings, action) {\n        var refPaging = (action && action === 'navPaging' &&\n            this.isPaging && this.pageSettings !== undefined ? true : false);\n        if (this.rows.length > 0 || this.columns.length > 0 || this.values.length > 0 || this.filters.length > 0) {\n            MDXQuery.getCellSets(dataSourceSettings, this, refPaging);\n        }\n        else {\n            MDXQuery.getCellSets(dataSourceSettings, this, true, undefined, true);\n            this.generateEngine(undefined, undefined, { dataSourceSettings: dataSourceSettings, action: 'loadTableElements' });\n        }\n    };\n    OlapEngine.prototype.generatePagingData = function (xmlDoc, request, customArgs) {\n        var xmlaCellSet = [].slice.call(xmlDoc.querySelectorAll('Axes, CellData'));\n        // this.rowCount =\n        //     (xmlaCellSet.length > 0 && [].slice.call(xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis1\"] Tuple')).length > 0 ?\n        //         [].slice.call(xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis1\"] Tuple')).length : 0);\n        // this.columnCount =\n        //     (xmlaCellSet.length > 0 && [].slice.call(xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis0\"] Tuple')).length > 0 ?\n        //         [].slice.call(xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis0\"] Tuple')).length : 0);\n        var countCells = xmlaCellSet[1] ? xmlaCellSet[1].querySelectorAll('FmtValue') : null;\n        if (countCells && countCells.length > 0) {\n            this.columnCount = Number(countCells[0].textContent);\n            this.rowCount = Number(countCells[1].textContent);\n        }\n        var dataSourceSettings = customArgs.dataSourceSettings;\n        MDXQuery.getCellSets(dataSourceSettings, this, true);\n    };\n    OlapEngine.prototype.scrollPage = function (direction, newPage, prevPage) {\n        MDXQuery.getCellSets(this.dataSourceSettings, this, true);\n    };\n    OlapEngine.prototype.generateEngine = function (xmlDoc, request, customArgs) {\n        if (customArgs.action !== 'down') {\n            this.pivotValues = [];\n            this.valueContent = [];\n            this.headerContent = [];\n            this.colDepth = 0;\n            this.tupColumnInfo = [];\n            this.tupRowInfo = [];\n            this.colMeasures = {};\n            this.colMeasurePos = undefined;\n            this.rowMeasurePos = undefined;\n            this.rowStartPos = -1;\n        }\n        this.xmlDoc = xmlDoc ? xmlDoc.cloneNode(true) : undefined;\n        this.request = request;\n        this.customArgs = customArgs;\n        this.totalCollection = [];\n        this.parentObjCollection = {};\n        this.curDrillEndPos = -1;\n        this.onDemandDrillEngine = [];\n        this.getSubTotalsVisibility();\n        this.xmlaCellSet = xmlDoc ? xmlDoc.querySelectorAll('Axes, CellData') : undefined;\n        var columnTuples = this.xmlaCellSet && this.xmlaCellSet.length > 0 ?\n            [].slice.call(this.xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis0\"] Tuple')) : [];\n        var rowTuples = this.xmlaCellSet && this.xmlaCellSet.length > 0 ?\n            [].slice.call(this.xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis1\"] Tuple')) : [];\n        var valCollection = this.xmlaCellSet && this.xmlaCellSet.length > 1 ?\n            [].slice.call(this.xmlaCellSet[1].querySelectorAll('Cell')) : [];\n        if (this.drilledMembers.length > 0) {\n            // let st1: number = new Date().getTime();\n            var measureInfo = this.getMeasureInfo();\n            var orderedInfo = void 0;\n            orderedInfo = this.frameMeasureOrder(measureInfo, 'column', columnTuples, valCollection, columnTuples.length);\n            columnTuples = orderedInfo.orderedHeaderTuples;\n            valCollection = orderedInfo.orderedValueTuples;\n            orderedInfo = this.frameMeasureOrder(measureInfo, 'row', rowTuples, valCollection, columnTuples.length);\n            rowTuples = orderedInfo.orderedHeaderTuples;\n            valCollection = orderedInfo.orderedValueTuples;\n            // let st2: number = (new Date().getTime() - st1) / 1000;\n            // console.log('over-all:' + st2);\n        }\n        if (customArgs.action === 'down') {\n            this.updateTupCollection(customArgs.drillInfo.axis === 'row' ? rowTuples.length : columnTuples.length);\n        }\n        if (customArgs.action === 'down' ? customArgs.drillInfo.axis === 'column' : true) {\n            this.frameColumnHeader(columnTuples);\n            if (!this.isPaging) {\n                this.performColumnSorting();\n            }\n        }\n        if (customArgs.action === 'down' ? customArgs.drillInfo.axis === 'row' : true) {\n            this.frameRowHeader(rowTuples);\n            if (!this.isPaging) {\n                this.performRowSorting();\n            }\n        }\n        this.frameValues(valCollection, columnTuples.length);\n        this.performColumnSpanning();\n        if (!this.isPaging && this.enableSort) {\n            for (var i = 0; i < this.headerContent.length; i++) {\n                this.headerContent[i] = this.pivotValues[i];\n            }\n        }\n        this.isEngineUpdated = true;\n        this.isEmptyData = columnTuples.length === 0;\n        //this.append(columnTuples.length);\n    };\n    OlapEngine.prototype.getSubTotalsVisibility = function () {\n        this.showRowSubTotals = this.dataSourceSettings.showRowSubTotals && this.dataSourceSettings.showSubTotals;\n        this.showColumnSubTotals = this.dataSourceSettings.showColumnSubTotals && this.dataSourceSettings.showSubTotals;\n        this.hideRowTotalsObject = {};\n        this.hideColumnTotalsObject = {};\n        var axisCount = 1;\n        do {\n            if (axisCount === 1) {\n                if (this.showColumnSubTotals) {\n                    for (var cCnt = 0; cCnt < this.dataSourceSettings.columns.length; cCnt++) {\n                        if (this.dataSourceSettings.columns[cCnt].showSubTotals === false) {\n                            this.hideColumnTotalsObject[this.dataSourceSettings.columns[cCnt].name] = cCnt;\n                        }\n                    }\n                }\n            }\n            else {\n                if (this.showRowSubTotals) {\n                    for (var rCnt = 0; rCnt < this.dataSourceSettings.rows.length; rCnt++) {\n                        if (this.dataSourceSettings.rows[rCnt].showSubTotals === false) {\n                            this.hideRowTotalsObject[this.dataSourceSettings.rows[rCnt].name] = rCnt;\n                        }\n                    }\n                }\n            }\n            axisCount++;\n        } while (axisCount < 3);\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.frameRowHeader = function (tuples) {\n        this.headerGrouping = {};\n        this.lastLevel = [];\n        var position = this.pivotValues.length;\n        var pivotValues = [];\n        var valueContent = [];\n        if (this.customArgs.action !== 'down') {\n            pivotValues = this.pivotValues;\n            valueContent = this.valueContent;\n        }\n        else {\n            position = this.customArgs.drillInfo.currentCell.rowIndex + 1;\n        }\n        this.rowStartPos = this.rowStartPos > 0 ? this.rowStartPos : position;\n        var tupPos = 0;\n        var lastAllStartPos;\n        var lastAllCount;\n        var prevUNArray = [];\n        var allType = {};\n        var rowMembers = [];\n        var availAllMember = false;\n        var withoutAllStartPos = -1;\n        var withoutAllEndPos = -1;\n        var minLevel = [];\n        var gTotals = [{\n                axis: 'row',\n                colIndex: 0,\n                formattedText: 'Grand Total',\n                hasChild: false,\n                level: -1,\n                rowIndex: 0,\n                index: [],\n                type: 'grand sum',\n                ordinal: 0,\n                colSpan: 1,\n                rowSpan: 1,\n                memberType: 2,\n                isDrilled: false,\n                valueSort: { 'Grand Total': 1, levelName: 'Grand Total' }\n            }];\n        var maxLevel = [];\n        var measurePos;\n        var newTupPosition = (this.customArgs.drillInfo && this.customArgs.drillInfo.axis === 'row') ?\n            (this.customArgs.drillInfo.currentCell.ordinal + 1) : 0;\n        while (tupPos < tuples.length) {\n            var members = tuples[tupPos].querySelectorAll('Member');\n            maxLevel = this.frameTupCollection(members, maxLevel, (tupPos + newTupPosition), this.tupRowInfo, this.showRowSubTotals, this.hideRowTotalsObject, 'row');\n            tupPos++;\n        }\n        tupPos = 0;\n        var prevTupInfo;\n        var tuplesLength = tuples.length;\n        if (this.customArgs.action === 'down') {\n            var ordinal = this.customArgs.drillInfo.currentCell.ordinal + 1;\n            tupPos = ordinal;\n            tuplesLength += ordinal;\n            lastAllCount = this.tupRowInfo[ordinal - 1].allCount;\n            lastAllStartPos = this.tupRowInfo[ordinal - 1].allStartPos;\n            prevTupInfo = this.tupRowInfo[ordinal - 1];\n        }\n        var startTupPos = tupPos;\n        var pagingAllowFlag = true;\n        var lastMesPos = 0;\n        while (tupPos < tuplesLength && pagingAllowFlag) {\n            var members = tuples[this.customArgs.action === 'down' ?\n                (tupPos - (this.customArgs.drillInfo.currentCell.ordinal + 1)) : tupPos].querySelectorAll('Member');\n            var memPos = 0;\n            var prevParent = void 0;\n            var allCount = this.tupRowInfo[tupPos].allCount;\n            var allStartPos = this.tupRowInfo[tupPos].allStartPos;\n            var measure = this.tupRowInfo[tupPos].measure;\n            var typeColl = this.tupRowInfo[tupPos].typeCollection;\n            var drillInfo = this.tupRowInfo[tupPos].drillInfo;\n            var drillStartPos = this.tupRowInfo[tupPos].drillStartPos;\n            var startDrillUniquename = this.tupRowInfo[tupPos].startDrillUniquename;\n            var drillEndPos = this.tupRowInfo[tupPos].drillEndPos;\n            var levelColl = this.tupRowInfo[tupPos].levelCollection;\n            if (tupPos === 0 || tupPos === startTupPos) {\n                var firstTupMembers = this.customArgs.action === 'down' ? this.tupRowInfo[0].members : members;\n                while (memPos < firstTupMembers.length) {\n                    if (firstTupMembers[memPos].querySelector('MEMBER_TYPE').textContent === '1' &&\n                        Number(firstTupMembers[memPos].querySelector('LNum').textContent) === 0) {\n                        minLevel[memPos] = 0;\n                    }\n                    else {\n                        minLevel[memPos] = Number(firstTupMembers[memPos].querySelector('LNum').textContent);\n                    }\n                    // if (firstTupMembers[memPos].querySelector('MEMBER_TYPE').textContent === '1' &&\n                    //   (this.isPaging || Number(firstTupMembers[memPos].querySelector('LNum').textContent) === 0)) {\n                    if (firstTupMembers[memPos].querySelector('MEMBER_TYPE').textContent === '1') {\n                        allType[memPos] = 0;\n                        withoutAllStartPos = withoutAllStartPos === -1 ? memPos : withoutAllStartPos;\n                        withoutAllEndPos = memPos;\n                    }\n                    else {\n                        allType[memPos] = 1;\n                        availAllMember = firstTupMembers[memPos].querySelector('MEMBER_TYPE').textContent === '3' ? availAllMember : true;\n                    }\n                    memPos++;\n                }\n                measurePos = typeColl.indexOf('3');\n            }\n            memPos = 0;\n            if (tupPos === 0 && (members.length > (allCount + (measure ? 1 : 0)) || (members.length === 1 && measure))) {\n                gTotals.pop();\n            }\n            if ((tupPos === 0 && this.isPaging) ? gTotals.length === 0 :\n                (!availAllMember || allCount === lastAllCount || allStartPos !== lastAllStartPos || (members.length === 1 && measure))) {\n                var attrDrill = this.checkAttributeDrill(this.tupRowInfo[tupPos].drillInfo, 'rows');\n                var drillAllow = drillStartPos > -1 ? (allCount > 0 ? (attrDrill || allStartPos > drillStartPos) : true) : true;\n                /* tslint:disable-next-line:max-line-length */\n                drillAllow = (prevTupInfo && drillAllow && drillStartPos > -1) ?\n                    (prevTupInfo.startDrillUniquename !== startDrillUniquename ? true :\n                        ((withoutAllEndPos > prevTupInfo.measurePosition ? false :\n                            prevTupInfo.measureName !== this.tupRowInfo[tupPos].measureName) &&\n                            (allStartPos === (drillStartPos + 1) || this.tupRowInfo[tupPos].measurePosition === (drillStartPos + 1))))\n                    : drillAllow;\n                var withoutAllAllow = (withoutAllStartPos > -1 && allCount > 0) ? (attrDrill || allStartPos > withoutAllEndPos) : true;\n                if (members.length === allCount + (measure ? 1 : 0) && measure) {\n                    var levelName = 'Grand Total.' + members[measurePos].querySelector('Caption').textContent;\n                    gTotals.push({\n                        axis: 'row',\n                        actualText: this.getUniqueName(members[measurePos].querySelector('UName').textContent),\n                        colIndex: 0,\n                        formattedText: (typeColl[measurePos] === '3' &&\n                            this.dataFields[this.getUniqueName(members[measurePos].querySelector('UName').textContent)] &&\n                            this.dataFields[this.getUniqueName(members[measurePos].querySelector('UName').textContent)].caption) ?\n                            this.dataFields[this.getUniqueName(members[measurePos].querySelector('UName').textContent)].caption :\n                            members[measurePos].querySelector('Caption').textContent,\n                        hasChild: false,\n                        level: -1,\n                        rowIndex: position,\n                        index: [],\n                        ordinal: tupPos,\n                        colSpan: 1,\n                        rowSpan: 1,\n                        memberType: Number(typeColl[measurePos]),\n                        isDrilled: false,\n                        parentUniqueName: members[measurePos].querySelector('PARENT_UNIQUE_NAME') ?\n                            members[measurePos].querySelector('PARENT_UNIQUE_NAME').textContent : undefined,\n                        levelUniqueName: members[measurePos].querySelector('LName').textContent,\n                        hierarchy: members[measurePos].getAttribute('Hierarchy'),\n                        valueSort: { levelName: levelName, axis: members[measurePos].getAttribute('Hierarchy') }\n                    });\n                    gTotals[gTotals.length - 1].valueSort['Grand Total.' + members[measurePos].querySelector('Caption').textContent] = 1;\n                }\n                else if (!(allStartPos === 0 || (measurePos === 0 && allStartPos === 1)) && drillAllow && withoutAllAllow) {\n                    prevTupInfo = this.tupRowInfo[tupPos];\n                    var lastPos = position;\n                    var lastMemPos = memPos;\n                    prevParent = {};\n                    var withoutAllDrilled = false;\n                    while (memPos < members.length && pagingAllowFlag) {\n                        var member = members[memPos];\n                        if (member.querySelector('UName').textContent !== prevUNArray[memPos] && typeColl[memPos] !== '2'\n                            && ((Object.keys(prevParent).length > 0 ? (prevParent.isDrilled && !this.fieldList[prevParent.hierarchy].isHierarchy) : withoutAllDrilled) ?\n                                (typeColl[memPos] === '3' && (allType[memPos - 1] && allType[memPos + 1] !== 0)) : true)) {\n                            var lvl = Number(member.querySelector('LNum').textContent) -\n                                ((allType[memPos] && typeColl[memPos] !== '3') ? 1 : minLevel[memPos]);\n                            /* tslint:disable-next-line:no-string-literal */\n                            var isNamedSet = this.namedSetsPosition['row'][memPos] ? true : false;\n                            var uniqueName = this.getUniqueName(member.querySelector('UName').textContent);\n                            var depth = this.getDepth(this.tupRowInfo[tupPos], uniqueName, Number(typeColl[memPos]));\n                            if (!(this.isPaging && pivotValues[lastMesPos][0] && this.fieldList[pivotValues[lastMesPos][0].hierarchy] && this.fieldList[pivotValues[lastMesPos][0].hierarchy].isHierarchy &&\n                                pivotValues[lastMesPos][0].hasChild && !pivotValues[lastMesPos][0].isDrilled && !this.rows[memPos].isNamedSet && (this.rows[memPos].name.indexOf('[Measures]') === 0 || (this.fieldList[member.getAttribute('Hierarchy')] && (this.fieldList[member.getAttribute('Hierarchy')].isHierarchy || this.fieldList[member.getAttribute('Hierarchy')].hasAllMember))) &&\n                                pivotValues[lastMesPos][0].depth < depth)) {\n                                pivotValues[position] = [{\n                                        axis: 'row',\n                                        actualText: uniqueName,\n                                        colIndex: 0,\n                                        formattedText: (typeColl[memPos] === '3' && this.dataFields[uniqueName] &&\n                                            this.dataFields[uniqueName].caption) ? this.dataFields[uniqueName].caption :\n                                            member.querySelector('Caption').textContent,\n                                        hasChild: (this.fieldList[member.getAttribute('Hierarchy')] && this.fieldList[member.getAttribute('Hierarchy')].isHierarchy && memPos < this.rows.length - 1 && !this.rows[memPos + 1].isNamedSet && this.rows[memPos + 1].name.indexOf('[Measures]') < 0 && this.fieldList[this.rows[memPos + 1].name] && this.fieldList[this.rows[memPos + 1].name].hasAllMember) ? true : Number(member.querySelector('CHILDREN_CARDINALITY').textContent) > 0 ? true : false,\n                                        level: lvl,\n                                        depth: depth,\n                                        rowIndex: position,\n                                        index: [],\n                                        ordinal: tupPos,\n                                        type: 'header',\n                                        colSpan: 1,\n                                        rowSpan: 1,\n                                        memberType: Number(typeColl[memPos]),\n                                        isDrilled: (this.fieldList[member.getAttribute('Hierarchy')] && this.fieldList[member.getAttribute('Hierarchy')].isHierarchy && !this.isAttributeDrill(member.getAttribute('Hierarchy'), this.tupRowInfo[tupPos].drillInfo, 'rows')) ? true : this.tupRowInfo[tupPos].drillInfo[memPos].isDrilled,\n                                        parentUniqueName: member.querySelector('PARENT_UNIQUE_NAME') ?\n                                            member.querySelector('PARENT_UNIQUE_NAME').textContent : undefined,\n                                        levelUniqueName: member.querySelector('LName').textContent,\n                                        hierarchy: member.getAttribute('Hierarchy'),\n                                        isNamedSet: isNamedSet,\n                                        valueSort: { levelName: '', axis: member.getAttribute('Hierarchy') }\n                                    }];\n                                prevParent = typeColl[memPos] !== '3' ? pivotValues[position][0] : prevParent;\n                                if (!prevParent) {\n                                    rowMembers.push(member.querySelector('Caption').textContent);\n                                }\n                                var levelName = this.getCaptionCollectionWithMeasure(this.tupRowInfo[tupPos]);\n                                pivotValues[position][0].valueSort.levelName = levelName;\n                                pivotValues[position][0].valueSort[levelName] = 1;\n                                valueContent[position - this.rowStartPos] = {};\n                                valueContent[position - this.rowStartPos][0] = pivotValues[position][0];\n                                if (measure && measurePos > memPos) {\n                                    prevUNArray[measurePos] = '';\n                                }\n                                for (var pos = memPos + 1; pos < members.length; pos++) {\n                                    prevUNArray[pos] = '';\n                                }\n                                prevUNArray[memPos] = member.querySelector('UName').textContent;\n                                lastMesPos = Number(typeColl[memPos]) !== 3 ? position : lastMesPos;\n                                position++;\n                                lastMemPos = memPos;\n                            }\n                        }\n                        else if (typeColl[memPos] === '2') {\n                            lastMemPos = memPos;\n                        }\n                        else {\n                            if (this.tupRowInfo[tupPos].drillInfo[memPos].isDrilled && allType[memPos] === 0) {\n                                withoutAllDrilled = true;\n                            }\n                        }\n                        if (this.tupRowInfo[tupPos].drillInfo[memPos].isDrilled && this.tupRowInfo[tupPos].showTotals) {\n                            this.tupRowInfo[tupPos].showTotals = !this.showRowSubTotals ? false :\n                                this.hideRowTotalsObject[this.tupRowInfo[tupPos].drillInfo[memPos].hierarchy] === undefined;\n                        }\n                        memPos++;\n                    }\n                    if (lastPos < position && lastMemPos >= (members.length - 1)) {\n                        pivotValues[position - 1][0].ordinal = tupPos;\n                        if (pivotValues[position - 1][0].type === 'header') {\n                            delete pivotValues[position - 1][0].type;\n                        }\n                    }\n                }\n                lastAllCount = allCount;\n                lastAllStartPos = allStartPos;\n            }\n            tupPos++;\n        }\n        if (gTotals.length > 1 && gTotals[0].memberType !== 3) {\n            gTotals[0].ordinal = -1;\n        }\n        // if (!(this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showRowGrandTotals)) {\n        //     for (let totPos: number = 0; totPos < gTotals.length; totPos++) {\n        //         if (this.tupRowInfo[gTotals[totPos].ordinal]) {\n        //             this.tupRowInfo[gTotals[totPos].ordinal].showTotals = false;\n        //         }\n        //     }\n        // }\n        if (this.customArgs.action !== 'down') {\n            if (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showRowGrandTotals) {\n                for (var totPos = 0; totPos < gTotals.length; totPos++) {\n                    gTotals[totPos].rowIndex = position;\n                    pivotValues[position] = [gTotals[totPos]];\n                    valueContent[position - this.rowStartPos] = {};\n                    valueContent[position - this.rowStartPos][0] = pivotValues[position][0];\n                    position++;\n                }\n            }\n        }\n        else {\n            this.updateRowEngine(pivotValues, valueContent, tuples.length);\n            this.onDemandDrillEngine = pivotValues;\n        }\n    };\n    OlapEngine.prototype.getDepth = function (tupInfo, uniqueName, memberType) {\n        var memberPosition = tupInfo.uNameCollection.indexOf(uniqueName);\n        var cropUName = tupInfo.uNameCollection.substring(0, memberPosition) +\n            (memberType === 3 ? '' : uniqueName);\n        var fieldSep = cropUName.split('::[').map(function (item) {\n            return item[0] === '[' ? item : ('[' + item);\n        });\n        if (memberType === 3 && this.rowMeasurePos === fieldSep.length) {\n            fieldSep.push(uniqueName);\n        }\n        var nxtIndextCount = -1;\n        for (var fPos = 0; fPos < fieldSep.length; fPos++) {\n            var fieldMembers = fieldSep[fPos];\n            var membersCount = fieldMembers.split('~~').length;\n            nxtIndextCount += membersCount;\n        }\n        return nxtIndextCount;\n    };\n    OlapEngine.prototype.checkAttributeDrill = function (drillInfo, axis) {\n        var isDrill = false;\n        for (var i = 0; i < drillInfo.length; i++) {\n            isDrill = this.isAttributeDrill(drillInfo[i].hierarchy, drillInfo, axis);\n            if (isDrill) {\n                break;\n            }\n        }\n        return isDrill;\n    };\n    OlapEngine.prototype.frameTupCollection = function (members, maxLevel, tupPos, tupInfo, showSubTotals, hideTotalsObject, axis) {\n        var _a, _b;\n        var memPos = 0;\n        var allCount = 0;\n        var allStartPos;\n        var measure;\n        var measureName;\n        var measurePosition;\n        var typeColl = [];\n        var levelColl = [];\n        var drillState = [];\n        var uNameCollection = '';\n        var captionCollection = '';\n        var showTotals = true;\n        var hideFieldPos = -1;\n        while (memPos < members.length) {\n            var member = members[memPos];\n            var memberlevel = Number(member.querySelector('LNum').textContent);\n            var memberUName = member.querySelector('UName').textContent;\n            /* tslint:disable:no-any */\n            if (Number(member.querySelector('MEMBER_TYPE').textContent) > 3) {\n                member.querySelector('MEMBER_TYPE').textContent = memberUName.startsWith('[Measures]') ? '3' : '1';\n            }\n            var memberType = memberUName.startsWith('[Measures]') ? '3' :\n                (Number(member.querySelector('MEMBER_TYPE').textContent) > 3 ? '1' : member.querySelector('MEMBER_TYPE').textContent);\n            /* tslint:enable:no-any */\n            var memberCaption = member.querySelector('Caption').textContent;\n            if (this.fieldList[memberCaption] && this.fieldList[memberCaption].type === 'CalculatedField') {\n                memberCaption = this.fieldList[memberCaption].caption;\n                member.querySelector('Caption').textContent = memberCaption;\n            }\n            var hierarchy = member.getAttribute('Hierarchy');\n            /* tslint:disable-next-line:max-line-length */\n            var parentUName = member.querySelector('PARENT_UNIQUE_NAME') ? member.querySelector('PARENT_UNIQUE_NAME').textContent : '';\n            if (memberType === '2') {\n                if (!this.isPaging) {\n                    allCount++;\n                }\n                allStartPos = isNullOrUndefined(allStartPos) ? memPos : allStartPos;\n            }\n            else if (memberType === '3') {\n                measure = member;\n                measureName = memberUName;\n                measurePosition = memPos;\n                if (axis === 'column') {\n                    this.colMeasures[memberUName] = member;\n                    this.colMeasurePos = memPos;\n                }\n                else {\n                    this.rowMeasurePos = memPos;\n                }\n            }\n            else {\n                hideFieldPos = hideTotalsObject[hierarchy];\n            }\n            if (memberType !== '2') {\n                if (this.headerGrouping[memPos]) {\n                    if (memberlevel > this.lastLevel[memPos]) {\n                        this.lastLevel[memPos] = memberlevel;\n                    }\n                    else if (memberlevel < this.lastLevel[memPos]) {\n                        var levelPos = this.lastLevel[memPos];\n                        while (levelPos >= memberlevel) {\n                            delete this.headerGrouping[memPos].UName[levelPos];\n                            delete this.headerGrouping[memPos].Caption[levelPos];\n                            levelPos--;\n                        }\n                        this.lastLevel[memPos] = memberlevel;\n                    }\n                    this.headerGrouping[memPos].UName[memberlevel] = memberUName;\n                    this.headerGrouping[memPos].Caption[memberlevel] = memberCaption;\n                }\n                else {\n                    this.lastLevel[memPos] = memberlevel;\n                    this.headerGrouping[memPos] = { UName: (_a = {}, _a[memberlevel] = memberUName, _a), Caption: (_b = {}, _b[memberlevel] = memberCaption, _b) };\n                }\n                if (this.isPaging) {\n                    var currUName = parentUName;\n                    while (this.drilledSets[currUName]) {\n                        var currCaption = this.drilledSets[currUName].querySelector('Caption').textContent;\n                        var currLevel = Number(this.drilledSets[currUName].querySelector('LNum').textContent);\n                        this.headerGrouping[memPos].UName[currLevel] = currUName;\n                        this.headerGrouping[memPos].Caption[currLevel] = currCaption;\n                        currUName = this.drilledSets[currUName].querySelector('PARENT_UNIQUE_NAME') === null ? '' :\n                            this.drilledSets[currUName].querySelector('PARENT_UNIQUE_NAME').textContent;\n                    }\n                }\n                /* tslint:disable:no-any */\n                var uNames = Object.values(this.headerGrouping[memPos].UName).join('~~');\n                uNameCollection = uNameCollection === '' ? uNames :\n                    (uNameCollection + '::' + uNames);\n                var captions = Object.values(this.headerGrouping[memPos].Caption).join('~~');\n                /* tslint:enable:no-any */\n                if (memPos !== measurePosition) {\n                    captionCollection = captionCollection === '' ? captions :\n                        (captionCollection + '::' + captions);\n                }\n            }\n            typeColl.push(memberType);\n            levelColl.push(memberlevel);\n            if (isNullOrUndefined(maxLevel[memPos]) || maxLevel[memPos] < memberlevel) {\n                maxLevel[memPos] = memberlevel;\n            }\n            drillState.push({ level: memberlevel, uName: memberUName, hierarchy: hierarchy, isDrilled: false });\n            if (tupInfo[tupPos - 1] && tupInfo[tupPos - 1].typeCollection[memPos] === '1' &&\n                drillState[memPos].level > tupInfo[tupPos - 1].drillInfo[memPos].level) {\n                var uCollection = uNameCollection.split(/~~|::\\[/).map(function (item) {\n                    return item[0] === '[' ? item : ('[' + item);\n                });\n                uCollection.pop();\n                var parentLevel = uCollection.join('~~');\n                this.setDrillInfo(parentUName, parentLevel, memPos, tupPos, tupInfo);\n            }\n            memPos++;\n        }\n        if (hideFieldPos > -1) {\n            showTotals = typeColl[hideFieldPos + 1] !== '2';\n        }\n        tupInfo[tupPos] = {\n            allCount: allCount,\n            allStartPos: allStartPos,\n            measure: measure,\n            measureName: measureName,\n            measurePosition: measurePosition,\n            members: members,\n            typeCollection: typeColl,\n            uNameCollection: uNameCollection,\n            captionCollection: captionCollection,\n            levelCollection: levelColl,\n            drillInfo: drillState,\n            drillStartPos: -1,\n            drillEndPos: -1,\n            showTotals: (!showSubTotals && allCount > 0 && allStartPos > (measurePosition === 0 ? 1 : 0)) ? false : showTotals\n        };\n        return maxLevel;\n    };\n    OlapEngine.prototype.getCaptionCollectionWithMeasure = function (tuple) {\n        var captionColection = tuple.captionCollection;\n        if (tuple.measure) {\n            var measureName = tuple.measure.querySelector('Caption').textContent;\n            var measurePosition = tuple.uNameCollection.split(/[~~,::]+/g).indexOf(tuple.measureName);\n            var captionCollectionArray = tuple.captionCollection.split(/[~~,::]+/g);\n            captionCollectionArray.splice(measurePosition, 0, measureName);\n            captionColection = captionCollectionArray.join('.');\n        }\n        else {\n            var captionCollectionArray = tuple.captionCollection.split(/[~~,::]+/g);\n            captionColection = captionCollectionArray.join('.');\n        }\n        return captionColection;\n    };\n    /** hidden */\n    OlapEngine.prototype.setNamedSetsPosition = function () {\n        this.namedSetsPosition = {};\n        var axis = 0;\n        do {\n            var setsPositions = {};\n            var axisFields = axis ? this.dataSourceSettings.rows : this.dataSourceSettings.columns;\n            for (var fPos = 0; fPos < axisFields.length; fPos++) {\n                if (axisFields[fPos].isNamedSet) {\n                    setsPositions[fPos] = axisFields[fPos].name;\n                }\n            }\n            this.namedSetsPosition[axis ? 'row' : 'column'] = setsPositions;\n            axis++;\n        } while (axis < 2);\n    };\n    OlapEngine.prototype.updateRowEngine = function (pivotValues, valueContent, tuplesLength) {\n        var currEngineCount = this.pivotValues.length - 1;\n        var newEngineCount = Object.keys(pivotValues).length;\n        while (currEngineCount > this.customArgs.drillInfo.currentCell.rowIndex) {\n            this.pivotValues[currEngineCount + newEngineCount] = this.pivotValues[currEngineCount];\n            this.pivotValues[currEngineCount + newEngineCount][0].ordinal += tuplesLength;\n            this.pivotValues[currEngineCount + newEngineCount][0].rowIndex += newEngineCount;\n            /* tslint:disable-next-line:max-line-length */\n            this.valueContent[(currEngineCount + newEngineCount) - this.rowStartPos] = this.valueContent[currEngineCount - this.rowStartPos];\n            currEngineCount--;\n        }\n        // for (let key in pivotValues) {\n        for (var key = 0; key < pivotValues.length; key++) {\n            this.pivotValues[key] = pivotValues[key];\n            this.valueContent[Number(key) - this.rowStartPos] = valueContent[Number(key) - this.rowStartPos];\n        }\n        this.pivotValues[this.customArgs.drillInfo.currentCell.rowIndex][0].isDrilled = true;\n    };\n    OlapEngine.prototype.updateTupCollection = function (newTuplesCount) {\n        var tupCollection = this.customArgs.drillInfo.axis === 'row' ? this.tupRowInfo : this.tupColumnInfo;\n        var currTupCount = tupCollection.length - 1;\n        while (currTupCount > this.customArgs.drillInfo.currentCell.ordinal) {\n            tupCollection[currTupCount + newTuplesCount] = tupCollection[currTupCount];\n            currTupCount--;\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.frameColumnHeader = function (tuples) {\n        var _this_1 = this;\n        this.headerGrouping = {};\n        this.lastLevel = [];\n        var tupPos = 0;\n        var maxLevel = [];\n        var allType = [];\n        var minLevel = [];\n        var withoutAllStartPos = -1;\n        var withoutAllEndPos = -1;\n        var newTupPosition = (this.customArgs.drillInfo && this.customArgs.drillInfo.axis === 'column') ?\n            (this.customArgs.drillInfo.currentCell.ordinal + 1) : 0;\n        while (tupPos < tuples.length) {\n            var members = tuples[tupPos].querySelectorAll('Member');\n            maxLevel = this.frameTupCollection(members, maxLevel, (tupPos + newTupPosition), this.tupColumnInfo, this.showColumnSubTotals, this.hideColumnTotalsObject, 'column');\n            tupPos++;\n        }\n        if (tuples.length > 0) {\n            var members = tuples[0].querySelectorAll('Member');\n            var memPos = 0;\n            while (memPos < members.length) {\n                minLevel[memPos] = (members[memPos].querySelector('MEMBER_TYPE').textContent === '1' &&\n                    Number(members[memPos].querySelector('LNum').textContent) === 0) ? 0 :\n                    Number(members[memPos].querySelector('LNum').textContent);\n                if (members[memPos].querySelector('MEMBER_TYPE').textContent === '1' &&\n                    (this.isPaging || Number(members[memPos].querySelector('LNum').textContent) === 0)) {\n                    allType[memPos] = 0;\n                    withoutAllStartPos = withoutAllStartPos === -1 ? memPos : withoutAllStartPos;\n                    withoutAllEndPos = memPos;\n                }\n                else {\n                    allType[memPos] = 1;\n                }\n                memPos++;\n            }\n        }\n        /* tslint:disable */\n        var _this = this;\n        /* tslint:enable */\n        tupPos = 0;\n        var position = 1;\n        var lastAllStartPos;\n        var lastSavedInfo = {};\n        var drillLastAllStartPos;\n        var lastAllCount;\n        var drillLastAllCount;\n        var isSubTotIncluded = true;\n        var withoutAllAvail = false;\n        var lastRealTup;\n        var _loop_1 = function () {\n            var members = tuples[tupPos].querySelectorAll('Member');\n            var allCount = this_1.tupColumnInfo[tupPos].allCount;\n            var allStartPos = this_1.tupColumnInfo[tupPos].allStartPos;\n            var measure = this_1.tupColumnInfo[tupPos].measure;\n            var typeColl = this_1.tupColumnInfo[tupPos].typeCollection;\n            var drillInfo = this_1.tupColumnInfo[tupPos].drillInfo;\n            var drillStartPos = this_1.tupColumnInfo[tupPos].drillStartPos;\n            var startDrillUniquename = this_1.tupColumnInfo[tupPos].startDrillUniquename;\n            var endDrillUniquename = this_1.tupColumnInfo[tupPos].endDrillUniquename;\n            var drillEndPos = this_1.tupColumnInfo[tupPos].drillEndPos;\n            var levelColl = this_1.tupColumnInfo[tupPos].levelCollection;\n            var isStartCol = typeColl[0] === '2' ? false : (typeColl[0] === '3' ? typeColl[1] !== '2' : true);\n            var depth = 0;\n            /* tslint:disable-next-line:max-line-length */\n            maxLevel.map(function (item, pos) { depth = depth + (allType[pos] === 0 ? (item + (1 - (minLevel[pos] > 1 ? 1 : minLevel[pos]))) : (item === 0 ? ((_this_1.isPaging && typeColl[pos] === '2') ? 0 : 1) : item)); });\n            this_1.colDepth = this_1.colDepth > depth ? this_1.colDepth : depth;\n            if (tupPos === 0 && members.length > (allCount + (measure ? 1 : 0))) {\n                withoutAllAvail = true;\n                isStartCol = (allCount > 0 && isStartCol) ? (allStartPos > withoutAllStartPos) : isStartCol;\n            }\n            if (isStartCol) {\n                if (allCount === 0) {\n                    var levelComp = [-1, -1, -1];\n                    if (this_1.tupColumnInfo[tupPos - 1] && this_1.tupColumnInfo[tupPos - 1].allCount === 0) {\n                        levelComp = this_1.levelCompare(levelColl, this_1.tupColumnInfo[tupPos - 1].levelCollection);\n                    }\n                    else if (withoutAllAvail && lastRealTup) {\n                        levelComp = this_1.levelCompare(levelColl, lastRealTup.levelCollection);\n                    }\n                    if (this_1.tupColumnInfo[tupPos].drillStartPos < 0) {\n                        if (!isSubTotIncluded && levelComp[0] > -1 && levelComp[2] > -1) {\n                            position = this_1.mergeTotCollection(position, allCount, maxLevel, minLevel, allType, allStartPos, drillInfo, levelComp);\n                        }\n                        this_1.setParentCollection(members);\n                        this_1.frameCommonColumnLoop(members, tupPos, position, maxLevel, allType, minLevel);\n                        if (!this_1.tupColumnInfo[tupPos].showTotals) {\n                            position--;\n                        }\n                        if (!isSubTotIncluded && levelComp[0] > -1 && levelComp[2] > -1) {\n                            position = this_1.mergeTotCollection(position, allCount, maxLevel, minLevel, allType, allStartPos, drillInfo, levelComp);\n                        }\n                        isSubTotIncluded = false;\n                        if (!this_1.isColDrill) {\n                            position++;\n                        }\n                        else {\n                            this_1.isColDrill = false;\n                        }\n                    }\n                    else if (lastSavedInfo.drillStartPos === drillStartPos ?\n                        (lastSavedInfo.startDrillUniquename !== startDrillUniquename ||\n                            lastSavedInfo.allCount === allCount) : true) {\n                        if (!isSubTotIncluded && levelComp[0] > -1 && levelComp[2] > -1) {\n                            position = this_1.mergeTotCollection(position, allCount, maxLevel, minLevel, allType, allStartPos, drillInfo, levelComp);\n                            isSubTotIncluded = true;\n                        }\n                        this_1.setParentCollection(members);\n                        if (withoutAllAvail ? (withoutAllEndPos <= drillStartPos) : true) {\n                            /* tslint:disable-next-line:max-line-length */\n                            this_1.totalCollection[this_1.totalCollection.length] = ({ allCount: allCount, ordinal: tupPos, members: members, drillInfo: drillInfo });\n                            lastSavedInfo.allCount = allCount;\n                            lastSavedInfo.allStartPos = allStartPos;\n                            lastSavedInfo.drillStartPos = drillStartPos;\n                            lastSavedInfo.startDrillUniquename = startDrillUniquename;\n                            lastSavedInfo.endDrillUniquename = endDrillUniquename;\n                        }\n                    }\n                    lastRealTup = this_1.tupColumnInfo[tupPos];\n                }\n            }\n            var attrDrill = this_1.checkAttributeDrill(this_1.tupColumnInfo[tupPos].drillInfo, 'columns');\n            if (allCount > 0 && (withoutAllAvail ? (isStartCol && (attrDrill || withoutAllEndPos < allStartPos)) : true)) {\n                if (allCount === lastSavedInfo.allCount || allStartPos !== lastSavedInfo.allStartPos) {\n                    /* tslint:disable-next-line:max-line-length */\n                    var endAllow = drillEndPos !== drillStartPos ? (lastSavedInfo.endDrillUniquename === endDrillUniquename) : true;\n                    /* tslint:disable-next-line:max-line-length */\n                    var allow = allStartPos !== lastSavedInfo.allStartPos ? (lastSavedInfo.startDrillUniquename !== startDrillUniquename) : endAllow;\n                    if (drillStartPos > -1 ? (allow) : true) {\n                        if (!isSubTotIncluded) {\n                            position = this_1.mergeTotCollection(position, allCount, maxLevel, minLevel, allType, allStartPos, drillInfo);\n                            isSubTotIncluded = true;\n                        }\n                        this_1.setParentCollection(members);\n                        if ((withoutAllAvail && drillStartPos > -1) ? (withoutAllEndPos <= drillStartPos) : true) {\n                            /* tslint:disable-next-line:max-line-length */\n                            this_1.totalCollection[this_1.totalCollection.length] = ({ allCount: allCount, ordinal: tupPos, members: members, allStartPos: allStartPos, drillInfo: drillInfo });\n                            lastSavedInfo.allCount = allCount;\n                            lastSavedInfo.allStartPos = allStartPos;\n                            lastSavedInfo.drillStartPos = drillStartPos;\n                            lastSavedInfo.startDrillUniquename = startDrillUniquename;\n                            lastSavedInfo.endDrillUniquename = endDrillUniquename;\n                        }\n                    }\n                }\n            }\n            tupPos++;\n        };\n        var this_1 = this;\n        while (tupPos < tuples.length) {\n            _loop_1();\n        }\n        if (this.totalCollection.length > 0) {\n            if (Object.keys(this.colMeasures).length > 1) {\n                this.orderTotals(position, maxLevel, allType, minLevel);\n            }\n            else {\n                this.totalCollection = this.totalCollection.reverse();\n                for (var _i = 0, _a = this.totalCollection; _i < _a.length; _i++) {\n                    var coll = _a[_i];\n                    var isGrandTotal = this.tupColumnInfo[coll.ordinal].measurePosition === 0 ?\n                        this.tupColumnInfo[coll.ordinal].allStartPos === 1 : this.tupColumnInfo[coll.ordinal].allStartPos === 0;\n                    if (isGrandTotal ? (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showColumnGrandTotals) : true) {\n                        this.frameCommonColumnLoop(coll.members, coll.ordinal, position, maxLevel, minLevel, allType);\n                        if (this.tupColumnInfo[coll.ordinal].showTotals) {\n                            position++;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    OlapEngine.prototype.orderTotals = function (position, maxLevel, allType, minLevel) {\n        var groupColl = {};\n        var maxCnt = 1;\n        for (var _i = 0, _a = this.totalCollection; _i < _a.length; _i++) {\n            var coll = _a[_i];\n            var isGrandTotal = this.tupColumnInfo[coll.ordinal].measurePosition === 0 ?\n                this.tupColumnInfo[coll.ordinal].allStartPos === 1 : this.tupColumnInfo[coll.ordinal].allStartPos === 0;\n            if (isGrandTotal ? (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showColumnGrandTotals) : true) {\n                var measureName = this.tupColumnInfo[coll.ordinal].measure.querySelector('UName').textContent;\n                if (groupColl[measureName]) {\n                    groupColl[measureName].coll.push(coll);\n                    groupColl[measureName].count++;\n                    maxCnt = maxCnt < groupColl[measureName].count ? groupColl[measureName].count : maxCnt;\n                }\n                else {\n                    groupColl[measureName] = { coll: [coll], count: 1 };\n                }\n            }\n        }\n        var keys = Object.keys(groupColl);\n        var collLength = maxCnt - 1;\n        while (collLength > -1) {\n            for (var _b = 0, keys_1 = keys; _b < keys_1.length; _b++) {\n                var key = keys_1[_b];\n                var coll = groupColl[key].coll[collLength];\n                if (coll) {\n                    this.frameCommonColumnLoop(coll.members, coll.ordinal, position, maxLevel, allType, minLevel);\n                    if (this.tupColumnInfo[coll.ordinal].showTotals) {\n                        position++;\n                    }\n                }\n            }\n            collLength--;\n        }\n    };\n    OlapEngine.prototype.setParentCollection = function (members) {\n        var memPos = 0;\n        while (members.length > memPos) {\n            var member = members[memPos];\n            var memberType = Number(member.querySelector('MEMBER_TYPE').textContent) > 2 ? '3' :\n                member.querySelector('MEMBER_TYPE').textContent;\n            var memberlevel = Number(member.querySelector('LNum').textContent);\n            var memberUName = member.querySelector('UName').textContent;\n            var parentUName = member.querySelector('PARENT_UNIQUE_NAME') ?\n                member.querySelector('PARENT_UNIQUE_NAME').textContent : '';\n            var isSameParent = true;\n            var isWithoutAllMember = false;\n            if (this.parentObjCollection[memPos]) {\n                var levelCollection = Object.keys(this.parentObjCollection[memPos]);\n                var parentMember = this.parentObjCollection[memPos][memberlevel - 1];\n                isSameParent = parentMember ? parentUName === parentMember.querySelector('UName').textContent :\n                    levelCollection.length === 0;\n                isWithoutAllMember = this.tupColumnInfo[0].typeCollection[memPos] === '1';\n            }\n            if (memberType === '2') {\n                delete this.parentObjCollection[memPos];\n            }\n            else {\n                if ((this.isPaging || isWithoutAllMember) ? !isSameParent : false) {\n                    delete this.parentObjCollection[memPos];\n                }\n                if (!this.parentObjCollection[memPos]) {\n                    this.parentObjCollection[memPos] = {};\n                    this.parentObjCollection[memPos][memberlevel] = member;\n                }\n                else if (!this.parentObjCollection[memPos][memberlevel] ||\n                    this.parentObjCollection[memPos][memberlevel].querySelector('UName').textContent !== memberUName) {\n                    this.parentObjCollection[memPos][memberlevel] = member;\n                }\n            }\n            memPos++;\n        }\n    };\n    OlapEngine.prototype.setDrillInfo = function (pUName, parentLvlCollection, memPos, tupPos, tupInfo) {\n        tupPos--;\n        while (tupInfo[tupPos] && tupInfo[tupPos].drillInfo[memPos].uName === pUName) {\n            var prevUcollection = tupInfo[tupPos].uNameCollection.split(/~~|::\\[/).map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            });\n            if (prevUcollection.join('~~').indexOf(parentLvlCollection) < 0) {\n                break;\n            }\n            tupInfo[tupPos].drillInfo[memPos].isDrilled = true;\n            if (this.curDrillEndPos <= memPos) {\n                tupInfo[tupPos].drillEndPos = this.curDrillEndPos = memPos;\n                tupInfo[tupPos].endDrillUniquename = pUName;\n            }\n            if (tupInfo[tupPos].drillStartPos > memPos || tupInfo[tupPos].drillStartPos === -1) {\n                tupInfo[tupPos].drillStartPos = memPos;\n            }\n            tupInfo[tupPos].startDrillUniquename = pUName;\n            tupPos--;\n        }\n    };\n    OlapEngine.prototype.levelCompare = function (newLevels, oldLevels) {\n        var changePos = [-1, 0];\n        for (var lPos = 0; lPos < oldLevels.length; lPos++) {\n            if (newLevels[lPos] !== oldLevels[lPos]) {\n                changePos = [lPos, newLevels[lPos], (oldLevels[lPos] - newLevels[lPos])];\n                break;\n            }\n        }\n        return changePos;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    OlapEngine.prototype.mergeTotCollection = function (position, allCount, maxLevel, allType, minLevel, allStartPos, drillInfo, levelComp) {\n        /* tslint:disable-next-line:max-line-length */\n        var prevHdrPos = isNullOrUndefined(allStartPos) ? levelComp[0] : (allStartPos - ((this.colMeasurePos === (allStartPos - 1)) ? 2 : 1));\n        var flagLevel = drillInfo[prevHdrPos] && drillInfo[prevHdrPos].level;\n        var flagLevelString = this.getLevelsAsString(prevHdrPos - 1, drillInfo);\n        var groupColl = {};\n        var maxCnt = 1;\n        var enterFlag = false;\n        for (var _i = 0, _a = this.totalCollection; _i < _a.length; _i++) {\n            var coll = _a[_i];\n            if (enterFlag || (coll.allCount <= allCount &&\n                ((flagLevel > -1 && coll.drillInfo[prevHdrPos]) ? ((coll.drillInfo[prevHdrPos].level >= flagLevel) &&\n                    (this.getLevelsAsString(prevHdrPos - 1, coll.drillInfo)) === flagLevelString) : true))) {\n                /* tslint:disable-next-line:max-line-length */\n                var measureName = this.tupColumnInfo[coll.ordinal].measure ? this.tupColumnInfo[coll.ordinal].measure.querySelector('UName').textContent : 'measure';\n                if (groupColl[measureName]) {\n                    groupColl[measureName].coll.push(coll);\n                    groupColl[measureName].count++;\n                    maxCnt = maxCnt < groupColl[measureName].count ? groupColl[measureName].count : maxCnt;\n                }\n                else {\n                    groupColl[measureName] = { coll: [coll], count: 1 };\n                }\n                enterFlag = false;\n            }\n        }\n        var keys = Object.keys(groupColl);\n        var collLength = maxCnt - 1;\n        while (collLength > -1) {\n            for (var _b = 0, keys_2 = keys; _b < keys_2.length; _b++) {\n                var key = keys_2[_b];\n                var coll1 = groupColl[key].coll[collLength];\n                if (coll1) {\n                    var isGrandTotal = this.tupColumnInfo[coll1.ordinal].measurePosition === 0 ?\n                        this.tupColumnInfo[coll1.ordinal].allStartPos === 1 : this.tupColumnInfo[coll1.ordinal].allStartPos === 0;\n                    if (isGrandTotal ? (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showColumnGrandTotals) : true) {\n                        this.frameCommonColumnLoop(coll1.members, coll1.ordinal, position, maxLevel, minLevel, allType);\n                        if (this.tupColumnInfo[coll1.ordinal].showTotals) {\n                            position++;\n                        }\n                    }\n                    this.totalCollection.pop();\n                }\n            }\n            collLength--;\n        }\n        return position;\n    };\n    OlapEngine.prototype.getLevelsAsString = function (prevHdrPos, drillInfo) {\n        var lvlCollection = [];\n        for (var pos = 0; pos < prevHdrPos; pos++) {\n            lvlCollection[pos] = drillInfo[pos].level;\n        }\n        return lvlCollection.length > 0 ? lvlCollection.toString() : '';\n    };\n    /* tslint:disable-next-line:max-line-length */\n    OlapEngine.prototype.frameCommonColumnLoop = function (members, tupPos, position, maxLevel, minLevel, allType) {\n        var _a;\n        var drillMemberPosition = -1;\n        if (this.tupColumnInfo[tupPos].showTotals) {\n            var memberPos = 0;\n            var memberDepth = 0;\n            while (memberPos < members.length) {\n                memberDepth += (allType[memberPos] > 0 && this.getMeasurePosition(this.tupColumnInfo[tupPos].uNameCollection, this.tupColumnInfo[tupPos].measurePosition) !== memberPos) ?\n                    maxLevel[memberPos] :\n                    (maxLevel[memberPos] + (1 - minLevel[memberPos]));\n                if (this.tupColumnInfo[tupPos].drillInfo[memberPos].isDrilled && this.tupColumnInfo[tupPos].showTotals) {\n                    this.tupColumnInfo[tupPos].showTotals = !this.showColumnSubTotals ? false :\n                        this.hideColumnTotalsObject[this.tupColumnInfo[tupPos].drillInfo[memberPos].hierarchy] === undefined;\n                    memberDepth -= maxLevel[memberPos] -\n                        this.tupColumnInfo[tupPos].levelCollection[memberPos];\n                    drillMemberPosition = this.tupColumnInfo[tupPos].showTotals ? -1 : (memberDepth - 1);\n                }\n                memberPos++;\n            }\n        }\n        if (this.tupColumnInfo[tupPos].showTotals) {\n            var memPos = 0;\n            var spanMemPos = 0;\n            var colMembers = {};\n            while (memPos < members.length) {\n                var member = members[memPos];\n                var memberType = Number(member.querySelector('MEMBER_TYPE').textContent) > 2 ? '3' :\n                    member.querySelector('MEMBER_TYPE').textContent;\n                var memDup = 0;\n                for (var rowDepthPos = memberType !== '2' ? (allType[memPos] ? 1 : minLevel[memPos]) : 1; rowDepthPos <= (memberType === '3' ? 1 : maxLevel[memPos]); rowDepthPos++) {\n                    var isDrilled = false;\n                    if (!this.pivotValues[spanMemPos]) {\n                        this.pivotValues[spanMemPos] = [];\n                    }\n                    if (Number(members[memPos].querySelector('LNum').textContent) > rowDepthPos && memberType !== '2') {\n                        if (!this.parentObjCollection[memPos][rowDepthPos]) {\n                            this.getDrilledParent(members[memPos], rowDepthPos, this.parentObjCollection[memPos]);\n                        }\n                        if (this.parentObjCollection[memPos][rowDepthPos]) {\n                            member = this.parentObjCollection[memPos][rowDepthPos];\n                        }\n                        isDrilled = true;\n                    }\n                    else {\n                        member = members[memPos];\n                        memDup++;\n                    }\n                    if (memberType !== '2') {\n                        colMembers[member.querySelector('UName').textContent] = member.querySelector('Caption').textContent;\n                    }\n                    /* tslint:disable */\n                    var levelName = Object.values(colMembers).join('.');\n                    var isNamedSet = this.namedSetsPosition['column'][memPos] ? true : false;\n                    var uName = this.getUniqueName(member.querySelector('UName').textContent);\n                    var depth = this.getDepth(this.tupColumnInfo[tupPos], uName, Number(memberType));\n                    if (!(this.isPaging && this.pivotValues[spanMemPos - 1] && this.pivotValues[spanMemPos - 1][position] && this.fieldList[this.pivotValues[spanMemPos - 1][position].hierarchy] && this.fieldList[this.pivotValues[spanMemPos - 1][position].hierarchy].isHierarchy &&\n                        this.pivotValues[spanMemPos - 1][position].hasChild && !this.pivotValues[spanMemPos - 1][position].isDrilled && !this.columns[memPos].isNamedSet && this.fieldList[member.getAttribute('Hierarchy')] && (this.fieldList[member.getAttribute('Hierarchy')].isHierarchy || this.fieldList[member.getAttribute('Hierarchy')].hasAllMember) &&\n                        this.pivotValues[spanMemPos - 1][position].depth < depth)) {\n                        this.pivotValues[spanMemPos][position] = {\n                            axis: 'column',\n                            actualText: uName,\n                            colIndex: position,\n                            formattedText: (memberType === '3' && this.dataFields[uName] &&\n                                this.dataFields[uName].caption) ? this.dataFields[uName].caption :\n                                member.querySelector('Caption').textContent,\n                            hasChild: (this.fieldList[member.getAttribute('Hierarchy')] && this.fieldList[member.getAttribute('Hierarchy')].isHierarchy && memPos < this.columns.length - 1 && !this.columns[memPos + 1].isNamedSet && this.columns[memPos + 1].name.indexOf('[Measures]') < 0 && this.fieldList[this.columns[memPos + 1].name] && this.fieldList[this.columns[memPos + 1].name].hasAllMember) ? true : Number(member.querySelector('CHILDREN_CARDINALITY').textContent) > 0 ? true : false,\n                            level: memDup > 1 ? -1 : (Number(member.querySelector('LNum').textContent) - ((allType[memPos] && memberType !== '3') ? 1 : 0)),\n                            rowIndex: spanMemPos,\n                            ordinal: tupPos,\n                            memberType: Number(memberType),\n                            depth: depth,\n                            isDrilled: (this.fieldList[member.getAttribute('Hierarchy')] && this.fieldList[member.getAttribute('Hierarchy')].isHierarchy && !this.isAttributeDrill(member.getAttribute('Hierarchy'), this.tupColumnInfo[tupPos].drillInfo, 'columns')) ? true : (isDrilled || this.tupColumnInfo[tupPos].drillInfo[memPos].isDrilled),\n                            parentUniqueName: member.querySelector('PARENT_UNIQUE_NAME') ? member.querySelector('PARENT_UNIQUE_NAME').textContent : undefined,\n                            levelUniqueName: member.querySelector('LName').textContent,\n                            hierarchy: member.getAttribute('Hierarchy'),\n                            isNamedSet: isNamedSet,\n                            valueSort: (_a = { levelName: levelName }, _a[levelName] = 1, _a.axis = member.getAttribute('Hierarchy'), _a)\n                            /* tslint:enable */\n                        };\n                        if (!this.headerContent[spanMemPos]) {\n                            this.headerContent[spanMemPos] = {};\n                        }\n                        this.headerContent[spanMemPos][position] = this.pivotValues[spanMemPos][position];\n                        spanMemPos++;\n                    }\n                    else {\n                        this.isColDrill = true;\n                        break;\n                    }\n                }\n                memPos++;\n            }\n        }\n        else {\n            if (drillMemberPosition > -1) {\n                this.pivotValues[drillMemberPosition][position - 1].ordinal = tupPos;\n            }\n            else if (this.tupColumnInfo[tupPos].allCount > 0) {\n                var memberPos = 0;\n                var memberDepth = 0;\n                while (memberPos < this.tupColumnInfo[tupPos].allStartPos) {\n                    memberDepth += (allType[memberPos] > 0 && this.getMeasurePosition(this.tupColumnInfo[tupPos].uNameCollection, this.tupColumnInfo[tupPos].measurePosition) !== memberPos) ?\n                        maxLevel[memberPos] :\n                        (maxLevel[memberPos] + (1 - minLevel[memberPos]));\n                    memberPos++;\n                }\n                if (this.tupColumnInfo[tupPos].allStartPos === (this.tupColumnInfo[tupPos].measurePosition + 1)) {\n                    memberDepth -= maxLevel[this.tupColumnInfo[tupPos].allStartPos - 2] -\n                        this.tupColumnInfo[tupPos].levelCollection[this.tupColumnInfo[tupPos].allStartPos - 2] + 1;\n                }\n                else {\n                    memberDepth -= maxLevel[this.tupColumnInfo[tupPos].allStartPos - 1] -\n                        this.tupColumnInfo[tupPos].levelCollection[this.tupColumnInfo[tupPos].allStartPos - 1];\n                }\n                this.pivotValues[memberDepth - 1][position - 1].ordinal = tupPos;\n            }\n        }\n    };\n    OlapEngine.prototype.isAttributeDrill = function (hierarchy, drillInfo, axis) {\n        var isDrill = false;\n        var isAdjacent = this.isAdjacentToMeasure(hierarchy, axis);\n        if (!isAdjacent) {\n            for (var i = 0; i < this.drilledMembers.length; i++) {\n                if (this.drilledMembers[i].name === hierarchy) {\n                    for (var j = 0; j < this.drilledMembers[i].items.length; j++) {\n                        var drillItems = this.drilledMembers[i].items[j].split(this.drilledMembers[i].delimiter);\n                        var levelName = '';\n                        for (var k = 0; k < drillItems.length; k++) {\n                            if (drillInfo[k] && drillInfo[k].uName) {\n                                levelName = levelName + (levelName === '' ? '' : this.drilledMembers[i].delimiter) + drillInfo[k].uName;\n                            }\n                        }\n                        if (levelName === this.drilledMembers[i].items[j]) {\n                            isDrill = true;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return isDrill;\n    };\n    OlapEngine.prototype.isAdjacentToMeasure = function (hierarchy, axis) {\n        var isAdjacent = false;\n        var fields = axis === 'rows' ? this.rows : this.columns;\n        for (var i = 0; i < fields.length; i++) {\n            if (fields[i].name === hierarchy && fields[i + 1] && (fields[i + 1].name === '[Measures]' || fields[i + 1].isNamedSet || (this.fieldList[fields[i + 1].name] && !this.fieldList[fields[i + 1].name].hasAllMember))) {\n                isAdjacent = true;\n                break;\n            }\n        }\n        return isAdjacent;\n    };\n    OlapEngine.prototype.getDrilledParent = function (childMember, parentLevel, savedCollection) {\n        var childlevel = Number(childMember.querySelector('LNum').textContent);\n        var currentChild = childMember;\n        for (var lvl = childlevel - 1; lvl >= parentLevel; lvl--) {\n            var currentParent = this.drilledSets[currentChild.querySelector('PARENT_UNIQUE_NAME').textContent];\n            if (currentParent) {\n                savedCollection[lvl] = currentParent;\n                currentChild = currentParent;\n            }\n            else {\n                break;\n            }\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.performRowSorting = function () {\n        var _a;\n        if (this.enableSort && this.tupRowInfo.length > 0) {\n            var rowCount = this.pivotValues.length;\n            var lvlGrouping = {};\n            var measureObjects = {};\n            var gSumGrouping = [];\n            var gSumFlag = false;\n            var withoutAllLastPos = this.tupRowInfo[0].typeCollection.lastIndexOf('1');\n            for (var rPos = this.colDepth; rPos < rowCount; rPos++) {\n                var currentCell = this.pivotValues[rPos][0];\n                var currentTuple = this.tupRowInfo[currentCell.ordinal];\n                var uniqueName = currentTuple ? (currentTuple.measurePosition === 0 && currentCell.memberType === 3 ?\n                    currentTuple.measureName : currentTuple.uNameCollection) : '';\n                if (uniqueName !== '') {\n                    if (withoutAllLastPos > -1) {\n                        uniqueName = this.frameUniqueName(uniqueName, currentCell, currentTuple);\n                    }\n                    var level = uniqueName.split(/~~|::\\[/).length;\n                    if (currentCell.memberType === 3 && this.tupRowInfo[0].measurePosition > 0) {\n                        var parentUName = this.getParentUname(uniqueName, currentCell, true, true);\n                        if (measureObjects[parentUName]) {\n                            measureObjects[parentUName].push(currentCell);\n                        }\n                        else {\n                            measureObjects[parentUName] = [currentCell];\n                        }\n                    }\n                    else if (lvlGrouping[level]) {\n                        lvlGrouping[level][uniqueName] = [currentCell];\n                    }\n                    else {\n                        lvlGrouping[level] = (_a = {}, _a[uniqueName] = [currentCell], _a);\n                    }\n                }\n                if (gSumFlag) {\n                    gSumGrouping.push(currentCell);\n                }\n                if (currentCell.type === 'grand sum') {\n                    gSumFlag = true;\n                }\n            }\n            var isMeasureAvail = Object.keys(measureObjects).length > 0 && this.tupRowInfo[0].measurePosition > 0;\n            /* tslint:disable:typedef */\n            var levels = Object.keys(lvlGrouping).map(function (item) {\n                return Number(item);\n            }).sort(function (a, b) { return (a > b) ? 1 : ((b > a) ? -1 : 0); });\n            /* tslint:enable:typedef */\n            var sortLvlGrouping = {};\n            for (var lPos = levels.length - 1; lPos >= 0; lPos--) {\n                var parentGrouping = {};\n                var objCollection = lvlGrouping[levels[lPos]];\n                var objKeys = Object.keys(objCollection);\n                for (var oPos = 0; oPos < objKeys.length; oPos++) {\n                    var parentUName = lPos === 0 ? 'parent' :\n                        this.getParentUname(objKeys[oPos], objCollection[objKeys[oPos]][0], isMeasureAvail, false);\n                    if (parentGrouping[parentUName]) {\n                        parentGrouping[parentUName].push(objCollection[objKeys[oPos]][0]);\n                    }\n                    else {\n                        parentGrouping[parentUName] = [objCollection[objKeys[oPos]]][0];\n                    }\n                }\n                var pKeys = Object.keys(parentGrouping);\n                for (var kPos = 0; kPos < pKeys.length; kPos++) {\n                    parentGrouping[pKeys[kPos]] = this.sortRowHeaders(parentGrouping[pKeys[kPos]]);\n                }\n                if (sortLvlGrouping[levels[lPos + 1]]) {\n                    for (var kPos = 0; kPos < pKeys.length; kPos++) {\n                        var groupSets = [];\n                        var axisSets = parentGrouping[pKeys[kPos]];\n                        for (var aPos = 0; aPos < axisSets.length; aPos++) {\n                            var tupInfo = this.tupRowInfo[axisSets[aPos].ordinal];\n                            var uName = (tupInfo.measurePosition === 0 && axisSets[aPos].memberType === 3) ?\n                                tupInfo.measureName : tupInfo.uNameCollection;\n                            groupSets.push(axisSets[aPos]);\n                            if (withoutAllLastPos > -1) {\n                                uName = this.frameUniqueName(uName, axisSets[aPos], tupInfo);\n                            }\n                            var isMembersIncluded = false;\n                            if (isMeasureAvail) {\n                                var parentUName = this.getParentUname(uName, axisSets[aPos], isMeasureAvail, true);\n                                if (measureObjects[parentUName]) {\n                                    measureObjects[parentUName] = this.sortRowHeaders(measureObjects[parentUName]);\n                                    var isLastMeasure = uName.lastIndexOf('::[') === uName.indexOf('::[Measures]');\n                                    var isFullLength = uName.split('::[').length - 1 === tupInfo.measurePosition;\n                                    var isLastNotDrilledMember = !tupInfo.drillInfo[tupInfo.measurePosition - 1].isDrilled;\n                                    var isActualLastMember = tupInfo.members.length > (tupInfo.measurePosition + 1);\n                                    if (isLastMeasure && isFullLength && isLastNotDrilledMember && isActualLastMember) {\n                                        isMembersIncluded = true;\n                                        for (var mPos = 0; mPos < measureObjects[parentUName].length; mPos++) {\n                                            groupSets.push(measureObjects[parentUName][mPos]);\n                                            var matchParent = (uName.substring(0, uName.indexOf('::[Measures]')) + '::' + measureObjects[parentUName][mPos].actualText);\n                                            if (sortLvlGrouping[levels[lPos + 1]][matchParent]) {\n                                                groupSets = groupSets.concat(sortLvlGrouping[levels[lPos + 1]][matchParent]);\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        groupSets = groupSets.concat(measureObjects[parentUName]);\n                                    }\n                                }\n                            }\n                            if (!isMembersIncluded &&\n                                sortLvlGrouping[levels[lPos + 1]][uName]) {\n                                groupSets = groupSets.concat(sortLvlGrouping[levels[lPos + 1]][uName]);\n                            }\n                        }\n                        parentGrouping[pKeys[kPos]] = groupSets;\n                    }\n                }\n                else if (isMeasureAvail) {\n                    for (var kPos = 0; kPos < pKeys.length; kPos++) {\n                        var axisSets = parentGrouping[pKeys[kPos]];\n                        var groupSets = [];\n                        for (var aPos = 0; aPos < axisSets.length; aPos++) {\n                            groupSets.push(axisSets[aPos]);\n                            var uName = this.tupRowInfo[axisSets[aPos].ordinal].uNameCollection;\n                            if (withoutAllLastPos > -1) {\n                                uName = this.frameUniqueName(uName, axisSets[aPos], this.tupRowInfo[axisSets[aPos].ordinal]);\n                            }\n                            var parentUName = this.getParentUname(uName, axisSets[aPos], true, true);\n                            if (measureObjects[parentUName]) {\n                                measureObjects[parentUName] = this.sortRowHeaders(measureObjects[parentUName]);\n                                groupSets = groupSets.concat(measureObjects[parentUName]);\n                            }\n                        }\n                        parentGrouping[pKeys[kPos]] = groupSets;\n                    }\n                }\n                sortLvlGrouping[levels[lPos]] = parentGrouping;\n            }\n            var newPos = 0;\n            var totPos = 0;\n            gSumFlag = false;\n            gSumGrouping = this.sortRowHeaders(gSumGrouping);\n            for (var rPos = this.colDepth; rPos < rowCount; rPos++) {\n                /* tslint:disable:no-string-literal */\n                var cell = gSumFlag ? gSumGrouping : sortLvlGrouping[levels[0]]['parent'];\n                /* tslint:enable:no-string-literal */\n                var currPos = gSumFlag ? (newPos - totPos) : newPos;\n                if (cell[currPos]) {\n                    this.pivotValues[rPos] = [cell[currPos]];\n                    this.pivotValues[rPos][0].rowIndex = rPos;\n                    this.valueContent[newPos][0] = this.pivotValues[rPos][0];\n                }\n                newPos++;\n                if (this.pivotValues[rPos][0].type === 'grand sum') {\n                    gSumFlag = true;\n                    totPos = newPos;\n                }\n            }\n        }\n    };\n    /* tslint:disable */\n    OlapEngine.prototype.performColumnSorting = function () {\n        if (this.enableSort) {\n            for (var i = 0; i < this.dataSourceSettings.columns.length; i++) {\n                var temporary = [];\n                var index = 0;\n                var grandTotal = [];\n                for (var j = 0; j < this.pivotValues.length; j++) {\n                    var header = this.pivotValues[j];\n                    var key = void 0;\n                    var keys = void 0;\n                    var arrange = {};\n                    var value = 1;\n                    grandTotal[index] = [];\n                    temporary[index] = [];\n                    var k = 1;\n                    for (k = k; k < header.length; k++) {\n                        if (!header[k].isNamedSet) {\n                            if (header[k].memberType != 2 && header[k].hierarchy\n                                != '[Measures]' && header[k].level != -1) {\n                                if (isNullOrUndefined(arrange[header[k].formattedText]) || isNullOrUndefined(this.pivotValues[j - 1])) {\n                                    arrange[header[k].formattedText] = arrange[header[k].formattedText] ? arrange[header[k].formattedText] : [];\n                                    arrange[header[k].formattedText][header[k].colIndex] = header[k];\n                                }\n                                else if (arrange[header[k].formattedText] && this.pivotValues[j - 1]) {\n                                    var prevRowCell = this.pivotValues[j - 1][header[k].colIndex];\n                                    var prevColIndex = Object.values(arrange[header[k].formattedText])[0].colIndex;\n                                    var prevColRowCell = this.pivotValues[j - 1][prevColIndex];\n                                    if (prevRowCell.formattedText !== prevColRowCell.formattedText) {\n                                        var key_1 = Object.keys(arrange);\n                                        key_1 = this.sortColumnHeaders(key_1, this.sortObject[header[k - 1].levelUniqueName] ||\n                                            this.sortObject[header[k].hierarchy]);\n                                        isNullOrUndefined(temporary[index]) ? temporary[index] = [] : temporary[index];\n                                        for (var keyPos = 0; keyPos < key_1.length; keyPos++) {\n                                            var length_1 = Object.keys(arrange[key_1[keyPos]]).length;\n                                            for (var cellPos = 0; cellPos < length_1; cellPos++) {\n                                                value = temporary[index].length === 0 ? 1 : 0;\n                                                temporary[index][temporary[index].length + value] =\n                                                    arrange[key_1[keyPos]][Number(Object.keys(arrange[key_1[keyPos]])[cellPos])];\n                                            }\n                                        }\n                                        arrange = {};\n                                        arrange[header[k].formattedText] = [];\n                                        arrange[header[k].formattedText][header[k].colIndex] = header[k];\n                                    }\n                                    else {\n                                        arrange[header[k].formattedText][header[k].colIndex] = header[k];\n                                    }\n                                }\n                            }\n                            else if (Object.keys(arrange).length > 0) {\n                                grandTotal[index][grandTotal[index].length + value] = header[k];\n                                key = Object.keys(arrange);\n                                key = this.sortColumnHeaders(key, this.sortObject[header[k - 1].levelUniqueName] ||\n                                    this.sortObject[header[k].hierarchy]);\n                                isNullOrUndefined(temporary[index]) ? temporary[index] = [] : temporary[index];\n                                for (var l = 0; l < key.length; l++) {\n                                    var length_2 = Object.keys(arrange[key[l]]).length;\n                                    for (var q = 0; q < length_2; q++) {\n                                        value = temporary[index].length === 0 ? 1 : 0;\n                                        temporary[index][temporary[index].length + value] =\n                                            arrange[key[l]][Number(Object.keys(arrange[key[l]])[q])];\n                                    }\n                                }\n                            }\n                            else if ((header[k].level === -1 || header[k].level === 0) &&\n                                Object.keys(arrange).length >= 0 && header[k].hierarchy != '[Measures]') {\n                                grandTotal[index][grandTotal[index].length + value] = header[k];\n                            }\n                            if (header[k].level != -1 && Object.keys(arrange).length === 1 &&\n                                header[k].hierarchy != '[Measures]' && !isNullOrUndefined(header[k + 1]) &&\n                                header[k + 1].level === -1) {\n                                var height = Object.keys(arrange[header[k].formattedText]).length;\n                                var weight = Object.keys(arrange[header[k].formattedText]);\n                                if (height > 1) {\n                                    for (var hgt = 0; hgt < height; hgt++) {\n                                        value = grandTotal[index].length === 0 ? 1 : 0;\n                                        grandTotal[index][grandTotal[index].length + value] =\n                                            arrange[header[k].formattedText][Number(weight[hgt])];\n                                    }\n                                }\n                                else {\n                                    grandTotal[index][grandTotal[index].length + value] = header[k];\n                                }\n                            }\n                            if (Object.keys(grandTotal[index]).length > 0) {\n                                value = temporary[index].length === 0 ? 1 : 0;\n                                var height1 = grandTotal[index].length;\n                                if (height1 > 2) {\n                                    for (var hgt1 = 1; hgt1 < height1; hgt1++) {\n                                        value = temporary[index].length === 0 ? 1 : 0;\n                                        temporary[index][temporary[index].length + value] =\n                                            grandTotal[index][hgt1];\n                                    }\n                                }\n                                else {\n                                    temporary[index][temporary[index].length + value] =\n                                        grandTotal[index][1] || grandTotal[index][0];\n                                }\n                                arrange = {};\n                                grandTotal[index] = [];\n                            }\n                        }\n                    }\n                    if (Object.keys(arrange).length > 0) {\n                        grandTotal[index][grandTotal[index].length + value] = header[k];\n                        keys = Object.keys(arrange);\n                        var order = this.sortObject[header[k - 1].levelUniqueName] || this.sortObject[header[k - 1].hierarchy];\n                        key = this.sortColumnHeaders(keys, order);\n                        isNullOrUndefined(temporary[index]) ? temporary[index] = [] : temporary[index];\n                        for (var len = 0; len < keys.length; len++) {\n                            var leng = Object.keys(arrange[keys[len]]).length;\n                            for (var q = 0; q < leng; q++) {\n                                value = temporary[index].length === 0 ? 1 : 0;\n                                temporary[index][temporary[index].length + value] =\n                                    arrange[key[len]][Number(Object.keys(arrange[keys[len]])[q])];\n                            }\n                        }\n                    }\n                    for (var m = 1; m < temporary[index].length; m++) {\n                        this.pivotValues[index][m] = temporary[index][m];\n                    }\n                    for (var n = j; n < this.pivotValues.length; n++) {\n                        var pElement = extend({}, this.pivotValues[n + 1], null, true);\n                        var cElement = extend({}, this.pivotValues[n], null, true);\n                        if (Object.keys(pElement).length === Object.keys(cElement).length && Object.keys(pElement).length > 2) {\n                            for (var o = 1; o < this.pivotValues[j].length; o++) {\n                                if (Object.keys(pElement).length > 0 && cElement[o].colIndex\n                                    != pElement[o].colIndex) {\n                                    this.pivotValues[n + 1][o] = pElement[cElement[o].colIndex];\n                                }\n                            }\n                            break;\n                        }\n                    }\n                    index++;\n                    arrange = {};\n                }\n                for (var i_1 = 0; i_1 < this.pivotValues.length; i_1++) {\n                    var header = this.pivotValues[i_1];\n                    for (var j = 1; j < header.length; j++) {\n                        header[j].colIndex = j;\n                    }\n                }\n            }\n        }\n    };\n    OlapEngine.prototype.frameUniqueName = function (uniqueName, currentCell, currentTuple) {\n        var hasLastMeasure = uniqueName.indexOf(currentCell.actualText.toString() + '::[Measures]') > -1;\n        uniqueName = uniqueName.substring(0, uniqueName.indexOf(currentCell.actualText.toString())) +\n            currentCell.actualText.toString();\n        var measureAvail = uniqueName.split('::[').length <= this.getMeasurePosition(uniqueName, currentTuple.measurePosition);\n        uniqueName = uniqueName + ((hasLastMeasure || measureAvail) ? ('::' + currentTuple.measureName) : '');\n        return uniqueName;\n    };\n    OlapEngine.prototype.getMeasurePosition = function (uniqueName, measurePosition) {\n        var position = measurePosition;\n        var collection = uniqueName.split('::[');\n        for (var i = 0; i < collection.length; i++) {\n            if (collection[i] && collection[i].indexOf('Measures') > -1) {\n                position = i;\n                break;\n            }\n        }\n        return position;\n    };\n    OlapEngine.prototype.sortRowHeaders = function (headers) {\n        if (headers.length > 0 && headers[0].memberType !== 3 && !headers[0].isNamedSet) {\n            var order = (this.sortObject[headers[0].hierarchy] || this.sortObject[headers[0].levelUniqueName]);\n            if (order === 'Ascending' || order === undefined) {\n                headers === headers.sort(function (a, b) { return (a.formattedText > b.formattedText) ? 1 :\n                    ((b.formattedText > a.formattedText) ? -1 : 0); });\n            }\n            else if (order === 'Descending') {\n                headers === headers.sort(function (a, b) { return (a.formattedText < b.formattedText) ? 1 :\n                    ((b.formattedText < a.formattedText) ? -1 : 0); });\n            }\n            else {\n                headers;\n            }\n        }\n        return headers;\n    };\n    OlapEngine.prototype.sortColumnHeaders = function (keys, order) {\n        if (order === 'Ascending' || order === undefined) {\n            keys.sort(function (a, b) { return (a > b) ? 1 : ((b > a) ? -1 : 0); });\n        }\n        else if (order === 'Descending') {\n            keys.sort(function (a, b) { return (a < b) ? 1 : ((b < a) ? -1 : 0); });\n        }\n        return keys;\n    };\n    /* tslint:enable */\n    OlapEngine.prototype.frameSortObject = function () {\n        if (this.enableSort) {\n            for (var fPos = 0; fPos < this.sortSettings.length; fPos++) {\n                this.sortObject[this.sortSettings[fPos].name] = this.sortSettings[fPos].order;\n            }\n        }\n    };\n    OlapEngine.prototype.getParentUname = function (uniqueNameColl, cell, isMeasureAvail, isLastMeasure) {\n        var parentString = '';\n        if (isMeasureAvail && !isLastMeasure) {\n            var tuple = this.tupRowInfo[cell.ordinal];\n            var sepPos = [];\n            var sepObjects = {};\n            for (var i = 0; i < uniqueNameColl.length; i++) {\n                if (uniqueNameColl[i] === '~' || uniqueNameColl[i] === ':') {\n                    sepPos.push(i);\n                    sepObjects[i] = uniqueNameColl[i] + uniqueNameColl[i];\n                    i++;\n                }\n            }\n            if (this.getMeasurePosition(uniqueNameColl, tuple.measurePosition) >= (uniqueNameColl.split('::[').length - 1)) {\n                if (sepPos[sepPos.length - 2] > -1) {\n                    parentString = uniqueNameColl.substring(0, sepPos[sepPos.length - 2]) + sepObjects[sepPos[sepPos.length - 1]] +\n                        tuple.measureName;\n                }\n                else {\n                    parentString = 'parent';\n                }\n            }\n            else {\n                var lastPosition = uniqueNameColl.lastIndexOf('~~') > uniqueNameColl.lastIndexOf('::[') ?\n                    uniqueNameColl.lastIndexOf('~~') : uniqueNameColl.lastIndexOf('::[');\n                parentString = lastPosition > -1 ? uniqueNameColl.substring(0, lastPosition) : 'parent';\n            }\n        }\n        else {\n            var lastPosition = uniqueNameColl.lastIndexOf('~~') > uniqueNameColl.lastIndexOf('::[') ?\n                uniqueNameColl.lastIndexOf('~~') : uniqueNameColl.lastIndexOf('::[');\n            parentString = lastPosition > -1 ? uniqueNameColl.substring(0, lastPosition) : 'parent';\n        }\n        return parentString;\n    };\n    OlapEngine.prototype.performColumnSpanning = function () {\n        var spanCollection = {};\n        var rowPos = this.rowStartPos - 1;\n        var colMeasureCount = Object.keys(this.colMeasures).length;\n        while (rowPos > -1) {\n            spanCollection[rowPos] = {};\n            var colPos = this.pivotValues[rowPos].length - 1;\n            while (colPos > 0) {\n                spanCollection[rowPos][colPos] = 1;\n                var nextColCell = this.pivotValues[rowPos][colPos + 1];\n                /* tslint:disable-next-line:max-line-length */\n                var nextRowCell = (this.pivotValues[rowPos + 1] && this.rowStartPos - rowPos > 1) ? this.pivotValues[rowPos + 1][colPos] : undefined;\n                var currCell = this.pivotValues[rowPos][colPos];\n                var colflag = false;\n                var rowflag = false;\n                var tupColInfo = this.tupColumnInfo[currCell.ordinal];\n                var isSubTot = tupColInfo.allStartPos > (tupColInfo.typeCollection[0] === '3' ? 1 : 0);\n                if (nextRowCell && nextColCell && ((currCell.memberType === 2 || currCell.level === -1) ?\n                    (nextColCell.actualText === currCell.actualText) :\n                    ((currCell.memberType === 3 && currCell.actualText === nextColCell.actualText) ||\n                        nextColCell.valueSort.levelName === currCell.valueSort.levelName))) {\n                    if (currCell.memberType === 2) {\n                        if (isSubTot ? nextColCell.type === 'sum' : true) {\n                            currCell.colSpan = (nextColCell.colSpan + 1) >\n                                (tupColInfo.measurePosition > rowPos ? colMeasureCount : 0) ? 1 : (nextColCell.colSpan + 1);\n                        }\n                        else {\n                            currCell.colSpan = 1;\n                        }\n                    }\n                    else {\n                        currCell.colSpan = nextColCell.colSpan + 1;\n                        currCell.ordinal = nextColCell.ordinal;\n                    }\n                    colflag = true;\n                }\n                if (currCell.memberType === 2) {\n                    if (isSubTot) {\n                        currCell.type = 'sum';\n                        /* tslint:disable-next-line:max-line-length */\n                        //currCell.formattedText = (this.pivotValues[tupColInfo.allStartPos - 1] as IAxisSet[])[colPos].formattedText + ' Total';\n                        currCell.formattedText = 'Total';\n                        currCell.valueSort.levelName = currCell.valueSort.levelName;\n                        currCell.valueSort[currCell.valueSort.levelName.toString()] = 1;\n                    }\n                    else {\n                        var levelName = 'Grand Total';\n                        if (nextRowCell && colMeasureCount > 0) {\n                            levelName = nextRowCell.memberType === 3 ? ('Grand Total.' + nextRowCell.formattedText) :\n                                nextRowCell.valueSort.levelName;\n                        }\n                        currCell.type = 'grand sum';\n                        currCell.formattedText = 'Grand Total';\n                        currCell.valueSort.levelName = levelName;\n                        currCell.valueSort[levelName.toString()] = 1;\n                    }\n                    currCell.hasChild = false;\n                }\n                else if (currCell.level === -1) {\n                    currCell.type = 'sum';\n                    //currCell.formattedText = currCell.formattedText + ' Total';\n                    currCell.formattedText = 'Total';\n                    currCell.hasChild = false;\n                    currCell.valueSort.levelName = currCell.valueSort.levelName;\n                    currCell.valueSort[currCell.valueSort.levelName.toString()] = 1;\n                }\n                if (nextRowCell) {\n                    if ((currCell.memberType === 2 && nextRowCell.memberType === 2) || nextRowCell.actualText === currCell.actualText) {\n                        spanCollection[rowPos][colPos] = spanCollection[rowPos + 1] ? (spanCollection[rowPos + 1][colPos] + 1) : 1;\n                        /* tslint:disable-next-line:max-line-length */\n                        if (rowPos === 0 || (currCell.memberType === 1 && currCell.level > -1 && nextRowCell.memberType === 1 && nextRowCell.level === -1)) {\n                            currCell.rowSpan = (currCell.isDrilled && ((this.fieldList[currCell.hierarchy] && this.fieldList[currCell.hierarchy].isHierarchy) ? currCell.hasChild : true)) ? 1 : (spanCollection[rowPos + 1][colPos] + 1);\n                            /* tslint:disable-next-line:max-line-length */\n                            nextRowCell.rowSpan = (nextRowCell.isDrilled && ((this.fieldList[nextRowCell.hierarchy] && this.fieldList[nextRowCell.hierarchy].isHierarchy) ? nextRowCell.hasChild : true) && nextRowCell.level === -1) ? spanCollection[rowPos + 1][colPos] : nextRowCell.rowSpan;\n                        }\n                        else {\n                            if (currCell.memberType === 3) {\n                                currCell.rowSpan = 1;\n                            }\n                            else {\n                                currCell.rowSpan = -1;\n                            }\n                        }\n                        rowflag = true;\n                    }\n                    else if (currCell.isDrilled && ((this.fieldList[currCell.hierarchy] && this.fieldList[currCell.hierarchy].isHierarchy) ? currCell.hasChild : true) && currCell.level === -1 && nextRowCell.memberType === 2) {\n                        spanCollection[rowPos][colPos] = spanCollection[rowPos + 1] ? (spanCollection[rowPos + 1][colPos] + 1) : 1;\n                        currCell.rowSpan = -1;\n                        rowflag = true;\n                    }\n                    else {\n                        currCell.rowSpan = rowPos === 0 ? spanCollection[rowPos][colPos] : -1;\n                        /* tslint:disable-next-line:max-line-length */\n                        nextRowCell.rowSpan = ((nextRowCell.level > -1 && !(nextRowCell.isDrilled && ((this.fieldList[nextRowCell.hierarchy] && this.fieldList[nextRowCell.hierarchy].isHierarchy) ? nextRowCell.hasChild : true))) || (currCell.memberType !== 2 && nextRowCell.memberType === 2)) ? spanCollection[rowPos + 1][colPos] : 1;\n                    }\n                }\n                else {\n                    currCell.rowSpan = (currCell.level > -1 || this.rowStartPos === 1) ? spanCollection[rowPos][colPos] : -1;\n                }\n                if (!colflag) {\n                    currCell.colSpan = 1;\n                }\n                if (!rowflag) {\n                    spanCollection[rowPos][colPos] = 1;\n                }\n                colPos--;\n            }\n            rowPos--;\n        }\n    };\n    OlapEngine.prototype.frameValues = function (tuples, colLength) {\n        var rowStartPos = this.colDepth;\n        var rowEndPos = this.pivotValues.length;\n        var startRowOrdinal = 0;\n        if (this.customArgs.action === 'down') {\n            var keys = Object.keys(this.onDemandDrillEngine);\n            rowStartPos = Number(keys[0]);\n            rowEndPos = Number(keys[keys.length - 1]) + 1;\n            startRowOrdinal = this.onDemandDrillEngine[rowStartPos][0].ordinal;\n        }\n        var valCollection = {};\n        for (var colPos = 0; colPos < tuples.length; colPos++) {\n            valCollection[Number(tuples[colPos].getAttribute('CellOrdinal'))] = tuples[colPos];\n        }\n        for (var rowPos = rowStartPos; rowPos < rowEndPos; rowPos++) {\n            var columns = this.pivotValues[rowPos];\n            var rowOrdinal = columns[0].ordinal;\n            for (var colPos = 1; colPos < this.pivotValues[0].length; colPos++) {\n                if (this.pivotValues[this.colDepth - 1][colPos]) {\n                    var colOrdinal = this.pivotValues[this.colDepth - 1][colPos].ordinal;\n                    var lastColCell = this.pivotValues[this.colDepth - 1][colPos];\n                    var measure = columns[0].memberType === 3 ? columns[0].actualText.toString() :\n                        ((this.tupColumnInfo[lastColCell.ordinal] && this.tupColumnInfo[lastColCell.ordinal].measure) ?\n                            this.tupColumnInfo[lastColCell.ordinal].measure.querySelector('UName').textContent :\n                            columns[0].actualText);\n                    if (columns[0].type === 'header') {\n                        columns[colPos] = {\n                            axis: 'value',\n                            actualText: this.getUniqueName(measure),\n                            formattedText: '',\n                            value: 0,\n                            colIndex: colPos,\n                            rowIndex: rowPos\n                        };\n                    }\n                    else {\n                        var valElement = void 0;\n                        var formattedText = void 0;\n                        var value = '0';\n                        var measureName = this.getUniqueName(measure);\n                        var showTotals = true;\n                        if (this.tupRowInfo[rowOrdinal]) {\n                            showTotals = this.tupRowInfo[rowOrdinal].showTotals;\n                        }\n                        else {\n                            showTotals = this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showRowGrandTotals;\n                        }\n                        valElement = valCollection[(rowOrdinal - startRowOrdinal) * colLength + colOrdinal];\n                        formattedText = !showTotals ? '' :\n                            ((!isNullOrUndefined(valElement) && !isNullOrUndefined(valElement.querySelector('FmtValue'))) ?\n                                valElement.querySelector('FmtValue').textContent : this.emptyCellTextContent);\n                        value = !showTotals ? '0' :\n                            ((!isNullOrUndefined(valElement) && !isNullOrUndefined(valElement.querySelector('Value'))) ?\n                                valElement.querySelector('Value').textContent : null);\n                        formattedText = showTotals && !isNullOrUndefined(value) ?\n                            this.getFormattedValue(Number(value), measureName, (formattedText !== '' ? formattedText : value)) :\n                            formattedText;\n                        var isSum = (this.tupColumnInfo[colOrdinal] ? (this.tupColumnInfo[colOrdinal].allCount > 0 ||\n                            this.tupColumnInfo[colOrdinal].drillStartPos > -1) : true) ||\n                            (this.tupRowInfo[rowOrdinal] ? (this.tupRowInfo[rowOrdinal].allCount > 0 ||\n                                this.tupRowInfo[rowOrdinal].drillStartPos > -1) : true);\n                        /* tslint:disable */\n                        var isGrand = (this.tupRowInfo[rowOrdinal] ? (this.tupRowInfo[rowOrdinal].measurePosition === 0 ? this.tupRowInfo[rowOrdinal].allStartPos === 1 : this.tupRowInfo[rowOrdinal].allStartPos === 0) : false) ||\n                            (this.tupColumnInfo[colOrdinal] ? (this.tupColumnInfo[colOrdinal].measurePosition === 0 ? this.tupColumnInfo[colOrdinal].allStartPos === 1 : this.tupColumnInfo[colOrdinal].allStartPos === 0) : false);\n                        /* tslint:enable */\n                        columns[colPos] = {\n                            axis: 'value',\n                            actualText: measureName,\n                            formattedText: formattedText,\n                            colOrdinal: colOrdinal,\n                            rowOrdinal: rowOrdinal,\n                            columnHeaders: this.tupColumnInfo[colOrdinal] ? this.tupColumnInfo[colOrdinal].captionCollection : '',\n                            rowHeaders: this.tupRowInfo[rowOrdinal] ? this.tupRowInfo[rowOrdinal].captionCollection : '',\n                            value: !isNullOrUndefined(value) ? Number(value) : null,\n                            colIndex: colPos,\n                            rowIndex: rowPos,\n                            isSum: isSum,\n                            isGrandSum: isGrand\n                        };\n                    }\n                    this.valueContent[rowPos - this.rowStartPos][colPos] = columns[colPos];\n                }\n            }\n        }\n    };\n    /** hidden */\n    OlapEngine.prototype.getFormattedValue = function (value, fieldName, formattedText) {\n        var formattedValue = formattedText;\n        if (this.formatFields[fieldName] && !isNullOrUndefined(value)) {\n            var formatField = (this.formatFields[fieldName].properties ?\n                this.formatFields[fieldName].properties : this.formatFields[fieldName]);\n            var formatObj = extend({}, formatField, null, true);\n            delete formatObj.name;\n            if (!formatObj.minimumSignificantDigits && formatObj.minimumSignificantDigits < 1) {\n                delete formatObj.minimumSignificantDigits;\n            }\n            if (!formatObj.maximumSignificantDigits && formatObj.maximumSignificantDigits < 1) {\n                delete formatObj.maximumSignificantDigits;\n            }\n            if (formatObj.type) {\n                formattedValue = this.globalize.formatDate(new Date(value.toString()), formatObj);\n            }\n            else {\n                delete formatObj.type;\n                if ((formatObj.format) && !(this.formatRegex.test(formatObj.format))) {\n                    var pattern = formatObj.format.match(this.customRegex);\n                    var integerPart = pattern[6];\n                    formatObj.useGrouping = integerPart.indexOf(',') !== -1;\n                }\n                formattedValue = this.globalize.formatNumber(value, formatObj);\n            }\n        }\n        return formattedValue;\n    };\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    OlapEngine.prototype.getMeasureInfo = function () {\n        var mAxis = 'column';\n        var mIndex;\n        var values = [];\n        for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\n            var field = _a[_i];\n            values[values.length] = (field.isCalculatedField ? this.fieldList[field.name].tag : field.name);\n        }\n        if (values.length > 1) {\n            if (this.isMeasureAvail) {\n                var isAvail = false;\n                for (var i = 0, cnt = this.rows.length; i < cnt; i++) {\n                    if (this.rows[i].name.toLowerCase() === '[measures]') {\n                        mAxis = 'row';\n                        mIndex = i;\n                        isAvail = true;\n                        break;\n                    }\n                }\n                if (!isAvail) {\n                    for (var i = 0, cnt = this.columns.length; i < cnt; i++) {\n                        if (this.columns[i].name.toLowerCase() === '[measures]') {\n                            mAxis = 'column';\n                            mIndex = i;\n                            isAvail = true;\n                            break;\n                        }\n                    }\n                }\n            }\n            else {\n                mAxis = this.valueAxis;\n                mIndex = mAxis === 'row' ? this.rows.length - 1 : this.columns.length - 1;\n            }\n            return { measureAxis: mAxis, measureIndex: mIndex, valueInfo: values };\n        }\n        else {\n            return { measureAxis: mAxis, measureIndex: -1, valueInfo: [] };\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.frameMeasureOrder = function (measureInfo, axis, tuples, vTuples, cLen) {\n        var orderedTuples = [];\n        var orderedVTuples = [];\n        var orderedIndex = [];\n        var levels = {};\n        var cLevels = [];\n        var measureAxis = measureInfo.measureAxis;\n        var measureIndex = measureInfo.measureIndex;\n        var values = measureInfo.valueInfo;\n        if (measureAxis === axis && values.length > 0) {\n            var levelCollection = {};\n            var uniqueLevels = [];\n            for (var j = 0, lnt = tuples.length; j < lnt; j++) {\n                var node = tuples[j];\n                var members = [].slice.call(node.querySelectorAll('Member'));\n                var level = '';\n                var cLevel = '';\n                var i = 0;\n                while (i < members.length) {\n                    level = level + (level !== '' ? '~~' : '') + members[i].querySelector('UName').textContent;\n                    if (i === measureIndex && measureIndex === 0) {\n                        cLevel = level;\n                    }\n                    else if (i === (measureIndex - 1)) {\n                        cLevel = level;\n                    }\n                    i++;\n                }\n                if (levelCollection[cLevel]) {\n                    levelCollection[cLevel][levelCollection[cLevel].length] = level;\n                }\n                else {\n                    levelCollection[cLevel] = [level];\n                    uniqueLevels[uniqueLevels.length] = cLevel;\n                }\n                levels[level] = { index: j, node: node };\n                cLevels[cLevels.length] = level;\n            }\n            if (cLevels.length > 0) {\n                if (uniqueLevels.length > 0) {\n                    if (measureIndex === 0) {\n                        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n                            var name_1 = values_1[_i];\n                            for (var _a = 0, uniqueLevels_1 = uniqueLevels; _a < uniqueLevels_1.length; _a++) {\n                                var key = uniqueLevels_1[_a];\n                                if (key === name_1) {\n                                    for (var _b = 0, _c = levelCollection[key]; _b < _c.length; _b++) {\n                                        var level = _c[_b];\n                                        orderedIndex[orderedIndex.length] = levels[level].index;\n                                        orderedTuples[orderedTuples.length] = levels[level].node;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        for (var _d = 0, uniqueLevels_2 = uniqueLevels; _d < uniqueLevels_2.length; _d++) {\n                            var key = uniqueLevels_2[_d];\n                            for (var _e = 0, values_2 = values; _e < values_2.length; _e++) {\n                                var name_2 = values_2[_e];\n                                for (var _f = 0, _g = levelCollection[key]; _f < _g.length; _f++) {\n                                    var level = _g[_f];\n                                    var levelInfo = level.split('~~');\n                                    if (levelInfo[measureIndex] === name_2) {\n                                        orderedIndex[orderedIndex.length] = levels[level].index;\n                                        orderedTuples[orderedTuples.length] = levels[level].node;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (vTuples.length > 0) {\n                var valueIndex = [];\n                var vOrdinalIndex = [];\n                var len = 0;\n                var cRow = 0;\n                for (var j = 0, cnt = vTuples.length; j < cnt; j++) {\n                    if (len > (cLen - 1)) {\n                        cRow++;\n                        len = 0;\n                        if (!valueIndex[cRow]) {\n                            valueIndex[cRow] = [];\n                        }\n                        valueIndex[cRow][len] = j;\n                        len++;\n                    }\n                    else {\n                        if (!valueIndex[cRow]) {\n                            valueIndex[cRow] = [];\n                        }\n                        valueIndex[cRow][len] = j;\n                        len++;\n                    }\n                    vOrdinalIndex[vOrdinalIndex.length] = Number(vTuples[j].getAttribute('CellOrdinal'));\n                }\n                if (measureAxis === 'column') {\n                    if (valueIndex.length > 0 && valueIndex[0].length === orderedIndex.length) {\n                        for (var i = 0, cnt = orderedIndex.length; i < cnt; i++) {\n                            var j = 0;\n                            while (j < valueIndex.length) {\n                                var index = (j * cLen) + i;\n                                var ordinalValue = vOrdinalIndex[index].toString();\n                                var tuple = vTuples[Number(valueIndex[j][orderedIndex[i]])];\n                                tuple.setAttribute('CellOrdinal', ordinalValue.toString());\n                                orderedVTuples[index] = tuple;\n                                j++;\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (valueIndex.length === orderedIndex.length) {\n                        for (var i = 0, cnt = orderedIndex.length; i < cnt; i++) {\n                            var j = 0;\n                            while (j < valueIndex[orderedIndex[i]].length) {\n                                var index = (i * cLen) + j;\n                                var ordinalValue = vOrdinalIndex[index].toString();\n                                var tuple = vTuples[Number(valueIndex[orderedIndex[i]][j])];\n                                tuple.setAttribute('CellOrdinal', ordinalValue.toString());\n                                orderedVTuples[orderedVTuples.length] = tuple;\n                                j++;\n                            }\n                        }\n                    }\n                }\n            }\n            return { orderedHeaderTuples: orderedTuples, orderedValueTuples: orderedVTuples };\n        }\n        else {\n            return { orderedHeaderTuples: tuples, orderedValueTuples: vTuples };\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.getDrilledSets = function (uNameCollection, currentCell, fieldPos, axis) {\n        var levels = [];\n        var memberName = currentCell.actualText.toString();\n        var tupCollection = axis === 'row' ? this.tupRowInfo : this.tupColumnInfo;\n        var currTuple = tupCollection[currentCell.ordinal];\n        var measurePos = tupCollection[0].typeCollection.indexOf('3');\n        var allStartPos = measurePos === 0 ? 1 : 0;\n        var tupPos = 0;\n        var isWithoutAllMember = tupCollection[0].typeCollection[fieldPos] === '1';\n        while (tupPos < tupCollection.length) {\n            /* tslint:disable-next-line:max-line-length */\n            if (isNullOrUndefined(tupCollection[tupPos].allStartPos) || tupCollection[tupPos].allStartPos > allStartPos) {\n                levels[levels.length] = tupCollection[tupPos].uNameCollection;\n            }\n            tupPos++;\n        }\n        var memberArray = uNameCollection.split('::[').map(function (item) {\n            return item[0] === '[' ? item : ('[' + item);\n        });\n        var joinArray = [];\n        for (var memPos = 0; memPos <= fieldPos; memPos++) {\n            if (memberArray[memPos]) {\n                if ((isWithoutAllMember || this.isPaging) && memPos === fieldPos) {\n                    var splitLevels = memberArray[memPos].split('~~');\n                    var drillLevel = splitLevels.indexOf(memberName);\n                    var cropLevels = [];\n                    for (var lPos = 0; lPos <= drillLevel; lPos++) {\n                        cropLevels.push(splitLevels[lPos]);\n                    }\n                    joinArray[joinArray.length] = cropLevels.length > 0 ? cropLevels.join('~~') : memberArray[memPos];\n                }\n                else {\n                    joinArray[joinArray.length] = memberArray[memPos];\n                }\n            }\n        }\n        uNameCollection = joinArray.join('::');\n        var childSets = [];\n        var memberObj = {};\n        for (var _i = 0, levels_1 = levels; _i < levels_1.length; _i++) {\n            var item = levels_1[_i];\n            if (item.indexOf(uNameCollection) === 0) {\n                childSets.push(item);\n                if (this.isPaging) {\n                    var drillField = item.split('::[')[fieldPos];\n                    drillField = drillField[0] === '[' ? drillField : ('[' + drillField);\n                    var drillFieldSep = drillField.split('~~');\n                    for (var fPos = drillFieldSep.indexOf(memberName); fPos < drillFieldSep.length; fPos++) {\n                        memberObj[drillFieldSep[fPos]] = drillFieldSep[fPos];\n                    }\n                }\n            }\n        }\n        if (this.isPaging) {\n            var fieldSep = currTuple.uNameCollection.split('::[').map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            });\n            var cropArray = [];\n            for (var fPos = 0; fPos < fieldSep.length; fPos++) {\n                if (fPos !== fieldPos) {\n                    cropArray[fPos] = fieldSep[fPos];\n                }\n            }\n            var drillFieldSep = Object.keys(memberObj);\n            for (var fPos = 0; fPos < drillFieldSep.length; fPos++) {\n                cropArray[fieldPos] = drillFieldSep[fPos];\n                childSets.push(cropArray.join('::'));\n            }\n        }\n        var drillSets = {};\n        for (var _a = 0, childSets_1 = childSets; _a < childSets_1.length; _a++) {\n            var level = childSets_1[_a];\n            var fields = level.split('::[').map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            });\n            var set = '';\n            for (var pos = 0; pos <= fieldPos; pos++) {\n                var field = fields[pos];\n                if (field) {\n                    var members = field.split('~~');\n                    set = set + (set !== '' ? '~~' : '') + members[members.length - 1];\n                }\n            }\n            drillSets[set] = set;\n        }\n        return drillSets;\n    };\n    OlapEngine.prototype.updateDrilledInfo = function (dataSourceSettings) {\n        this.dataSourceSettings = dataSourceSettings;\n        this.drilledMembers = dataSourceSettings.drilledMembers ? this.updateDrilledItems(dataSourceSettings.drilledMembers) : [];\n        // MDXQuery.getCellSets(this.dataSourceSettings as IDataOptions, this);\n        this.generateGridData(dataSourceSettings);\n    };\n    OlapEngine.prototype.updateCalcFields = function (dataSourceSettings, lastcalcInfo) {\n        this.dataSourceSettings = dataSourceSettings;\n        this.calculatedFieldSettings = dataSourceSettings.calculatedFieldSettings ? dataSourceSettings.calculatedFieldSettings : [];\n        this.getAxisFields();\n        this.updateFieldlist();\n        this.loadCalculatedMemberElements(this.calculatedFieldSettings);\n        if (this.dataFields[lastcalcInfo.name]) {\n            this.generateGridData(dataSourceSettings);\n        }\n        else {\n            MDXQuery.getCellSets(dataSourceSettings, this, true, undefined, true);\n        }\n    };\n    OlapEngine.prototype.onSort = function (dataSourceSettings) {\n        this.dataSourceSettings = dataSourceSettings;\n        this.sortSettings = dataSourceSettings.sortSettings ? dataSourceSettings.sortSettings : [];\n        this.getAxisFields();\n        this.frameSortObject();\n        this.updateFieldlist();\n        if (this.xmlaCellSet.length > 0 && this.xmlDoc) {\n            this.generateEngine(this.xmlDoc, this.request, this.customArgs);\n        }\n        else {\n            this.generateGridData(dataSourceSettings);\n        }\n    };\n    OlapEngine.prototype.updateFieldlist = function (isInit) {\n        var i = 0;\n        while (i < this.savedFieldListData.length) {\n            var fieldName = this.savedFieldListData[i].id;\n            var parentID = this.savedFieldListData[i].pid;\n            // let aggregateType: string = this.getAggregateType(fieldName);\n            // this.savedFieldListData[i].aggregateType = aggregateType;\n            if (this.savedFieldList[fieldName]) {\n                var sortOrder = (this.enableSort ? this.sortObject[fieldName] ? this.sortObject[fieldName] : 'Ascending' : 'None');\n                this.savedFieldList[fieldName].isSelected = false;\n                this.savedFieldList[fieldName].isExcelFilter = false;\n                // this.savedFieldList[fieldName].aggregateType = aggregateType;\n                this.savedFieldList[fieldName].sort = sortOrder;\n                this.savedFieldList[fieldName].allowDragAndDrop = true;\n                this.savedFieldList[fieldName].showFilterIcon = true;\n                this.savedFieldList[fieldName].showSortIcon = true;\n                this.savedFieldList[fieldName].showEditIcon = true;\n                this.savedFieldList[fieldName].showRemoveIcon = true;\n                this.savedFieldList[fieldName].showValueTypeIcon = true;\n                this.savedFieldListData[i].sort = sortOrder;\n                this.savedFieldListData[i].allowDragAndDrop = true;\n                this.savedFieldListData[i].showFilterIcon = true;\n                this.savedFieldListData[i].showSortIcon = true;\n                this.savedFieldListData[i].showEditIcon = true;\n                this.savedFieldListData[i].showRemoveIcon = true;\n                this.savedFieldListData[i].showValueTypeIcon = true;\n                if (isInit) {\n                    this.savedFieldList[fieldName].filter = [];\n                    this.savedFieldList[fieldName].actualFilter = [];\n                }\n            }\n            /* tslint:disable:max-line-length */\n            if (this.dataFields[fieldName] && this.savedFieldList[fieldName] && this.selectedItems.indexOf(fieldName) > -1) {\n                this.savedFieldList[fieldName].isSelected = true;\n                this.savedFieldList[fieldName].allowDragAndDrop = (this.dataFields[fieldName] ? this.dataFields[fieldName].allowDragAndDrop : true);\n                this.savedFieldList[fieldName].showFilterIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showFilterIcon : true);\n                this.savedFieldList[fieldName].showSortIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showSortIcon : true);\n                this.savedFieldList[fieldName].showEditIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showEditIcon : true);\n                this.savedFieldList[fieldName].showRemoveIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showRemoveIcon : true);\n                this.savedFieldList[fieldName].showValueTypeIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showValueTypeIcon : true);\n                this.savedFieldListData[i].isSelected = true;\n                this.savedFieldListData[i].allowDragAndDrop = (this.dataFields[fieldName] ? this.dataFields[fieldName].allowDragAndDrop : true);\n                this.savedFieldListData[i].showFilterIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showFilterIcon : true);\n                this.savedFieldListData[i].showSortIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showSortIcon : true);\n                this.savedFieldListData[i].showEditIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showEditIcon : true);\n                this.savedFieldListData[i].showRemoveIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showRemoveIcon : true);\n                this.savedFieldListData[i].showValueTypeIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showValueTypeIcon : true);\n            }\n            else {\n                if (this.dataFields[parentID] && this.savedFieldList[parentID] && this.selectedItems.indexOf(parentID) > -1) {\n                    this.savedFieldListData[i].isSelected = true;\n                }\n                else {\n                    this.savedFieldListData[i].isSelected = false;\n                }\n            }\n            /* tslint:enable:max-line-length */\n            if ((this.savedFieldList[fieldName] && this.savedFieldList[fieldName].isCalculatedField) ||\n                fieldName.toLowerCase() === '[calculated members].[_0]') {\n                var isAvail = false;\n                for (var _i = 0, _a = this.calculatedFieldSettings; _i < _a.length; _i++) {\n                    var field = _a[_i];\n                    if (fieldName === field.name) {\n                        var expression = field.formula;\n                        var formatString = field.formatString;\n                        this.savedFieldListData[i].formula = expression;\n                        this.savedFieldListData[i].formatString = formatString;\n                        this.savedFieldListData[i].parentHierarchy = (expression.toLowerCase().indexOf('measure') > -1 ?\n                            undefined : field.hierarchyUniqueName);\n                        this.savedFieldList[fieldName].formula = expression;\n                        this.savedFieldList[fieldName].formatString = formatString;\n                        this.savedFieldList[fieldName].parentHierarchy = this.savedFieldListData[i].parentHierarchy;\n                        isAvail = true;\n                    }\n                }\n                if (!isAvail || (fieldName.toLowerCase() === '[calculated members].[_0]' &&\n                    this.calculatedFieldSettings.length === 0)) {\n                    this.savedFieldListData.splice(i, 1);\n                    i--;\n                    if (this.savedFieldList[fieldName]) {\n                        delete this.savedFieldList[fieldName];\n                    }\n                }\n            }\n            i++;\n        }\n        this.fieldList = this.savedFieldList;\n        this.fieldListData = this.savedFieldListData;\n    };\n    OlapEngine.prototype.updateFieldlistData = function (name, isSelect) {\n        for (var _i = 0, _a = this.fieldListData; _i < _a.length; _i++) {\n            var item = _a[_i];\n            if (item.id === name) {\n                item.isSelected = isSelect ? true : false;\n                break;\n            }\n        }\n    };\n    OlapEngine.prototype.getFormattedFields = function (formats) {\n        this.formatFields = {};\n        var cnt = formats.length;\n        while (cnt--) {\n            this.formatFields[formats[cnt].name] = formats[cnt];\n        }\n    };\n    OlapEngine.prototype.getFieldList = function (dataSourceSettings) {\n        var args = {\n            catalog: dataSourceSettings.catalog,\n            cube: dataSourceSettings.cube,\n            url: dataSourceSettings.url,\n            LCID: dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_HIERARCHIES'\n        };\n        this.getTreeData(args, this.getFieldListItems.bind(this), { dataSourceSettings: dataSourceSettings, action: 'loadFieldElements' });\n    };\n    /* tslint:disable:max-line-length */\n    OlapEngine.prototype.getTreeData = function (args, successMethod, customArgs) {\n        var connectionString = this.getConnectionInfo(args.url, args.LCID);\n        var soapMessage = '<Envelope xmlns=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><Header/><Body><Discover xmlns=\\\"urn:schemas-microsoft-com:xml-analysis\\\"><RequestType>' +\n            args.request + '</RequestType><Restrictions><RestrictionList><CATALOG_NAME>' + args.catalog +\n            '</CATALOG_NAME><CUBE_NAME>' + args.cube + '</CUBE_NAME></RestrictionList></Restrictions><Properties><PropertyList><Catalog>' + args.catalog +\n            '</Catalog> <LocaleIdentifier>' + connectionString.LCID + '</LocaleIdentifier></PropertyList></Properties></Discover></Body></Envelope>';\n        this.doAjaxPost('POST', connectionString.url, soapMessage, successMethod, customArgs);\n    };\n    /* tslint:enable:max-line-length */\n    OlapEngine.prototype.getAxisFields = function () {\n        this.rows = this.dataSourceSettings.rows ? this.dataSourceSettings.rows : [];\n        this.columns = this.dataSourceSettings.columns ? this.dataSourceSettings.columns : [];\n        this.filters = this.dataSourceSettings.filters ? this.dataSourceSettings.filters : [];\n        this.values = this.dataSourceSettings.values ? this.dataSourceSettings.values : [];\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.values, this.filters);\n        var len = dataFields.length;\n        while (len--) {\n            this.dataFields[dataFields[len].name] = dataFields[len];\n            if (dataFields[len].name.toLowerCase() === '[measures]') {\n                this.isMeasureAvail = true;\n            }\n            else {\n                this.selectedItems.push(dataFields[len].name);\n            }\n        }\n        if (!this.isMeasureAvail && this.values.length > 0) {\n            var measureField = {\n                name: '[Measures]', caption: 'Measures', showRemoveIcon: true, allowDragAndDrop: true\n            };\n            if (this.valueAxis === 'row') {\n                this.rows.push(measureField);\n            }\n            else {\n                this.columns.push(measureField);\n            }\n            this.isMeasureAvail = true;\n        }\n    };\n    OlapEngine.prototype.getAggregateType = function (fieldName, aggregateType) {\n        var type;\n        switch (aggregateType) {\n            case '1':\n                type = 'Sum';\n                break;\n            case '2':\n                type = 'Count';\n                break;\n            case '3':\n                type = 'Min';\n                break;\n            case '4':\n                type = 'Max';\n                break;\n            case '5':\n                type = 'Avg';\n                break;\n            case '8':\n                type = 'DistinctCount';\n                break;\n            case '127':\n                type = 'CalculatedField';\n                break;\n            default:\n                type = undefined;\n                break;\n        }\n        // if (this.dataFields[fieldName]) {\n        //     return this.dataFields[fieldName].type;\n        // } else {\n        //     return undefined;\n        // }\n        if (type) {\n            return type;\n        }\n        else {\n            return undefined;\n        }\n    };\n    OlapEngine.prototype.getUniqueName = function (name) {\n        var uName = name;\n        for (var _i = 0, _a = this.calculatedFieldSettings; _i < _a.length; _i++) {\n            var item = _a[_i];\n            var expression = item.formula;\n            var prefixName = (expression.toLowerCase().indexOf('measure') > -1 ? '[Measures].' : item.hierarchyUniqueName + '.');\n            var uniqueName = prefixName + '[' + item.name + ']';\n            if (name === uniqueName) {\n                uName = item.name;\n                break;\n            }\n        }\n        return uName;\n    };\n    OlapEngine.prototype.updateFilterItems = function (filterItems) {\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        for (var _i = 0, filterItems_1 = filterItems; _i < filterItems_1.length; _i++) {\n            var filter = filterItems_1[_i];\n            if (filter.type === 'Include' && this.allowMemberFilter) {\n                var members = this.fieldList[filter.name].members;\n                var isMembersAvail = (members && Object.keys(members).length > 0);\n                this.fieldList[filter.name].actualFilter = filter.items.slice();\n                var selectedElements = extend([], filter.items, null, true);\n                if (isMembersAvail) {\n                    var i = 0;\n                    while (i < selectedElements.length) {\n                        var parentNodes = [];\n                        parentNodes = this.getParentNode(selectedElements[i], members, parentNodes);\n                        for (var _a = 0, parentNodes_1 = parentNodes; _a < parentNodes_1.length; _a++) {\n                            var node = parentNodes_1[_a];\n                            var index = PivotUtil.inArray(node, filter.items);\n                            if (index !== -1) {\n                                filter.items.splice(index, 1);\n                            }\n                        }\n                        i++;\n                    }\n                }\n                var currentItems = [];\n                for (var _b = 0, _c = filter.items; _b < _c.length; _b++) {\n                    var selectedElement = _c[_b];\n                    // currentItems.push(selectedElement.replace(/\\&/g, '&amp;'));\n                    currentItems.push(selectedElement);\n                    if (isMembersAvail) {\n                        this.fieldList[filter.name].filter.push(members[selectedElement].caption);\n                    }\n                    else {\n                        this.fieldList[filter.name].filter.push(selectedElement);\n                    }\n                }\n                this.filterMembers[filter.name] = currentItems;\n                this.fieldList[filter.name].isExcelFilter = false;\n            }\n            else if ((this.allowValueFilter || this.allowLabelFilter) &&\n                ['Date', 'Label', 'Number', 'Value'].indexOf(filter.type) !== -1) {\n                for (var _d = 0, dataFields_1 = dataFields; _d < dataFields_1.length; _d++) {\n                    var item = dataFields_1[_d];\n                    if (item.name === filter.name) {\n                        var filterMembers = this.filterMembers[filter.name];\n                        if (filterMembers && (typeof filterMembers[0] === 'object' && filterMembers[0].type === filter.type)) {\n                            filterMembers[filterMembers.length] = filter;\n                        }\n                        else {\n                            this.filterMembers[filter.name] = [filter];\n                        }\n                        this.fieldList[filter.name].isExcelFilter = true;\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    OlapEngine.prototype.getParentNode = function (name, members, items) {\n        if (members[name].parent && name !== members[name].parent) {\n            var parentItem = members[name].parent;\n            items.push(parentItem);\n            this.getParentNode(parentItem, members, items);\n        }\n        return items;\n    };\n    OlapEngine.prototype.updateDrilledItems = function (drilledMembers) {\n        var drilledItems = [];\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        for (var _i = 0, drilledMembers_1 = drilledMembers; _i < drilledMembers_1.length; _i++) {\n            var item = drilledMembers_1[_i];\n            for (var _a = 0, dataFields_2 = dataFields; _a < dataFields_2.length; _a++) {\n                var field = dataFields_2[_a];\n                if (item.name === field.name) {\n                    drilledItems.push(item);\n                    break;\n                }\n            }\n        }\n        return drilledItems;\n    };\n    // private updateAllMembers(dataSourceSettings: IDataOptions, slicers: IFieldOptions[]): void {\n    //     let query: string = '';\n    //     for (let field of slicers) {\n    //         let fieldList: IOlapField = this.fieldList[field.name];\n    //         if (!(fieldList && fieldList.hasAllMember && fieldList.allMember)) {\n    //             query = query + (query !== '' ? ' * ' : '') + '{' + field.name + '}';\n    //         } else {\n    //             continue;\n    //         }\n    //     }\n    //     if (query !== '') {\n    //         this.getAllMember(dataSourceSettings, query);\n    //     } else {\n    //         return;\n    //     }\n    // }\n    // private getAllMember(dataSourceSettings: IDataOptions, query: string): void {\n    //     let dimProp: string = 'DIMENSION PROPERTIES HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY';\n    //     let mdxQuery: string = 'SELECT (' + query + ')' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n    //     let xmla: string = this.getSoapMsg(dataSourceSettings, mdxQuery);\n    //     let connectionString: ConnectionInfo = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n    //     this.doAjaxPost('POST', connectionString.url, xmla, this.generateAllMembers.bind(this), \n    // { dataSourceSettings: dataSourceSettings, action: 'fetchAllMembers' });\n    // }\n    /**\n     * @hidden\n     */\n    OlapEngine.prototype.getDrillThroughData = function (pivotValue, maxRows) {\n        var column = this.tupColumnInfo[pivotValue.colOrdinal] &&\n            this.tupColumnInfo[pivotValue.colOrdinal].uNameCollection &&\n            this.tupColumnInfo[pivotValue.colOrdinal].uNameCollection !== '' ?\n            this.tupColumnInfo[pivotValue.colOrdinal].uNameCollection.split('::[').map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            }) : [];\n        var row = this.tupRowInfo[pivotValue.rowOrdinal] &&\n            this.tupRowInfo[pivotValue.rowOrdinal].uNameCollection &&\n            this.tupRowInfo[pivotValue.rowOrdinal].uNameCollection !== '' ?\n            this.tupRowInfo[pivotValue.rowOrdinal].uNameCollection.split('::[').map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            }) : [];\n        var filters;\n        var filteritems = [];\n        var filterQuery = '';\n        for (var i = 0; i < this.filters.length; i++) {\n            filters = this.filterMembers[this.filters[i].name];\n            if (filters) {\n                for (var j = 0; j < filters.length; j++) {\n                    filterQuery = filterQuery + filters[j];\n                    filterQuery = j < filters.length - 1 ? filterQuery + ',' : filterQuery + '';\n                }\n                filteritems[i] = filterQuery;\n                filterQuery = '';\n            }\n        }\n        for (var i = 0; i < filteritems.length; i++) {\n            filterQuery = filterQuery === '' ? '{' + filteritems[i] + '}' : (filterQuery + ',' + '{' + filteritems[i] + '}');\n        }\n        var columnQuery = '';\n        var rowQuery = '';\n        for (var i = 0; i < column.length; i++) {\n            columnQuery = (columnQuery.length > 0 ? (columnQuery + ',') : '') + (column[i].split('~~').length > 1 ?\n                column[i].split('~~')[column[i].split('~~').length - 1] : column[i]);\n        }\n        for (var i = 0; i < row.length; i++) {\n            rowQuery = (rowQuery.length > 0 ? (rowQuery + ',') : '') + (row[i].split('~~').length > 1 ?\n                row[i].split('~~')[row[i].split('~~').length - 1] : row[i]);\n        }\n        var drillQuery = 'DRILLTHROUGH MAXROWS ' + maxRows + ' Select(' + (columnQuery.length > 0 ? columnQuery : '') +\n            (columnQuery.length > 0 && rowQuery.length > 0 ? ',' : '') + (rowQuery.length > 0 ? rowQuery : '') + ') on 0 from ' +\n            (filterQuery === '' ? '[' + this.dataSourceSettings.cube + ']' : '(SELECT (' + filterQuery + ') ON COLUMNS FROM [' +\n                this.dataSourceSettings.cube + '])');\n        drillQuery = drillQuery.replace(/&/g, '&amp;');\n        var xmla = this.getSoapMsg(this.dataSourceSettings, drillQuery);\n        var connectionString = this.getConnectionInfo(this.dataSourceSettings.url, this.dataSourceSettings.localeIdentifier);\n        this.doAjaxPost('POST', connectionString.url, xmla, this.drillThroughSuccess.bind(this), { dataSourceSettings: this.dataSourceSettings, action: 'drillThrough' });\n    };\n    OlapEngine.prototype.drillThroughSuccess = function (xmlDoc) {\n        var tag = [].slice.call(xmlDoc.querySelectorAll('row'));\n        var gridJSON = '';\n        if (tag.length > 0) {\n            var json = [];\n            var i = 0;\n            while (i < tag.length) {\n                var child = [].slice.call(tag[i].children);\n                var j = 0;\n                while (j < child.length) {\n                    json.push('\"' + child[j].tagName + '\"' + ':' + '\"' + child[j].textContent + '\"');\n                    j++;\n                }\n                i++;\n            }\n            var value = json[0];\n            var k = 0;\n            while (k < json.length) {\n                if (Object.keys(JSON.parse('[{' + json[k] + '}]')[0])[0] === Object.keys(JSON.parse('[{' + value + '}]')[0])[0]) {\n                    gridJSON += gridJSON === '' ? '[{' + json[k] : '}, {' + json[k];\n                    k++;\n                    continue;\n                }\n                gridJSON += ',' + json[k];\n                k++;\n            }\n            gridJSON += '}]';\n        }\n        else {\n            var tag_1 = [].slice.call(xmlDoc.querySelectorAll('faultstring'));\n            var i = 0;\n            while (i < tag_1.length) {\n                gridJSON += tag_1[i].textContent;\n                i++;\n            }\n        }\n        this.gridJSON = gridJSON;\n    };\n    /* tslint:disable:max-line-length */\n    OlapEngine.prototype.getFilterMembers = function (dataSourceSettings, fieldName, levelCount, isSearchFilter, loadLevelMember) {\n        // let dimProp: string = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE';\n        var levels = this.fieldList[fieldName].levels;\n        var cLevel = this.fieldList[fieldName].levelCount;\n        var filterQuery;\n        if (loadLevelMember) {\n            filterQuery = 'Descendants({' + levels[cLevel].id + '}, ' +\n                levels[levelCount - 1].id + ', ' + ((levelCount - cLevel) === 1 ? 'SELF)' : 'SELF_AND_BEFORE)');\n        }\n        else {\n            filterQuery = fieldName + ', Descendants({' + levels[0].id + '}, ' + levels[levelCount - 1].id + ', SELF_AND_BEFORE)';\n        }\n        this.fieldList[fieldName].levelCount = levelCount;\n        if (!isSearchFilter) {\n            this.getMembers(dataSourceSettings, fieldName, false, filterQuery, loadLevelMember);\n        }\n        return filterQuery;\n    };\n    OlapEngine.prototype.getMembers = function (dataSourceSettings, fieldName, isAllFilterData, filterParentQuery, loadLevelMember) {\n        // dimProp = \"dimension properties CHILDREN_CARDINALITY, MEMBER_TYPE\";\n        var dimProp = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n        var mdxQuery;\n        var hasAllMember = this.fieldList[fieldName].hasAllMember;\n        var hierarchy = (hasAllMember ? fieldName : fieldName + '.LEVELS(0)').replace(/\\&/g, '&amp;');\n        if (!isAllFilterData) {\n            mdxQuery = 'SELECT ({' + (filterParentQuery ?\n                filterParentQuery : (hasAllMember ? hierarchy + ', ' + hierarchy + '.CHILDREN' : hierarchy + '.ALLMEMBERS')) + '})' +\n                dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        }\n        else {\n            mdxQuery = 'SELECT ({' + hierarchy + '.ALLMEMBERS})' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        }\n        var xmla = this.getSoapMsg(dataSourceSettings, mdxQuery);\n        var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n        if (!loadLevelMember) {\n            this.fieldList[fieldName].filterMembers = [];\n            this.fieldList[fieldName].childMembers = [];\n            this.fieldList[fieldName].searchMembers = [];\n            // this.fieldList[fieldName].isHierarchy = true;\n            this.fieldList[fieldName].members = {};\n            this.fieldList[fieldName].currrentMembers = {};\n        }\n        this.doAjaxPost('POST', connectionString.url, xmla, this.generateMembers.bind(this), { dataSourceSettings: dataSourceSettings, fieldName: fieldName, loadLevelMembers: loadLevelMember, action: 'fetchMembers' });\n    };\n    OlapEngine.prototype.getChildMembers = function (dataSourceSettings, memberUQName, fieldName) {\n        // dimProp = \"dimension properties CHILDREN_CARDINALITY, MEMBER_TYPE\";\n        var dimProp = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n        // var mdxQuery = 'SELECT SUBSET({' + memberUQName + '.CHILDREN}, 0, 5000)' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        var mdxQuery = 'SELECT ({' + memberUQName.replace(/\\&/g, '&amp;') + '.CHILDREN})' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        var xmla = this.getSoapMsg(dataSourceSettings, mdxQuery);\n        var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n        this.doAjaxPost('POST', connectionString.url, xmla, this.generateMembers.bind(this), { dataSourceSettings: dataSourceSettings, fieldName: fieldName, action: 'fetchChildMembers' });\n    };\n    OlapEngine.prototype.getCalcChildMembers = function (dataSourceSettings, memberUQName) {\n        this.calcChildMembers = [];\n        var dimProp = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n        var mdxQuery = 'SELECT ({' + memberUQName.replace(/\\&/g, '&amp;') + '.MEMBERS})' +\n            dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n        var xmla = this.getSoapMsg(dataSourceSettings, mdxQuery);\n        this.doAjaxPost('POST', connectionString.url, xmla, this.generateMembers.bind(this), { dataSourceSettings: dataSourceSettings, action: 'fetchCalcChildMembers' });\n    };\n    OlapEngine.prototype.getSearchMembers = function (dataSourceSettings, fieldName, searchString, maxNodeLimit, isAllFilterData, levelCount) {\n        this.fieldList[fieldName].searchMembers = [];\n        this.fieldList[fieldName].currrentMembers = {};\n        if (searchString !== '') {\n            // dimProp = \"dimension properties CHILDREN_CARDINALITY, MEMBER_TYPE\";\n            var dimProp = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n            var hierarchy = fieldName.replace(/\\&/g, '&amp;');\n            var mdxQuery = 'WITH SET [SearchMembersSet] AS &#39;FILTER(' + (isAllFilterData ? hierarchy + '.ALLMEMBERS, ' :\n                '{' + (levelCount > 1 ? this.getFilterMembers(dataSourceSettings, fieldName, levelCount, true) :\n                    hierarchy + ', ' + hierarchy + '.CHILDREN') + '},') +\n                '(INSTR(1, ' + hierarchy + '.CurrentMember.member_caption, \"' + searchString + '\") > 0))&#39;' +\n                'SET [SearchParentsSet] AS &#39;GENERATE([SearchMembersSet], ASCENDANTS([SearchMembersSet].Current))&#39;' +\n                'SET [SearchSet] AS &#39;HIERARCHIZE(DISTINCT({[SearchMembersSet], [SearchParentsSet]}))&#39;' +\n                'SELECT SUBSET([SearchSet], 0, ' + maxNodeLimit + ')' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n            var xmla = this.getSoapMsg(dataSourceSettings, mdxQuery);\n            var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n            this.doAjaxPost('POST', connectionString.url, xmla, this.generateMembers.bind(this), { dataSourceSettings: dataSourceSettings, fieldName: fieldName, action: 'fetchSearchMembers' });\n        }\n        else {\n            return;\n        }\n    };\n    OlapEngine.prototype.generateMembers = function (xmlDoc, request, customArgs) {\n        var fields = [].slice.call(xmlDoc.querySelectorAll('Axis[name=\"Axis0\"] Tuple'));\n        var fieldName = customArgs.fieldName;\n        var allMember;\n        var filterMembers = {};\n        for (var _i = 0, fields_1 = fields; _i < fields_1.length; _i++) {\n            var field = fields_1[_i];\n            // let hierarchyUqName: string = fields[0].querySelector('Member HIERARCHY_UNIQUE_NAME').textContent;\n            var member = field.querySelector('Member');\n            var memberType = member.querySelector('MEMBER_TYPE').textContent;\n            var memberUqName = member.querySelector('UName').textContent;\n            var caption = member.querySelector('Caption').textContent;\n            var nodeAttr = { 'data-fieldName': fieldName };\n            var parentUqName = member.querySelector('PARENT_UNIQUE_NAME') ? member.querySelector('PARENT_UNIQUE_NAME').textContent : '';\n            if (parentUqName === '' && memberType === '1') {\n                filterMembers = {\n                    hasChildren: (field.querySelector('CHILDREN_CARDINALITY') ? (field.querySelector('CHILDREN_CARDINALITY').textContent !== '0') ? true : false : false),\n                    isSelected: false,\n                    id: memberUqName,\n                    tag: memberUqName,\n                    name: caption,\n                    caption: caption,\n                    htmlAttributes: nodeAttr\n                };\n                if (customArgs.action === 'fetchMembers' || customArgs.action === 'fetchChildMembers') {\n                    this.fieldList[fieldName].members[memberUqName] = { name: memberUqName, caption: caption, parent: undefined, isNodeExpand: false, isSelected: false };\n                    this.fieldList[fieldName].filterMembers.push(filterMembers);\n                    this.fieldList[fieldName].childMembers.push(filterMembers);\n                }\n                else if (customArgs.action === 'fetchSearchMembers') {\n                    this.fieldList[fieldName].currrentMembers[memberUqName] = { name: memberUqName, caption: caption, parent: undefined, isNodeExpand: false, isSelected: false };\n                    this.fieldList[fieldName].searchMembers.push(filterMembers);\n                    filterMembers.expanded = true;\n                }\n                else {\n                    this.calcChildMembers.push(filterMembers);\n                }\n            }\n            else if (parentUqName !== '' && memberType === '1') {\n                if (parentUqName === allMember && memberType === '1') {\n                    filterMembers = {\n                        hasChildren: (field.querySelector('CHILDREN_CARDINALITY') ? (field.querySelector('CHILDREN_CARDINALITY').textContent !== '0') ? true : false : false),\n                        id: memberUqName,\n                        name: caption,\n                        isSelected: false,\n                        caption: caption,\n                        htmlAttributes: nodeAttr,\n                        tag: memberUqName\n                    };\n                    if (customArgs.action === 'fetchMembers' || customArgs.action === 'fetchChildMembers') {\n                        this.fieldList[fieldName].filterMembers.push(filterMembers);\n                        this.fieldList[fieldName].childMembers.push(filterMembers);\n                        this.fieldList[fieldName].members[memberUqName] = { name: memberUqName, caption: caption, parent: undefined, isNodeExpand: false, isSelected: false };\n                    }\n                    else if (customArgs.action === 'fetchSearchMembers') {\n                        filterMembers.expanded = true;\n                        this.fieldList[fieldName].searchMembers.push(filterMembers);\n                        this.fieldList[fieldName].currrentMembers[memberUqName] = { name: memberUqName, caption: caption, parent: undefined, isNodeExpand: false, isSelected: false };\n                    }\n                    else {\n                        this.calcChildMembers.push(filterMembers);\n                    }\n                }\n                else {\n                    if (customArgs.action === 'fetchMembers' && this.fieldList[fieldName].members[memberUqName]) {\n                        continue;\n                    }\n                    var nodeSelect = (customArgs.loadLevelMembers ? this.fieldList[fieldName].members[parentUqName].isSelected : false);\n                    filterMembers = {\n                        hasChildren: (field.querySelector('CHILDREN_CARDINALITY') ? (field.querySelector('CHILDREN_CARDINALITY').textContent !== '0') ? true : false : false),\n                        htmlAttributes: nodeAttr,\n                        isSelected: false,\n                        id: memberUqName,\n                        pid: parentUqName,\n                        name: caption,\n                        caption: caption,\n                        tag: memberUqName\n                    };\n                    if (customArgs.action === 'fetchMembers' || customArgs.action === 'fetchChildMembers') {\n                        this.fieldList[fieldName].isHierarchy = false;\n                        this.fieldList[fieldName].filterMembers.push(filterMembers);\n                        this.fieldList[fieldName].childMembers.push(filterMembers);\n                        this.fieldList[fieldName].members[memberUqName] = { name: memberUqName, caption: caption, parent: parentUqName, isNodeExpand: false, isSelected: nodeSelect };\n                    }\n                    else if (customArgs.action === 'fetchSearchMembers') {\n                        this.fieldList[fieldName].searchMembers.push(filterMembers);\n                        filterMembers.expanded = true;\n                        this.fieldList[fieldName].currrentMembers[memberUqName] = { name: memberUqName, caption: caption, parent: parentUqName, isNodeExpand: false, isSelected: false };\n                    }\n                    else {\n                        this.calcChildMembers.push(filterMembers);\n                    }\n                }\n            }\n            else if (memberType === '2') {\n                allMember = memberUqName;\n            }\n        }\n    };\n    /* tslint:enable:max-line-length */\n    // private generateAllMembers(xmlDoc: Document, request: Ajax, customArgs: FieldData): void {\n    //     let members: HTMLElement[] = [].slice.call(xmlDoc.querySelectorAll('Axis[name=\"Axis0\"] Member'));\n    //     for (let member of members) {\n    //         let caption: string = member.querySelector('Caption').textContent;\n    //         let fieldName: string = member.querySelector('HIERARCHY_UNIQUE_NAME').textContent;\n    //         this.fieldList[fieldName].allMember = caption;\n    //     }\n    // }\n    OlapEngine.prototype.getFieldListItems = function (xmlDoc, request, customArgs) {\n        var fieldDate = {};\n        var hierarchyElements = [];\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        for (var _i = 0, fields_2 = fields; _i < fields_2.length; _i++) {\n            var field = fields_2[_i];\n            var isAllMemberAvail = [].slice.call(field.querySelectorAll('ALL_MEMBER')).length > 0;\n            hierarchyElements.push({\n                pid: field.querySelector('DIMENSION_UNIQUE_NAME').textContent,\n                id: field.querySelector('HIERARCHY_UNIQUE_NAME').textContent,\n                name: field.querySelector('HIERARCHY_CAPTION').textContent,\n                caption: field.querySelector('HIERARCHY_CAPTION').textContent,\n                tag: field.querySelector('HIERARCHY_UNIQUE_NAME').textContent,\n                hasAllMember: isAllMemberAvail,\n                allMember: (isAllMemberAvail ? field.querySelectorAll('ALL_MEMBER')[0].textContent : undefined),\n                // aggregateType: this.getAggregateType(field.querySelector('HIERARCHY_UNIQUE_NAME').textContent),\n                type: 'string'\n            });\n        }\n        fieldDate = {\n            hierarchy: hierarchyElements,\n            hierarchySuccess: xmlDoc,\n            measures: []\n        };\n        this.fieldListObj = fieldDate;\n        var args = {\n            catalog: customArgs.dataSourceSettings.catalog,\n            cube: customArgs.dataSourceSettings.cube,\n            url: customArgs.dataSourceSettings.url,\n            LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_DIMENSIONS'\n        };\n        this.getTreeData(args, this.loadDimensionElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadCalculatedMemberElements = function (calcMembers) {\n        if (calcMembers.length > 0) {\n            var fieldListElements = this.fieldListData;\n            // let calcElements: IOlapField[] = [];\n            var calcObj = {\n                hasChildren: true,\n                isSelected: false,\n                id: '[Calculated Members].[_0]',\n                name: '[Calculated Members].[_0]',\n                caption: 'Calculated Members',\n                spriteCssClass: 'e-calcMemberGroupCDB' + ' ' + cls.ICON,\n                tag: '[Calculated Members].[_0]',\n                //aggregateType: this.getAggregateType(dimensionName),\n                type: 'string'\n            };\n            if (fieldListElements.length > 0 && fieldListElements[0].id.toLowerCase() === '[measures]') {\n                fieldListElements.splice(0, 0, calcObj);\n            }\n            for (var _i = 0, calcMembers_1 = calcMembers; _i < calcMembers_1.length; _i++) {\n                var field = calcMembers_1[_i];\n                if (!this.fieldList[field.name]) {\n                    var expression = field.formula;\n                    var prefixName = (expression.toLowerCase().indexOf('measure') > -1 ? '[Measures].' :\n                        field.hierarchyUniqueName + '.');\n                    var uniqueName = prefixName + '[' + field.name + ']';\n                    var caption = (this.dataFields[field.name] && this.dataFields[field.name].caption ?\n                        this.dataFields[field.name].caption : field.name);\n                    var formatString = field.formatString;\n                    var calcField = {\n                        hasChildren: false,\n                        isSelected: false,\n                        id: field.name,\n                        pid: '[Calculated Members].[_0]',\n                        name: field.name,\n                        caption: caption,\n                        spriteCssClass: 'e-calc-member' + ' ' + (expression.toLowerCase().indexOf('measure') > -1 ?\n                            'e-calc-measure-icon' : 'e-calc-dimension-icon') + ' ' + cls.ICON,\n                        tag: uniqueName,\n                        formula: expression,\n                        formatString: formatString,\n                        aggregateType: undefined,\n                        type: 'CalculatedField',\n                        filter: [],\n                        dateMember: [],\n                        sort: 'Ascending',\n                        actualFilter: [],\n                        filterMembers: [],\n                        childMembers: [],\n                        searchMembers: [],\n                        members: {},\n                        currrentMembers: {},\n                        isHierarchy: true,\n                        isExcelFilter: false,\n                        isCalculatedField: true,\n                        allowDragAndDrop: (this.dataFields[field.name] ? this.dataFields[field.name].allowDragAndDrop : true),\n                        showFilterIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showFilterIcon : true),\n                        showSortIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showSortIcon : true),\n                        showEditIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showEditIcon : true),\n                        showRemoveIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showRemoveIcon : true),\n                        showValueTypeIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showValueTypeIcon : true),\n                        fieldType: (expression.toLowerCase().indexOf('measure') > -1 ? 'Measure' : 'Dimension'),\n                        parentHierarchy: (expression.toLowerCase().indexOf('measure') > -1 ? undefined : field.hierarchyUniqueName)\n                    };\n                    fieldListElements.push(calcField);\n                    this.fieldList[calcField.id] = calcField;\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    OlapEngine.prototype.loadDimensionElements = function (xmlDoc, request, customArgs) {\n        var hierarchyElements = [];\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        var measure = {};\n        for (var _i = 0, fields_3 = fields; _i < fields_3.length; _i++) {\n            var field = fields_3[_i];\n            var dimensionName = field.querySelector('DIMENSION_UNIQUE_NAME').textContent;\n            var dimensionCaption = field.querySelector('DIMENSION_CAPTION').textContent;\n            if (dimensionName.toLowerCase().indexOf('[measure') >= 0) {\n                measure = {\n                    hasChildren: true,\n                    isSelected: false,\n                    id: dimensionName,\n                    name: dimensionName,\n                    caption: dimensionCaption,\n                    /* tslint:disable-next-line:max-line-length */\n                    spriteCssClass: dimensionName.toLowerCase() === '[measures]' ? 'e-measureGroupCDB-icon' + ' ' + cls.ICON : 'e-dimensionCDB-icon' + ' ' + cls.ICON,\n                    tag: dimensionName,\n                    // aggregateType: this.getAggregateType(dimensionName),\n                    type: 'string'\n                };\n            }\n            else if (isNullOrUndefined(fields[0].querySelector('HIERARCHY_CAPTION'))) {\n                hierarchyElements.push({\n                    hasChildren: true,\n                    isSelected: false,\n                    id: (this.isMondrian ? dimensionName + '~#^Dim' : dimensionName),\n                    name: dimensionName,\n                    caption: dimensionCaption,\n                    spriteCssClass: 'e-dimensionCDB-icon' + ' ' + cls.ICON,\n                    tag: dimensionName,\n                    defaultHierarchy: field.querySelector('DEFAULT_HIERARCHY').textContent,\n                    // aggregateType: this.getAggregateType(dimensionName),\n                    type: 'string'\n                });\n            }\n        }\n        hierarchyElements.splice(0, 0, measure);\n        this.fieldListData = hierarchyElements;\n        // customArgs.hierarchy = this.fieldListData;\n        // customArgs.hierarchySuccess = this.fieldListObj.hierarchySuccess;\n        // this.loadHierarchyElements(customArgs);\n        var args = {\n            catalog: customArgs.dataSourceSettings.catalog,\n            cube: customArgs.dataSourceSettings.cube,\n            url: customArgs.dataSourceSettings.url,\n            LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_SETS'\n        };\n        this.getTreeData(args, this.loadNamedSetElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadNamedSetElements = function (xmlDoc, request, customArgs) {\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.filters);\n        var dimensionElements = this.fieldListData;\n        var reportElement = [];\n        for (var _i = 0, dataFields_3 = dataFields; _i < dataFields_3.length; _i++) {\n            var field = dataFields_3[_i];\n            reportElement.push(field.name);\n        }\n        var measureGroupItems = [];\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        for (var _a = 0, fields_4 = fields; _a < fields_4.length; _a++) {\n            var field = fields_4[_a];\n            if (!(measureGroupItems.indexOf(field.querySelector('DIMENSIONS').textContent.split('.')[0]) >= 0)) {\n                dimensionElements.push({\n                    hasChildren: true,\n                    isSelected: false,\n                    pid: field.querySelector('DIMENSIONS').textContent.split('.')[0],\n                    /* tslint:disable-next-line:max-line-length */\n                    id: field.querySelector('SET_DISPLAY_FOLDER').textContent + '_' + field.querySelector('DIMENSIONS').textContent.split('.')[0],\n                    name: field.querySelector('SET_DISPLAY_FOLDER').textContent,\n                    spriteCssClass: 'e-folderCDB-icon' + ' ' + cls.ICON + ' ' + 'namedSets',\n                    caption: field.querySelector('SET_DISPLAY_FOLDER').textContent,\n                    /* tslint:disable-next-line:max-line-length */\n                    // aggregateType: this.getAggregateType(field.querySelector('SET_DISPLAY_FOLDER').textContent + '_' + field.querySelector('DIMENSIONS').textContent.split('.')[0]),\n                    type: 'string'\n                });\n                measureGroupItems.push(field.querySelector('DIMENSIONS').textContent.split('.')[0]);\n            }\n            var id = '[' + field.querySelector('SET_NAME').textContent.trim() + ']';\n            var fieldObj = {\n                hasChildren: true,\n                isNamedSets: true,\n                isSelected: (reportElement.indexOf('[' + field.querySelector('SET_NAME').textContent + ']') >= 0),\n                /* tslint:disable-next-line:max-line-length */\n                pid: field.querySelector('SET_DISPLAY_FOLDER').textContent + '_' + field.querySelector('DIMENSIONS').textContent.split('.')[0],\n                id: id,\n                name: field.querySelector('SET_CAPTION').textContent,\n                caption: field.querySelector('SET_CAPTION').textContent,\n                spriteCssClass: 'e-namedSetCDB-icon' + ' ' + cls.ICON,\n                tag: field.querySelector('EXPRESSION').textContent,\n                // aggregateType: this.getAggregateType(id),\n                type: 'string',\n                filter: [],\n                dateMember: [],\n                // sort: 'Ascending',\n                actualFilter: [],\n                filterMembers: [],\n                childMembers: [],\n                searchMembers: [],\n                members: {},\n                currrentMembers: {},\n                isHierarchy: true,\n                isExcelFilter: false,\n                allowDragAndDrop: (this.dataFields[id] ? this.dataFields[id].allowDragAndDrop : true),\n                showFilterIcon: (this.dataFields[id] ? this.dataFields[id].showFilterIcon : true),\n                showSortIcon: (this.dataFields[id] ? this.dataFields[id].showSortIcon : true),\n                showEditIcon: (this.dataFields[id] ? this.dataFields[id].showEditIcon : true),\n                showRemoveIcon: (this.dataFields[id] ? this.dataFields[id].showRemoveIcon : true),\n                showValueTypeIcon: (this.dataFields[id] ? this.dataFields[id].showValueTypeIcon : true)\n            };\n            dimensionElements.push(fieldObj);\n            this.fieldList[id] = fieldObj;\n        }\n        // let args: ConnectionInfo = {\n        //     catalog: customArgs.dataSourceSettings.catalog,\n        //     cube: customArgs.dataSourceSettings.cube,\n        //     url: customArgs.dataSourceSettings.url,\n        //     LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n        //     request: 'MDSCHEMA_SETS'\n        // };\n        // this.getTreeData(args, this.loadHierarchyElements.bind(this), customArgs);\n        customArgs.hierarchy = this.fieldListData;\n        customArgs.hierarchySuccess = this.fieldListObj.hierarchySuccess;\n        this.loadHierarchyElements(customArgs);\n    };\n    OlapEngine.prototype.loadHierarchyElements = function (customArgs) {\n        var data = customArgs.hierarchySuccess;\n        var dimensionElements = customArgs.hierarchy;\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.filters);\n        var reportElement = [];\n        for (var _i = 0, dataFields_4 = dataFields; _i < dataFields_4.length; _i++) {\n            var field = dataFields_4[_i];\n            reportElement.push(field.name);\n        }\n        var fields = [].slice.call(data.querySelectorAll('row'));\n        for (var _a = 0, fields_5 = fields; _a < fields_5.length; _a++) {\n            var field = fields_5[_a];\n            var dimensionName = field.querySelector('DIMENSION_UNIQUE_NAME').textContent;\n            var hierarchyName = field.querySelector('HIERARCHY_UNIQUE_NAME').textContent;\n            var isAllMemberAvail = [].slice.call(field.querySelectorAll('ALL_MEMBER')).length > 0;\n            var allMember = void 0;\n            if (isAllMemberAvail) {\n                var stringCollection = field.querySelectorAll('ALL_MEMBER')[0].textContent.replace(/[\\[\\]\\&']+/g, '').split('.');\n                allMember = stringCollection[stringCollection.length - 1].trim();\n            }\n            else {\n                allMember = undefined;\n            }\n            /* tslint:disable-next-line:max-line-length */\n            var hierarchyFolderName = ((field.querySelector('HIERARCHY_DISPLAY_FOLDER')) ? (field.querySelector('HIERARCHY_DISPLAY_FOLDER').textContent) : '');\n            var curElement = [];\n            for (var _b = 0, dimensionElements_1 = dimensionElements; _b < dimensionElements_1.length; _b++) {\n                var item = dimensionElements_1[_b];\n                if (item.tag === dimensionName) {\n                    curElement.push(item);\n                }\n            }\n            if (curElement.length > 0 && (dimensionName !== hierarchyName || this.isMondrian)) {\n                var parentID = dimensionName + (this.isMondrian ? '~#^Dim' : '');\n                if (hierarchyFolderName !== '') {\n                    var folderName = dimensionName + (this.isMondrian ? '~#^Dim' : '') + '_' + hierarchyFolderName;\n                    var curParentElement = [];\n                    for (var _c = 0, dimensionElements_2 = dimensionElements; _c < dimensionElements_2.length; _c++) {\n                        var item = dimensionElements_2[_c];\n                        if (item.tag === folderName && item.pid === parentID) {\n                            curParentElement.push(item);\n                        }\n                    }\n                    if (curParentElement.length === 0) {\n                        var fieldObj_1 = {\n                            hasChildren: true,\n                            isSelected: false,\n                            pid: dimensionName + (this.isMondrian ? '~#^Dim' : ''),\n                            id: folderName,\n                            name: hierarchyFolderName,\n                            spriteCssClass: 'e-folderCDB-icon' + ' ' + cls.ICON,\n                            tag: folderName,\n                            caption: hierarchyFolderName,\n                            // aggregateType: this.getAggregateType(hierarchyFolderName),\n                            type: 'string'\n                        };\n                        dimensionElements.push(fieldObj_1);\n                    }\n                    parentID = folderName;\n                }\n                var fieldObj = {\n                    /* tslint:disable-next-line:max-line-length */\n                    hasChildren: (field.querySelector('HIERARCHY_ORIGIN') ? ((field.querySelector('HIERARCHY_ORIGIN').textContent !== '2') && field.querySelector('HIERARCHY_ORIGIN').textContent !== '6') ? true : false : true),\n                    // hasChildren: true,\n                    isSelected: (reportElement.indexOf(hierarchyName) >= 0),\n                    pid: parentID,\n                    id: hierarchyName,\n                    name: field.querySelector('HIERARCHY_CAPTION').textContent,\n                    /* tslint:disable-next-line:max-line-length */\n                    spriteCssClass: (field.querySelector('HIERARCHY_ORIGIN') ? ((field.querySelector('HIERARCHY_ORIGIN').textContent !== '2') && field.querySelector('HIERARCHY_ORIGIN').textContent !== '6') ? 'e-hierarchyCDB-icon' : 'e-attributeCDB-icon' : 'e-hierarchyCDB-icon') + ' ' + cls.ICON,\n                    hasAllMember: isAllMemberAvail,\n                    allMember: allMember,\n                    tag: hierarchyName,\n                    caption: field.querySelector('HIERARCHY_CAPTION').textContent,\n                    // aggregateType: this.getAggregateType(hierarchyName),\n                    type: 'string',\n                    filter: [],\n                    dateMember: [],\n                    sort: (this.enableSort ? this.sortObject[hierarchyName] ? this.sortObject[hierarchyName] : 'Ascending' : 'None'),\n                    actualFilter: [],\n                    filterMembers: [],\n                    childMembers: [],\n                    searchMembers: [],\n                    members: {},\n                    currrentMembers: {},\n                    levels: [],\n                    levelCount: 1,\n                    /* tslint:disable-next-line:max-line-length */\n                    isHierarchy: (field.querySelector('HIERARCHY_ORIGIN') ? ((field.querySelector('HIERARCHY_ORIGIN').textContent !== '2') && field.querySelector('HIERARCHY_ORIGIN').textContent !== '6') ? false : true : false),\n                    isExcelFilter: false,\n                    allowDragAndDrop: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].allowDragAndDrop : true),\n                    showFilterIcon: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].showFilterIcon : true),\n                    showSortIcon: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].showSortIcon : true),\n                    showEditIcon: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].showEditIcon : true),\n                    showRemoveIcon: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].showRemoveIcon : true),\n                    showValueTypeIcon: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].showValueTypeIcon : true)\n                };\n                dimensionElements.push(fieldObj);\n                this.fieldList[hierarchyName] = fieldObj;\n            }\n        }\n        var args = {\n            catalog: customArgs.dataSourceSettings.catalog,\n            cube: customArgs.dataSourceSettings.cube,\n            url: customArgs.dataSourceSettings.url,\n            LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_LEVELS'\n        };\n        this.getTreeData(args, this.loadLevelElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadLevelElements = function (xmlDoc, request, customArgs) {\n        var newDataSource = [];\n        var dimensionElements = this.fieldListData;\n        newDataSource = [];\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        for (var _i = 0, fields_6 = fields; _i < fields_6.length; _i++) {\n            var field = fields_6[_i];\n            /* tslint:disable-next-line:max-line-length */\n            if (parseInt(field.querySelector('LEVEL_TYPE').textContent, 10) !== 1 && field.querySelector('HIERARCHY_UNIQUE_NAME').textContent.toLowerCase() !== '[measures]') {\n                var dimensionName = field.querySelector('HIERARCHY_UNIQUE_NAME').textContent;\n                var levelName = field.querySelector('LEVEL_UNIQUE_NAME').textContent;\n                var levelCaption = field.querySelector('LEVEL_CAPTION').textContent;\n                var levelObj = {\n                    hasChildren: false,\n                    isChecked: false,\n                    isSelected: this.fieldList[dimensionName].isSelected,\n                    pid: dimensionName,\n                    id: levelName,\n                    name: levelCaption,\n                    tag: levelName,\n                    /* tslint:disable-next-line:max-line-length */\n                    spriteCssClass: 'e-level-members e-hierarchy-level-' + parseInt(field.querySelector('LEVEL_NUMBER').textContent, 10) + '-icon' + ' ' + cls.ICON,\n                    caption: levelCaption,\n                    // aggregateType: this.getAggregateType(levelName),\n                    type: 'string'\n                };\n                newDataSource.push(levelObj);\n                if (this.fieldList[dimensionName] && this.fieldList[dimensionName].spriteCssClass &&\n                    this.fieldList[dimensionName].spriteCssClass.indexOf('e-attributeCDB-icon') === -1) {\n                    this.fieldList[dimensionName].levels.push(levelObj);\n                    this.fieldList[dimensionName].isHierarchy = false;\n                }\n                else {\n                    this.fieldList[dimensionName].isHierarchy = true;\n                }\n            }\n        }\n        this.fieldListData = dimensionElements = dimensionElements.concat(newDataSource);\n        var args = {\n            catalog: customArgs.dataSourceSettings.catalog,\n            cube: customArgs.dataSourceSettings.cube,\n            url: customArgs.dataSourceSettings.url,\n            LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_MEASURES'\n        };\n        this.getTreeData(args, this.loadMeasureElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadMeasureElements = function (xmlDoc, request, customArgs) {\n        var dimensionElements = this.fieldListData;\n        var measureGroupItems = [];\n        var caption;\n        var dataFields = extend([], this.values, null, true);\n        var reportElement = [];\n        for (var _i = 0, dataFields_5 = dataFields; _i < dataFields_5.length; _i++) {\n            var field = dataFields_5[_i];\n            reportElement.push(field.name);\n        }\n        if (this.locale !== 'en-US') {\n            var args = {\n                catalog: customArgs.dataSourceSettings.catalog,\n                cube: customArgs.dataSourceSettings.cube,\n                url: customArgs.dataSourceSettings.url,\n                LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n                request: 'MDSCHEMA_MEASUREGROUPS'\n            };\n            this.getTreeData(args, this.loadMeasureGroups.bind(this), customArgs);\n        }\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        for (var _a = 0, fields_7 = fields; _a < fields_7.length; _a++) {\n            var field = fields_7[_a];\n            /* tslint:disable-next-line:max-line-length */\n            var measureGRPName = isNullOrUndefined(field.querySelector('MEASUREGROUP_NAME')) ? '' : field.querySelector('MEASUREGROUP_NAME').textContent;\n            var measureName = field.querySelector('MEASURE_UNIQUE_NAME').textContent;\n            var formatString = field.querySelector('DEFAULT_FORMAT_STRING') ?\n                field.querySelector('DEFAULT_FORMAT_STRING').textContent : '#,#';\n            var aggregateType = field.querySelector('MEASURE_AGGREGATOR') ?\n                field.querySelector('MEASURE_AGGREGATOR').textContent : '1';\n            if (!(measureGroupItems.indexOf(measureGRPName) >= 0)) {\n                if (this.locale !== 'en-US') {\n                    var measureInfo = [];\n                    for (var _b = 0, _c = this.fieldListObj.measuresGroups; _b < _c.length; _b++) {\n                        var item = _c[_b];\n                        if (item.querySelector('MEASUREGROUP_NAME').textContent === measureGRPName) {\n                            measureInfo.push(item);\n                        }\n                    }\n                    caption = measureInfo.length > 0 ? measureInfo[0].querySelector('MEASUREGROUP_CAPTION').textContent : measureGRPName;\n                }\n                else {\n                    caption = measureGRPName;\n                }\n                if (measureGRPName !== '') {\n                    dimensionElements.push({\n                        hasChildren: true,\n                        isChecked: false,\n                        isSelected: false,\n                        pid: '[Measures]',\n                        id: measureGRPName,\n                        name: caption,\n                        spriteCssClass: 'e-measureCDB e-folderCDB-icon' + ' ' + cls.ICON,\n                        tag: measureGRPName,\n                        caption: caption,\n                        aggregateType: this.getAggregateType(measureGRPName, aggregateType),\n                        type: 'string'\n                    });\n                    measureGroupItems.push(measureGRPName);\n                }\n            }\n            var fieldObj = {\n                hasChildren: false,\n                isSelected: (reportElement.indexOf(measureName) >= 0),\n                pid: measureGRPName === '' ? '[Measures]' : measureGRPName,\n                id: measureName,\n                name: field.querySelector('MEASURE_CAPTION').textContent,\n                spriteCssClass: 'e-measure-icon' + ' ' + cls.ICON,\n                tag: measureName,\n                caption: field.querySelector('MEASURE_CAPTION').textContent,\n                aggregateType: this.getAggregateType(measureName, aggregateType),\n                type: 'number',\n                filter: [],\n                // sort: 'Ascending',\n                actualFilter: [],\n                filterMembers: [],\n                childMembers: [],\n                searchMembers: [],\n                members: {},\n                currrentMembers: {},\n                formatString: formatString,\n                allowDragAndDrop: (this.dataFields[measureName] ? this.dataFields[measureName].allowDragAndDrop : true),\n                showFilterIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showFilterIcon : true),\n                showSortIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showSortIcon : true),\n                showEditIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showEditIcon : true),\n                showRemoveIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showRemoveIcon : true),\n                showValueTypeIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showValueTypeIcon : true)\n            };\n            dimensionElements.push(fieldObj);\n            this.fieldList[measureName] = fieldObj;\n            if ((reportElement.indexOf(measureName) >= 0)) {\n                reportElement.splice(reportElement.indexOf(measureName), 1);\n            }\n        }\n        this.measureReportItems = reportElement;\n        // let args: ConnectionInfo = {\n        //     catalog: customArgs.dataSourceSettings.catalog,\n        //     cube: customArgs.dataSourceSettings.cube,\n        //     url: customArgs.dataSourceSettings.url,\n        //     LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n        //     request: 'MDSCHEMA_KPIS'\n        // };\n        // customArgs.reportElement = this.measureReportItems;\n        // this.getTreeData(args, this.loadKPIElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadMeasureGroups = function (xmlDoc, request, customArgs) {\n        if (isNullOrUndefined(this.fieldListObj)) {\n            this.fieldListObj = {};\n        }\n        this.fieldListObj.measuresGroups = [].slice.call(xmlDoc.querySelectorAll('row'));\n    };\n    // private loadKPIElements(xmlDoc: Document, request: Ajax, customArgs: FieldData): void {\n    //     let dimensionElements: IOlapField[] = this.fieldListData;\n    //     let parser = new DOMParser();\n    //     let measureGroupItems: string[] = [];\n    //     let fields: HTMLElement[] = [].slice.call(xmlDoc.querySelectorAll('row'));\n    //     dimensionElements.splice(1, 0, {\n    //         hasChildren: true,\n    //         isChecked: false,\n    //         id: 'folderStruct',\n    //         name: 'KPI',\n    //         spriteCssClass: 'kpiCDB e-kpiCDB-icon' + ' ' +  cls.ICON,\n    //         tag: '',\n    //         caption: 'KPI',\n    //         aggregateType: this.getAggregateType('folderStruct'),\n    //         type: 'string'\n    //     });\n    //     for (let field of fields) {\n    //         let kpiName: string = field.querySelector('KPI_CAPTION').textContent;\n    //         let kpiGoal: string = field.querySelector('KPI_GOAL').textContent;\n    //         let kpiStatus: string = field.querySelector('KPI_STATUS').textContent;\n    //         let kpiTrend: string = field.querySelector('KPI_TREND').textContent;\n    //         let kpiValue: string = field.querySelector('KPI_VALUE').textContent;\n    //         if (!(measureGroupItems.indexOf(field.querySelector('KPI_NAME').textContent) >= 0)) {\n    //             dimensionElements.push({\n    //                 hasChildren: true,\n    //                 isChecked: false,\n    //                 pid: 'folderStruct',\n    //                 id: kpiName,\n    //                 name: kpiName,\n    //                 spriteCssClass: 'e-folderCDB-icon' + ' ' +  cls.ICON,\n    //                 tag: kpiName,\n    //                 caption: kpiName,\n    //                 aggregateType: this.getAggregateType(kpiName),\n    //                 type: 'string'\n    //             });\n    //             measureGroupItems.push(kpiName);\n    //         }\n    //         let kpiCollection: { [key: string]: string } = {\n    //             'kpiGoal': kpiGoal,\n    //             'kpiStatus': kpiStatus,\n    //             'kpiTrend': kpiTrend,\n    //             'kpiValue': kpiValue\n    //         };\n    //         let i: number = 0;\n    //         for (let kpi of Object.keys(kpiCollection)) {\n    //             let id: string = kpiCollection[kpi];\n    //             let name: string = (kpi).split('kpi')[1];\n    //             let cssClass: string = 'e-' + kpi + '-icon';\n    //             let fieldObj: IOlapField = {\n    //                 hasChildren: true,\n    //                 isSelected: (customArgs.reportElement.indexOf(id) >= 0),\n    //                 id: id,\n    //                 pid: kpiName,\n    //                 name: name,\n    //                 spriteCssClass: cssClass + ' ' +  cls.ICON,\n    //                 tag: id,\n    //                 caption: name,\n    //                 aggregateType: this.getAggregateType(id),\n    //                 type: 'number',\n    //                 filter: [],\n    //                 sort: 'Ascending',\n    //                 filterMembers: [],\n    //                 searchMembers: [],\n    //                 members: {},\n    //                 currrentMembers: {}\n    //             };\n    //             dimensionElements.push(fieldObj);\n    //             this.fieldList[id] = fieldObj;\n    //         }\n    //     }\n    // }\n    OlapEngine.prototype.doAjaxPost = function (type, url, data, success, customArgs) {\n        var ajax = new Ajax({\n            mode: false,\n            contentType: 'text/xml',\n            url: url,\n            data: data,\n            dataType: 'xml',\n            type: type,\n            beforeSend: this.beforeSend.bind(this),\n            onSuccess: function (args, request) {\n                var parser = new DOMParser();\n                // parsing string type result as XML\n                var xmlDoc = parser.parseFromString(args, 'text/xml');\n                success(xmlDoc, request, customArgs);\n            },\n            onFailure: function (e) {\n                return e;\n            }\n        });\n        ajax.send();\n    };\n    OlapEngine.prototype.beforeSend = function (args) {\n        if (this.dataSourceSettings.authentication.userName && this.dataSourceSettings.authentication.password) {\n            /* tslint:disable */\n            args.httpRequest.setRequestHeader(\"Authorization\", \"Basic \" + btoa(this.dataSourceSettings.authentication.userName + \":\" +\n                this.dataSourceSettings.authentication.password));\n            /* tslint:enable */\n        }\n    };\n    OlapEngine.prototype.getSoapMsg = function (dataSourceSettings, query) {\n        var xmlMsg = '';\n        var sourceInfo = '';\n        var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n        /* tslint:disable:max-line-length */\n        if (this.isMondrian) {\n            sourceInfo = '';\n            xmlMsg = '<SOAP-ENV:Envelope xmlns:SOAP-ENV=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\" SOAP-ENV:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\"><SOAP-ENV:Body><Execute xmlns=\\\"urn:schemas-microsoft-com:xml-analysis\\\"><Command><Statement><![CDATA[' +\n                query + ']]></Statement></Command><Properties><PropertyList><DataSourceInfo>' + sourceInfo +\n                '</DataSourceInfo><Catalog>' + dataSourceSettings.catalog + '</Catalog><AxisFormat>TupleFormat</AxisFormat><Content>Data</Content><Format>Multidimensional</Format></PropertyList></Properties></Execute></SOAP-ENV:Body></SOAP-ENV:Envelope>';\n        }\n        else {\n            xmlMsg = '<Envelope xmlns=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"> <Header></Header> <Body> <Execute xmlns=\\\"urn:schemas-microsoft-com:xml-analysis\\\"> <Command> <Statement> ' +\n                query + ' </Statement> </Command> <Properties> <PropertyList> <Catalog>' + dataSourceSettings.catalog +\n                '</Catalog> <LocaleIdentifier>' + connectionString.LCID + '</LocaleIdentifier></PropertyList> </Properties> </Execute> </Body> </Envelope>';\n        }\n        /* tslint:enable:max-line-length */\n        return xmlMsg;\n    };\n    OlapEngine.prototype.getConnectionInfo = function (connectionString, locale) {\n        var connectionInfo = { url: '', LCID: !isNullOrUndefined(locale) ? locale.toString() : '1033' };\n        if (connectionString !== '') {\n            for (var _i = 0, _a = connectionString.split(';'); _i < _a.length; _i++) {\n                var obj = _a[_i];\n                if (obj.toLowerCase().indexOf('locale') < 0 && connectionInfo.url.length === 0) {\n                    connectionInfo.url = obj;\n                }\n                else if (obj.toLowerCase().indexOf('locale') >= 0) {\n                    connectionInfo.LCID = obj.replace(/ /g, '').split('=')[1];\n                }\n            }\n        }\n        return connectionInfo;\n    };\n    OlapEngine.prototype.getMDXQuery = function (dataSourceSettings) {\n        MDXQuery.getCellSets(dataSourceSettings, this, true, undefined, true);\n        return this.mdxQuery;\n    };\n    return OlapEngine;\n}());\nexport { OlapEngine };\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Browser, Component, createElement, setStyleAttribute, isBlazor } from '@syncfusion/ej2-base';\nimport { EventHandler, Complex, extend, ChildProperty, Collection, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport { Internationalization, L10n, NotifyPropertyChanges, compile, formatUnit } from '@syncfusion/ej2-base';\nimport { removeClass, addClass, Event, setValue, closest } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate, resetBlazorTemplate, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { PivotEngine } from '../../base/engine';\nimport { Tooltip, createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { Render } from '../renderer/render';\nimport { Common } from '../../common/actions/common';\nimport { DataSourceSettings } from '../model/datasourcesettings';\nimport { GridSettings } from '../model/gridsettings';\nimport { Grid, Reorder, Resize, getObject } from '@syncfusion/ej2-grids';\nimport { ExcelExport } from '../actions/excel-export';\nimport { PDFExport } from '../actions/pdf-export';\nimport { KeyboardInteraction } from '../actions/keyboard';\nimport { PivotContextMenu } from '../../common/popups/context-menu';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { VirtualScroll } from '../actions/virtualscroll';\nimport { DrillThrough } from '../actions/drill-through';\nimport { PivotUtil } from '../../base/util';\nimport { PivotChart } from '../../pivotchart/index';\nimport { ChartSettings } from '../model/chartsettings';\nimport { OlapEngine } from '../../base/olap/engine';\n/* tslint:disable */\n/**\n * Allows a set of options for customizing the grouping bar UI with a variety of settings such as UI visibility to a specific view port,\n * customizing the pivot button features such as filtering, sorting, changing aggregate types, removing any fields.\n * The options available to customize the grouping bar UI are:\n * * `showFilterIcon`: Allows you to show or hide the filter icon that used to be displayed on the pivot button of the grouping bar UI.\n * This filter icon is used to filter the members of a particular field at runtime in the pivot table.\n * * `showSortIcon`: Allows you to show or hide the sort icon that used to be displayed in the pivot button of the grouping bar UI.\n * This sort icon is used to order members of a particular fields either in ascending or descending at runtime.\n * * `showRemoveIcon`: Allows you to show or hide the remove icon that used to be displayed in the pivot button of the grouping bar UI.\n * This remove icon is used to remove any field during runtime.\n * * `showValueTypeIcon`: Allows you to show or hide the value type icon that used to be displayed in the pivot button of the grouping bar UI.\n * This value type icon helps to select the appropriate aggregation type to value fields at runtime.\n * * `displayMode`: Allow options to show the grouping bar UI to specific view port such as either pivot table or pivot chart or both table and chart.\n * For example, to show the grouping bar UI to pivot table on its own, set the property `displayMode` to **Table**.\n * * `allowDragAndDrop`: Allows you to restrict the pivot buttons that were used to drag on runtime in the grouping bar UI. This will prevent you from modifying the current report.\n */\nvar GroupingBarSettings = /** @class */ (function (_super) {\n    __extends(GroupingBarSettings, _super);\n    function GroupingBarSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showFilterIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showSortIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showRemoveIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showValueTypeIcon\", void 0);\n    __decorate([\n        Property('Both')\n    ], GroupingBarSettings.prototype, \"displayMode\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"allowDragAndDrop\", void 0);\n    return GroupingBarSettings;\n}(ChildProperty));\nexport { GroupingBarSettings };\n/**\n * Allow options for performing CRUD operations, such as add, edit, delete, and update the raw items of any cell from the pivot table.\n * The raw items can be viewed in a data grid that used to be displayed as a dialog by double-clicking the appropriate value cell in the pivot table.\n * CRUD operations can be performed in this data grid either by double-clicking the cells or using toolbar options.\n * The options available are as follows:\n * * `allowAdding`: Allows you to add a new record to the data grid used to update the appropriate cells in the pivot table.\n * * `allowEditing`: Allows you to edit the existing record in the data grid that used to update the appropriate cells in the pivot table.\n * * `allowDeleting`: Allows you to delete the existing record from the data grid that used to  update the appropriate cells in the pivot table.\n * * `allowCommandColumns`: Allows an additional column appended in the data grid layout holds the command buttons to perform the CRUD operations to edit,\n * delete, and update the raw items to the data grid that used to update the appropriate cells in the pivot table.\n * * `mode`: Allow options for performing CRUD operations with different modes in the data grid that used to update the appropriate cells in the pivot table.\n * The available modes are normal, batch and dialog. **Normal** mode is enabled for CRUD operations in the data grid by default.\n * * `allowEditOnDblClick`: Allows you to restrict CRUD operations by double-clicking the appropriate value cell in the pivot table.\n * * `showConfirmDialog`: Allows you to show the confirmation dialog to save and discard CRUD operations performed in the data grid that used to update the appropriate cells in the pivot table.\n * * `showDeleteConfirmDialog`: Allows you to show the confirmation dialog to delete any records from the data grid.\n *\n * > This feature is applicable only for the relational data source.\n */\nvar CellEditSettings = /** @class */ (function (_super) {\n    __extends(CellEditSettings, _super);\n    function CellEditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowCommandColumns\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowInlineEditing\", void 0);\n    __decorate([\n        Property('Normal')\n    ], CellEditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], CellEditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], CellEditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    return CellEditSettings;\n}(ChildProperty));\nexport { CellEditSettings };\n/**\n * Allow options for setting the visibility of hyperlink based on specific condition. The options available here are as follows:\n * * `measure`: Allows you to specify the value field caption to get visibility of hyperlink option for specific measure.\n * * `condition`: Allows you to choose the operator type such as equals, greater than, less than, etc.\n * * `value1`: Allows you to set the start value.\n * * `value2`: Allows you to set the end value. This option will be used by default when the operator **Between** and **NotBetween** is chosen to apply.\n */\nvar ConditionalSettings = /** @class */ (function (_super) {\n    __extends(ConditionalSettings, _super);\n    function ConditionalSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"measure\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"label\", void 0);\n    __decorate([\n        Property('NotEquals')\n    ], ConditionalSettings.prototype, \"conditions\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"value1\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"value2\", void 0);\n    return ConditionalSettings;\n}(ChildProperty));\nexport { ConditionalSettings };\n/**\n * Allow a set of options to display a hyperlink to link data for individual cells that are shown in the pivot table.\n * These options allow you to enable a separate hyperlink for row headers, column headers, value cells, and summary cells in the `hyperlinkSettings` class.\n * The options available are:\n * * `showHyperlink`: Allows you to set the visibility of hyperlink in all cells.\n * * `showRowHeaderHyperlink`: Allows you to set the visibility of hyperlink in row headers.\n * * `showColumnHeaderHyperlink`: Allows you to set the visibility of hyperlink in column headers.\n * * `showValueCellHyperlink`: Allows you to set the visibility of hyperlink in value cells.\n * * `showSummaryCellHyperlink`: Allows you to set the visibility of hyperlink in summary cells.\n * * `headerText`: Allows you to set the visibility of hyperlink based on header text.\n * * `conditionalSettings`: Allows you to set the visibility of hyperlink based on specific condition.\n * * `cssClass`: Allows you to add CSS class name to the hyperlink options.\n *\n * > By default, the hyperlink options are disabled for all cells in the pivot table.\n */\nvar HyperlinkSettings = /** @class */ (function (_super) {\n    __extends(HyperlinkSettings, _super);\n    function HyperlinkSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showRowHeaderHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showColumnHeaderHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showValueCellHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showSummaryCellHyperlink\", void 0);\n    __decorate([\n        Collection([], ConditionalSettings)\n    ], HyperlinkSettings.prototype, \"conditionalSettings\", void 0);\n    __decorate([\n        Property()\n    ], HyperlinkSettings.prototype, \"headerText\", void 0);\n    __decorate([\n        Property('')\n    ], HyperlinkSettings.prototype, \"cssClass\", void 0);\n    return HyperlinkSettings;\n}(ChildProperty));\nexport { HyperlinkSettings };\n/**\n * Allow options to configure the view port as either pivot table or pivot chart or both table and chart. The options available are:\n * * `view`: Allows you to choose the view port as either pivot table or pivot chart or both table and chart.\n * * `primary`: Allows you to set the primary view to be either pivot table or pivot chart. To use this option, it requires the property `view` to be **Both**.\n */\nvar DisplayOption = /** @class */ (function (_super) {\n    __extends(DisplayOption, _super);\n    function DisplayOption() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Table')\n    ], DisplayOption.prototype, \"view\", void 0);\n    __decorate([\n        Property('Table')\n    ], DisplayOption.prototype, \"primary\", void 0);\n    return DisplayOption;\n}(ChildProperty));\nexport { DisplayOption };\n/* tslint:enable */\n/**\n * Represents the PivotView component.\n * ```html\n * <div id=\"PivotView\"></div>\n * <script>\n *  var pivotviewObj = new PivotView({ enableGroupingBar: true });\n *  pivotviewObj.appendTo(\"#pivotview\");\n * </script>\n * ```\n */\nvar PivotView = /** @class */ (function (_super) {\n    __extends(PivotView, _super);\n    /* tslint:enable */\n    /**\n     * Constructor for creating the widget\n     * @param  {PivotViewModel} options?\n     * @param  {string|HTMLElement} element?\n     */\n    function PivotView(options, element) {\n        var _this_1 = _super.call(this, options, element) || this;\n        /** @hidden */\n        _this_1.verticalScrollScale = 1;\n        /** @hidden */\n        _this_1.horizontalScrollScale = 1;\n        /** @hidden */\n        _this_1.scrollerBrowserLimit = 8000000;\n        /** @hidden */\n        _this_1.lastSortInfo = {};\n        /** @hidden */\n        _this_1.lastFilterInfo = {};\n        /** @hidden */\n        _this_1.lastAggregationInfo = {};\n        /** @hidden */\n        _this_1.lastCalcFieldInfo = {};\n        /** @hidden */\n        _this_1.isScrolling = false;\n        _this_1.shiftLockedPos = [];\n        _this_1.savedSelectedCellsPos = [];\n        _this_1.cellSelectionPos = [];\n        _this_1.isPopupClicked = false;\n        _this_1.isMouseDown = false;\n        _this_1.isMouseUp = false;\n        _this_1.fieldsType = {};\n        _this_1.remoteData = [];\n        _this_1.defaultItems = {};\n        _this_1.isCellBoxMultiSelection = false;\n        /** @hidden */\n        _this_1.gridHeaderCellInfo = [];\n        /** @hidden */\n        _this_1.gridCellCollection = {};\n        /** @hidden */\n        _this_1.rowRangeSelection = { enable: false, startIndex: 0, endIndex: 0 };\n        /** @hidden */\n        _this_1.resizeInfo = {};\n        /** @hidden */\n        _this_1.scrollPosObject = {\n            vertical: 0, horizontal: 0, verticalSection: 0,\n            horizontalSection: 0, top: 0, left: 0, scrollDirection: { direction: '', position: 0 }\n        };\n        /** @hidden */\n        _this_1.pivotColumns = [];\n        /** @hidden */\n        _this_1.totColWidth = 0;\n        /** @hidden */\n        _this_1.posCount = 0;\n        /** @hidden */\n        _this_1.isModified = false;\n        /** @hidden */\n        _this_1.isInitialRendering = false;\n        _this_1.needsID = true;\n        _this_1.pivotRefresh = Component.prototype.refresh;\n        _this_1.request = new XMLHttpRequest();\n        _this_1.pivotView = _this_1;\n        setValue('mergePersistData', _this_1.mergePersistPivotData, _this_1);\n        return _this_1;\n    }\n    PivotView_1 = PivotView;\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    PivotView.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({ args: [this], member: 'groupingbar' });\n        if (this.allowConditionalFormatting) {\n            modules.push({ args: [this], member: 'conditionalformatting' });\n        }\n        if (this.allowNumberFormatting) {\n            modules.push({ args: [this], member: 'numberformatting' });\n        }\n        if (this.allowCalculatedField) {\n            modules.push({ args: [this], member: 'calculatedfield' });\n        }\n        if (this.showToolbar && (this.toolbar.length > 0 || this.toolbarTemplate)) {\n            modules.push({ args: [this], member: 'toolbar' });\n        }\n        if (this.showFieldList) {\n            modules.push({ args: [this], member: 'fieldlist' });\n        }\n        if (this.allowExcelExport) {\n            modules.push({ args: [this], member: 'excelExport' });\n        }\n        if (this.allowPdfExport) {\n            modules.push({ args: [this], member: 'pdfExport' });\n        }\n        if (this.enableVirtualization) {\n            modules.push({ args: [this], member: 'virtualscroll' });\n        }\n        if (this.allowGrouping) {\n            modules.push({ args: [this], member: 'grouping' });\n        }\n        return modules;\n    };\n    /**\n     * For internal use only - Initializing internal properties;\n     * @private\n     */\n    PivotView.prototype.preRender = function () {\n        if (this.dataSourceSettings && this.dataSourceSettings.providerType === 'SSAS') {\n            this.dataType = 'olap';\n            this.olapEngineModule = new OlapEngine();\n        }\n        else {\n            this.dataType = 'pivot';\n            this.engineModule = new PivotEngine();\n        }\n        this.isAdaptive = Browser.isDevice;\n        if (Browser.isIE || Browser.info.name === 'edge') {\n            this.scrollerBrowserLimit = 1500000;\n        }\n        else if (Browser.info.name === 'chrome') {\n            this.scrollerBrowserLimit = 15000000;\n        }\n        this.isTouchMode = closest(this.element, 'e-bigger') ? true : false;\n        this.initProperties();\n        this.renderToolTip();\n        this.keyboardModule = new KeyboardInteraction(this);\n        this.contextMenuModule = new PivotContextMenu(this);\n        this.globalize = new Internationalization(this.locale);\n        if (this.showFieldList || this.showGroupingBar || this.allowNumberFormatting || this.allowCalculatedField ||\n            this.toolbar || this.allowGrouping || this.gridSettings.contextMenuItems) {\n            this.commonModule = new Common(this);\n        }\n        this.defaultLocale = {\n            grandTotal: 'Grand Total',\n            total: 'Total',\n            value: 'Value',\n            noValue: 'No value',\n            row: 'Row',\n            column: 'Column',\n            collapse: 'Collapse',\n            expand: 'Expand',\n            rowAxisPrompt: 'Drop row here',\n            columnAxisPrompt: 'Drop column here',\n            valueAxisPrompt: 'Drop value here',\n            filterAxisPrompt: 'Drop filter here',\n            filter: 'Filter',\n            filtered: 'Filtered',\n            sort: 'Sort',\n            filters: 'Filters',\n            rows: 'Rows',\n            columns: 'Columns',\n            values: 'Values',\n            close: 'Close',\n            cancel: 'Cancel',\n            delete: 'Delete',\n            CalculatedField: 'Calculated Field',\n            createCalculatedField: 'Create Calculated Field',\n            fieldName: 'Enter the field name',\n            error: 'Error',\n            invalidFormula: 'Invalid formula.',\n            dropText: 'Example: (\"Sum(Order_Count)\" + \"Sum(In_Stock)\") * 250',\n            dropTextMobile: 'Add fields and edit formula here.',\n            dropAction: 'Calculated field cannot be place in any other region except value axis.',\n            alert: 'Alert',\n            warning: 'Warning',\n            ok: 'OK',\n            search: 'Search',\n            drag: 'Drag',\n            remove: 'Remove',\n            allFields: 'All Fields',\n            formula: 'Formula',\n            addToRow: 'Add to Row',\n            addToColumn: 'Add to Column',\n            addToValue: 'Add to Value',\n            addToFilter: 'Add to Filter',\n            emptyData: 'No records to display',\n            fieldExist: 'A field already exists in this name. Please enter a different name.',\n            confirmText: 'A calculation field already exists in this name. Do you want to replace it?',\n            noMatches: 'No matches',\n            format: 'Summaries values by',\n            edit: 'Edit',\n            clear: 'Clear',\n            sortAscending: 'Sort ascending order',\n            sortDescending: 'Sort descending order',\n            sortNone: 'Sort data order',\n            clearCalculatedField: 'Clear edited field info',\n            editCalculatedField: 'Edit calculated field',\n            formulaField: 'Drag and drop fields to formula',\n            dragField: 'Drag field to formula',\n            clearFilter: 'Clear',\n            by: 'by',\n            all: 'All',\n            multipleItems: 'Multiple items',\n            /* tslint:disable */\n            member: 'Member',\n            label: 'Label',\n            date: 'Date',\n            enterValue: 'Enter value',\n            chooseDate: 'Enter date',\n            Before: 'Before',\n            BeforeOrEqualTo: 'Before Or Equal To',\n            After: 'After',\n            AfterOrEqualTo: 'After Or Equal To',\n            labelTextContent: 'Show the items for which the label',\n            dateTextContent: 'Show the items for which the date',\n            valueTextContent: 'Show the items for which',\n            Equals: 'Equals',\n            DoesNotEquals: 'Does Not Equal',\n            BeginWith: 'Begins With',\n            DoesNotBeginWith: 'Does Not Begin With',\n            EndsWith: 'Ends With',\n            DoesNotEndsWith: 'Does Not End With',\n            Contains: 'Contains',\n            DoesNotContains: 'Does Not Contain',\n            GreaterThan: 'Greater Than',\n            GreaterThanOrEqualTo: 'Greater Than Or Equal To',\n            LessThan: 'Less Than',\n            LessThanOrEqualTo: 'Less Than Or Equal To',\n            Between: 'Between',\n            NotBetween: 'Not Between',\n            And: 'and',\n            Sum: 'Sum',\n            Count: 'Count',\n            DistinctCount: 'Distinct Count',\n            Product: 'Product',\n            Avg: 'Avg',\n            Min: 'Min',\n            SampleVar: 'Sample Var',\n            PopulationVar: 'Population Var',\n            RunningTotals: 'Running Totals',\n            Max: 'Max',\n            Index: 'Index',\n            SampleStDev: 'Sample StDev',\n            PopulationStDev: 'Population StDev',\n            PercentageOfRowTotal: '% of Row Total',\n            PercentageOfParentTotal: '% of Parent Total',\n            PercentageOfParentColumnTotal: '% of Parent Column Total',\n            PercentageOfParentRowTotal: '% of Parent Row Total',\n            DifferenceFrom: 'Difference From',\n            PercentageOfDifferenceFrom: '% of Difference From',\n            PercentageOfGrandTotal: '% of Grand Total',\n            PercentageOfColumnTotal: '% of Column Total',\n            MoreOption: 'More...',\n            /* tslint:enable */\n            NotEquals: 'Not Equals',\n            AllValues: 'All Values',\n            conditionalFormating: 'Conditional Formatting',\n            apply: 'Apply',\n            condition: 'Add Condition',\n            formatLabel: 'Format',\n            valueFieldSettings: 'Value field settings',\n            baseField: 'Base field',\n            baseItem: 'Base item',\n            summarizeValuesBy: 'Summarize values by',\n            sourceName: 'Field name :',\n            sourceCaption: 'Field caption',\n            example: 'e.g:',\n            editorDataLimitMsg: ' more items. Search to refine further.',\n            details: 'Details',\n            manageRecords: 'Manage Records',\n            Years: 'Years',\n            Quarters: 'Quarters',\n            Months: 'Months',\n            Days: 'Days',\n            Hours: 'Hours',\n            Minutes: 'Minutes',\n            Seconds: 'Seconds',\n            save: 'Save a report',\n            new: 'Create a new report',\n            load: 'Load',\n            saveAs: 'Save as current report',\n            rename: 'Rename a current report',\n            deleteReport: 'Delete a current report',\n            export: 'Export',\n            subTotals: 'Sub totals',\n            grandTotals: 'Grand totals',\n            reportName: 'Report Name :',\n            pdf: 'PDF',\n            excel: 'Excel',\n            csv: 'CSV',\n            png: 'PNG',\n            jpeg: 'JPEG',\n            svg: 'SVG',\n            mdxQuery: 'MDX Query',\n            showSubTotals: 'Show sub totals',\n            doNotShowSubTotals: 'Do not show sub totals',\n            showSubTotalsRowsOnly: 'Show sub totals rows only',\n            showSubTotalsColumnsOnly: 'Show sub totals columns only',\n            showGrandTotals: 'Show grand totals',\n            doNotShowGrandTotals: 'Do not show grand totals',\n            showGrandTotalsRowsOnly: 'Show grand totals rows only',\n            showGrandTotalsColumnsOnly: 'Show grand totals columns only',\n            fieldList: 'Show fieldlist',\n            grid: 'Show table',\n            toolbarFormatting: 'Conditional formatting',\n            chart: 'Chart',\n            reportMsg: 'Please enter vaild report name!!!',\n            reportList: 'Report list',\n            removeConfirm: 'Are you sure you want to delete this report?',\n            emptyReport: 'No reports found!!',\n            bar: 'Bar',\n            pie: 'Pie',\n            funnel: 'Funnel',\n            doughnut: 'Doughnut',\n            pyramid: 'Pyramid',\n            stackingcolumn: 'Stacked Column',\n            stackingarea: 'Stacked Area',\n            stackingbar: 'Stacked Bar',\n            stepline: 'Step Line',\n            steparea: 'Step Area',\n            splinearea: 'Spline Area',\n            spline: 'Spline',\n            stackingcolumn100: '100% Stacked Column',\n            stackingbar100: '100% Stacked Bar',\n            stackingarea100: '100% Stacked Area',\n            bubble: 'Bubble',\n            pareto: 'Pareto',\n            radar: 'Radar',\n            line: 'Line',\n            area: 'Area',\n            scatter: 'Scatter',\n            polar: 'Polar',\n            of: 'of',\n            emptyFormat: 'No format found!!!',\n            emptyInput: 'Enter a value',\n            newReportConfirm: 'Do you want to save the changes to this report?',\n            emptyReportName: 'Enter a report name',\n            qtr: 'Qtr',\n            null: 'null',\n            undefined: 'undefined',\n            groupOutOfRange: 'Out of Range',\n            fieldDropErrorAction: 'The field you are moving cannot be placed in that area of the report',\n            aggregate: 'Aggregate',\n            drillThrough: 'Drill Through',\n            ascending: 'Ascending',\n            descending: 'Descending',\n            number: 'Number',\n            currency: 'Currency',\n            percentage: 'Percentage',\n            formatType: 'Format Type',\n            customText: 'Currency Symbol',\n            symbolPosition: 'Symbol Position',\n            left: 'Left',\n            right: 'Right',\n            grouping: 'Grouping',\n            true: 'True',\n            false: 'False',\n            decimalPlaces: 'Decimal Places',\n            numberFormat: 'Number Formatting',\n            memberType: 'Field Type',\n            formatString: 'Format',\n            expressionField: 'Expression',\n            customFormat: 'Enter custom format string',\n            numberFormatString: 'Example: C, P, 0000 %, ###0.##0#, etc.',\n            selectedHierarchy: 'Parent Hierarchy',\n            olapDropText: 'Example: [Measures].[Order Quantity] + ([Measures].[Order Quantity] * 0.10)',\n            Percent: 'Percent',\n            Currency: 'Currency',\n            Custom: 'Custom',\n            Measure: 'Measure',\n            Dimension: 'Dimension',\n            Standard: 'Standard',\n            blank: '(Blank)',\n            fieldTooltip: 'Drag and drop fields to create an expression. ' +\n                'And, if you want to edit the existing calculated fields! ' +\n                'You can achieve it by simply selecting the field under \"Calculated Members\".',\n            fieldTitle: 'Field Name',\n            QuarterYear: 'Quarter Year',\n            drillError: 'Cannot show the raw items of calculated fields.',\n            caption: 'Field Caption',\n            copy: 'Copy',\n            defaultReport: 'Sample Report',\n            customFormatString: 'Custom Format',\n            invalidFormat: 'Invalid Format.',\n            group: 'Group',\n            unGroup: 'Ungroup',\n            invalidSelection: 'Cannot group that selection.',\n            groupName: 'Enter the caption to display in header',\n            captionName: 'Enter the caption for group field',\n            selectedItems: 'Selected items',\n            groupFieldCaption: 'Field caption',\n            groupTitle: 'Group name',\n            startAt: 'Starting at',\n            endAt: 'Ending at',\n            groupBy: 'Interval by',\n            selectGroup: 'Select groups',\n            multipleAxes: 'Multiple Axes',\n            showLegend: 'Show Legend',\n            exit: 'Exit',\n            chartTypeSettings: 'Chart Type Settings',\n            ChartType: 'Chart Type',\n            yes: 'Yes',\n            no: 'No',\n            numberFormatMenu: 'Number Formatting...',\n            conditionalFormatingMenu: 'Conditional Formatting...',\n            removeCalculatedField: 'Are you sure you want to delete this calculated field?',\n            replaceConfirmBefore: 'A report named ',\n            replaceConfirmAfter: ' already exists. Do you want to replace it?',\n            invalidJSON: 'Invalid JSON data',\n            invalidCSV: 'Invalid CSV data'\n        };\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n        this.renderContextMenu();\n        this.isDragging = false;\n        this.addInternalEvents();\n        //setCurrencyCode(this.currencyCode);\n    };\n    PivotView.prototype.onBeforeTooltipOpen = function (args) {\n        args.element.classList.add('e-pivottooltipwrap');\n    };\n    PivotView.prototype.renderToolTip = function () {\n        if (this.showTooltip) {\n            if (this.tooltipTemplate) {\n                this.tooltip = new Tooltip({\n                    target: 'td.e-valuescontent',\n                    cssClass: 'e-pivottooltiptemplate',\n                    showTipPointer: false,\n                    position: 'BottomRight',\n                    mouseTrail: true,\n                    enableRtl: this.enableRtl,\n                    beforeRender: this.setToolTip.bind(this),\n                    beforeOpen: this.onBeforeTooltipOpen,\n                });\n            }\n            else {\n                this.tooltip = new Tooltip({\n                    target: 'td.e-valuescontent',\n                    showTipPointer: false,\n                    position: 'BottomRight',\n                    mouseTrail: true,\n                    enableRtl: this.enableRtl,\n                    beforeRender: this.setToolTip.bind(this),\n                    beforeOpen: this.onBeforeTooltipOpen\n                });\n            }\n            this.tooltip.isStringTemplate = true;\n            this.tooltip.appendTo(this.element);\n        }\n        else if (this.tooltip) {\n            this.tooltip.destroy();\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.renderContextMenu = function () {\n        if (this.gridSettings.contextMenuItems || (this.allowGrouping && this.dataType === 'pivot')) {\n            var conmenuItems = [];\n            var groupItems = [];\n            var customItems = [];\n            var exportItems = [];\n            var aggItems = [];\n            var expItems = [];\n            var aggregateItems = [];\n            if (this.gridSettings.contextMenuItems) {\n                for (var _i = 0, _a = this.gridSettings.contextMenuItems; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    if (typeof item === 'string' && this.getDefaultItems().indexOf(item) !== -1) {\n                        if (item.toString().toLowerCase().indexOf('aggregate') !== -1 && this.dataType === 'pivot') {\n                            aggregateItems = [\n                                { text: this.localeObj.getConstant('Sum') }\n                            ];\n                            var aggregateGroup = this.buildDefaultItems('Aggregate');\n                            aggregateGroup.items = aggregateItems;\n                            aggItems.push(aggregateGroup);\n                        }\n                        else if (item.toString().toLowerCase().indexOf('export') !== -1) {\n                            exportItems.push(this.buildDefaultItems(item));\n                        }\n                        else {\n                            conmenuItems.push(this.buildDefaultItems(item));\n                        }\n                    }\n                    else if (typeof item !== 'string') {\n                        customItems.push(item);\n                    }\n                }\n            }\n            if (this.allowGrouping && this.dataType === 'pivot') {\n                groupItems.push(this.buildDefaultItems('Group'));\n                groupItems.push(this.buildDefaultItems('Ungroup'));\n            }\n            if (exportItems.length > 0) {\n                var exportGroupItems = this.buildDefaultItems('export');\n                exportGroupItems.items = exportItems;\n                expItems.push(exportGroupItems);\n            }\n            this.gridSettings.contextMenuItems = [];\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, aggItems);\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, conmenuItems);\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, groupItems);\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, expItems);\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, customItems);\n        }\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.getAllSummaryType = function () {\n        return ['Sum', 'Count', 'DistinctCount', 'Product', 'Min', 'Max', 'Avg', 'Index',\n            'PopulationVar', 'SampleVar', 'PopulationStDev', 'SampleStDev', 'RunningTotals', 'PercentageOfGrandTotal',\n            'PercentageOfColumnTotal', 'PercentageOfRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentRowTotal',\n            'DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'];\n    };\n    PivotView.prototype.getDefaultItems = function () {\n        return ['Drillthrough', 'Expand',\n            'Collapse', 'Pdf Export', 'Excel Export', 'Csv Export', 'Sort Ascending', 'Sort Descending',\n            'Aggregate', 'CalculatedField'];\n    };\n    PivotView.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'Aggregate':\n                menuItem = {\n                    text: this.localeObj.getConstant('aggregate'), target: 'th.e-valuesheader,td.e-valuescontent,.e-stot.e-rowsheader',\n                    id: this.element.id + '_aggregate'\n                };\n                break;\n            case 'CalculatedField':\n                menuItem = {\n                    text: this.localeObj.getConstant('CalculatedField'), target: 'td.e-valuescontent',\n                    id: this.element.id + '_CalculatedField'\n                };\n                break;\n            case 'Drillthrough':\n                menuItem = {\n                    text: this.localeObj.getConstant('drillThrough'), target: 'td.e-valuescontent',\n                    id: this.element.id + '_drillthrough_menu', iconCss: cls.PIVOTVIEW_GRID + ' ' + cls.ICON\n                };\n                break;\n            case 'export':\n                menuItem = {\n                    text: this.localeObj.getConstant('export'), target: 'td.e-valuescontent',\n                    id: this.element.id + '_exporting', iconCss: cls.PIVOTVIEW_EXPORT + ' ' + cls.ICON\n                };\n                break;\n            case 'Pdf Export':\n                menuItem = {\n                    text: this.localeObj.getConstant('pdf'), id: this.element.id + '_pdf',\n                    iconCss: cls.GRID_PDF_EXPORT + ' ' + cls.ICON\n                };\n                break;\n            case 'Excel Export':\n                menuItem = {\n                    text: this.localeObj.getConstant('excel'), id: this.element.id + '_excel',\n                    iconCss: cls.GRID_EXCEL_EXPORT + ' ' + cls.ICON\n                };\n                break;\n            case 'Csv Export':\n                menuItem = {\n                    text: this.localeObj.getConstant('csv'), id: this.element.id + '_csv',\n                    iconCss: cls.GRID_CSV_EXPORT + ' ' + cls.ICON,\n                };\n                break;\n            case 'Expand':\n                menuItem = {\n                    text: this.localeObj.getConstant('expand'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_expand', iconCss: cls.PIVOTVIEW_EXPAND + ' ' + cls.ICON\n                };\n                break;\n            case 'Collapse':\n                menuItem = {\n                    text: this.localeObj.getConstant('collapse'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_collapse', iconCss: cls.PIVOTVIEW_COLLAPSE + ' ' + cls.ICON\n                };\n                break;\n            case 'Sort Ascending':\n                menuItem = {\n                    text: this.localeObj.getConstant('ascending'), target: 'th.e-valuesheader,.e-stot',\n                    id: this.element.id + '_sortasc', iconCss: cls.ICON_ASC + ' ' + cls.ICON\n                };\n                break;\n            case 'Sort Descending':\n                menuItem = {\n                    text: this.localeObj.getConstant('descending'), target: 'th.e-valuesheader,.e-stot',\n                    id: this.element.id + '_sortdesc', iconCss: cls.ICON_DESC + ' ' + cls.ICON\n                };\n                break;\n            case 'Group':\n                menuItem = {\n                    text: this.localeObj.getConstant('group'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_custom_group', iconCss: cls.PIVOTVIEW_GROUP + ' ' + cls.ICON\n                };\n                break;\n            case 'Ungroup':\n                menuItem = {\n                    text: this.localeObj.getConstant('unGroup'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_custom_ungroup', iconCss: cls.PIVOTVIEW_UN_GROUP + ' ' + cls.ICON\n                };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: menuItem.text, id: menuItem.id,\n            target: menuItem.target, iconCss: menuItem.iconCss\n        };\n        return this.defaultItems[item];\n    };\n    PivotView.prototype.initProperties = function () {\n        this.pivotRefresh = Component.prototype.refresh;\n        this.isScrolling = false;\n        this.allowServerDataBinding = false;\n        this.setProperties({ pivotValues: [] }, true);\n        /* tslint:disable-next-line:no-any */\n        delete this.bulkChanges.pivotValues;\n        this.allowServerDataBinding = true;\n        this.scrollPosObject = {\n            vertical: 0, horizontal: 0, verticalSection: 0,\n            horizontalSection: 0, top: 0, left: 0, scrollDirection: { direction: '', position: 0 }\n        };\n        this.queryCellInfo = this.gridSettings.queryCellInfo ? this.gridSettings.queryCellInfo.bind(this) : undefined;\n        this.headerCellInfo = this.gridSettings.headerCellInfo ? this.gridSettings.headerCellInfo.bind(this) : undefined;\n        this.resizing = this.gridSettings.resizing ? this.gridSettings.resizing.bind(this) : undefined;\n        this.resizeStop = this.gridSettings.resizeStop ? this.gridSettings.resizeStop.bind(this) : undefined;\n        this.pdfHeaderQueryCellInfo = this.gridSettings.pdfHeaderQueryCellInfo ?\n            this.gridSettings.pdfHeaderQueryCellInfo.bind(this) : undefined;\n        this.pdfQueryCellInfo = this.gridSettings.pdfQueryCellInfo ? this.gridSettings.pdfQueryCellInfo.bind(this) : undefined;\n        this.excelHeaderQueryCellInfo = this.gridSettings.excelHeaderQueryCellInfo ?\n            this.gridSettings.excelHeaderQueryCellInfo.bind(this) : undefined;\n        this.excelQueryCellInfo = this.gridSettings.excelQueryCellInfo ?\n            this.gridSettings.excelQueryCellInfo.bind(this) : undefined;\n        this.columnDragStart = this.gridSettings.columnDragStart ? this.gridSettings.columnDragStart.bind(this) : undefined;\n        this.columnDrag = this.gridSettings.columnDrag ? this.gridSettings.columnDrag.bind(this) : undefined;\n        this.columnDrop = this.gridSettings.columnDrop ? this.gridSettings.columnDrop.bind(this) : undefined;\n        this.beforeColumnsRender = this.gridSettings.columnRender ? this.gridSettings.columnRender : undefined;\n        this.selected = this.gridSettings.cellSelected ? this.gridSettings.cellSelected : undefined;\n        this.cellDeselected = this.gridSettings.cellDeselected ? this.gridSettings.cellDeselected : undefined;\n        this.rowSelected = this.gridSettings.rowSelected ? this.gridSettings.rowSelected : undefined;\n        this.rowDeselected = this.gridSettings.rowDeselected ? this.gridSettings.rowDeselected : undefined;\n        this.chartTooltipRender = this.chartSettings.tooltipRender ? this.chartSettings.tooltipRender : undefined;\n        this.chartLoaded = this.chartSettings.loaded ? this.chartSettings.loaded : undefined;\n        this.chartLoad = this.chartSettings.load ? this.chartSettings.load : undefined;\n        this.chartResized = this.chartSettings.resized ? this.chartSettings.resized : undefined;\n        this.chartAxisLabelRender = this.chartSettings.axisLabelRender ? this.chartSettings.axisLabelRender : undefined;\n        this.multiLevelLabelClick = this.chartSettings.multiLevelLabelClick ? this.chartSettings.multiLevelLabelClick : undefined;\n        this.chartPointClick = this.chartSettings.pointClick ? this.chartSettings.pointClick : undefined;\n        this.contextMenuClick = this.gridSettings.contextMenuClick ? this.gridSettings.contextMenuClick : undefined;\n        this.contextMenuOpen = this.gridSettings.contextMenuOpen ? this.gridSettings.contextMenuOpen : undefined;\n        this.beforePdfExport = this.gridSettings.beforePdfExport ? this.gridSettings.beforePdfExport.bind(this) : undefined;\n        this.beforeExcelExport = this.gridSettings.beforeExcelExport ? this.gridSettings.beforeExcelExport.bind(this) : undefined;\n        if (this.gridSettings.rowHeight === null) {\n            if (this.isTouchMode) {\n                this.setProperties({ gridSettings: { rowHeight: 36 } }, true);\n            }\n            else {\n                this.setProperties({ gridSettings: { rowHeight: this.isAdaptive ? 36 : 30 } }, true);\n            }\n        }\n        this.element.style.height = '100%';\n        if (this.enableVirtualization) {\n            this.updatePageSettings(true);\n            if (this.allowExcelExport) {\n                PivotView_1.Inject(ExcelExport);\n            }\n            if (this.allowPdfExport) {\n                PivotView_1.Inject(PDFExport);\n            }\n            if (this.editSettings.allowEditing) {\n                PivotView_1.Inject(DrillThrough);\n            }\n        }\n        this.isCellBoxMultiSelection = this.gridSettings.allowSelection &&\n            this.gridSettings.selectionSettings.cellSelectionMode === 'Box' &&\n            this.gridSettings.selectionSettings.mode === 'Cell' && this.gridSettings.selectionSettings.type === 'Multiple';\n        if (this.allowGrouping && !this.isCellBoxMultiSelection) {\n            this.isCellBoxMultiSelection = true;\n            /* tslint:disable-next-line:max-line-length */\n            this.setProperties({ gridSettings: { allowSelection: true, selectionSettings: { cellSelectionMode: 'Box', mode: 'Cell', type: 'Multiple' } } }, true);\n        }\n        if (this.displayOption.view !== 'Table') {\n            this.chartModule = new PivotChart();\n        }\n        this.currentView = this.currentView ? this.currentView : (this.displayOption.view === 'Both' ?\n            this.displayOption.primary : this.displayOption.view);\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.updatePageSettings = function (isInit) {\n        if (this.enableVirtualization) {\n            var colValues = 1;\n            var rowValues = 1;\n            if (this.dataSourceSettings.values.length > 1 && this.dataType === 'pivot') {\n                if (this.dataSourceSettings.valueAxis === 'row') {\n                    rowValues = this.dataSourceSettings.values.length;\n                }\n                else {\n                    colValues = this.dataSourceSettings.values.length;\n                }\n            }\n            var heightAsNumber = this.getHeightAsNumber();\n            if (isNaN(heightAsNumber)) {\n                heightAsNumber = this.element.offsetHeight;\n            }\n            this.pageSettings = {\n                columnCurrentPage: isInit ? 1 : this.pageSettings.columnCurrentPage,\n                rowCurrentPage: isInit ? 1 : this.pageSettings.rowCurrentPage,\n                columnSize: Math.ceil((Math.floor((this.getWidthAsNumber()) /\n                    this.gridSettings.columnWidth) - 1) / colValues),\n                rowSize: Math.ceil(Math.floor((heightAsNumber) / this.gridSettings.rowHeight) / rowValues),\n                allowDataCompression: this.allowDataCompression\n            };\n        }\n    };\n    /* tslint:disable */\n    /**\n     * Initialize the control rendering\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.render = function () {\n        this.loadData();\n    };\n    PivotView.prototype.loadData = function () {\n        if (this.dataType === 'pivot' && this.dataSourceSettings.url && this.dataSourceSettings.url !== '') {\n            if (this.dataSourceSettings.mode === 'Server') {\n                this.guid = PivotUtil.generateUUID();\n                this.initialLoad();\n                if (this.displayOption.view !== 'Chart') {\n                    this.renderEmptyGrid();\n                }\n                this.showWaitingPopup();\n                this.getEngine('initialRender', null, null, null, null, null, null);\n            }\n            else {\n                this.request.open(\"GET\", this.dataSourceSettings.url, true);\n                this.request.withCredentials = false;\n                this.request.onreadystatechange = this.onReadyStateChange.bind(this);\n                this.request.setRequestHeader(\"Content-type\", \"text/plain\");\n                this.request.send(null);\n            }\n        }\n        else {\n            this.initialLoad();\n        }\n    };\n    /* tslint:enable */\n    PivotView.prototype.onSuccess = function () {\n        if (this.request.readyState === XMLHttpRequest.DONE) {\n            try {\n                var engine = JSON.parse(this.request.responseText);\n                if (this.currentAction === 'fetchFieldMembers') {\n                    var currentMembers = JSON.parse(engine.members);\n                    var dateMembers = [];\n                    var formattedMembers = {};\n                    var members = {};\n                    for (var i = 0; i < currentMembers.length; i++) {\n                        dateMembers.push({ formattedText: currentMembers[i].FormattedText, actualText: currentMembers[i].ActualText });\n                        formattedMembers[currentMembers[i].FormattedText] = {};\n                        members[currentMembers[i].ActualText] = {};\n                    }\n                    this.engineModule.fieldList[engine.memberName].dateMember = dateMembers;\n                    this.engineModule.fieldList[engine.memberName].formattedMembers = formattedMembers;\n                    this.engineModule.fieldList[engine.memberName].members = members;\n                    this.pivotButtonModule.updateFilterEvents();\n                }\n                else if (this.currentAction === 'fetchRawData') {\n                    var valueCaption = this.engineModule.fieldList[this.drillThroughValue.actualText.toString()] ?\n                        this.engineModule.fieldList[this.drillThroughValue.actualText.toString()].caption : this.drillThroughValue.actualText.toString();\n                    var aggType = this.engineModule.fieldList[this.drillThroughValue.actualText] ? this.engineModule.fieldList[this.drillThroughValue.actualText].aggregateType : '';\n                    var rawData = JSON.parse(engine.rawData);\n                    var parsedObj = JSON.parse(engine.indexObject);\n                    var indexObject = {};\n                    for (var len = 0; len < parsedObj.length; len++) {\n                        indexObject[parsedObj[len].Key] = parsedObj[len].Value;\n                    }\n                    this.drillThroughValue.indexObject = indexObject;\n                    this.drillThroughModule.triggerDialog(valueCaption, aggType, rawData, this.drillThroughValue, this.drillThroughElement);\n                }\n                else {\n                    this.engineModule.fieldList = PivotUtil.formatFieldList(JSON.parse(engine.fieldList));\n                    this.engineModule.fields = JSON.parse(engine.fields);\n                    this.engineModule.rowCount = JSON.parse(engine.pivotCount).RowCount;\n                    this.engineModule.columnCount = JSON.parse(engine.pivotCount).ColumnCount;\n                    this.engineModule.rowStartPos = JSON.parse(engine.pivotCount).RowStartPosition;\n                    this.engineModule.colStartPos = JSON.parse(engine.pivotCount).ColumnStartPosition;\n                    this.engineModule.rowFirstLvl = JSON.parse(engine.pivotCount).RowFirstLevel;\n                    this.engineModule.colFirstLvl = JSON.parse(engine.pivotCount).ColumnFirstLevel;\n                    var rowPos = void 0;\n                    var pivotValues = PivotUtil.formatPivotValues(JSON.parse(engine.pivotValue));\n                    for (var rCnt = 0; rCnt < pivotValues.length; rCnt++) {\n                        if (pivotValues[rCnt] && pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row') {\n                            rowPos = rCnt;\n                            break;\n                        }\n                    }\n                    this.engineModule.headerContent = PivotUtil.frameContent(pivotValues, 'header', rowPos, this);\n                    this.engineModule.pageSettings = this.pageSettings;\n                    var valueSort = JSON.parse(engine.valueSortSettings);\n                    this.engineModule.valueSortSettings = {\n                        headerText: valueSort.HeaderText,\n                        headerDelimiter: valueSort.HeaderDelimiter,\n                        sortOrder: valueSort.SortOrder,\n                        columnIndex: valueSort.ColumnIndex\n                    };\n                    this.engineModule.pivotValues = pivotValues;\n                }\n            }\n            catch (error) {\n                this.engineModule.pivotValues = [];\n            }\n            if (this.currentAction !== 'fetchFieldMembers' && this.currentAction !== 'fetchRawData') {\n                this.initEngine();\n                if (this.calculatedFieldModule && this.calculatedFieldModule.isRequireUpdate) {\n                    this.calculatedFieldModule.endDialog();\n                    this.calculatedFieldModule.isRequireUpdate = false;\n                }\n                if (this.pivotFieldListModule && this.pivotFieldListModule.calculatedFieldModule && this.pivotFieldListModule.calculatedFieldModule.isRequireUpdate) {\n                    this.pivotFieldListModule.calculatedFieldModule.endDialog();\n                    this.pivotFieldListModule.calculatedFieldModule.isRequireUpdate = false;\n                }\n            }\n            if (this.currentAction === 'onScroll') {\n                if (this.scrollDirection === 'vertical') {\n                    var rowValues = this.dataSourceSettings.valueAxis === 'row' ? this.dataSourceSettings.values.length : 1;\n                    var exactSize = (this.pageSettings.rowSize * rowValues * this.gridSettings.rowHeight);\n                    var exactPage = Math.ceil(this.engineModule.rowStartPos / (this.pageSettings.rowSize * rowValues));\n                    var pos = exactSize * exactPage - (this.engineModule.rowFirstLvl * rowValues * this.gridSettings.rowHeight);\n                    this.scrollPosObject.verticalSection = pos;\n                }\n                else if (this.scrollDirection === 'horizondal') {\n                    var colValues = this.dataSourceSettings.valueAxis === 'column' ? this.dataSourceSettings.values.length : 1;\n                    var exactSize = (this.pageSettings.columnSize * colValues * this.gridSettings.columnWidth);\n                    var exactPage = Math.ceil(this.engineModule.colStartPos / (this.pageSettings.columnSize * colValues));\n                    var pos = exactSize * exactPage - (this.engineModule.colFirstLvl * colValues * this.gridSettings.columnWidth);\n                    this.scrollPosObject.horizontalSection = pos;\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.getEngine = function (action, drillItem, sortItem, aggField, cField, filterItem, memberName, rawDataArgs, editArgs) {\n        this.currentAction = action;\n        var customProperties = {\n            pageSettings: this.pageSettings,\n            enableValueSorting: this.enableValueSorting,\n            enableDrillThrough: (this.allowDrillThrough || this.editSettings.allowEditing),\n            locale: JSON.stringify(PivotUtil.getLocalizedObject(this))\n        };\n        var params = {\n            dataSourceSettings: JSON.parse(this.getPersistData()).dataSourceSettings,\n            action: action,\n            customProperties: customProperties,\n            drillItem: drillItem,\n            sortItem: sortItem,\n            aggregatedItem: aggField,\n            calculatedItem: cField,\n            filterItem: filterItem,\n            memberName: memberName,\n            fetchRawDataArgs: rawDataArgs,\n            editArgs: editArgs,\n            hash: this.guid\n        };\n        this.request.open(\"POST\", this.dataSourceSettings.url, true);\n        this.request.withCredentials = false;\n        this.request.onreadystatechange = this.onSuccess.bind(this);\n        this.request.setRequestHeader(\"Content-type\", \"application/json\");\n        this.request.send(JSON.stringify(params));\n    };\n    PivotView.prototype.onReadyStateChange = function () {\n        if (this.request.readyState === XMLHttpRequest.DONE) {\n            var dataSource = [];\n            if (this.dataSourceSettings.type === 'CSV') {\n                var jsonObject = this.request.responseText.split(/\\r?\\n|\\r/);\n                for (var i = 0; i < jsonObject.length; i++) {\n                    if (!isNullOrUndefined(jsonObject[i]) && jsonObject[i] !== '') {\n                        dataSource.push(jsonObject[i].split(','));\n                    }\n                }\n            }\n            else {\n                try {\n                    dataSource = JSON.parse(this.request.responseText);\n                }\n                catch (error) {\n                    dataSource = [];\n                }\n            }\n            if (isBlazor() && dataSource.length > 0) {\n                this.remoteData = dataSource;\n            }\n            else if (dataSource.length > 0) {\n                this.setProperties({ dataSourceSettings: { dataSource: dataSource } }, true);\n            }\n            this.initialLoad();\n        }\n    };\n    PivotView.prototype.initialLoad = function () {\n        var _this_1 = this;\n        this.cellTemplateFn = this.templateParser(this.cellTemplate);\n        this.tooltipTemplateFn = this.templateParser(this.tooltipTemplate);\n        if (this.spinnerTemplate) {\n            createSpinner({ target: this.element, template: this.spinnerTemplate }, this.createElement);\n        }\n        else {\n            createSpinner({ target: this.element }, this.createElement);\n        }\n        var loadArgs = {\n            /* tslint:disable-next-line:max-line-length */\n            dataSourceSettings: isBlazor() ? PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings) : this.dataSourceSettings,\n            pivotview: isBlazor() ? undefined : this,\n            fieldsType: {}\n        };\n        this.trigger(events.load, loadArgs, function (observedArgs) {\n            if (isBlazor()) {\n                observedArgs.dataSourceSettings.dataSource = _this_1.dataSourceSettings.dataSource;\n                PivotUtil.updateDataSourceSettings(_this_1, observedArgs.dataSourceSettings);\n            }\n            else {\n                _this_1.dataSourceSettings = observedArgs.dataSourceSettings;\n            }\n            _this_1.fieldsType = observedArgs.fieldsType;\n            _this_1.updateClass();\n            _this_1.notify(events.initSubComponent, {});\n            if (_this_1.dataSourceSettings.mode !== 'Server') {\n                _this_1.notify(events.initialLoad, {});\n            }\n            if (_this_1.isAdaptive) {\n                _this_1.contextMenuModule.render();\n            }\n            _this_1.notify(events.initToolbar, {});\n        });\n        if (isBlazor()) {\n            this.renderComplete();\n        }\n    };\n    /**\n     * Register the internal events.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.addInternalEvents = function () {\n        this.on(events.initialLoad, this.generateData, this);\n        this.on(events.dataReady, this.renderPivotGrid, this);\n        this.on(events.contentReady, this.onContentReady, this);\n    };\n    /**\n     * De-Register the internal events.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.removeInternalEvents = function () {\n        this.off(events.initialLoad, this.generateData);\n        this.off(events.dataReady, this.renderPivotGrid);\n        this.off(events.contentReady, this.onContentReady);\n    };\n    /**\n     * Get the Pivot widget properties to be maintained in the persisted state.\n     * @returns {string}\n     */\n    PivotView.prototype.getPersistData = function () {\n        var keyEntity = ['dataSourceSettings', 'pivotValues', 'gridSettings', 'chartSettings', 'displayOption'];\n        /* tslint:disable */\n        this.chartSettings['tooltipRender'] = undefined;\n        /* tslint:enable */\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Loads pivot Layout\n     * @param {string} persistData - Specifies the persist data to be loaded to pivot.\n     * @returns {void}\n     */\n    PivotView.prototype.loadPersistData = function (persistData) {\n        var pivotData;\n        /* tslint:disable */\n        if (isBlazor()) {\n            pivotData = typeof persistData === \"string\" ? JSON.parse(persistData) : persistData;\n            pivotData.dataSourceSettings.dataSource = this.dataSourceSettings.dataSource;\n        }\n        else {\n            pivotData = JSON.parse(persistData);\n        }\n        this.allowServerDataBinding = false;\n        this.setProperties({\n            gridSettings: pivotData.gridSettings,\n            pivotValues: pivotData.pivotValues,\n            chartSettings: pivotData.chartSettings,\n            displayOption: pivotData.displayOption\n        }, true);\n        delete this.bulkChanges.pivotValues;\n        this.allowServerDataBinding = true;\n        /* tslint:enable */\n        this.dataSourceSettings = pivotData.dataSourceSettings;\n    };\n    PivotView.prototype.mergePersistPivotData = function () {\n        var blazdataSource;\n        if (isBlazor()) {\n            blazdataSource = this.dataSourceSettings.dataSource;\n        }\n        var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n        if (!(isNullOrUndefined(data) || (data === ''))) {\n            this.setProperties(JSON.parse(data), true);\n        }\n        if (this.dataSourceSettings.dataSource instanceof Object && isBlazor()) {\n            this.setProperties({ dataSourceSettings: { dataSource: blazdataSource } }, true);\n        }\n    };\n    /**\n     * Method to open conditional formatting dialog\n     */\n    PivotView.prototype.showConditionalFormattingDialog = function () {\n        if (this.conditionalFormattingModule) {\n            this.conditionalFormattingModule.showConditionalFormattingDialog();\n        }\n    };\n    /**\n     * Method to open calculated field dialog\n     */\n    PivotView.prototype.createCalculatedFieldDialog = function () {\n        if (this.calculatedFieldModule) {\n            this.calculatedFieldModule.createCalculatedFieldDialog();\n        }\n    };\n    /**\n     * It returns the Module name.\n     * @returns string\n     * @hidden\n     */\n    PivotView.prototype.getModuleName = function () {\n        return 'pivotview';\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     * @hidden\n     */\n    PivotView.prototype.copy = function (withHeader) {\n        this.grid.copy(withHeader);\n    };\n    /**\n     * By default, prints all the pages of the Grid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-pivotgrid.html#printmode-string).\n     * @returns {void}\n     * @hidden\n     */\n    // public print(): void {\n    //     this.grid.print();\n    // }\n    /* tslint:disable:max-func-body-length */\n    /**\n     * Called internally if any of the property value changed.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'dataSourceSettings':\n                case 'hyperlinkSettings':\n                case 'allowDrillThrough':\n                case 'editSettings':\n                case 'allowDataCompression':\n                    if (newProp.dataSourceSettings && Object.keys(newProp.dataSourceSettings).length === 1\n                        && newProp.dataSourceSettings.groupSettings && this.dataType === 'pivot') {\n                        this.updateGroupingReport(newProp.dataSourceSettings.groupSettings, 'Date');\n                    }\n                    if (newProp.dataSourceSettings && Object.keys(newProp.dataSourceSettings).length === 1\n                        && Object.keys(newProp.dataSourceSettings)[0] === 'dataSource') {\n                        if (newProp.dataSourceSettings.dataSource.length === 0) {\n                            this.savedDataSourceSettings = PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings);\n                            this.setProperties({ dataSourceSettings: { rows: [] } }, true);\n                            this.setProperties({ dataSourceSettings: { columns: [] } }, true);\n                            this.setProperties({ dataSourceSettings: { values: [] } }, true);\n                            this.pivotValues = [];\n                        }\n                        this.engineModule.fieldList = null;\n                        this.showWaitingPopup();\n                        clearTimeout(this.timeOutObj);\n                        this.timeOutObj = setTimeout(this.refreshData.bind(this), 100);\n                    }\n                    else {\n                        if (PivotUtil.isButtonIconRefesh(prop, oldProp, newProp)) {\n                            if (this.showGroupingBar && this.groupingBarModule) {\n                                this.axisFieldModule.render();\n                            }\n                            if (this.showFieldList && this.pivotFieldListModule) {\n                                var rows = PivotUtil.cloneFieldSettings(this.dataSourceSettings.rows);\n                                var columns = PivotUtil.cloneFieldSettings(this.dataSourceSettings.columns);\n                                var values = PivotUtil.cloneFieldSettings(this.dataSourceSettings.values);\n                                var filters = PivotUtil.cloneFieldSettings(this.dataSourceSettings.filters);\n                                /* tslint:disable-next-line:max-line-length */\n                                this.pivotFieldListModule.setProperties({ dataSourceSettings: { rows: rows, columns: columns, values: values, filters: filters } }, true);\n                                this.pivotFieldListModule.axisFieldModule.render();\n                                if (this.pivotFieldListModule.treeViewModule.fieldTable && !this.isAdaptive) {\n                                    this.pivotFieldListModule.notify(events.treeViewUpdate, {});\n                                }\n                            }\n                        }\n                        else {\n                            this.remoteData = [];\n                            if (this.dataType === 'pivot' && this.dataSourceSettings.url && this.dataSourceSettings.url !== '' &&\n                                ('type' in newProp.dataSourceSettings || 'url' in newProp.dataSourceSettings)) {\n                                this.engineModule.fieldList = null;\n                                this.loadData();\n                            }\n                            else {\n                                if (newProp.dataSourceSettings && 'dataSource' in newProp.dataSourceSettings) {\n                                    this.engineModule.fieldList = null;\n                                }\n                                this.notify(events.initialLoad, {});\n                            }\n                        }\n                    }\n                    break;\n                case 'height':\n                case 'width':\n                    this.layoutRefresh();\n                    break;\n                case 'pivotValues':\n                case 'displayOption':\n                    if (!this.showToolbar && newProp.displayOption && Object.keys(newProp.displayOption).length === 1 &&\n                        newProp.displayOption.view) {\n                        this.currentView = (newProp.displayOption.view === 'Both' ?\n                            this.displayOption.primary : newProp.displayOption.view);\n                        if (this.showGroupingBar || this.showFieldList) {\n                            if (this.showFieldList && this.pivotFieldListModule) {\n                                this.pivotFieldListModule.destroy();\n                            }\n                            if (this.showGroupingBar && this.groupingBarModule) {\n                                this.groupingBarModule.destroy();\n                            }\n                            this.notify(events.initSubComponent, this);\n                        }\n                        if (!this.grid && newProp.displayOption.view !== 'Chart') {\n                            this.renderEmptyGrid();\n                            if (newProp.displayOption.view === 'Table') {\n                                if (this.chartModule) {\n                                    this.chartModule.destroy();\n                                    this.chart = undefined;\n                                    this.chartModule = undefined;\n                                }\n                            }\n                        }\n                        else if (!this.chartModule && this.displayOption.view !== 'Table') {\n                            this.chartModule = new PivotChart();\n                        }\n                    }\n                    else if (this.showToolbar && !isNullOrUndefined(newProp.displayOption) && newProp.displayOption.view) {\n                        this.currentView = (newProp.displayOption.view === 'Both' ?\n                            this.displayOption.primary : newProp.displayOption.view);\n                    }\n                    var engine = this.dataType === 'pivot' ? this.engineModule : this.olapEngineModule;\n                    if (!isNullOrUndefined(engine.fieldList) || !isNullOrUndefined(engine.pivotValues)) {\n                        this.notify(events.dataReady, {});\n                    }\n                    break;\n                case 'gridSettings':\n                    this.lastGridSettings = newProp.gridSettings;\n                    this.isCellBoxMultiSelection = this.gridSettings.allowSelection &&\n                        this.gridSettings.selectionSettings.cellSelectionMode === 'Box' &&\n                        this.gridSettings.selectionSettings.mode === 'Cell' && this.gridSettings.selectionSettings.type === 'Multiple';\n                    if (this.allowGrouping && this.groupingModule && !this.isCellBoxMultiSelection) {\n                        /* tslint:disable-next-line:max-line-length */\n                        this.setProperties({ gridSettings: { allowSelection: true, selectionSettings: { cellSelectionMode: 'Box', mode: 'Cell', type: 'Multiple' } } }, true);\n                        this.isCellBoxMultiSelection = true;\n                    }\n                    this.renderModule.updateGridSettings();\n                    break;\n                case 'chartSettings':\n                    if (this.showGroupingBar &&\n                        this.groupingBarModule &&\n                        (Object.keys(newProp.chartSettings).indexOf('enableMultiAxis') !== -1 ||\n                            (newProp.chartSettings.chartSeries && Object.keys(newProp.chartSettings.chartSeries).indexOf('type') !== -1))) {\n                        this.groupingBarModule.renderLayout();\n                    }\n                    if (isNullOrUndefined(this.chartModule) && this.displayOption.view !== 'Table') {\n                        this.chartModule = new PivotChart();\n                    }\n                    var engineModule = this.dataType === 'pivot' ? this.engineModule : this.olapEngineModule;\n                    if (!isNullOrUndefined(this.chartModule) && !isNullOrUndefined(engineModule.pivotValues)) {\n                        this.chartModule.loadChart(this, this.chartSettings);\n                    }\n                    if (!isNullOrUndefined(engineModule.pivotValues) && !isNullOrUndefined(engineModule.fieldList)) {\n                        this.notify(events.uiUpdate, this);\n                    }\n                    break;\n                case 'locale':\n                case 'currencyCode':\n                case 'enableRtl':\n                    if (this.tooltip) {\n                        this.tooltip.destroy();\n                    }\n                    /* tslint:disable-next-line:max-line-length */\n                    if (this.dataSourceSettings.groupSettings && this.dataSourceSettings.groupSettings.length > 0 && this.clonedDataSet && !isBlazor()) {\n                        var dataSet = PivotUtil.getClonedData(this.clonedDataSet);\n                        this.setProperties({ dataSourceSettings: { dataSource: dataSet } }, true);\n                    }\n                    if (isBlazor()) {\n                        this.refresh();\n                    }\n                    else {\n                        _super.prototype.refresh.call(this);\n                    }\n                    this.updateClass();\n                    break;\n                case 'enableValueSorting':\n                    this.enableValueSorting = newProp.enableValueSorting;\n                    this.updateDataSource();\n                    break;\n                case 'showGroupingBar':\n                    if (this.element.querySelector('.e-grouping-bar')) {\n                        this.element.querySelector('.e-grouping-bar').remove();\n                    }\n                    this.renderPivotGrid();\n                    break;\n                case 'groupingBarSettings':\n                    this.axisFieldModule.render();\n                    break;\n                case 'showTooltip':\n                    this.renderToolTip();\n                    break;\n                case 'toolbar':\n                    if (this.toolbarModule) {\n                        this.toolbarModule.refreshToolbar();\n                    }\n                    break;\n                case 'chartTypes':\n                    if (this.toolbarModule) {\n                        this.toolbarModule.createChartMenu();\n                    }\n                    break;\n                case 'aggregateTypes':\n                    if (this.showGroupingBar) {\n                        if (this.axisFieldModule) {\n                            this.axisFieldModule.render();\n                        }\n                    }\n                    if (this.showFieldList && this.pivotFieldListModule && this.pivotFieldListModule.axisFieldModule) {\n                        this.pivotFieldListModule.setProperties({ aggregateTypes: newProp.aggregateTypes }, true);\n                        this.pivotFieldListModule.axisFieldModule.render();\n                    }\n                    break;\n            }\n        }\n    };\n    /**\n     * Method to parse the template string.\n     */\n    PivotView.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Method to get the cell template.\n     */\n    PivotView.prototype.getCellTemplate = function () {\n        return this.cellTemplateFn;\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.appendHtml = function (node, innerHtml) {\n        var tempElement = document.createElement('div');\n        tempElement.innerHTML = innerHtml;\n        if (!isNullOrUndefined(tempElement.firstChild)) {\n            node.appendChild(tempElement.firstChild);\n        }\n        return node;\n    };\n    /**\n     * Render the UI section of PivotView.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.renderPivotGrid = function () {\n        this.clearTemplate();\n        if (this.currentView === 'Table') {\n            /* tslint:disable-next-line */\n            if (this.cellTemplate && isBlazor()) {\n                resetBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate');\n            }\n        }\n        if (this.chartModule) {\n            this.chartModule.engineModule = this.engineModule;\n            this.chartModule.loadChart(this, this.chartSettings);\n            if (this.enableRtl && this.chart) {\n                addClass([this.chart.element], cls.PIVOTCHART_LTR);\n            }\n        }\n        if (this.showFieldList || this.showGroupingBar || this.allowNumberFormatting || this.allowCalculatedField ||\n            this.toolbar || this.allowGrouping || this.gridSettings.contextMenuItems) {\n            this.notify(events.uiUpdate, this);\n            if (this.pivotFieldListModule && this.allowDeferLayoutUpdate) {\n                this.pivotFieldListModule.clonedDataSource = extend({}, this.dataSourceSettings, null, true);\n            }\n        }\n        if (this.enableVirtualization) {\n            this.virtualscrollModule = new VirtualScroll(this);\n        }\n        if (this.allowDrillThrough || this.editSettings.allowEditing) {\n            this.drillThroughModule = new DrillThrough(this);\n        }\n        if (this.displayOption.view !== 'Chart') {\n            if (this.hyperlinkSettings) {\n                this.isRowCellHyperlink = (this.hyperlinkSettings.showRowHeaderHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.isColumnCellHyperlink = (this.hyperlinkSettings.showColumnHeaderHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.isValueCellHyperlink = (this.hyperlinkSettings.showValueCellHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.isSummaryCellHyperlink = (this.hyperlinkSettings.showSummaryCellHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.applyHyperlinkSettings();\n            }\n            this.renderModule = new Render(this);\n            this.renderModule.render();\n        }\n        else if (this.grid) {\n            remove(this.grid.element);\n        }\n        if (this.allowConditionalFormatting) {\n            this.applyFormatting(this.pivotValues);\n        }\n        if (this.showToolbar) {\n            if (this.displayOption.view === 'Both' && this.chart && this.grid) {\n                if (this.showGroupingBar && this.groupingBarModule && this.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                    this.groupingBarModule.refreshUI();\n                }\n                if (this.toolbarModule && this.toolbarModule.toolbar) {\n                    this.toolbarModule.toolbar.width = this.getGridWidthAsNumber() - 2;\n                }\n                this.chart.element.style.width = formatUnit(this.getGridWidthAsNumber());\n                this.chart.width = formatUnit(this.getGridWidthAsNumber());\n                if (this.currentView === 'Table') {\n                    this.grid.element.style.display = '';\n                    this.chart.element.style.display = 'none';\n                    if (this.chartSettings.enableMultiAxis && this.chartSettings.enableScrollOnMultiAxis) {\n                        this.element.querySelector('.e-pivotchart').style.display = 'none';\n                    }\n                }\n                else {\n                    this.grid.element.style.display = 'none';\n                    this.chart.element.style.display = '';\n                    if (this.chartSettings.enableMultiAxis && this.chartSettings.enableScrollOnMultiAxis) {\n                        this.element.querySelector('.e-pivotchart').style.display = '';\n                    }\n                }\n            }\n        }\n        if (this.toolbarModule) {\n            if (this.showFieldList && this.element.querySelector('#' + this.element.id + '_PivotFieldList')) {\n                this.element.querySelector('#' + this.element.id + '_PivotFieldList').style.display = 'none';\n            }\n            if (this.toolbar && this.toolbar.indexOf('FieldList') !== -1 &&\n                this.showToolbar && this.element.querySelector('.e-toggle-field-list')) {\n                this.element.querySelector('.e-toggle-field-list').style.display = 'none';\n            }\n            if (this.toolbarModule && this.toolbarModule.action !== 'New' && this.toolbarModule.action !== 'Load'\n                && this.toolbarModule.action !== 'Remove') {\n                this.isModified = true;\n            }\n            if (!this.isInitialRendering) {\n                this.isModified = false;\n                this.isInitialRendering = !this.isInitialRendering;\n            }\n            this.toolbarModule.action = '';\n        }\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.showWaitingPopup = function () {\n        if (this.grid && this.grid.element && !this.spinnerTemplate && this.currentView === 'Table') {\n            showSpinner(this.grid.element);\n        }\n        else {\n            showSpinner(this.element);\n        }\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.hideWaitingPopup = function () {\n        if (this.grid && this.grid.element && !this.spinnerTemplate && this.currentView === 'Table') {\n            hideSpinner(this.grid.element);\n        }\n        else {\n            hideSpinner(this.element);\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    /**\n     * Updates the PivotEngine using dataSource from Pivot View component.\n     * @method updateDataSource\n     * @return {void}\n     * @hidden\n     */\n    PivotView.prototype.updateDataSource = function (isRefreshGrid) {\n        var _this_1 = this;\n        this.showWaitingPopup();\n        var pivot = this;\n        //setTimeout(() => {\n        var isSorted = Object.keys(pivot.lastSortInfo).length > 0 ? true : false;\n        var isFiltered = Object.keys(pivot.lastFilterInfo).length > 0 ? true : false;\n        var isAggChange = Object.keys(pivot.lastAggregationInfo).length > 0 ? true : false;\n        var isCalcChange = Object.keys(pivot.lastCalcFieldInfo).length > 0 ? true : false;\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(pivot.dataSourceSettings)\n        };\n        pivot.trigger(events.enginePopulating, args, function (observedArgs) {\n            if (!(pivot.enableVirtualization && (isSorted || isFiltered || isAggChange || isCalcChange))) {\n                PivotUtil.updateDataSourceSettings(pivot, observedArgs.dataSourceSettings);\n            }\n            pivot.updatePageSettings(false);\n            if (pivot.dataType === 'pivot' && pivot.enableVirtualization && (isSorted || isFiltered || isAggChange || isCalcChange)) {\n                /* tslint:disable-next-line:no-any */\n                var interopArguments = {};\n                if (isSorted) {\n                    pivot.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                    if (isBlazor()) {\n                        var sfBlazor = 'sfBlazor';\n                        var sortInfo = {\n                            name: pivot.lastSortInfo.name,\n                            order: pivot.lastSortInfo.order\n                        };\n                        /* tslint:disable-next-line */\n                        var sortArgs = window[sfBlazor].copyWithoutCircularReferences([pivot.lastSortInfo], pivot.lastSortInfo);\n                        interopArguments = { 'key': 'onSort', 'arg': sortArgs };\n                    }\n                    else if (_this_1.dataSourceSettings.mode === 'Server') {\n                        pivot.getEngine('onSort', null, pivot.lastSortInfo, null, null, null, null);\n                    }\n                    else {\n                        pivot.engineModule.onSort(pivot.lastSortInfo);\n                    }\n                    pivot.lastSortInfo = {};\n                }\n                if (isAggChange) {\n                    if (isBlazor()) {\n                        /* tslint:disable */\n                        var sfBlazor = 'sfBlazor';\n                        var aggregateArgs = window[sfBlazor].copyWithoutCircularReferences([pivot.lastAggregationInfo], pivot.lastAggregationInfo);\n                        interopArguments = { 'key': 'onAggregation', 'arg': aggregateArgs };\n                        /* tslint:enable */\n                    }\n                    else if (_this_1.dataSourceSettings.mode === 'Server') {\n                        pivot.getEngine('onAggregation', null, null, pivot.lastAggregationInfo, null, null, null);\n                    }\n                    else {\n                        pivot.engineModule.onAggregation(pivot.lastAggregationInfo);\n                    }\n                    pivot.lastAggregationInfo = {};\n                }\n                if (isCalcChange) {\n                    if (isBlazor()) {\n                        /* tslint:disable */\n                        var dataSourceSettings = window['sfBlazor'].copyWithoutCircularReferences([pivot.dataSourceSettings.properties], pivot.dataSourceSettings.properties);\n                        interopArguments = {\n                            'key': 'onCalcOperation',\n                            'arg': {\n                                lastCalcFieldInfo: pivot.lastCalcFieldInfo,\n                                values: dataSourceSettings.values,\n                                calculatedFieldSettings: dataSourceSettings.calculatedFieldSettings\n                            }\n                        };\n                        /* tslint:enable */\n                    }\n                    else if (_this_1.dataSourceSettings.mode === 'Server') {\n                        pivot.getEngine('onCalcOperation', null, null, null, pivot.lastCalcFieldInfo, null, null);\n                    }\n                    else {\n                        pivot.engineModule.onCalcOperation(pivot.lastCalcFieldInfo);\n                    }\n                    pivot.lastCalcFieldInfo = {};\n                }\n                if (isFiltered) {\n                    if (isBlazor()) {\n                        /* tslint:disable */\n                        var filterArgs = window['sfBlazor'].copyWithoutCircularReferences([pivot.lastFilterInfo], pivot.lastFilterInfo);\n                        var filterSettings = window['sfBlazor'].copyWithoutCircularReferences([pivot.dataSourceSettings.filterSettings], pivot.dataSourceSettings.filterSettings);\n                        interopArguments = {\n                            'key': 'onFilter',\n                            'arg': { 'lastFilterInfo': filterArgs, 'filterSettings': filterSettings }\n                        };\n                        /* tslint:enable */\n                    }\n                    else if (_this_1.dataSourceSettings.mode === 'Server') {\n                        pivot.getEngine('onFilter', null, null, null, null, pivot.lastFilterInfo, null);\n                    }\n                    else {\n                        pivot.engineModule.onFilter(pivot.lastFilterInfo, pivot.dataSourceSettings);\n                    }\n                    pivot.lastFilterInfo = {};\n                }\n                if (isBlazor()) {\n                    /* tslint:disable */\n                    pivot.interopAdaptor.invokeMethodAsync('PivotInteropMethod', interopArguments['key'], interopArguments['arg']).then(function (data) {\n                        pivot.updateBlazorData(data, pivot);\n                        pivot.allowServerDataBinding = false;\n                        pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                        delete pivot.bulkChanges.pivotValues;\n                        pivot.allowServerDataBinding = true;\n                        pivot.enginePopulatedEventMethod('updateDataSource', pivot);\n                        if (pivot.calculatedFieldModule && pivot.calculatedFieldModule.isRequireUpdate) {\n                            pivot.calculatedFieldModule.endDialog();\n                            pivot.calculatedFieldModule.isRequireUpdate = false;\n                        }\n                    });\n                    /* tslint:enable */\n                }\n                else {\n                    pivot.allowServerDataBinding = false;\n                    pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete pivot.bulkChanges.pivotValues;\n                    pivot.allowServerDataBinding = true;\n                    pivot.enginePopulatedEventMethod('updateDataSource');\n                }\n            }\n            else {\n                if (pivot.dataType === 'olap') {\n                    /* tslint:disable:align */\n                    var customProperties = {\n                        mode: '',\n                        savedFieldList: pivot.olapEngineModule.fieldList,\n                        savedFieldListData: pivot.olapEngineModule.fieldListData,\n                        pageSettings: pivot.pageSettings,\n                        enableValueSorting: pivot.enableValueSorting,\n                        isDrillThrough: (pivot.allowDrillThrough || pivot.editSettings.allowEditing),\n                        localeObj: pivot.localeObj\n                    };\n                    if (isCalcChange || isSorted) {\n                        pivot.olapEngineModule.savedFieldList = pivot.olapEngineModule.fieldList;\n                        pivot.olapEngineModule.savedFieldListData = pivot.olapEngineModule.fieldListData;\n                        if (isCalcChange) {\n                            pivot.olapEngineModule.updateCalcFields(pivot.dataSourceSettings, pivot.lastCalcFieldInfo);\n                            pivot.lastCalcFieldInfo = {};\n                        }\n                        else {\n                            pivot.olapEngineModule.onSort(pivot.dataSourceSettings);\n                            pivot.lastSortInfo = {};\n                        }\n                    }\n                    else {\n                        pivot.olapEngineModule.renderEngine(pivot.dataSourceSettings, customProperties);\n                    }\n                    pivot.allowServerDataBinding = false;\n                    pivot.setProperties({ pivotValues: pivot.olapEngineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete pivot.bulkChanges.pivotValues;\n                    pivot.allowServerDataBinding = true;\n                    pivot.enginePopulatedEventMethod('updateDataSource');\n                }\n                else {\n                    var customProperties = {\n                        mode: '',\n                        savedFieldList: pivot.engineModule.fieldList,\n                        pageSettings: pivot.pageSettings,\n                        enableValueSorting: pivot.enableValueSorting,\n                        isDrillThrough: (pivot.allowDrillThrough || pivot.editSettings.allowEditing),\n                        localeObj: pivot.localeObj,\n                        fieldsType: pivot.fieldsType\n                    };\n                    /* tslint:enable:align */\n                    if (isBlazor() && pivot.enableVirtualization) {\n                        /* tslint:disable */\n                        var sfBlazor = 'sfBlazor';\n                        var customArgs = window[sfBlazor].copyWithoutCircularReferences([customProperties], customProperties);\n                        var datasourceSettings = window[sfBlazor].copyWithoutCircularReferences([pivot.dataSourceSettings], pivot.dataSourceSettings);\n                        pivot.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'renderEngine', { 'dataSourceSettings': datasourceSettings, 'customProperties': customArgs }).then(function (data) {\n                            pivot.updateBlazorData(data, pivot);\n                            pivot.allowServerDataBinding = false;\n                            pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                            delete pivot.bulkChanges.pivotValues;\n                            pivot.allowServerDataBinding = true;\n                            pivot.enginePopulatedEventMethod('updateDataSource', pivot);\n                        });\n                        /* tslint:enable */\n                    }\n                    else if (pivot.dataSourceSettings.mode === 'Server') {\n                        if (isSorted)\n                            pivot.getEngine('onSort', null, pivot.lastSortInfo, null, null, null, null);\n                        else if (isAggChange)\n                            pivot.getEngine('onAggregation', null, null, pivot.lastAggregationInfo, null, null, null);\n                        else if (isCalcChange)\n                            pivot.getEngine('onCalcOperation', null, null, null, pivot.lastCalcFieldInfo, null, null);\n                        else if (isFiltered)\n                            pivot.getEngine('onFilter', null, null, null, null, pivot.lastFilterInfo, null);\n                        else\n                            pivot.getEngine('onDrop', null, null, null, null, null, null);\n                        pivot.lastSortInfo = {};\n                        pivot.lastAggregationInfo = {};\n                        pivot.lastCalcFieldInfo = {};\n                        pivot.lastFilterInfo = {};\n                    }\n                    else {\n                        pivot.engineModule.renderEngine(pivot.dataSourceSettings, customProperties, pivot.getValueCellInfo.bind(pivot));\n                        pivot.allowServerDataBinding = false;\n                        pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                        /* tslint:disable-next-line:no-any */\n                        delete pivot.bulkChanges.pivotValues;\n                        pivot.allowServerDataBinding = true;\n                        pivot.enginePopulatedEventMethod('updateDataSource');\n                    }\n                }\n            }\n        });\n        //});\n    };\n    /**\n     * Export Pivot widget data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns void\n     */\n    /* tslint:disable-next-line:no-any */\n    PivotView.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        if (this.enableVirtualization) {\n            this.excelExportModule.exportToExcel('Excel');\n        }\n        else {\n            this.grid.excelExport(excelExportProperties, isMultipleExport, workbook, isBlob);\n        }\n    };\n    /**\n     * Export PivotGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns void\n     */\n    /* tslint:disable-next-line:no-any */\n    PivotView.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        if (this.enableVirtualization) {\n            this.excelExportModule.exportToExcel('CSV');\n        }\n        else {\n            this.grid.csvExport(excelExportProperties, isMultipleExport, workbook, isBlob);\n        }\n    };\n    /**\n     * Export Pivot widget data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns void\n     */\n    PivotView.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        if (this.enableVirtualization) {\n            this.pdfExportModule.exportToPDF();\n        }\n        else {\n            this.grid.pdfExport(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n        }\n    };\n    /**\n     * Export method for the chart.\n     * @param type - Defines the export type.\n     * @param fileName - Defines file name of export document.\n     * @param orientation - Defines the page orientation on pdf export(0 for Portrait mode, 1 for Landscape mode).\n     * @param width - Defines width of the export document.\n     * @param height - Defines height of the export document.\n     */\n    PivotView.prototype.chartExport = function (type, fileName, orientation, width, height) {\n        if (this.chart && this.chart.enableExport) {\n            this.chart.exportModule.export(type, fileName, orientation, null, width, height);\n        }\n    };\n    /**\n     * Print method for the chart.\n     */\n    PivotView.prototype.printChart = function () {\n        if (this.chart) {\n            this.chart.print();\n        }\n    };\n    /** @hidden */\n    /* tslint:disable:max-func-body-length */\n    PivotView.prototype.onDrill = function (target, chartDrillInfo) {\n        var _this_1 = this;\n        var delimiter = (this.dataSourceSettings.drilledMembers[0] && this.dataSourceSettings.drilledMembers[0].delimiter) ?\n            this.dataSourceSettings.drilledMembers[0].delimiter : '**';\n        var fieldName = '';\n        var axis = '';\n        var action = '';\n        if (chartDrillInfo) {\n            fieldName = chartDrillInfo.fieldName;\n            axis = chartDrillInfo.cell.axis;\n            action = chartDrillInfo.isDrilled ? 'up' : 'down';\n        }\n        else {\n            fieldName = target.parentElement.getAttribute('fieldname');\n            axis = target.parentElement.classList.contains(cls.ROWSHEADER) ? 'row' : 'column';\n            action = target.classList.contains(cls.COLLAPSE) ? 'up' : 'down';\n        }\n        if (this.dataType === 'pivot') {\n            var clonedDrillMembers_1 = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n            var currentCell = chartDrillInfo ? chartDrillInfo.cell :\n                this.engineModule.pivotValues[Number(target.parentElement.getAttribute('index'))][Number(target.parentElement.getAttribute('aria-colindex'))];\n            var memberName = currentCell.valueSort.levelName.\n                split(this.engineModule.valueSortSettings.headerDelimiter).join(delimiter);\n            var fieldAvail = false;\n            if (this.dataSourceSettings.drilledMembers.length === 0) {\n                /* tslint:disable-next-line:max-line-length */\n                this.setProperties({ dataSourceSettings: { drilledMembers: [{ name: fieldName, items: [memberName], delimiter: delimiter }] } }, true);\n            }\n            else {\n                var drillMembers = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n                for (var fCnt = 0; fCnt < drillMembers.length; fCnt++) {\n                    var field = drillMembers[fCnt];\n                    memberName = memberName.split(delimiter).join(field.delimiter ? field.delimiter : delimiter);\n                    delimiter = field.delimiter = field.delimiter ? field.delimiter : delimiter;\n                    if (field.name === fieldName) {\n                        fieldAvail = true;\n                        var memIndex = field.items.indexOf(memberName);\n                        if (memIndex > -1) {\n                            field.items.splice(memIndex, 1);\n                        }\n                        else {\n                            field.items.push(memberName);\n                        }\n                    }\n                    else {\n                        continue;\n                    }\n                }\n                this.setProperties({ dataSourceSettings: { drilledMembers: drillMembers } }, true);\n                if (!fieldAvail) {\n                    this.dataSourceSettings.drilledMembers.push({ name: fieldName, items: [memberName], delimiter: delimiter });\n                }\n            }\n            this.showWaitingPopup();\n            var pivot_1 = this;\n            //setTimeout(() => {\n            var drilledItem_1 = {\n                fieldName: fieldName, memberName: memberName, delimiter: delimiter,\n                axis: axis,\n                action: action,\n                currentCell: currentCell\n            };\n            var drillArgs_1 = {\n                drillInfo: drilledItem_1,\n                pivotview: isBlazor() ? undefined : pivot_1,\n                cancel: false\n            };\n            pivot_1.trigger(events.drill, drillArgs_1, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    if (pivot_1.enableVirtualization) {\n                        if (isBlazor()) {\n                            /* tslint:disable */\n                            var sfBlazor = 'sfBlazor';\n                            var dataSourceSettings = window[sfBlazor].copyWithoutCircularReferences([pivot_1.dataSourceSettings], pivot_1.dataSourceSettings);\n                            var drillItem = window[sfBlazor].copyWithoutCircularReferences([drilledItem_1], drilledItem_1);\n                            var args = window[sfBlazor].copyWithoutCircularReferences([drillArgs_1], drillArgs_1);\n                            pivot_1.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'onDrill', { 'dataSourceSettings': dataSourceSettings, 'drilledItem': drillItem }).then(function (data) {\n                                pivot_1.updateBlazorData(data, pivot_1);\n                                pivot_1.engineModule.drilledMembers = pivot_1.dataSourceSettings.drilledMembers;\n                                pivot_1.allowServerDataBinding = false;\n                                pivot_1.setProperties({ pivotValues: pivot_1.engineModule.pivotValues }, true);\n                                delete pivot_1.bulkChanges.pivotValues;\n                                pivot_1.allowServerDataBinding = true;\n                                pivot_1.renderPivotGrid();\n                            });\n                            /* tslint:enable */\n                        }\n                        else if (_this_1.dataSourceSettings.mode === 'Server') {\n                            _this_1.getEngine('onDrill', drilledItem_1, null, null, null, null, null);\n                        }\n                        else {\n                            pivot_1.engineModule.drilledMembers = pivot_1.dataSourceSettings.drilledMembers;\n                            pivot_1.engineModule.onDrill(drilledItem_1);\n                        }\n                    }\n                    else if (_this_1.dataSourceSettings.mode === 'Server') {\n                        _this_1.getEngine('onDrill', drilledItem_1, null, null, null, null, null);\n                    }\n                    else {\n                        pivot_1.engineModule.generateGridData(pivot_1.dataSourceSettings);\n                    }\n                    if (!(isBlazor() && pivot_1.enableVirtualization)) {\n                        pivot_1.allowServerDataBinding = false;\n                        pivot_1.setProperties({ pivotValues: pivot_1.engineModule.pivotValues }, true);\n                        /* tslint:disable-next-line:no-any */\n                        delete pivot_1.bulkChanges.pivotValues;\n                        pivot_1.allowServerDataBinding = true;\n                        pivot_1.renderPivotGrid();\n                    }\n                }\n                else {\n                    _this_1.hideWaitingPopup();\n                    _this_1.setProperties({ dataSourceSettings: { drilledMembers: clonedDrillMembers_1 } }, true);\n                }\n            });\n        }\n        else {\n            this.onOlapDrill(fieldName, axis, action, delimiter, target, chartDrillInfo);\n        }\n    };\n    /* tslint:disable */\n    PivotView.prototype.onOlapDrill = function (fieldName, axis, action, delimiter, target, chartDrillInfo) {\n        var _this_1 = this;\n        var pivot = this;\n        var clonedDrillMembers = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n        var currentCell = chartDrillInfo ? chartDrillInfo.cell :\n            this.olapEngineModule.pivotValues[Number(target.parentElement.getAttribute('index'))][Number(target.parentElement.getAttribute('aria-colindex'))];\n        var tupInfo = axis === 'row' ? this.olapEngineModule.tupRowInfo[currentCell.ordinal] :\n            this.olapEngineModule.tupColumnInfo[currentCell.ordinal];\n        var drillInfo = {\n            axis: axis,\n            action: action,\n            fieldName: fieldName,\n            delimiter: '~~',\n            memberName: tupInfo.uNameCollection,\n            currentCell: currentCell\n        };\n        this.showWaitingPopup();\n        var drillArgs = {\n            drillInfo: drillInfo,\n            pivotview: isBlazor() ? undefined : pivot,\n            cancel: false\n        };\n        var isAttributeHierarchy = this.olapEngineModule.fieldList[drillInfo.fieldName] && this.olapEngineModule.fieldList[drillInfo.fieldName].isHierarchy;\n        var fieldPos = tupInfo.drillInfo.map(function (item) { return item.hierarchy; }).indexOf(currentCell.hierarchy.toString());\n        var clonedMembers = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n        if (drillInfo && drillInfo.action === 'down') {\n            var fields = tupInfo.drillInfo.map(function (item) { return item.uName; });\n            var member = '';\n            for (var pos = 0; pos <= fieldPos; pos++) {\n                var field = fields[pos];\n                var members = field.split('~~');\n                member = member + (member !== '' ? '~~' : '') + members[members.length - 1];\n            }\n            var drillSets = this.olapEngineModule.getDrilledSets(drillInfo.memberName, currentCell, (this.olapEngineModule.fieldList[currentCell.hierarchy] && !this.olapEngineModule.fieldList[currentCell.hierarchy].hasAllMember) ? currentCell.valueSort.levelName.split(this.dataSourceSettings.valueSortSettings.headerDelimiter).length - 1 : fieldPos, axis);\n            var keys = Object.keys(drillSets);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                var drillSet = drillSets[key];\n                for (var i = 0, cnt = clonedMembers.length; i < cnt; i++) {\n                    var drillMembers = clonedMembers[i];\n                    var memberItem = drillSet;\n                    if (drillMembers.delimiter) {\n                        memberItem = memberItem.replace(/~~/g, drillMembers.delimiter);\n                    }\n                    var items = [];\n                    for (var itemPos = 0; itemPos < drillMembers.items.length; itemPos++) {\n                        if (drillMembers.items[itemPos].indexOf(memberItem) !== 0) {\n                            items[items.length] = drillMembers.items[itemPos];\n                        }\n                    }\n                    drillMembers.items = items;\n                }\n            }\n            this.olapEngineModule.drilledSets[currentCell.actualText] = tupInfo.members[fieldPos];\n            drillInfo.memberName = member;\n            var drillItem = [];\n            for (var _a = 0, clonedMembers_1 = clonedMembers; _a < clonedMembers_1.length; _a++) {\n                var field = clonedMembers_1[_a];\n                if (field.name === drillInfo.fieldName) {\n                    drillItem.push(field);\n                }\n            }\n            if (drillItem.length > 0) {\n                if (drillItem[0].delimiter) {\n                    member = member.replace(/~~/g, drillItem[0].delimiter);\n                }\n                var index = PivotUtil.inArray(member, drillItem[0].items);\n                if (index === -1) {\n                    drillItem[0].items.push(member);\n                }\n                if (isAttributeHierarchy) {\n                    var i = 0;\n                    while (i < drillItem[0].items.length) {\n                        if (drillItem[0].items[i] === member) {\n                            drillItem[0].items.splice(i, 1);\n                        }\n                        else {\n                            ++i;\n                        }\n                    }\n                }\n            }\n            else if (!isAttributeHierarchy) {\n                var drilledMember = { name: drillInfo.fieldName, items: [member], delimiter: '~~' };\n                if (!clonedMembers) {\n                    clonedMembers = [drilledMember];\n                }\n                else {\n                    clonedMembers.push(drilledMember);\n                }\n            }\n            drillArgs.drillInfo.memberName = member;\n            this.setProperties({ dataSourceSettings: { drilledMembers: clonedMembers } }, true);\n            pivot.trigger(events.drill, drillArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    _this_1.olapEngineModule.updateDrilledInfo(_this_1.dataSourceSettings);\n                    _this_1.allowServerDataBinding = false;\n                    _this_1.setProperties({ pivotValues: _this_1.olapEngineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete _this_1.bulkChanges.pivotValues;\n                    _this_1.allowServerDataBinding = true;\n                    _this_1.renderPivotGrid();\n                }\n                else {\n                    _this_1.hideWaitingPopup();\n                    _this_1.setProperties({ dataSourceSettings: { drilledMembers: clonedDrillMembers } }, true);\n                }\n            });\n        }\n        else {\n            delete this.olapEngineModule.drilledSets[currentCell.actualText];\n            var drillSets = this.olapEngineModule.getDrilledSets(drillInfo.memberName, currentCell, fieldPos, axis);\n            var keys = Object.keys(drillSets);\n            var fields = tupInfo.drillInfo.map(function (item) { return item.uName; });\n            var member = '';\n            for (var pos = 0; pos <= fieldPos; pos++) {\n                var field = fields[pos];\n                var members = field.split('~~');\n                member = member + (member !== '' ? '~~' : '') + members[members.length - 1];\n            }\n            for (var _b = 0, keys_2 = keys; _b < keys_2.length; _b++) {\n                var key = keys_2[_b];\n                var drillSet = drillSets[key];\n                var drillItemCollection = [];\n                for (var i = 0, cnt = clonedMembers.length; i < cnt; i++) {\n                    var drillItem = clonedMembers[i];\n                    var member_1 = drillSet;\n                    if (drillItem.name === drillInfo.fieldName) {\n                        drillItemCollection.push(drillItem);\n                    }\n                    if (drillItem.delimiter) {\n                        member_1 = drillSet.replace(/~~/g, drillItem.delimiter);\n                    }\n                    if (!isAttributeHierarchy) {\n                        var items = [];\n                        for (var itemPos = 0; itemPos < drillItem.items.length; itemPos++) {\n                            if (drillItem.items[itemPos].indexOf(member_1) !== 0) {\n                                items[items.length] = drillItem.items[itemPos];\n                            }\n                        }\n                        drillItem.items = items;\n                    }\n                }\n                if (isAttributeHierarchy) {\n                    if (drillItemCollection.length > 0) {\n                        if (drillItemCollection[0].delimiter) {\n                            member = member.replace(/~~/g, drillItemCollection[0].delimiter);\n                        }\n                        var index = PivotUtil.inArray(member, drillItemCollection[0].items);\n                        if (index === -1) {\n                            drillItemCollection[0].items.push(member);\n                        }\n                    }\n                    else {\n                        var drilledMember = { name: drillInfo.fieldName, items: [member], delimiter: '~~' };\n                        if (!clonedMembers) {\n                            clonedMembers = [drilledMember];\n                        }\n                        else {\n                            clonedMembers.push(drilledMember);\n                        }\n                    }\n                }\n            }\n            var drilledMembers_1 = [];\n            for (var _c = 0, clonedMembers_2 = clonedMembers; _c < clonedMembers_2.length; _c++) {\n                var fields_1 = clonedMembers_2[_c];\n                if (fields_1.items.length > 0) {\n                    drilledMembers_1.push(fields_1);\n                }\n            }\n            this.setProperties({ dataSourceSettings: { drilledMembers: clonedMembers } }, true);\n            pivot.trigger(events.drill, drillArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    _this_1.setProperties({ dataSourceSettings: { drilledMembers: drilledMembers_1 } }, true);\n                    _this_1.olapEngineModule.updateDrilledInfo(_this_1.dataSourceSettings);\n                    _this_1.allowServerDataBinding = false;\n                    _this_1.setProperties({ pivotValues: _this_1.olapEngineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete _this_1.bulkChanges.pivotValues;\n                    _this_1.allowServerDataBinding = true;\n                    _this_1.renderPivotGrid();\n                }\n                else {\n                    _this_1.hideWaitingPopup();\n                    _this_1.setProperties({ dataSourceSettings: { drilledMembers: clonedDrillMembers } }, true);\n                }\n            });\n        }\n    };\n    /* tslint:enable */\n    PivotView.prototype.onContentReady = function () {\n        if (!isNullOrUndefined(this.savedDataSourceSettings)) {\n            PivotUtil.updateDataSourceSettings(this, this.savedDataSourceSettings);\n            this.savedDataSourceSettings = undefined;\n        }\n        if (this.currentView !== 'Table') {\n            /* tslint:disable-next-line */\n            if (this.cellTemplate && isBlazor()) {\n                resetBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate');\n            }\n        }\n        this.isPopupClicked = false;\n        if (this.showFieldList) {\n            hideSpinner(this.pivotFieldListModule.fieldListSpinnerElement);\n        }\n        else if (this.fieldListSpinnerElement) {\n            hideSpinner(this.fieldListSpinnerElement);\n        }\n        if (!this.isEmptyGrid) {\n            this.hideWaitingPopup();\n            this.trigger(events.dataBound);\n        }\n        else {\n            this.isEmptyGrid = false;\n            this.notEmpty = true;\n        }\n        if (this.grid) {\n            var engine = this.dataType === 'pivot' ? this.engineModule : this.olapEngineModule;\n            if (this.enableVirtualization && engine) {\n                if (this.element.querySelector('.' + cls.MOVABLECONTENT_DIV) &&\n                    !this.element.querySelector('.' + cls.MOVABLECONTENT_DIV).querySelector('.' + cls.VIRTUALTRACK_DIV)) {\n                    this.virtualDiv = createElement('div', { className: cls.VIRTUALTRACK_DIV });\n                    this.element.querySelector('.' + cls.MOVABLECONTENT_DIV).appendChild(this.virtualDiv);\n                }\n                if (this.element.querySelector('.' + cls.MOVABLEHEADER_DIV) &&\n                    !this.element.querySelector('.' + cls.MOVABLEHEADER_DIV).querySelector('.' + cls.VIRTUALTRACK_DIV)) {\n                    this.virtualHeaderDiv = createElement('div', { className: cls.VIRTUALTRACK_DIV });\n                    this.element.querySelector('.' + cls.MOVABLEHEADER_DIV).appendChild(this.virtualHeaderDiv);\n                }\n                else {\n                    this.virtualHeaderDiv =\n                        this.element.querySelector('.' + cls.MOVABLEHEADER_DIV).querySelector('.' + cls.VIRTUALTRACK_DIV);\n                }\n                var movableTable = this.element.querySelector('.' + cls.MOVABLECONTENT_DIV).querySelector('.e-table');\n                var vHeight = (this.gridSettings.rowHeight * engine.rowCount + 0.1 - movableTable.clientHeight);\n                if (vHeight > this.scrollerBrowserLimit) {\n                    this.verticalScrollScale = vHeight / this.scrollerBrowserLimit;\n                    vHeight = this.scrollerBrowserLimit;\n                }\n                var vWidth = (this.gridSettings.columnWidth * engine.columnCount\n                    - this.grid.columns[0].width);\n                if (vWidth > this.scrollerBrowserLimit) {\n                    this.horizontalScrollScale = vWidth / this.scrollerBrowserLimit;\n                    vWidth = this.scrollerBrowserLimit;\n                }\n                setStyleAttribute(this.virtualDiv, {\n                    height: (vHeight > 0.1 ? vHeight : 0.1) + 'px',\n                    width: (vWidth > 0.1 ? vWidth : 0.1) + 'px'\n                });\n                setStyleAttribute(this.virtualHeaderDiv, {\n                    height: 0, width: (vWidth > 0.1 ? vWidth : 0.1) + 'px'\n                });\n                var mCnt = this.element.querySelector('.' + cls.MOVABLECONTENT_DIV);\n                var fCnt = this.element.querySelector('.' + cls.FROZENCONTENT_DIV);\n                var mHdr = this.element.querySelector('.' + cls.MOVABLEHEADER_DIV);\n                var verOffset = (mCnt.scrollTop > this.scrollerBrowserLimit) ?\n                    mCnt.querySelector('.' + cls.TABLE).style.transform.split(',')[1].trim() :\n                    -(((mCnt.scrollTop * this.verticalScrollScale) - this.scrollPosObject.verticalSection - mCnt.scrollTop)) + 'px)';\n                var horiOffset = (mCnt.scrollLeft > this.scrollerBrowserLimit) ?\n                    (mCnt.querySelector('.' + cls.TABLE).style.transform.split(',')[0].trim() + ',') :\n                    'translate(' + -(((mCnt.scrollLeft * this.horizontalScrollScale) -\n                        this.scrollPosObject.horizontalSection - mCnt.scrollLeft)) + 'px,';\n                setStyleAttribute(fCnt.querySelector('.e-table'), {\n                    transform: 'translate(' + 0 + 'px,' + verOffset\n                });\n                setStyleAttribute(mCnt.querySelector('.e-table'), {\n                    transform: horiOffset + verOffset\n                });\n                setStyleAttribute(mHdr.querySelector('.e-table'), {\n                    transform: horiOffset + 0 + 'px)'\n                });\n            }\n            if (this.showGroupingBar) {\n                this.element.style.minWidth = '400px';\n                this.grid.element.style.minWidth = '400px';\n            }\n            else {\n                this.element.style.minWidth = '310px';\n                this.grid.element.style.minWidth = '310px';\n            }\n        }\n        this.unwireEvents();\n        this.wireEvents();\n        this.isChartLoaded = false;\n        if (this.cellTemplate && isBlazor()) {\n            var gridCells = Object.keys(this.gridCellCollection);\n            if (gridCells.length > 0) {\n                for (var _i = 0, gridCells_1 = gridCells; _i < gridCells_1.length; _i++) {\n                    var cell = gridCells_1[_i];\n                    /* tslint:disable-next-line */\n                    var templateObject = {};\n                    var tCell = this.gridCellCollection[cell];\n                    var colIndex = Number(tCell.getAttribute('aria-colindex'));\n                    var rowIndex = Number(tCell.getAttribute('index'));\n                    var pivotCell = this.pivotValues[rowIndex][colIndex];\n                    templateObject.axis = pivotCell.axis;\n                    if (templateObject.axis === 'column' || templateObject.axis === 'row') {\n                        templateObject.fieldName = pivotCell.valueSort.axis;\n                        templateObject.formattedText = pivotCell.formattedText;\n                    }\n                    else {\n                        templateObject.fieldName = pivotCell.actualText;\n                        templateObject.formattedText = pivotCell.formattedText;\n                        templateObject.value = pivotCell.value;\n                    }\n                    templateObject.rowHeaders = pivotCell.rowHeaders;\n                    templateObject.columnHeaders = pivotCell.columnHeaders;\n                    templateObject.rowIndex = pivotCell.rowIndex;\n                    templateObject.columnIndex = pivotCell.colIndex;\n                    templateObject.isGrandTotal = pivotCell.isGrandSum;\n                    templateObject.isTotal = pivotCell.isSum;\n                    templateObject.rowSpan = pivotCell.rowSpan;\n                    templateObject.columnSpan = pivotCell.colSpan;\n                    templateObject.isDrilled = pivotCell.isDrilled;\n                    templateObject.hasChild = pivotCell.hasChild;\n                    templateObject.valueSortInfo = pivotCell.valueSort;\n                    /* tslint:disable-next-line */\n                    var element = this.getCellTemplate()(templateObject, this, 'cellTemplate', this.element.id + '_cellTemplate');\n                    if (element && element !== '' && element.length > 0) {\n                        if (this.enableHtmlSanitizer) {\n                            this.appendHtml(tCell, SanitizeHtmlHelper.sanitize(element[0].outerHTML));\n                        }\n                        else {\n                            this.appendHtml(tCell, element[0].outerHTML);\n                        }\n                    }\n                }\n                updateBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate', this);\n            }\n        }\n    };\n    PivotView.prototype.setToolTip = function (args) {\n        var colIndex = Number(args.target.getAttribute('aria-colindex'));\n        var rowIndex = Number(args.target.getAttribute('index'));\n        var cell = (this.pivotValues && this.pivotValues[rowIndex] && this.pivotValues[rowIndex][colIndex]) ?\n            this.pivotValues[rowIndex][colIndex] : undefined;\n        this.tooltip.content = '';\n        var aggregateType;\n        var caption;\n        var hasField = false;\n        if (cell && this.dataType === 'olap') {\n            if (this.olapEngineModule.fieldList[cell.actualText]) {\n                var field = this.olapEngineModule.fieldList[cell.actualText];\n                aggregateType = field.isCalculatedField ? field.type : field.aggregateType;\n                caption = (this.olapEngineModule.dataFields[cell.actualText] &&\n                    this.olapEngineModule.dataFields[cell.actualText].caption) ?\n                    this.olapEngineModule.dataFields[cell.actualText].caption : field.caption;\n                hasField = true;\n            }\n        }\n        else {\n            if (cell && this.engineModule.fieldList[cell.actualText]) {\n                var field = this.engineModule.fieldList[cell.actualText];\n                aggregateType = field.aggregateType;\n                caption = field.caption;\n                hasField = true;\n            }\n        }\n        if (cell && hasField) {\n            var rowHeaders = this.getRowText(rowIndex, 0);\n            var columnHeaders = this.getColText(0, colIndex, rowIndex);\n            var value = ((cell.formattedText === '0' || cell.formattedText === '') ? this.localeObj.getConstant('noValue') :\n                cell.formattedText);\n            if (this.tooltipTemplate && this.getTooltipTemplate() !== undefined) {\n                var rowFields = this.getHeaderField(rowIndex, colIndex, 'row');\n                var columnFields = this.getHeaderField(rowIndex, colIndex, 'column');\n                var templateObject = {\n                    rowHeaders: rowHeaders,\n                    columnHeaders: columnHeaders,\n                    aggregateType: aggregateType,\n                    valueField: caption,\n                    value: value,\n                    rowFields: rowFields,\n                    columnFields: columnFields,\n                };\n                /* tslint:disable-next-line:max-line-length */\n                this.tooltip.content = this.getTooltipTemplate()(templateObject, this, 'tooltipTemplate', this.element.id + 'tooltipTemplate')[0].outerHTML;\n            }\n            else {\n                this.tooltip.content = '<div class=' + cls.PIVOTTOOLTIP + '><p class=' + cls.TOOLTIP_HEADER + '>' +\n                    this.localeObj.getConstant('row') + ':</p><p class=' + cls.TOOLTIP_CONTENT + '>' +\n                    rowHeaders + '</p></br><p class=' + cls.TOOLTIP_HEADER + '>' + this.localeObj.getConstant('column') +\n                    ':</p><p class=' + cls.TOOLTIP_CONTENT + '>' + columnHeaders + '</p></br>' +\n                    (cell.actualText !== '' ? ('<p class=' + cls.TOOLTIP_HEADER + '>' + (this.dataType === 'olap' ? '' :\n                        (this.localeObj.getConstant(aggregateType) + ' ' + this.localeObj.getConstant('of') + ' ')) +\n                        caption + ':</p><p class=' + cls.TOOLTIP_CONTENT + '>' + value + '</p></div>') : '');\n            }\n        }\n        else {\n            args.cancel = true;\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.getTooltipTemplate = function () {\n        return this.tooltipTemplateFn;\n    };\n    /** @hidden */\n    PivotView.prototype.getHeaderField = function (rowIndex, colIndex, axis) {\n        var fields = '';\n        var len;\n        var engineModule = this.dataType === 'olap' ? this.olapEngineModule : this.engineModule;\n        var delimiter = engineModule.valueSortSettings.headerDelimiter;\n        if (axis === 'row') {\n            len = this.pivotValues[rowIndex][0].valueSort.levelName.toString().split(delimiter).length;\n            for (var i = 0; i < len && engineModule.rows.length > 0 && engineModule.rows[i]; i++) {\n                fields += (i ? ' - ' : '') + ((engineModule.rows[i].caption) ? engineModule.rows[i].caption : engineModule.rows[i].name);\n            }\n        }\n        else {\n            /* tslint:disable:max-line-length */\n            if (engineModule.columns.length > 0) {\n                var pos = engineModule.values.length === 0 ? 0 : Number(Object.keys(engineModule.headerContent)[Object.keys(engineModule.headerContent).length - 1]);\n                len = this.pivotValues[pos][colIndex].valueSort.levelName.toString().split(delimiter).length;\n                len = engineModule.values.length > 1 ? len - 1 : len;\n            }\n            for (var j = 0; j < len && engineModule.columns.length > 0 && engineModule.columns[j]; j++) {\n                fields += (j ? ' - ' : '') + ((engineModule.columns[j].caption) ? engineModule.columns[j].caption : engineModule.columns[j].name);\n            }\n            /* tslint:enable:max-line-length */\n        }\n        return fields;\n    };\n    PivotView.prototype.getRowText = function (rowIndex, colIndex) {\n        var cell = this.pivotValues[rowIndex][colIndex];\n        var level = cell.level;\n        var rowText = cell.type === 'grand sum' ? this.localeObj.getConstant('grandTotal') : cell.formattedText;\n        while (level > 0 || cell.index === undefined) {\n            rowIndex--;\n            cell = this.pivotValues[rowIndex][colIndex];\n            if (cell.index !== undefined) {\n                if (level > cell.level) {\n                    rowText = rowText + ' - ' + cell.formattedText;\n                    level = level - 1;\n                }\n            }\n        }\n        return rowText.split(' - ').reverse().join(' - ');\n    };\n    PivotView.prototype.getColText = function (rowIndex, colIndex, limit) {\n        var cell = this.pivotValues[0][colIndex];\n        var axis = cell.axis;\n        var colText = cell.type === 'grand sum' ? this.localeObj.getConstant('grandTotal') : cell.formattedText;\n        while (axis !== 'value' && limit > rowIndex) {\n            rowIndex++;\n            if (this.pivotValues[rowIndex]) {\n                cell = this.pivotValues[rowIndex][colIndex];\n                axis = cell.axis;\n                if (cell.type !== 'sum' && cell.type !== 'grand sum' && axis !== 'value') {\n                    colText = colText + ' - ' + cell.formattedText;\n                }\n            }\n        }\n        return colText;\n    };\n    PivotView.prototype.updateClass = function () {\n        if (this.enableRtl) {\n            addClass([this.element], cls.RTL);\n        }\n        else {\n            removeClass([this.element], cls.RTL);\n        }\n        if (this.isAdaptive) {\n            addClass([this.element], cls.DEVICE);\n        }\n        else {\n            removeClass([this.element], cls.DEVICE);\n        }\n    };\n    PivotView.prototype.mouseRclickHandler = function (e) {\n        if (e.which === 3) {\n            this.lastCellClicked = e.target;\n        }\n        else if (e.which === 0) {\n            this.lastCellClicked = e.target;\n        }\n        this.lastCellClicked = e.target;\n    };\n    PivotView.prototype.mouseDownHandler = function (e) {\n        if (e.which === 3) {\n            this.lastCellClicked = e.target;\n        }\n        if (this.isCellBoxMultiSelection) {\n            this.isMouseDown = true;\n            this.isMouseUp = false;\n            var parent_1 = this.parentAt(e.target, 'TH');\n            this.clearSelection(parent_1, e, Number(parent_1.getAttribute('aria-colindex')), Number(parent_1.getAttribute('index')));\n            this.lastSelectedElement = undefined;\n        }\n    };\n    PivotView.prototype.mouseMoveHandler = function (e) {\n        if (this.isCellBoxMultiSelection) {\n            e.preventDefault();\n            if (this.isMouseDown && e.target) {\n                var ele = e.target;\n                var parentElement = this.parentAt(ele, 'TH');\n                if (this.lastSelectedElement && this.lastSelectedElement !== parentElement &&\n                    parentElement.classList.contains(cls.SELECTED_BGCOLOR)) {\n                    this.lastSelectedElement.classList.remove(cls.CELL_ACTIVE_BGCOLOR);\n                    this.lastSelectedElement.classList.remove(cls.SELECTED_BGCOLOR);\n                    this.lastSelectedElement = parentElement;\n                }\n                else {\n                    this.lastSelectedElement = parentElement;\n                    parentElement.classList.add(cls.CELL_ACTIVE_BGCOLOR);\n                    parentElement.classList.add(cls.SELECTED_BGCOLOR);\n                }\n                this.renderModule.selected();\n            }\n        }\n    };\n    PivotView.prototype.mouseUpHandler = function (e) {\n        if (this.isCellBoxMultiSelection) {\n            this.isMouseDown = false;\n            this.isMouseUp = true;\n        }\n    };\n    PivotView.prototype.parentAt = function (target, tagName) {\n        while (target.tagName !== tagName) {\n            if (target.parentElement) {\n                target = target.parentElement;\n            }\n            else {\n                break;\n            }\n        }\n        return target;\n    };\n    PivotView.prototype.mouseClickHandler = function (e) {\n        if (e.which === 3) {\n            this.lastCellClicked = e.target;\n        }\n        else if (e.which === 0) {\n            this.lastCellClicked = e.target;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-headercell') ||\n            target.classList.contains('e-headercelldiv') ||\n            target.classList.contains('e-rowsheader') ||\n            target.classList.contains('e-rowcell') ||\n            target.classList.contains('e-stackedheadercelldiv') ||\n            target.classList.contains('e-headertext') ||\n            target.classList.contains('e-ascending') ||\n            target.classList.contains('e-descending')) && this.enableValueSorting && this.dataType === 'pivot') {\n            var ele = null;\n            if (target.classList.contains('e-headercell') || target.classList.contains('e-rowsheader')\n                || target.classList.contains('e-rowcell')) {\n                ele = target;\n            }\n            else if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-headercelldiv') ||\n                target.classList.contains('e-ascending') || target.classList.contains('e-descending')) {\n                ele = target.parentElement;\n            }\n            else if (target.classList.contains('e-headertext')) {\n                ele = target.parentElement.parentElement;\n            }\n            this.CellClicked(target, e);\n            if ((ele.parentElement.parentElement.parentElement.parentElement.classList.contains('e-movableheader')\n                && this.dataSourceSettings.valueAxis === 'column') || (ele.parentElement.classList.contains('e-row') &&\n                this.dataSourceSettings.valueAxis === 'row') && (ele.classList.contains('e-rowsheader') ||\n                ele.classList.contains('e-stot'))) {\n                /* tslint:disable */\n                var colIndex = Number(ele.getAttribute('aria-colindex'));\n                var rowIndex = Number(ele.getAttribute('index'));\n                if (this.dataSourceSettings.valueAxis === 'row' && (this.dataSourceSettings.values.length > 1 || this.dataSourceSettings.alwaysShowValueHeader)) {\n                    rowIndex = this.pivotValues[rowIndex][colIndex].type === 'value' ? rowIndex : (rowIndex + 1);\n                }\n                else if (this.dataSourceSettings.valueAxis === 'column' && (this.dataSourceSettings.values.length > 1 || this.dataSourceSettings.alwaysShowValueHeader)) {\n                    colIndex = (Number(ele.getAttribute('aria-colindex')) + Number(ele.getAttribute('aria-colspan')) - 1);\n                    rowIndex = this.engineModule.headerContent.length - 1;\n                }\n                this.setProperties({\n                    dataSourceSettings: {\n                        valueSortSettings: {\n                            columnIndex: (Number(ele.getAttribute('aria-colindex')) +\n                                Number(ele.getAttribute('aria-colspan')) - 1),\n                            sortOrder: this.dataSourceSettings.valueSortSettings.sortOrder === 'Descending' ? 'Ascending' : 'Descending',\n                            headerText: this.pivotValues[rowIndex][colIndex].valueSort.levelName,\n                            headerDelimiter: this.dataSourceSettings.valueSortSettings.headerDelimiter ?\n                                this.dataSourceSettings.valueSortSettings.headerDelimiter : '.'\n                        }\n                    }\n                }, true);\n                /* tslint:enable */\n                this.showWaitingPopup();\n                var pivot_2 = this;\n                //setTimeout(() => {\n                pivot_2.engineModule.enableValueSorting = true;\n                if (pivot_2.enableVirtualization) {\n                    if (pivot_2.dataSourceSettings.enableSorting) {\n                        for (var _i = 0, _a = Object.keys(pivot_2.engineModule.fieldList); _i < _a.length; _i++) {\n                            var key = _a[_i];\n                            pivot_2.engineModule.fieldList[key].sort = 'Ascending';\n                        }\n                        pivot_2.setProperties({ dataSourceSettings: { sortSettings: [] } }, true);\n                    }\n                    if (isBlazor()) {\n                        /* tslint:disable */\n                        pivot_2.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'applyValueSorting', { 'valueSortSettings': pivot_2.dataSourceSettings.valueSortSettings.properties }).then(function (data) {\n                            pivot_2.updateBlazorData(data, pivot_2);\n                            pivot_2.allowServerDataBinding = false;\n                            pivot_2.setProperties({ pivotValues: pivot_2.engineModule.pivotValues }, true);\n                            delete pivot_2.bulkChanges.pivotValues;\n                            pivot_2.allowServerDataBinding = true;\n                            pivot_2.renderPivotGrid();\n                        });\n                        /* tslint:enable */\n                    }\n                    else if (pivot_2.dataSourceSettings.mode === 'Server') {\n                        pivot_2.getEngine('onValueSort', null, null, null, null, null, null);\n                    }\n                    else {\n                        pivot_2.engineModule.rMembers = pivot_2.engineModule.headerCollection.rowHeaders;\n                        pivot_2.engineModule.cMembers = pivot_2.engineModule.headerCollection.columnHeaders;\n                        pivot_2.engineModule.applyValueSorting();\n                        pivot_2.engineModule.updateEngine();\n                    }\n                }\n                else if (pivot_2.dataSourceSettings.mode === 'Server') {\n                    pivot_2.getEngine('onValueSort', null, null, null, null, null, null);\n                }\n                else {\n                    pivot_2.engineModule.generateGridData(pivot_2.dataSourceSettings);\n                }\n                if (!(isBlazor() && pivot_2.enableVirtualization)) {\n                    pivot_2.allowServerDataBinding = false;\n                    pivot_2.setProperties({ pivotValues: pivot_2.engineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete pivot_2.bulkChanges.pivotValues;\n                    pivot_2.allowServerDataBinding = true;\n                    pivot_2.renderPivotGrid();\n                }\n            }\n        }\n        else if (target.classList.contains(cls.COLLAPSE) || target.classList.contains(cls.EXPAND)) {\n            this.onDrill(target);\n        }\n        else {\n            this.CellClicked(target, e);\n            return;\n        }\n    };\n    PivotView.prototype.framePivotColumns = function (gridcolumns) {\n        for (var _i = 0, gridcolumns_1 = gridcolumns; _i < gridcolumns_1.length; _i++) {\n            var column = gridcolumns_1[_i];\n            if (column.columns && column.columns.length > 0) {\n                this.framePivotColumns(column.columns);\n            }\n            else {\n                /* tslint:disable */\n                var levelName = column.field === '0.formattedText' ? '' :\n                    (column.customAttributes ? column.customAttributes.cell.valueSort.levelName : '');\n                var width = this.renderModule.setSavedWidth(column.field === '0.formattedText' ? column.field :\n                    levelName, Number(column.width === 'auto' ? column.minWidth : column.width));\n                this.pivotColumns.push({\n                    allowReordering: column.allowReordering,\n                    allowResizing: column.allowResizing,\n                    headerText: levelName,\n                    width: width\n                });\n                this.totColWidth = this.totColWidth + Number(width);\n                /* tslint:enable */\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.setGridColumns = function (gridcolumns) {\n        if (!isNullOrUndefined(this.totColWidth) && this.totColWidth > 0) {\n            for (var _i = 0, gridcolumns_2 = gridcolumns; _i < gridcolumns_2.length; _i++) {\n                var column = gridcolumns_2[_i];\n                if (column.columns && column.columns.length > 0) {\n                    this.setGridColumns(column.columns);\n                }\n                else {\n                    /* tslint:disable */\n                    var levelName = column.field === '0.formattedText' ? '' :\n                        (column.customAttributes ? column.customAttributes.cell.valueSort.levelName : '');\n                    column.allowReordering = this.pivotColumns[this.posCount].allowReordering;\n                    column.allowResizing = this.pivotColumns[this.posCount].allowResizing;\n                    var calcWidth = this.renderModule.setSavedWidth(column.field === '0.formattedText' ? column.field :\n                        levelName, Number(this.pivotColumns[this.posCount].width));\n                    if (column.width !== 'auto') {\n                        column.width = calcWidth;\n                    }\n                    else {\n                        column.minWidth = calcWidth;\n                    }\n                    this.posCount++;\n                    if (column.allowReordering) {\n                        this.gridSettings.allowReordering = true;\n                    }\n                    if (column.allowResizing) {\n                        this.gridSettings.allowResizing = true;\n                    }\n                }\n            }\n            if (this.gridSettings.allowReordering) {\n                Grid.Inject(Reorder);\n            }\n            if (this.gridSettings.allowResizing) {\n                Grid.Inject(Resize);\n            }\n            /* tslint:enable */\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.fillGridColumns = function (gridcolumns) {\n        for (var _i = 0, gridcolumns_3 = gridcolumns; _i < gridcolumns_3.length; _i++) {\n            var column = gridcolumns_3[_i];\n            column.allowReordering = this.gridSettings.allowReordering;\n            column.allowResizing = this.gridSettings.allowResizing;\n            this.posCount++;\n            if (column.columns && column.columns.length > 0) {\n                this.fillGridColumns(column.columns);\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.triggerColumnRenderEvent = function (gridcolumns) {\n        this.pivotColumns = [];\n        this.totColWidth = 0;\n        this.framePivotColumns(gridcolumns);\n        var firstColWidth = this.pivotColumns[0].width;\n        var eventArgs = {\n            columns: this.pivotColumns,\n            dataSourceSettings: this.dataSourceSettings\n        };\n        this.trigger(events.beforeColumnsRender, eventArgs);\n        if (firstColWidth !== this.pivotColumns[0].width) {\n            this.firstColWidth = this.pivotColumns[0].width;\n            this.renderModule.resColWidth = parseInt(this.firstColWidth.toString());\n            // TODO: To be considered on compact layout implementation\n            // let colWidth: number = this.renderModule.calculateColWidth(this.pivotColumns ? this.pivotColumns.length : 0);\n            // for (let i: number = 1; i < this.pivotColumns.length; i++) {\n            //     this.pivotColumns[i].width = colWidth;\n            // }\n        }\n        this.posCount = 0;\n        this.setGridColumns(gridcolumns);\n    };\n    /** @hidden */\n    PivotView.prototype.setCommonColumnsWidth = function (columns, width) {\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            if (column.field !== '0.formattedText') {\n                if (column.columns) {\n                    this.setCommonColumnsWidth(column.columns, width);\n                }\n                else {\n                    if (column.width !== 'auto') {\n                        column.width = width;\n                    }\n                    else {\n                        column.minWidth = width;\n                    }\n                }\n            }\n            else {\n                column.width = !this.firstColWidth ? column.width : this.firstColWidth;\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.getHeightAsNumber = function () {\n        var height;\n        if (isNaN(this.height)) {\n            if (this.height.toString().indexOf('%') > -1) {\n                height = (parseFloat(this.height.toString()) / 100) * this.element.offsetHeight;\n            }\n            else if (this.height.toString().indexOf('px') > -1) {\n                height = Number(this.height.toString().split('px')[0]);\n            }\n        }\n        else {\n            height = Number(this.height);\n        }\n        if (height < 300) {\n            height = 300;\n        }\n        return height;\n    };\n    /** @hidden */\n    PivotView.prototype.getWidthAsNumber = function () {\n        var width;\n        if (isNaN(this.width)) {\n            if (this.width.toString().indexOf('%') > -1) {\n                width = (parseFloat(this.width.toString()) / 100) * this.element.offsetWidth;\n            }\n            else if (this.width.toString().indexOf('px') > -1) {\n                width = Number(this.width.toString().split('px')[0]);\n            }\n            if (isNaN(width)) {\n                width = this.element.offsetWidth;\n            }\n        }\n        else {\n            width = Number(this.width);\n        }\n        if (width < 400) {\n            width = 400;\n        }\n        return width;\n    };\n    /** @hidden */\n    PivotView.prototype.getGridWidthAsNumber = function () {\n        var width;\n        var offsetWidth = this.element.offsetWidth ? this.element.offsetWidth :\n            this.element.getBoundingClientRect().width;\n        if (isNaN(this.grid.width)) {\n            if (this.grid.width.toString().indexOf('%') > -1) {\n                width = (parseFloat(this.grid.width.toString()) / 100) * offsetWidth;\n            }\n            else if (this.grid.width.toString().indexOf('px') > -1) {\n                width = Number(this.grid.width.toString().split('px')[0]);\n            }\n            if (isNaN(width)) {\n                width = offsetWidth;\n            }\n        }\n        else {\n            width = Number(this.grid.width);\n        }\n        return width;\n    };\n    /** @hidden */\n    PivotView.prototype.onWindowResize = function () {\n        /* tslint:disable */\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(this.layoutRefresh.bind(this), 500);\n        /* tslint:enable */\n    };\n    /**\n     * Refreshes the Pivot Table for blazor layoutRefresh is called for other base refresh is called\n     */\n    PivotView.prototype.refresh = function () {\n        if (isBlazor()) {\n            this.layoutRefresh();\n        }\n        else {\n            this.pivotRefresh();\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.layoutRefresh = function () {\n        if (this.element && this.element.classList.contains('e-pivotview') &&\n            (this.dataType === 'olap' ? (this.olapEngineModule && this.olapEngineModule.pivotValues) :\n                this.engineModule && this.engineModule.pivotValues)) {\n            if (this.grid) {\n                var colLength = (this.dataType === 'olap' && this.olapEngineModule.pivotValues.length > 0) ?\n                    this.olapEngineModule.pivotValues[0].length : (this.dataSourceSettings.values.length > 0 &&\n                    this.engineModule.pivotValues.length > 0 ? this.engineModule.pivotValues[0].length : 2);\n                var colWidth = this.renderModule.resizeColWidth(colLength);\n                this.grid.width = this.renderModule.calculateGridWidth();\n                this.renderModule.calculateGridHeight(true);\n                this.setCommonColumnsWidth(this.grid.columns, colWidth);\n                this.posCount = 0;\n                if (!this.showGroupingBar) {\n                    this.setGridColumns(this.grid.columns);\n                }\n                if (this.currentView === 'Table') {\n                    /* tslint:disable-next-line */\n                    if (this.cellTemplate && isBlazor()) {\n                        resetBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate');\n                    }\n                }\n                this.grid.refreshColumns();\n                if (this.showGroupingBar && this.groupingBarModule && this.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                    this.groupingBarModule.setGridRowWidth();\n                }\n            }\n            if (this.showToolbar && this.toolbarModule && this.toolbarModule.toolbar) {\n                this.toolbarModule.toolbar.width = this.grid ? (this.getGridWidthAsNumber() - 2) : (this.getWidthAsNumber() - 2);\n            }\n            if (this.chart && ((this.showToolbar && this.currentView === 'Chart') || !this.showToolbar)) {\n                this.chart.width = (this.showToolbar && this.grid) ? this.getGridWidthAsNumber().toString() :\n                    (this.displayOption.view === 'Both' && this.grid) ? this.getGridWidthAsNumber().toString() : this.getWidthAsNumber().toString();\n                if (this.displayOption.view === 'Chart' && this.showGroupingBar && this.groupingBarModule &&\n                    this.element.querySelector('.' + cls.CHART_GROUPING_BAR_CLASS)) {\n                    this.groupingBarModule.refreshUI();\n                }\n            }\n        }\n    };\n    PivotView.prototype.CellClicked = function (target, e) {\n        var _this_1 = this;\n        var ele = null;\n        if (target.classList.contains('e-headercell') || target.classList.contains('e-rowcell')) {\n            ele = target;\n        }\n        else if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-cellvalue') ||\n            target.classList.contains('e-headercelldiv')) {\n            ele = target.parentElement;\n        }\n        else if (target.classList.contains('e-headertext')) {\n            ele = target.parentElement.parentElement;\n        }\n        else if (target.classList.contains(cls.ROW_SELECT)) {\n            if (target.classList.contains(cls.SPAN_CLICKED)) {\n                this.isPopupClicked = false;\n            }\n            else {\n                this.isPopupClicked = true;\n            }\n        }\n        /* tslint:disable */\n        if (ele && !isNullOrUndefined(this.pivotValues) && this.pivotValues.length > 0) {\n            var colIndex_1 = Number(ele.getAttribute('aria-colindex'));\n            var rowIndex_1 = Number(ele.getAttribute('index'));\n            var colSpan_1 = Number(ele.getAttribute('aria-colspan'));\n            // let selectArgs: PivotCellSelectedEventArgs = { isCellClick: true, currentCell: target };\n            var selectArgs = {\n                cancel: false,\n                isCellClick: true,\n                currentCell: ele,\n                data: this.pivotValues[rowIndex_1][colIndex_1]\n            };\n            this.trigger(events.cellSelecting, selectArgs, function (observedArgs) {\n                if (_this_1.gridSettings.allowSelection) {\n                    if (_this_1.gridSettings.selectionSettings.mode === 'Both' ? !ele.classList.contains(cls.ROW_CELL_CLASS) :\n                        _this_1.gridSettings.selectionSettings.mode !== 'Row') {\n                        _this_1.clearSelection(ele, e, colIndex_1, rowIndex_1);\n                        if (!observedArgs.cancel) {\n                            _this_1.applyColumnSelection(e, ele, colIndex_1, colIndex_1 + (colSpan_1 > 0 ? (colSpan_1 - 1) : 0), rowIndex_1);\n                        }\n                    }\n                    else {\n                        _this_1.clearSelection(ele, e, colIndex_1, rowIndex_1);\n                    }\n                    if (_this_1.gridSettings.selectionSettings.mode !== 'Column' && !ele.classList.contains(cls.COLUMNSHEADER)) {\n                        _this_1.rowDeselect(ele, e, rowIndex_1, _this_1.gridSettings.selectionSettings.mode, observedArgs);\n                    }\n                    if (_this_1.gridSettings.selectionSettings.mode !== 'Column' && !observedArgs.cancel) {\n                        if (_this_1.gridSettings.selectionSettings.type === \"Multiple\" ? (!e.ctrlKey && !e.shiftKey) : true && _this_1.selectedRowIndex !== rowIndex_1) {\n                            _this_1.selectedRowIndex = rowIndex_1;\n                            _this_1.grid.selectionModule.selectRow(rowIndex_1 - _this_1.renderModule.rowStartPos);\n                        }\n                        else {\n                            _this_1.selectedRowIndex = undefined;\n                        }\n                    }\n                }\n                if (_this_1.cellClick && observedArgs.isCellClick) {\n                    _this_1.trigger(events.cellClick, {\n                        currentCell: ele,\n                        data: _this_1.pivotValues[rowIndex_1][colIndex_1],\n                        nativeEvent: e\n                    });\n                }\n                _this_1.getSelectedCellsPos();\n            });\n        }\n    };\n    PivotView.prototype.rowDeselect = function (ele, e, rowIndex, mode, observedArgs) {\n        if (!e.shiftKey && !e.ctrlKey && this.gridSettings.selectionSettings.mode !== 'Both' || this.gridSettings.selectionSettings.type === 'Single') {\n            if (!ele.classList.contains(cls.CELL_SELECTED_BGCOLOR) && !ele.classList.contains(cls.SELECTED_BGCOLOR) && !ele.classList.contains(cls.CELL_ACTIVE_BGCOLOR)) {\n                if (!observedArgs.cancel) {\n                    removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n                    removeClass(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR), cls.SELECTED_BGCOLOR);\n                    removeClass(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), cls.CELL_ACTIVE_BGCOLOR);\n                }\n                else {\n                    this.setSavedSelectedCells();\n                }\n            }\n            else {\n                removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n                removeClass(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR), cls.SELECTED_BGCOLOR);\n                removeClass(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), cls.CELL_ACTIVE_BGCOLOR);\n                if (!observedArgs.cancel) {\n                    if ((mode === 'Cell')) {\n                        addClass([ele], [cls.CELL_SELECTED_BGCOLOR]);\n                    }\n                    else if (mode === 'Row' || this.gridSettings.selectionSettings.type === 'Single') {\n                        var query = '[index=\"' + rowIndex + '\"]';\n                        addClass(this.element.querySelectorAll(query), [cls.SELECTED_BGCOLOR, cls.CELL_ACTIVE_BGCOLOR]);\n                        if (mode !== 'Row') {\n                            ele.classList.add(cls.CELL_SELECTED_BGCOLOR);\n                        }\n                    }\n                }\n                else {\n                    this.setSavedSelectedCells();\n                }\n            }\n        }\n        else if (((e.shiftKey || e.ctrlKey) || this.gridSettings.selectionSettings.mode == 'Both') && (observedArgs.cancel)) {\n            removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n            removeClass(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR), cls.SELECTED_BGCOLOR);\n            removeClass(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), cls.CELL_ACTIVE_BGCOLOR);\n            this.setSavedSelectedCells();\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.clearSelection = function (ele, e, colIndex, rowIndex) {\n        if ((!e.shiftKey && !e.ctrlKey) || this.gridSettings.selectionSettings.type === 'Single') {\n            if (this.gridSettings.selectionSettings.mode === 'Cell') {\n                if (ele.classList.contains(cls.COLUMNSHEADER)) {\n                    removeClass(this.element.querySelectorAll(('.' + cls.ROW_CELL_CLASS + '.') + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n                }\n                else {\n                    removeClass(this.element.querySelectorAll(('.' + cls.COLUMNSHEADER + '.') + cls.CELL_ACTIVE_BGCOLOR), [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n                }\n            }\n            else if (this.gridSettings.selectionSettings.mode === 'Both') {\n                if (ele.classList.contains(cls.ROW_CELL_CLASS)) {\n                    for (var _i = 0, _a = [].slice.call(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR + ', .' + cls.CELL_SELECTED_BGCOLOR)); _i < _a.length; _i++) {\n                        var ele_1 = _a[_i];\n                        // if (Number((ele as HTMLElement).getAttribute('index')) !== rowIndex) {\n                        removeClass([ele_1], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR, cls.CELL_SELECTED_BGCOLOR]);\n                        // }\n                    }\n                }\n                else {\n                    removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n                }\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.applyRowSelection = function (colIndex, rowIndex, e) {\n        var pivotValue = this.engineModule.pivotValues[rowIndex][colIndex];\n        if (!e.ctrlKey && !e.shiftKey && pivotValue && this.selectedRowIndex !== rowIndex) {\n            this.selectedRowIndex = rowIndex;\n            var parentLevel = pivotValue.level;\n            var rCount = rowIndex;\n            do {\n                rCount++;\n                pivotValue = this.engineModule.pivotValues[rCount][colIndex];\n            } while (pivotValue && parentLevel < pivotValue.level);\n            var _this = this;\n            if (this.isAdaptive) {\n                this.rowRangeSelection = {\n                    enable: true,\n                    startIndex: rowIndex - _this.renderModule.rowStartPos,\n                    endIndex: rCount - (1 + _this.renderModule.rowStartPos)\n                };\n            }\n            else {\n                _this.grid.selectionModule.selectRowsByRange(rowIndex -\n                    _this.renderModule.rowStartPos, rCount - (1 + _this.renderModule.rowStartPos));\n            }\n        }\n        else {\n            this.selectedRowIndex = undefined;\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.applyColumnSelection = function (e, target, colStart, colEnd, rowStart) {\n        if (!target.classList.contains(cls.ROWSHEADER) &&\n            (this.gridSettings.selectionSettings.mode === 'Cell' ? target.classList.contains(cls.COLUMNSHEADER) : true)) {\n            var isCtrl = e.ctrlKey;\n            if (this.isAdaptive && this.gridSettings.selectionSettings.type === 'Multiple') {\n                this.grid.selectionModule.showPopup(e);\n                if (this.isPopupClicked) {\n                    this.element.querySelector('.' + cls.ROW_SELECT).classList.add(cls.SPAN_CLICKED);\n                    isCtrl = true;\n                }\n                else {\n                    this.element.querySelector('.' + cls.ROW_SELECT).classList.remove(cls.SPAN_CLICKED);\n                    isCtrl = false;\n                }\n            }\n            var queryStringArray = [];\n            var type = this.gridSettings.selectionSettings.type;\n            var isToggle = target.classList.contains(cls.CELL_ACTIVE_BGCOLOR);\n            var activeColumns = [];\n            var actColPos = {};\n            for (var cCnt = colStart; cCnt <= colEnd; cCnt++) {\n                activeColumns.push(cCnt.toString());\n            }\n            if (!isCtrl || type === 'Single') {\n                for (var _i = 0, _a = [].slice.call(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR)); _i < _a.length; _i++) {\n                    var ele = _a[_i];\n                    removeClass([ele], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n                    if (activeColumns.indexOf(ele.getAttribute('aria-colindex')) === -1) {\n                        isToggle = false;\n                    }\n                    var colIndex = Number(ele.getAttribute('aria-colindex'));\n                    actColPos[colIndex] = colIndex;\n                }\n                activeColumns = Object.keys(actColPos).length > 0 ? Object.keys(actColPos).sort(function (a, b) {\n                    return a - b;\n                }) : activeColumns;\n            }\n            else {\n                isToggle = false;\n            }\n            if (type === 'Multiple' && e.shiftKey) {\n                this.shiftLockedPos = this.shiftLockedPos.length === 0 ? activeColumns : this.shiftLockedPos;\n                if (Number(this.shiftLockedPos[0]) <= colStart) {\n                    colStart = Number(this.shiftLockedPos[0]);\n                }\n                else {\n                    colEnd = colEnd < Number(this.shiftLockedPos[this.shiftLockedPos.length - 1]) ?\n                        Number(this.shiftLockedPos[this.shiftLockedPos.length - 1]) : colEnd;\n                }\n            }\n            else {\n                this.shiftLockedPos = [];\n            }\n            var rowSelectedList = [];\n            if (e.ctrlKey && this.gridSettings.selectionSettings.mode === 'Both' && type === 'Multiple' && !target.classList.contains(cls.ROWSHEADER)) {\n                for (var _b = 0, _c = [].slice.call(this.element.querySelectorAll('.' + cls.ROWSHEADER + '.' + cls.CELL_SELECTED_BGCOLOR)); _b < _c.length; _b++) {\n                    var ele = _c[_b];\n                    rowSelectedList.push(ele.getAttribute('index'));\n                }\n            }\n            var count = colStart;\n            while (count <= colEnd) {\n                queryStringArray.push('[aria-colindex=\"' + count + '\"]' + (this.gridSettings.selectionSettings.mode === 'Cell' ?\n                    '[index=\"' + rowStart + '\"]' : \"\") + '');\n                count++;\n            }\n            if (!isToggle) {\n                rowStart = target.classList.contains('e-headercell') ? rowStart : (this.renderModule.rowStartPos - 1);\n                var isTargetSelected = target.classList.contains(cls.CELL_ACTIVE_BGCOLOR);\n                for (var _d = 0, _e = [].slice.call(this.element.querySelectorAll(queryStringArray.toString())); _d < _e.length; _d++) {\n                    var ele = _e[_d];\n                    if (Number(ele.getAttribute('index')) >= rowStart) {\n                        if (isTargetSelected && isCtrl && (rowSelectedList.indexOf(ele.getAttribute('index')) === -1)) {\n                            removeClass([ele], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n                        }\n                        else {\n                            addClass([ele], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n                        }\n                    }\n                }\n            }\n            this.renderModule.selected();\n        }\n    };\n    PivotView.prototype.getSelectedCellsPos = function () {\n        var control = this;\n        control.savedSelectedCellsPos = [];\n        control.cellSelectionPos = [];\n        for (var _i = 0, _a = [].slice.call(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR)); _i < _a.length; _i++) {\n            var ele = _a[_i];\n            control.savedSelectedCellsPos.push({ rowIndex: ele.getAttribute('index'), colIndex: ele.getAttribute('aria-colindex') });\n        }\n        for (var _b = 0, _c = [].slice.call(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR)); _b < _c.length; _b++) {\n            var ele = _c[_b];\n            control.cellSelectionPos.push({ rowIndex: ele.getAttribute('index'), colIndex: ele.getAttribute('aria-colindex') });\n        }\n    };\n    PivotView.prototype.setSavedSelectedCells = function () {\n        var control = this;\n        for (var _i = 0, _a = [].slice.call(this.savedSelectedCellsPos); _i < _a.length; _i++) {\n            var item = _a[_i];\n            var query = '[aria-colindex=\"' + item.colIndex + '\"][index=\"' + item.rowIndex + '\"]';\n            addClass([control.element.querySelector(query)], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n        }\n        for (var _b = 0, _c = [].slice.call(this.cellSelectionPos); _b < _c.length; _b++) {\n            var item = _c[_b];\n            var query = '[aria-colindex=\"' + item.colIndex + '\"][index=\"' + item.rowIndex + '\"]';\n            addClass([control.element.querySelector(query)], [cls.CELL_SELECTED_BGCOLOR]);\n        }\n    };\n    /* tslint:enable */\n    PivotView.prototype.renderEmptyGrid = function () {\n        var _this_1 = this;\n        this.isEmptyGrid = true;\n        this.notEmpty = false;\n        this.renderModule = new Render(this);\n        if (this.grid && this.grid.element && this.element.querySelector('.e-grid')) {\n            /* tslint:disable */\n            this.notEmpty = true;\n            this.grid.setProperties({\n                columns: this.renderModule.frameEmptyColumns(),\n                dataSource: this.renderModule.frameEmptyData()\n            }, true);\n            /* tslint:enable */\n            this.grid.notify('datasource-modified', {});\n            this.grid.refreshColumns();\n        }\n        else {\n            if (this.element.querySelector('.' + cls.GRID_CLASS)) {\n                remove(this.element.querySelector('.' + cls.GRID_CLASS));\n            }\n            this.renderModule.bindGrid(this, true);\n            /* tslint:disable:no-empty */\n            this.grid.showSpinner = function () { };\n            this.grid.hideSpinner = function () { };\n            /* tslint:enable:no-empty */\n            this.element.appendChild(createElement('div', { id: this.element.id + '_grid' }));\n            this.grid.isStringTemplate = true;\n            this.grid.appendTo('#' + this.element.id + '_grid');\n            /* tslint:disable-next-line:no-any */\n            this.grid.off('data-ready', this.grid.dataReady);\n            this.grid.on('data-ready', function () {\n                _this_1.grid.scrollModule.setWidth();\n                _this_1.grid.scrollModule.setHeight();\n                _this_1.grid.element.querySelector('.e-movablecontent').style.overflowY = 'auto';\n            });\n        }\n    };\n    /* tslint:disable */\n    PivotView.prototype.initEngine = function () {\n        var _this_1 = this;\n        if (this.dataType === 'pivot') {\n            var data = !isNullOrUndefined(this.dataSourceSettings.dataSource) ? this.dataSourceSettings.dataSource[0] :\n                !isNullOrUndefined(this.engineModule.data) ? this.engineModule.data[0] : undefined;\n            if (data && this.pivotCommon) {\n                var isArray = Object.prototype.toString.call(data) == '[object Array]';\n                if (isArray && this.dataSourceSettings.type === 'JSON') {\n                    this.pivotCommon.errorDialog.createErrorDialog(this.localeObj.getConstant('error'), this.localeObj.getConstant('invalidJSON'));\n                    return;\n                }\n                else if (!isArray && this.dataSourceSettings.type === 'CSV') {\n                    this.pivotCommon.errorDialog.createErrorDialog(this.localeObj.getConstant('error'), this.localeObj.getConstant('invalidCSV'));\n                    return;\n                }\n            }\n        }\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings)\n        };\n        this.trigger(events.enginePopulating, args, function (observedArgs) {\n            PivotUtil.updateDataSourceSettings(_this_1, observedArgs.dataSourceSettings);\n            _this_1.updatePageSettings(false);\n            var customProperties = {\n                mode: '',\n                savedFieldList: undefined,\n                pageSettings: _this_1.pageSettings,\n                enableValueSorting: _this_1.enableValueSorting,\n                isDrillThrough: (_this_1.allowDrillThrough || _this_1.editSettings.allowEditing),\n                localeObj: _this_1.localeObj,\n                fieldsType: _this_1.fieldsType\n            };\n            if (_this_1.dataType === 'pivot') {\n                if (_this_1.dataSourceSettings.groupSettings && _this_1.dataSourceSettings.groupSettings.length > 0) {\n                    var dataSet = _this_1.engineModule.data;\n                    _this_1.clonedDataSet = (_this_1.clonedDataSet ? _this_1.clonedDataSet : PivotUtil.getClonedData(dataSet));\n                    if (isBlazor()) {\n                        _this_1.clonedReport = _this_1.clonedReport ? _this_1.clonedReport : extend({}, _this_1.dataSourceSettings, null, true);\n                    }\n                    else {\n                        _this_1.setProperties({ dataSourceSettings: { dataSource: [] } }, true);\n                        _this_1.clonedReport = _this_1.clonedReport ? _this_1.clonedReport : extend({}, _this_1.dataSourceSettings, null, true);\n                        _this_1.setProperties({ dataSourceSettings: { dataSource: dataSet } }, true);\n                    }\n                }\n                if (isBlazor() && _this_1.enableVirtualization) {\n                    var pivot_3 = _this_1;\n                    var sfBlazor = 'sfBlazor';\n                    var customArgs = window[sfBlazor].copyWithoutCircularReferences([customProperties], customProperties);\n                    var datasourceSettings = window[sfBlazor].copyWithoutCircularReferences([pivot_3.dataSourceSettings], pivot_3.dataSourceSettings);\n                    pivot_3.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'renderEngine', { 'dataSourceSettings': datasourceSettings, 'customProperties': customArgs }).then(function (data) {\n                        if (data === 0) {\n                            _this_1.pivotCommon.errorDialog.createErrorDialog(_this_1.localeObj.getConstant('error'), (pivot_3.dataSourceSettings.type === 'CSV' ?\n                                _this_1.localeObj.getConstant('invalidCSV') : _this_1.localeObj.getConstant('invalidJSON')));\n                            return;\n                        }\n                        else {\n                            pivot_3.updateBlazorData(data, pivot_3);\n                            PivotUtil.setPivotProperties(pivot_3, { pivotValues: pivot_3.engineModule.pivotValues });\n                            pivot_3.enginePopulatedEventMethod('initEngine', pivot_3);\n                        }\n                    });\n                }\n                else {\n                    if (_this_1.dataSourceSettings.mode !== 'Server') {\n                        _this_1.engineModule.renderEngine(_this_1.dataSourceSettings, customProperties, _this_1.getValueCellInfo.bind(_this_1));\n                    }\n                    _this_1.allowServerDataBinding = false;\n                    _this_1.setProperties({ pivotValues: _this_1.engineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete _this_1.bulkChanges.pivotValues;\n                    _this_1.allowServerDataBinding = true;\n                    _this_1.enginePopulatedEventMethod('initEngine');\n                }\n            }\n            else if (_this_1.dataSourceSettings.providerType === 'SSAS' && _this_1.dataType === 'olap') {\n                customProperties.savedFieldList = _this_1.olapEngineModule.fieldList;\n                customProperties.savedFieldListData = _this_1.olapEngineModule.fieldListData;\n                _this_1.olapEngineModule.renderEngine(_this_1.dataSourceSettings, customProperties);\n                _this_1.allowServerDataBinding = false;\n                _this_1.setProperties({ pivotValues: _this_1.olapEngineModule.pivotValues }, true);\n                /* tslint:disable-next-line:no-any */\n                delete _this_1.bulkChanges.pivotValues;\n                _this_1.allowServerDataBinding = true;\n                _this_1.enginePopulatedEventMethod('initEngine');\n            }\n        });\n    };\n    PivotView.prototype.enginePopulatedEventMethod = function (action, control) {\n        var _this_1 = this;\n        if (action === 'initEngine') {\n            var this$_1 = control ? control : this;\n            this.trigger(events.enginePopulated, { pivotValues: this.pivotValues }, function (observedArgs) {\n                if (this$_1.dataType === 'olap') {\n                    this$_1.olapEngineModule.pivotValues = isBlazor() ? _this_1.olapEngineModule.pivotValues : observedArgs.pivotValues;\n                    this$_1.pivotValues = this$_1.olapEngineModule.pivotValues;\n                }\n                else {\n                    this$_1.engineModule.pivotValues = isBlazor() ? _this_1.engineModule.pivotValues : observedArgs.pivotValues;\n                    this$_1.pivotValues = this$_1.engineModule.pivotValues;\n                }\n                this$_1.notify(events.dataReady, {});\n                this$_1.notEmpty = true;\n            });\n        }\n        else {\n            var pivot_4 = control ? control : this;\n            var eventArgs = {\n                dataSourceSettings: pivot_4.dataSourceSettings,\n                pivotValues: isBlazor() ? pivot_4.dataType === 'olap' ? pivot_4.olapEngineModule.pivotValues :\n                    pivot_4.engineModule.pivotValues : pivot_4.pivotValues\n            };\n            pivot_4.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n                var dataSource = pivot_4.dataSourceSettings.dataSource;\n                if (isBlazor() && observedArgs.dataSourceSettings.dataSource instanceof Object) {\n                    observedArgs.dataSourceSettings.dataSource = dataSource;\n                }\n                pivot_4.dataSourceSettings = observedArgs.dataSourceSettings;\n                if (pivot_4.dataType === 'olap') {\n                    pivot_4.olapEngineModule.pivotValues = isBlazor() ? pivot_4.olapEngineModule.pivotValues : observedArgs.pivotValues;\n                    pivot_4.allowServerDataBinding = false;\n                    pivot_4.setProperties({ pivotValues: pivot_4.olapEngineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete pivot_4.bulkChanges.pivotValues;\n                    pivot_4.allowServerDataBinding = true;\n                }\n                else {\n                    pivot_4.engineModule.pivotValues = isBlazor() ? pivot_4.engineModule.pivotValues : observedArgs.pivotValues;\n                    pivot_4.allowServerDataBinding = false;\n                    pivot_4.setProperties({ pivotValues: pivot_4.engineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete pivot_4.bulkChanges.pivotValues;\n                    pivot_4.allowServerDataBinding = true;\n                }\n                pivot_4.pivotCommon.engineModule = pivot_4.dataType === 'olap' ? pivot_4.olapEngineModule : pivot_4.engineModule;\n                pivot_4.pivotCommon.dataSourceSettings = pivot_4.dataSourceSettings;\n                pivot_4.renderPivotGrid();\n            });\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.updateBlazorData = function (data, control) {\n        control.allowServerDataBinding = false;\n        var pivVal;\n        var pivotFL;\n        var pivotFields;\n        var valueSort;\n        var blazPivot = control;\n        var valContent = [];\n        var headContent = [];\n        pivotFL = JSON.parse(data[\"fieldList\"]);\n        pivVal = JSON.parse(data[\"pivotValue\"]);\n        pivotFields = JSON.parse(data[\"fields\"]);\n        valueSort = JSON.parse(data[\"valueSortSettings\"]);\n        var len = pivVal.length;\n        var pvalues = JSON.parse(pivVal[0]);\n        var pvalLen = pvalues.length;\n        var blazPivotValues = new Array(len);\n        for (i = 0; i < len; i++) {\n            blazPivotValues[i] = new Array(pvalLen);\n        }\n        for (var i = 0; i < len; i++) {\n            if (pivVal[i] != null) {\n                var values = JSON.parse(pivVal[i]);\n                var valLen = values.length;\n                for (var j = 0; j < valLen; j++) {\n                    blazPivotValues[i][j] = values[j];\n                }\n            }\n            else {\n                blazPivotValues[i] = undefined;\n                //headContent[i] = undefined;\n            }\n        }\n        var pivotValues = blazPivotValues;\n        var rowPos;\n        for (var rCnt = 0; rCnt < pivotValues.length; rCnt++) {\n            if (pivotValues[rCnt] && pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row') {\n                rowPos = rCnt;\n                break;\n            }\n        }\n        blazPivot.pivotValues = blazPivotValues;\n        valContent = PivotUtil.frameContent(blazPivotValues, 'value', rowPos, blazPivot);\n        headContent = PivotUtil.frameContent(blazPivotValues, 'header', rowPos, blazPivot);\n        this.engineModule.pivotValues = blazPivotValues;\n        this.engineModule.fieldList = pivotFL;\n        this.engineModule.fields = pivotFields;\n        this.engineModule.valueSortSettings = valueSort;\n        this.engineModule.valueContent = valContent;\n        this.engineModule.headerContent = headContent;\n        this.engineModule.isEngineUpdated = JSON.parse(data[\"isEngineUpdated\"]);\n        this.engineModule.isEmptyData = JSON.parse(data[\"isEmptyData\"]);\n        this.engineModule.rowCount = JSON.parse(data[\"rowCount\"]);\n        this.engineModule.columnCount = JSON.parse(data[\"columnCount\"]);\n        this.engineModule.rowStartPos = JSON.parse(data[\"rowStartPos\"]);\n        this.engineModule.colStartPos = JSON.parse(data[\"colStartPos\"]);\n        this.engineModule.rowFirstLvl = JSON.parse(data[\"rowFirstLvl\"]);\n        this.engineModule.colFirstLvl = JSON.parse(data[\"colFirstLvl\"]);\n        control.allowServerDataBinding = true;\n    };\n    /* tslint:enable */\n    PivotView.prototype.generateData = function () {\n        if (this.displayOption.view !== 'Chart') {\n            this.renderEmptyGrid();\n        }\n        this.showWaitingPopup();\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(this.refreshData.bind(this), 100);\n    };\n    /** @hidden */\n    PivotView.prototype.refreshData = function () {\n        var pivot = this;\n        if (isBlazor()) {\n            if (pivot.dataType === 'olap') {\n                if (pivot.dataSourceSettings.dataSource instanceof DataManager) {\n                    pivot.allowServerDataBinding = false;\n                    pivot.setProperties({\n                        dataSourceSettings: {\n                            dataSource: undefined\n                        }\n                    }, true);\n                    pivot.allowServerDataBinding = true;\n                }\n            }\n        }\n        if (pivot.dataSourceSettings && (pivot.dataSourceSettings.dataSource || pivot.dataSourceSettings.url)) {\n            if (pivot.dataSourceSettings.dataSource instanceof DataManager) {\n                if (isBlazor() && pivot.enableVirtualization) {\n                    if (!pivot.element.querySelector('.e-spinner-pane')) {\n                        this.showWaitingPopup();\n                    }\n                    pivot.initEngine();\n                }\n                else {\n                    if (pivot.dataType === 'pivot' && pivot.remoteData.length > 0) {\n                        if (!this.element.querySelector('.e-spinner-pane')) {\n                            this.showWaitingPopup();\n                        }\n                        this.engineModule.data = pivot.remoteData;\n                        this.initEngine();\n                    }\n                    else {\n                        setTimeout(pivot.getData.bind(pivot), 100);\n                    }\n                }\n            }\n            else if ((this.dataSourceSettings.url !== '' && this.dataType === 'olap') ||\n                (pivot.dataSourceSettings.dataSource && pivot.dataSourceSettings.dataSource.length > 0 || this.engineModule.data.length > 0)) {\n                if (pivot.dataType === 'pivot') {\n                    this.hideWaitingPopup();\n                    pivot.engineModule.data = pivot.dataSourceSettings.dataSource;\n                }\n                pivot.initEngine();\n            }\n            else {\n                if (this.dataSourceSettings.mode === 'Server') {\n                    this.getEngine(\"onRefresh\");\n                }\n                this.hideWaitingPopup();\n            }\n        }\n        else if (isBlazor() && pivot.dataType === 'pivot' &&\n            this.engineModule.data && this.engineModule.data.length > 0) {\n            this.initEngine();\n        }\n        else {\n            this.hideWaitingPopup();\n        }\n    };\n    PivotView.prototype.getValueCellInfo = function (aggregateObj) {\n        var args = aggregateObj;\n        this.trigger(events.aggregateCellInfo, args);\n        return args;\n    };\n    /**\n     * De-Register the internal events.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.bindTriggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    PivotView.prototype.getData = function () {\n        if (isBlazor()) {\n            this.dataSourceSettings.dataSource.\n                executeQuery(new Query().requiresCount()).then(this.executeQuery.bind(this));\n        }\n        else {\n            this.dataSourceSettings.dataSource.executeQuery(new Query()).then(this.executeQuery.bind(this));\n        }\n    };\n    PivotView.prototype.executeQuery = function (e) {\n        if (!this.element.querySelector('.e-spinner-pane')) {\n            this.showWaitingPopup();\n        }\n        var pivot = this;\n        //setTimeout(() => {\n        pivot.engineModule.data = e.result;\n        if (!isNullOrUndefined(pivot.engineModule.data) && pivot.engineModule.data.length > 0) {\n            pivot.initEngine();\n        }\n        else {\n            this.hideWaitingPopup();\n        }\n        //});\n    };\n    /** @hidden */\n    PivotView.prototype.applyFormatting = function (pivotValues) {\n        if (pivotValues) {\n            var colIndex = [];\n            for (var len = pivotValues.length, i = 0; i < len; i++) {\n                if (pivotValues[i] !== undefined && pivotValues[i][0] === undefined) {\n                    colIndex.push(i);\n                }\n            }\n            for (var i = 0; i < pivotValues.length; i++) {\n                for (var j = 1; (pivotValues[i] && j < pivotValues[i].length); j++) {\n                    if (pivotValues[i][j].axis === 'value' && pivotValues[i][j].formattedText !== '') {\n                        pivotValues[i][j].style = undefined;\n                        pivotValues[i][j].cssClass = undefined;\n                        var format_1 = this.dataSourceSettings.conditionalFormatSettings;\n                        for (var k = 0; k < format_1.length; k++) {\n                            if ((format_1[k].applyGrandTotals === true || isNullOrUndefined(format_1[k].applyGrandTotals)) ? true :\n                                pivotValues[i][j].rowHeaders !== '' &&\n                                    pivotValues[i][j].columnHeaders !== '') {\n                                if (this.checkCondition(pivotValues[i][j].value, format_1[k].conditions, format_1[k].value1, format_1[k].value2)) {\n                                    // let ilen: number =\n                                    //     (this.dataSourceSettings.valueAxis === 'row' ? i : this.engineModule.headerContent.length - 1);\n                                    // let jlen: number = (this.dataSourceSettings.valueAxis === 'row' ? 0 : j);\n                                    if ((!format_1[k].measure || pivotValues[i][j].actualText === format_1[k].measure) &&\n                                        (format_1[k].measure === undefined || format_1[k].measure !== '') && (format_1[k].label === undefined ||\n                                        format_1[k].label !== '') && ((!format_1[k].label ||\n                                        (pivotValues[i][0].valueSort.levelName\n                                            .indexOf(format_1[k].label)) > -1) || (pivotValues[i][j]\n                                        .rowHeaders.indexOf(format_1[k].label) > -1) ||\n                                        (pivotValues[i][j].columnHeaders\n                                            .indexOf(format_1[k].label) > -1))) {\n                                        if (format_1[k].style && format_1[k].style.backgroundColor) {\n                                            format_1[k].style.backgroundColor = this.conditionalFormattingModule\n                                                .isHex(format_1[k].style.backgroundColor.substr(1)) ? format_1[k].style.backgroundColor :\n                                                this.conditionalFormattingModule.colourNameToHex(format_1[k].style.backgroundColor);\n                                        }\n                                        if (format_1[k].style && format_1[k].style.color) {\n                                            format_1[k].style.color = this.conditionalFormattingModule\n                                                .isHex(format_1[k].style.color.substr(1)) ? format_1[k].style.color :\n                                                this.conditionalFormattingModule.colourNameToHex(format_1[k].style.color);\n                                        }\n                                        pivotValues[i][j].style = format_1[k].style;\n                                        pivotValues[i][j].cssClass = 'format' + this.element.id + k;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            var format = this.dataSourceSettings.conditionalFormatSettings;\n            for (var k = 0; k < format.length; k++) {\n                var sheet = (this.createStyleSheet.bind(this))();\n                var str = 'color: ' + format[k].style.color + '!important;background-color: ' + format[k].style.backgroundColor +\n                    '!important;font-size: ' + format[k].style.fontSize + '!important;font-family: ' + format[k].style.fontFamily +\n                    ' !important;';\n                sheet.insertRule('.format' + this.element.id + k + '{' + str + '}', 0);\n            }\n        }\n    };\n    PivotView.prototype.createStyleSheet = function () {\n        var style = document.createElement('style');\n        style.appendChild(document.createTextNode(''));\n        document.head.appendChild(style);\n        return style.sheet;\n    };\n    PivotView.prototype.applyHyperlinkSettings = function () {\n        if (this.pivotValues) {\n            var pivotValues = this.pivotValues;\n            var colIndex = [];\n            for (var len = pivotValues.length, i = 0; i < len; i++) {\n                if (!isNullOrUndefined(pivotValues[i]) && pivotValues[i][0] === undefined) {\n                    colIndex.push(i);\n                }\n            }\n            if (this.hyperlinkSettings.conditionalSettings.length > 0) {\n                for (var i = 0; i < pivotValues.length; i++) {\n                    for (var j = 1; (pivotValues[i] && j < pivotValues[i].length); j++) {\n                        if (pivotValues[i][j].axis === 'value') {\n                            pivotValues[i][j].enableHyperlink = false;\n                            var collection = this.hyperlinkSettings.conditionalSettings;\n                            for (var k = 0; k < collection.length; k++) {\n                                if (this.checkCondition(pivotValues[i][j].value, collection[k].conditions, collection[k].value1, collection[k].value2)) {\n                                    var ilen = (this.dataSourceSettings.valueAxis === 'row' ?\n                                        i : (this.dataType === 'pivot' ?\n                                        this.engineModule.headerContent.length - 1 : this.olapEngineModule.headerContent.length - 1));\n                                    var jlen = (this.dataSourceSettings.valueAxis === 'row' ? 0 : j);\n                                    if ((!collection[k].measure || this.dataSourceSettings.values.length === 1 ||\n                                        (pivotValues[ilen][jlen].valueSort &&\n                                            (pivotValues[ilen][jlen].actualText === collection[k].measure))) &&\n                                        (!collection[k].label || ((pivotValues[colIndex[collection[k].label.split('.').length - 1]] &&\n                                            pivotValues[colIndex[collection[k].label.split('.').length - 1]][j] &&\n                                            pivotValues[colIndex[collection[k].label.split('.').length - 1]][j].valueSort &&\n                                            pivotValues[colIndex[collection[k].label.split('.').length - 1]][j].\n                                                valueSort[collection[k].label]) || (pivotValues[i][0].\n                                            valueSort.levelName.indexOf(collection[k].label) > -1)))) {\n                                        pivotValues[i][j].enableHyperlink = true;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (!isNullOrUndefined(this.hyperlinkSettings.headerText)) {\n                var headerDelimiter = this.dataSourceSettings.valueSortSettings.headerDelimiter ? this.dataSourceSettings.valueSortSettings.headerDelimiter : '.';\n                for (var i = 0; i < pivotValues.length; i++) {\n                    for (var j = 1; (pivotValues[i] && j < pivotValues[i].length); j++) {\n                        if (pivotValues[i][j].axis === 'value') {\n                            // (pivotValues[i][j] as IAxisSet).enableHyperlink = false;\n                            var label = this.hyperlinkSettings.headerText;\n                            var ilen = (this.dataSourceSettings.valueAxis === 'row' ?\n                                i : (this.dataType === 'pivot' ?\n                                this.engineModule.headerContent.length - 1 : this.olapEngineModule.headerContent.length - 1));\n                            var jlen = (this.dataSourceSettings.valueAxis === 'row' ? 0 : j);\n                            if ((pivotValues[colIndex[label.split(headerDelimiter).length - 1]] &&\n                                pivotValues[colIndex[label.split(headerDelimiter).length - 1]][j] &&\n                                pivotValues[colIndex[label.split(headerDelimiter).length - 1]][j].\n                                    valueSort && pivotValues[colIndex[label.split(headerDelimiter).length - 1]][j].\n                                valueSort[label])) {\n                                for (var _i = 0, colIndex_2 = colIndex; _i < colIndex_2.length; _i++) {\n                                    var index = colIndex_2[_i];\n                                    if (pivotValues[index][j] &&\n                                        pivotValues[index][j].axis === 'column' &&\n                                        (pivotValues[index][j].valueSort.levelName.indexOf(label) > -1)) {\n                                        pivotValues[index][j].enableHyperlink = true;\n                                    }\n                                }\n                                pivotValues[i][j].enableHyperlink = true;\n                            }\n                            else if (pivotValues[i][0].valueSort.levelName.indexOf(label) > -1) {\n                                pivotValues[i][0].enableHyperlink = true;\n                                pivotValues[i][j].enableHyperlink = true;\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                return;\n            }\n        }\n    };\n    PivotView.prototype.checkCondition = function (cellValue, conditions, conditionalValue1, conditionalValue2) {\n        switch (conditions) {\n            case 'LessThan':\n                return cellValue < conditionalValue1;\n            case 'LessThanOrEqualTo':\n                return cellValue <= conditionalValue1;\n            case 'GreaterThan':\n                return cellValue > conditionalValue1;\n            case 'GreaterThanOrEqualTo':\n                return cellValue >= conditionalValue1;\n            case 'Equals':\n                return cellValue === conditionalValue1;\n            case 'NotEquals':\n                return cellValue !== conditionalValue1;\n            case 'Between':\n                return (conditionalValue1 < conditionalValue2 && cellValue >= conditionalValue1 && cellValue <= conditionalValue2) ||\n                    (conditionalValue1 > conditionalValue2 && cellValue <= conditionalValue1 && cellValue >= conditionalValue2);\n            case 'NotBetween':\n                return !((conditionalValue1 < conditionalValue2 && cellValue >= conditionalValue1 && cellValue <= conditionalValue2) ||\n                    (conditionalValue1 > conditionalValue2 && cellValue <= conditionalValue1 && cellValue >= conditionalValue2));\n            default:\n                return false;\n        }\n    };\n    /** @hidden */\n    /* tslint:disable:max-func-body-length */\n    PivotView.prototype.updateGroupingReport = function (newGroupSettings, updateGroupType) {\n        if (!this.clonedDataSet && !this.clonedReport) {\n            var dataSet = this.engineModule.data;\n            this.clonedDataSet = PivotUtil.getClonedData(dataSet);\n            if (isBlazor()) {\n                this.clonedReport = PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings);\n            }\n            else {\n                this.setProperties({ dataSourceSettings: { dataSource: [] } }, true);\n                this.clonedReport = PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings);\n                this.setProperties({ dataSourceSettings: { dataSource: dataSet } }, true);\n            }\n        }\n        /* tslint:disable-next-line:max-line-length */\n        var dateGroup = /_date_group_years|_date_group_quarters|_date_group_quarterYear|_date_group_months|_date_group_days|_date_group_hours|_date_group_minutes|_date_group_seconds/g;\n        var data = PivotUtil.getClonedData(this.clonedDataSet);\n        var dataSource = this.dataSourceSettings;\n        var clonedReport = this.clonedReport.properties ?\n            this.clonedReport.properties : this.clonedReport;\n        var axisFields = [dataSource.rows, dataSource.columns, dataSource.values, dataSource.filters];\n        var fieldSettings = [dataSource.filterSettings, dataSource.sortSettings, dataSource.formatSettings, dataSource.drilledMembers];\n        var clonedAxisFields = clonedReport.rows;\n        clonedAxisFields = clonedAxisFields.concat(clonedReport.columns, clonedReport.values, clonedReport.filters);\n        if (newGroupSettings.length === 0 || newGroupSettings.length > 0) {\n            this.engineModule.groupingFields = {};\n            if (!isBlazor()) {\n                /* tslint:disable-next-line:max-line-length */\n                this.setProperties({ dataSourceSettings: { dataSource: data, groupSettings: newGroupSettings.length > 0 ? dataSource.groupSettings : [] } }, true);\n            }\n            var isDateGroupUpdated = updateGroupType === 'Date';\n            var fields = [];\n            for (var i = 0, cnt = axisFields.length; i < cnt; i++) {\n                for (var j = 0, len = axisFields[i].length; j < len; j++) {\n                    var fieldName = axisFields[i][j].name;\n                    if (fields.indexOf(fieldName) === -1) {\n                        fields.push(fieldName);\n                    }\n                    var index = fields.indexOf(fieldName);\n                    var group = PivotUtil.getFieldByName(fieldName, dataSource.groupSettings);\n                    if ((!isNullOrUndefined(fieldName.match(dateGroup)) &&\n                        isDateGroupUpdated) || (fieldName.indexOf('_custom_group') !== -1 &&\n                        /* tslint:disable-next-line:max-line-length */\n                        !PivotUtil.getFieldByName(fieldName.replace('_custom_group', ''), dataSource.groupSettings))) {\n                        axisFields[i].splice(j, 1);\n                        fields.splice(index, 1);\n                        j--;\n                        len--;\n                    }\n                    else {\n                        var fieldObj = PivotUtil.getFieldByName(fieldName, clonedAxisFields);\n                        if (fieldObj) {\n                            axisFields[i].splice(j, 1, fieldObj);\n                        }\n                    }\n                }\n            }\n            for (var _i = 0, fields_2 = fields; _i < fields_2.length; _i++) {\n                var fieldName = fields_2[_i];\n                var filterObj = PivotUtil.getFilterItemByName(fieldName, clonedReport.filterSettings);\n                var sortObj = PivotUtil.getFieldByName(fieldName, clonedReport.sortSettings);\n                var formatObj = PivotUtil.getFieldByName(fieldName, clonedReport.formatSettings);\n                var drillObj = PivotUtil.getFieldByName(fieldName, clonedReport.drilledMembers);\n                var settingsObj = [filterObj, sortObj, formatObj, drillObj];\n                for (var i = 0, cnt = fieldSettings.length; i < cnt; i++) {\n                    var isExists = false;\n                    for (var j = 0, len = fieldSettings[i].length; j < len; j++) {\n                        var name_1 = fieldSettings[i][j].name;\n                        /* tslint:disable-next-line:max-line-length */\n                        if ((!isNullOrUndefined(name_1.match(dateGroup)) && isDateGroupUpdated) || (name_1.indexOf('_custom_group') !== -1 &&\n                            !PivotUtil.getFieldByName(name_1.replace('_custom_group', ''), dataSource.groupSettings))) {\n                            fieldSettings[i].splice(j, 1);\n                            j--;\n                            len--;\n                        }\n                        else if (fieldName === fieldSettings[i][j].name) {\n                            isExists = true;\n                            if (settingsObj[i]) {\n                                fieldSettings[i].splice(j, 1, settingsObj[i]);\n                            }\n                            else {\n                                fieldSettings[i].splice(j, 1);\n                                j--;\n                                len--;\n                            }\n                            break;\n                        }\n                    }\n                    if (!isExists && i === 0 && filterObj) {\n                        fieldSettings[i].push(filterObj);\n                    }\n                    if (!isExists && i === 1 && sortObj) {\n                        fieldSettings[i].push(sortObj);\n                    }\n                    if (!isExists && i === 2 && formatObj) {\n                        fieldSettings[i].push(formatObj);\n                    }\n                    if (!isExists && i === 3 && drillObj) {\n                        fieldSettings[i].push(drillObj);\n                    }\n                }\n            }\n            /* tslint:disable */\n            if (isBlazor()) {\n                this.engineModule.data = data;\n                this.allowServerDataBinding = false;\n                this.setProperties({\n                    dataSourceSettings: {\n                        rows: axisFields[0], columns: axisFields[1], values: axisFields[2], filters: axisFields[3],\n                        filterSettings: fieldSettings[0], sortSettings: fieldSettings[1], formatSettings: fieldSettings[2],\n                        drilledMembers: fieldSettings[3], groupSettings: newGroupSettings.length > 0 ? dataSource.groupSettings : []\n                    }\n                }, true);\n                this.allowServerDataBinding = true;\n            }\n        }\n    };\n    PivotView.prototype.removeButtonFocus = function (e) {\n        if (document.querySelectorAll('.e-btn-focused')) {\n            removeClass(document.querySelectorAll('.e-btn-focused'), 'e-btn-focused');\n        }\n    };\n    /* tslint:enable */\n    /* tslint:enable:max-func-body-length */\n    PivotView.prototype.wireEvents = function () {\n        if (this.displayOption.view !== 'Chart') {\n            EventHandler.add(this.element, this.isAdaptive ? 'touchend' : 'click', this.mouseClickHandler, this);\n            EventHandler.add(this.element, 'mousedown', this.mouseDownHandler, this);\n            EventHandler.add(this.element.querySelector('.' + cls.GRID_HEADER), 'mousemove', this.mouseMoveHandler, this);\n            EventHandler.add(this.element, 'mouseup', this.mouseUpHandler, this);\n            EventHandler.add(this.element, this.isAdaptive ? 'touchend' : 'contextmenu', this.mouseRclickHandler, this);\n        }\n        EventHandler.add(document, this.isAdaptive ? 'touchend' : 'click', this.removeButtonFocus, this);\n        window.addEventListener('resize', this.onWindowResize.bind(this), true);\n    };\n    PivotView.prototype.unwireEvents = function () {\n        if (this.displayOption.view !== 'Chart') {\n            EventHandler.remove(this.element, this.isAdaptive ? 'touchend' : 'click', this.mouseClickHandler);\n            EventHandler.remove(this.element, 'mousedown', this.mouseDownHandler);\n            if (this.element.querySelector('.' + cls.GRID_HEADER)) {\n                EventHandler.remove(this.element.querySelector('.' + cls.GRID_HEADER), 'mousemove', this.mouseMoveHandler);\n            }\n            EventHandler.remove(this.element, 'mouseup', this.mouseUpHandler);\n            EventHandler.remove(this.element, this.isAdaptive ? 'touchend' : 'contextmenu', this.mouseRclickHandler);\n        }\n        EventHandler.remove(document, this.isAdaptive ? 'touchend' : 'click', this.removeButtonFocus);\n        window.removeEventListener('resize', this.onWindowResize.bind(this), true);\n    };\n    /**\n     * To destroy the PivotView elements.\n     * @returns void\n     */\n    PivotView.prototype.destroy = function () {\n        this.removeInternalEvents();\n        if (this.showGroupingBar && this.groupingBarModule) {\n            this.groupingBarModule.destroy();\n        }\n        if (this.allowGrouping && this.groupingModule) {\n            this.groupingModule.destroy();\n        }\n        if (this.showToolbar && this.toolbarModule) {\n            this.toolbarModule.destroy();\n        }\n        if (this.enableVirtualization && this.virtualscrollModule) {\n            this.virtualscrollModule.destroy();\n        }\n        if (this.allowConditionalFormatting && this.conditionalFormattingModule) {\n            this.conditionalFormattingModule.destroy();\n        }\n        if (this.allowNumberFormatting && this.numberFormattingModule) {\n            this.numberFormattingModule.destroy();\n        }\n        if (this.isAdaptive && this.contextMenuModule) {\n            this.contextMenuModule.destroy();\n        }\n        if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n        }\n        if (this.tooltip) {\n            this.tooltip.destroy();\n        }\n        if (this.chart) {\n            this.chart.destroy();\n            if (this.chart.isDestroyed && this.element.querySelector('#' + this.element.id + '_chart')) {\n                remove(this.element.querySelector('#' + this.element.id + '_chart'));\n            }\n        }\n        if (this.grid) {\n            this.grid.destroy();\n            if (this.grid.isDestroyed && this.element.querySelector('#' + this.element.id + '_grid')) {\n                remove(this.element.querySelector('#' + this.element.id + '_grid'));\n            }\n        }\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (!(isBlazor() && this.isServerRendered)) {\n            this.element.innerHTML = '';\n        }\n        else {\n            if (this.element.querySelector('.e-spinner-pane')) {\n                remove(this.element.querySelector('.e-spinner-pane'));\n            }\n            if (this.showFieldList && document.querySelector('#' + this.element.id + '_PivotFieldList')) {\n                remove(document.querySelector('#' + this.element.id + '_PivotFieldList'));\n            }\n        }\n        removeClass([this.element], cls.ROOT);\n        removeClass([this.element], cls.RTL);\n        removeClass([this.element], cls.DEVICE);\n    };\n    /**\n     * Method to open the number formatting dialog to set the format dynamically.\n     * @returns void\n     */\n    PivotView.prototype.showNumberFormattingDialog = function () {\n        if (this.allowNumberFormatting) {\n            this.numberFormattingModule.showNumberFormattingDialog();\n        }\n    };\n    var PivotView_1;\n    __decorate([\n        Property('USD')\n    ], PivotView.prototype, \"currencyCode\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showFieldList\", void 0);\n    __decorate([\n        Complex({}, GridSettings)\n    ], PivotView.prototype, \"gridSettings\", void 0);\n    __decorate([\n        Complex({}, ChartSettings)\n    ], PivotView.prototype, \"chartSettings\", void 0);\n    __decorate([\n        Complex({}, GroupingBarSettings)\n    ], PivotView.prototype, \"groupingBarSettings\", void 0);\n    __decorate([\n        Complex({}, HyperlinkSettings)\n    ], PivotView.prototype, \"hyperlinkSettings\", void 0);\n    __decorate([\n        Complex({}, DataSourceSettings)\n    ], PivotView.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Complex({}, CellEditSettings)\n    ], PivotView.prototype, \"editSettings\", void 0);\n    __decorate([\n        Complex({}, DisplayOption)\n    ], PivotView.prototype, \"displayOption\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"pivotValues\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showGroupingBar\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"showTooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showToolbar\", void 0);\n    __decorate([\n        Property([])\n    ], PivotView.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showValuesButton\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowCalculatedField\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"enableValueSorting\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowConditionalFormatting\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowNumberFormatting\", void 0);\n    __decorate([\n        Property('auto')\n    ], PivotView.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], PivotView.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowDrillThrough\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowDeferLayoutUpdate\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowDataCompression\", void 0);\n    __decorate([\n        Property(1000)\n    ], PivotView.prototype, \"maxNodeLimitInMemberEditor\", void 0);\n    __decorate([\n        Property(10000)\n    ], PivotView.prototype, \"maxRowsInDrillThrough\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"loadOnDemandInMemberEditor\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"cellTemplate\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"tooltipTemplate\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"spinnerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowGrouping\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"exportAllPages\", void 0);\n    __decorate([\n        Property(['Sum', 'Count', 'DistinctCount', 'Product', 'Min', 'Max', 'Avg', 'Index', 'PopulationVar', 'SampleVar', 'PopulationStDev', 'SampleStDev', 'RunningTotals', 'PercentageOfGrandTotal', 'PercentageOfColumnTotal', 'PercentageOfRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentRowTotal', 'DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'])\n    ], PivotView.prototype, \"aggregateTypes\", void 0);\n    __decorate([\n        Property(['Column', 'Bar', 'Line', 'Area', 'Scatter', 'Polar', 'StackingColumn', 'StackingArea', 'StackingBar', 'StepLine', 'StepArea', 'SplineArea', 'Spline', 'StackingColumn100', 'StackingBar100', 'StackingArea100', 'Bubble', 'Pareto', 'Radar', 'Pie', 'Doughnut', 'Funnel', 'Pyramid'])\n    ], PivotView.prototype, \"chartTypes\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforeColumnsRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"selected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartTooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartLoaded\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartLoad\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartResized\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartAxisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"multiLevelLabelClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartPointClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"onPdfCellRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"saveReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fetchReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"loadReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"renameReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"removeReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"newReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"toolbarRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"enginePopulating\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"enginePopulated\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"onFieldDropped\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fieldDrop\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fieldDragStart\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"destroyed\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforeExport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"conditionalFormatting\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"memberFiltering\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"drillThrough\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"editCompleted\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beginDrillThrough\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"hyperlinkCellClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"drill\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartSeriesCreated\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"aggregateCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fieldListRefreshed\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"memberEditorOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"calculatedFieldCreate\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"numberFormatting\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"aggregateMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fieldRemove\", void 0);\n    PivotView = PivotView_1 = __decorate([\n        NotifyPropertyChanges\n    ], PivotView);\n    return PivotView;\n}(Component));\nexport { PivotView };\n","import { createElement, isNullOrUndefined, addClass, removeClass, closest, isBlazor } from '@syncfusion/ej2-base';\nimport { EventHandler, setStyleAttribute, extend } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { Button, CheckBox } from '@syncfusion/ej2-buttons';\nimport { Tab } from '@syncfusion/ej2-navigations';\nimport * as events from '../../common/base/constant';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render Pivot Field List Dialog\n */\n/** @hidden */\nvar DialogRenderer = /** @class */ (function () {\n    /** Constructor for render module */\n    function DialogRenderer(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Initialize the field list layout rendering\n     * @returns void\n     * @private\n     */\n    DialogRenderer.prototype.render = function () {\n        var fieldListWrappper = createElement('div', {\n            id: this.parent.element.id + '_Wrapper',\n            className: cls.WRAPPER_CLASS + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_WRAPPER_CLASS : ''),\n            styles: 'width:' + this.parent.element.style.width\n        });\n        if (this.parent.isAdaptive) {\n            addClass([fieldListWrappper], cls.DEVICE);\n        }\n        else {\n            removeClass([fieldListWrappper], cls.DEVICE);\n        }\n        if (this.parent.enableRtl) {\n            addClass([fieldListWrappper], cls.RTL);\n        }\n        else {\n            removeClass([fieldListWrappper], cls.RTL);\n        }\n        if (this.parent.cssClass) {\n            addClass([fieldListWrappper], this.parent.cssClass);\n        }\n        this.parentElement = createElement('div', { className: cls.CONTAINER_CLASS });\n        this.parent.element.appendChild(fieldListWrappper);\n        if (this.parent.isAdaptive) {\n            fieldListWrappper.removeAttribute('style');\n            this.parentElement = createElement('div', { className: cls.ADAPTIVE_CONTAINER_CLASS });\n            this.renderAdaptiveLayout(fieldListWrappper);\n        }\n        if (this.parent.renderMode === 'Popup') {\n            this.renderFieldListDialog(fieldListWrappper);\n            this.unWireDialogEvent(this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS));\n            this.wireDialogEvent(this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS));\n        }\n        else {\n            this.renderStaticLayout(fieldListWrappper);\n        }\n    };\n    DialogRenderer.prototype.renderStaticLayout = function (fieldListWrappper) {\n        if (!this.parent.isAdaptive) {\n            var layoutHeader = createElement('div', {\n                className: cls.FIELD_LIST_TITLE_CLASS\n            });\n            var headerContent = createElement('div', {\n                className: cls.FIELD_LIST_TITLE_CONTENT_CLASS,\n                innerHTML: this.parent.localeObj.getConstant('staticFieldList')\n            });\n            layoutHeader.appendChild(headerContent);\n            layoutHeader.appendChild(this.createCalculatedButton());\n            addClass([fieldListWrappper], cls.STATIC_FIELD_LIST_CLASS);\n            fieldListWrappper.appendChild(layoutHeader);\n            fieldListWrappper.appendChild(this.parentElement);\n            addClass([fieldListWrappper], cls.STATIC_FIELD_LIST_CLASS);\n            if (this.parent.allowDeferLayoutUpdate) {\n                fieldListWrappper.appendChild(this.createDeferUpdateButtons());\n                this.renderDeferUpdateButtons();\n            }\n        }\n    };\n    DialogRenderer.prototype.renderDeferUpdateButtons = function () {\n        if (this.parent.allowDeferLayoutUpdate) {\n            this.deferUpdateCheckBox = new CheckBox({\n                label: this.parent.localeObj.getConstant('deferLayoutUpdate'),\n                checked: true,\n                enableRtl: this.parent.enableRtl,\n                change: this.onCheckChange.bind(this)\n            });\n            this.deferUpdateCheckBox.isStringTemplate = true;\n            this.deferUpdateCheckBox.appendTo('#' + this.parent.element.id + 'DeferUpdateCheckBox');\n            this.deferUpdateApplyButton = new Button({\n                cssClass: cls.DEFER_APPLY_BUTTON + ' ' + cls.DEFER_UPDATE_BUTTON + (this.parent.renderMode === 'Popup' ?\n                    (' ' + cls.BUTTON_FLAT_CLASS) : ''),\n                content: this.parent.localeObj.getConstant('apply'),\n                enableRtl: this.parent.enableRtl,\n                isPrimary: true\n            });\n            this.deferUpdateApplyButton.isStringTemplate = true;\n            this.deferUpdateApplyButton.appendTo('#' + this.parent.element.id + '_DeferUpdateButton1');\n            this.deferUpdateApplyButton.element.onclick = this.parent.renderMode === 'Fixed' ? this.applyButtonClick.bind(this) :\n                this.onDeferUpdateClick.bind(this);\n        }\n        this.deferUpdateCancelButton = new Button({\n            cssClass: cls.DEFER_CANCEL_BUTTON + ' ' + cls.CANCEL_BUTTON_CLASS + (this.parent.renderMode === 'Popup' ?\n                (' ' + cls.BUTTON_FLAT_CLASS) : ''),\n            content: this.parent.allowDeferLayoutUpdate ? this.parent.localeObj.getConstant('cancel') :\n                this.parent.localeObj.getConstant('close'),\n            enableRtl: this.parent.enableRtl, isPrimary: !this.parent.allowDeferLayoutUpdate\n        });\n        this.deferUpdateCancelButton.isStringTemplate = true;\n        this.deferUpdateCancelButton.appendTo('#' + this.parent.element.id + '_DeferUpdateButton2');\n        this.deferUpdateCancelButton.element.onclick = this.parent.renderMode === 'Fixed' ? this.cancelButtonClick.bind(this) :\n            this.onCloseFieldList.bind(this);\n    };\n    DialogRenderer.prototype.createDeferUpdateButtons = function () {\n        var layoutFooter = createElement('div', {\n            className: cls.LAYOUT_FOOTER\n        });\n        if (this.parent.allowDeferLayoutUpdate) {\n            var checkBoxLayout = createElement('div', {\n                className: cls.CHECKBOX_LAYOUT\n            });\n            var deferUpdateCheckBox = createElement('input', {\n                id: this.parent.element.id + 'DeferUpdateCheckBox'\n            });\n            checkBoxLayout.appendChild(deferUpdateCheckBox);\n            layoutFooter.appendChild(checkBoxLayout);\n        }\n        var buttonLayout = createElement('div', {\n            className: cls.BUTTON_LAYOUT\n        });\n        if (this.parent.allowDeferLayoutUpdate) {\n            var deferUpdateButton1 = createElement('button', {\n                id: this.parent.element.id + '_DeferUpdateButton1', attrs: { 'type': 'button' }\n            });\n            buttonLayout.appendChild(deferUpdateButton1);\n        }\n        var deferUpdateButton2 = createElement('button', {\n            id: this.parent.element.id + '_DeferUpdateButton2', attrs: { 'type': 'button' }\n        });\n        buttonLayout.appendChild(deferUpdateButton2);\n        layoutFooter.appendChild(buttonLayout);\n        return layoutFooter;\n    };\n    DialogRenderer.prototype.onCheckChange = function (args) {\n        if (args.checked) {\n            this.parent.clonedDataSource = extend({}, this.parent.dataSourceSettings, null, true);\n            this.parent.clonedFieldList = extend({}, this.parent.pivotFieldList, null, true);\n        }\n        this.parent.allowDeferLayoutUpdate = !this.parent.allowDeferLayoutUpdate;\n        if (this.parent.renderMode === 'Fixed') {\n            this.deferUpdateApplyButton.setProperties({ disabled: !this.parent.allowDeferLayoutUpdate });\n            this.deferUpdateCancelButton.setProperties({ disabled: !this.parent.allowDeferLayoutUpdate });\n        }\n        else {\n            if (this.parent.allowDeferLayoutUpdate) {\n                this.deferUpdateApplyButton.element.style.display = '';\n                this.deferUpdateCancelButton.setProperties({ content: this.parent.localeObj.getConstant('cancel') });\n                this.deferUpdateCancelButton.isPrimary = false;\n            }\n            else {\n                this.deferUpdateApplyButton.element.style.display = 'none';\n                this.deferUpdateCancelButton.setProperties({ content: this.parent.localeObj.getConstant('close') });\n                this.deferUpdateCancelButton.isPrimary = true;\n            }\n        }\n        this.cancelButtonClick();\n    };\n    DialogRenderer.prototype.applyButtonClick = function () {\n        if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.allowDeferLayoutUpdate) {\n            this.parent.pivotChange = false;\n        }\n        this.parent.updateDataSource(false);\n        var parent = this.parent;\n        //setTimeout(() => {\n        parent.axisFieldModule.render();\n        parent.clonedDataSource = extend({}, parent.dataSourceSettings, null, true);\n        parent.clonedFieldList = extend({}, parent.pivotFieldList, null, true);\n        //});\n    };\n    DialogRenderer.prototype.cancelButtonClick = function () {\n        /* tslint:disable:align */\n        if (isBlazor() && !this.parent.isPopupView) {\n            /* tslint:disable-next-line:max-line-length */\n            PivotUtil.updateDataSourceSettings(this.parent, PivotUtil.getClonedDataSourceSettings(this.parent.clonedDataSource.properties));\n        }\n        else {\n            this.parent.\n                setProperties({\n                dataSourceSettings: this.parent.clonedDataSource.properties\n            }, true);\n        }\n        /* tslint:enable:align */\n        if (this.parent.dataType === 'olap') {\n            this.parent.olapEngineModule.fieldList = extend({}, this.parent.clonedFieldList, null, true);\n            for (var _i = 0, _a = Object.keys(this.parent.clonedFieldList); _i < _a.length; _i++) {\n                var name_1 = _a[_i];\n                var item = this.parent.clonedFieldList[name_1];\n                this.parent.olapEngineModule.updateFieldlistData(item.id, item.isSelected);\n            }\n        }\n        else {\n            this.parent.engineModule.fieldList = extend({}, this.parent.clonedFieldList, null, true);\n        }\n        this.parent.updateDataSource(false, true);\n    };\n    DialogRenderer.prototype.renderFieldListDialog = function (fieldListWrappper) {\n        var toggleFieldList = createElement('div', {\n            className: cls.TOGGLE_FIELD_LIST_CLASS + ' ' + cls.ICON + ' ' + cls.TOGGLE_SELECT_CLASS,\n            attrs: {\n                'tabindex': '0',\n                title: this.parent.localeObj.getConstant('fieldList'),\n                'aria-disabled': 'false',\n                'aria-label': this.parent.localeObj.getConstant('fieldList')\n            }\n        });\n        this.parent.element.appendChild(toggleFieldList);\n        if (this.parent.isAdaptive) {\n            var headerTemplate = '<div class=' + cls.TITLE_MOBILE_HEADER + '><span class=\"' + cls.ICON + ' ' +\n                cls.BACK_ICON + '\"></span><div class=' + cls.TITLE_MOBILE_CONTENT + '>' + this.parent.localeObj.getConstant('fieldList') +\n                '</div></div>';\n            var buttons = [{\n                    click: this.showFieldListDialog.bind(this),\n                    buttonModel: {\n                        cssClass: cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS + ' ' + cls.BUTTON_SMALL_CLASS + ' ' + cls.BUTTON_ROUND_CLASS,\n                        iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS,\n                        isPrimary: true\n                    }\n                }, {\n                    click: this.showCalculatedField.bind(this),\n                    buttonModel: {\n                        cssClass: cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS +\n                            ' ' + cls.BUTTON_SMALL_CLASS + ' ' + cls.BUTTON_ROUND_CLASS + ' ' + cls.ICON_DISABLE,\n                        iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS, enableRtl: this.parent.enableRtl,\n                        isPrimary: true\n                    }\n                }];\n            this.fieldListDialog = new Dialog({\n                animationSettings: { effect: this.parent.enableRtl ? 'SlideRight' : 'SlideLeft' },\n                header: headerTemplate,\n                content: this.parentElement,\n                isModal: true,\n                showCloseIcon: false,\n                visible: false,\n                allowDragging: false,\n                closeOnEscape: false,\n                enableRtl: this.parent.enableRtl,\n                width: '100%',\n                height: '100%',\n                position: { X: 'center', Y: 'center' },\n                buttons: buttons,\n                target: document.body,\n                close: this.removeFieldListIcon.bind(this),\n                open: this.dialogOpen.bind(this)\n            });\n            this.fieldListDialog.isStringTemplate = true;\n            this.fieldListDialog.appendTo(fieldListWrappper);\n            // this.fieldListDialog.element.querySelector('.e-dlg-header').innerHTML = headerTemplate;\n            setStyleAttribute(fieldListWrappper.querySelector('#' + fieldListWrappper.id + '_dialog-content'), {\n                'padding': '0'\n            });\n            var footer = fieldListWrappper.querySelector('.' + cls.FOOTER_CONTENT_CLASS);\n            addClass([footer], cls.FIELD_LIST_FOOTER_CLASS);\n            removeClass([footer.querySelector('.' + cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS)], cls.BUTTON_FLAT_CLASS);\n            removeClass([footer.querySelector('.' + cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS)], cls.BUTTON_FLAT_CLASS);\n            this.fieldListDialog.element.querySelector('.' + cls.BACK_ICON).onclick =\n                this.parent.allowDeferLayoutUpdate ? this.onDeferUpdateClick.bind(this) : this.onCloseFieldList.bind(this);\n        }\n        else {\n            var template = this.createDeferUpdateButtons().outerHTML;\n            var headerTemplate = '<div class=' + cls.TITLE_HEADER_CLASS + '><div class=' +\n                cls.TITLE_CONTENT_CLASS + '>' + this.parent.localeObj.getConstant('fieldList') + '</div></div>';\n            this.fieldListDialog = new Dialog({\n                animationSettings: { effect: 'Zoom' },\n                header: headerTemplate,\n                content: this.parentElement,\n                isModal: false,\n                showCloseIcon: false,\n                visible: false,\n                allowDragging: true,\n                enableRtl: this.parent.enableRtl,\n                width: this.parent.element.style.width,\n                position: { X: 'center', Y: this.parent.element.offsetTop },\n                footerTemplate: template,\n                closeOnEscape: false,\n                target: !isNullOrUndefined(this.parent.target) ? ((typeof this.parent.target) === 'string') ?\n                    document.querySelector(this.parent.target) : this.parent.target : document.body,\n                close: this.removeFieldListIcon.bind(this)\n            });\n            this.fieldListDialog.isStringTemplate = true;\n            this.fieldListDialog.appendTo(fieldListWrappper);\n            // this.fieldListDialog.element.querySelector('.e-dlg-header').innerHTML = headerTemplate;\n            // this.fieldListDialog.element.querySelector('.e-footer-content').innerHTML = template;\n            this.renderDeferUpdateButtons();\n            setStyleAttribute(fieldListWrappper.querySelector('#' + fieldListWrappper.id + '_title'), { 'width': '100%' });\n            fieldListWrappper.querySelector('.' + cls.TITLE_HEADER_CLASS).appendChild(this.createCalculatedButton());\n        }\n    };\n    DialogRenderer.prototype.dialogOpen = function () {\n        this.adaptiveElement.refresh();\n    };\n    /**\n     * Called internally if any of the field added to axis.\n     * @hidden\n     */\n    DialogRenderer.prototype.updateDataSource = function (selectedNodes) {\n        var axis = ['filters', 'columns', 'rows', 'values'];\n        for (var _i = 0, selectedNodes_1 = selectedNodes; _i < selectedNodes_1.length; _i++) {\n            var field = selectedNodes_1[_i];\n            var fieldName = field;\n            var droppedClass = axis[this.adaptiveElement.selectedItem];\n            this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ?\n                this.parent : (this.parent.pivotGridModule ?\n                this.parent.pivotGridModule : this.parent);\n            this.parent.pivotCommon.dataSourceUpdate.updateDataSource(fieldName, droppedClass, -1);\n        }\n        this.parent.axisFieldModule.render();\n        if (!this.parent.allowDeferLayoutUpdate) {\n            this.parent.updateDataSource(true);\n        }\n        else {\n            this.parent.triggerPopulateEvent();\n        }\n    };\n    DialogRenderer.prototype.onDeferUpdateClick = function () {\n        this.parent.updateDataSource();\n        this.parent.dialogRenderer.fieldListDialog.hide();\n    };\n    DialogRenderer.prototype.renderAdaptiveLayout = function (fieldListWrappper) {\n        var layoutFooter = createElement('div', {\n            className: cls.FIELD_LIST_FOOTER_CLASS\n        });\n        fieldListWrappper.appendChild(this.parentElement);\n        var items = [\n            {\n                header: { 'text': this.parent.localeObj.getConstant('filters') },\n                content: this.createAxisTable('filters')\n            },\n            {\n                header: { 'text': this.parent.localeObj.getConstant('columns') },\n                content: this.createAxisTable('columns')\n            },\n            {\n                header: { 'text': this.parent.localeObj.getConstant('rows') },\n                content: this.createAxisTable('rows')\n            },\n            {\n                header: { 'text': this.parent.localeObj.getConstant('values') },\n                content: this.createAxisTable('values')\n            },\n            {\n                header: { 'text': this.parent.localeObj.getConstant('createCalculatedField') },\n                content: 'Calculated Field Related UI'\n            }\n        ];\n        if (!this.parent.allowCalculatedField) {\n            items.pop();\n        }\n        this.adaptiveElement = new Tab({\n            heightAdjustMode: 'Auto',\n            items: items,\n            height: '100%',\n            enableRtl: this.parent.enableRtl,\n            selected: this.tabSelect.bind(this)\n        });\n        if (this.parent.renderMode === 'Fixed') {\n            layoutFooter.appendChild(this.createAddButton());\n            addClass([fieldListWrappper], cls.STATIC_FIELD_LIST_CLASS);\n            this.adaptiveElement.isStringTemplate = true;\n            this.adaptiveElement.appendTo(this.parentElement);\n            this.parentElement.appendChild(layoutFooter);\n        }\n        else {\n            this.adaptiveElement.isStringTemplate = true;\n            this.adaptiveElement.appendTo(this.parentElement);\n        }\n    };\n    DialogRenderer.prototype.tabSelect = function (e) {\n        var fieldWrapper = closest(this.parentElement, '.' + cls.WRAPPER_CLASS);\n        if (fieldWrapper && fieldWrapper.querySelector('.' + cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS)) {\n            if (e.selectedIndex !== 4) {\n                addClass([fieldWrapper.querySelector('.' + cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS)], cls.ICON_DISABLE);\n                removeClass([fieldWrapper.querySelector('.' + cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS)], cls.ICON_DISABLE);\n            }\n            else {\n                removeClass([fieldWrapper.querySelector('.' + cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS)], cls.ICON_DISABLE);\n                addClass([fieldWrapper.querySelector('.' + cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS)], cls.ICON_DISABLE);\n            }\n        }\n        if (e.selectedIndex === 4) {\n            this.adaptiveElement.items[4].content = '';\n            this.adaptiveElement.dataBind();\n            this.parent.notify(events.initCalculatedField, {});\n        }\n        else {\n            this.parent.axisFieldModule.render();\n        }\n    };\n    DialogRenderer.prototype.createCalculatedButton = function () {\n        var calculatedButton = createElement('button', {\n            id: this.parent.element.id + '_CalculatedField',\n            attrs: {\n                'type': 'button',\n                'tabindex': '0',\n                'aria-disabled': 'false',\n                'aria-label': this.parent.localeObj.getConstant('CalculatedField')\n            }\n        });\n        var calculateField = new Button({\n            cssClass: cls.CALCULATED_FIELD_CLASS + ' ' + cls.ICON_DISABLE,\n            content: this.parent.localeObj.getConstant('CalculatedField'),\n            enableRtl: this.parent.enableRtl\n        });\n        calculateField.isStringTemplate = true;\n        calculateField.appendTo(calculatedButton);\n        if (this.parent.calculatedFieldModule) {\n            removeClass([calculatedButton], cls.ICON_DISABLE);\n        }\n        calculateField.element.onclick = this.showCalculatedField.bind(this);\n        return calculatedButton;\n    };\n    DialogRenderer.prototype.createAddButton = function () {\n        var footerContainer = createElement('div', {\n            className: cls.FIELD_LIST_FOOTER_CLASS + '-content'\n        });\n        var fieldListButton = createElement('div', {});\n        var calculatedButton = createElement('div', {});\n        var calculateField = new Button({\n            cssClass: cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS +\n                ' ' + cls.BUTTON_SMALL_CLASS + ' ' + cls.BUTTON_ROUND_CLASS + ' ' + cls.ICON_DISABLE,\n            iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS,\n            enableRtl: this.parent.enableRtl\n        });\n        var fieldList = new Button({\n            cssClass: cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS + ' ' + cls.BUTTON_SMALL_CLASS + ' ' + cls.BUTTON_ROUND_CLASS,\n            iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS,\n            enableRtl: this.parent.enableRtl\n        });\n        fieldList.isStringTemplate = true;\n        fieldList.appendTo(fieldListButton);\n        calculateField.isStringTemplate = true;\n        calculateField.appendTo(calculatedButton);\n        footerContainer.appendChild(fieldListButton);\n        footerContainer.appendChild(calculatedButton);\n        calculateField.element.onclick = this.showCalculatedField.bind(this);\n        fieldList.element.onclick = this.showFieldListDialog.bind(this);\n        return footerContainer;\n    };\n    DialogRenderer.prototype.createAxisTable = function (axis) {\n        var axisWrapper = createElement('div', {\n            className: cls.FIELD_LIST_CLASS + '-' + axis\n        });\n        var axisContent = createElement('div', { className: cls.AXIS_CONTENT_CLASS + ' ' + 'e-' + axis });\n        var axisPrompt = createElement('span', {\n            className: cls.AXIS_PROMPT_CLASS,\n            innerHTML: this.parent.localeObj.getConstant('addPrompt')\n        });\n        axisWrapper.appendChild(axisContent);\n        axisWrapper.appendChild(axisPrompt);\n        return axisWrapper;\n    };\n    DialogRenderer.prototype.showCalculatedField = function (event) {\n        if (!this.parent.isAdaptive) {\n            if (this.parent.dialogRenderer.fieldListDialog) {\n                this.parent.dialogRenderer.fieldListDialog.hide();\n                addClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n            }\n        }\n        this.parent.notify(events.initCalculatedField, {});\n    };\n    DialogRenderer.prototype.showFieldListDialog = function (event) {\n        var activeindex = this.adaptiveElement.selectedItem;\n        this.parent.treeViewModule.render(activeindex);\n    };\n    DialogRenderer.prototype.onShowFieldList = function () {\n        if (this.parent.allowDeferLayoutUpdate) {\n            if (this.parent.isAdaptive) {\n                this.parent.axisFieldModule.render();\n            }\n            this.parent.clonedDataSource = extend({}, this.parent.dataSourceSettings, null, true);\n            this.parent.clonedFieldList = extend({}, this.parent.pivotFieldList, null, true);\n        }\n        addClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n        this.parent.dialogRenderer.fieldListDialog.show();\n        this.parent.dialogRenderer.fieldListDialog.element.style.top =\n            parseInt(this.parent.dialogRenderer.fieldListDialog.element.style.top, 10) < 0 ?\n                '0px' : this.parent.dialogRenderer.fieldListDialog.element.style.top;\n    };\n    DialogRenderer.prototype.onCloseFieldList = function () {\n        if (this.parent.allowDeferLayoutUpdate) {\n            this.parent.dataSourceSettings =\n                extend({}, this.parent.clonedDataSource.properties, null, true);\n            this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n            this.parent.pivotGridModule.olapEngineModule = this.parent.olapEngineModule;\n            /* tslint:disable:align */\n            this.parent.pivotGridModule.\n                setProperties({\n                dataSourceSettings: this.parent.clonedDataSource.properties\n            }, true);\n            /* tslint:enable:align */\n            if (Object.keys(this.parent.clonedFieldList).length > 0) {\n                this.parent.dataType === 'olap' ? this.parent.olapEngineModule.fieldList =\n                    extend({}, this.parent.clonedFieldList, null, true) :\n                    this.parent.engineModule.fieldList = extend({}, this.parent.clonedFieldList, null, true);\n            }\n            this.parent.pivotGridModule.notify(events.uiUpdate, this);\n            this.parent.pivotGridModule.notify(events.contentReady, this);\n        }\n        this.parent.dialogRenderer.fieldListDialog.hide();\n    };\n    DialogRenderer.prototype.removeFieldListIcon = function () {\n        if (this.parent.isAdaptive && this.parent.allowCalculatedField && this.parent.calculatedFieldModule) {\n            if (this.adaptiveElement && this.adaptiveElement.selectedItem === 4) {\n                if (this.adaptiveElement.element.querySelector('#' + this.parent.element.id + 'droppable')) {\n                    /* tslint:disable */\n                    this.parent.calculatedFieldModule\n                        .updateAdaptiveCalculatedField(false);\n                    /* tslint:enable */\n                }\n                else {\n                    this.parent.notify(events.initCalculatedField, { edit: false });\n                }\n            }\n        }\n        if (!document.getElementById(this.parent.element.id + 'calculateddialog')) {\n            removeClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n        }\n    };\n    DialogRenderer.prototype.keyPress = function (e) {\n        var target = e.target;\n        if (e.keyCode === 13 && e.target) {\n            e.target.click();\n            e.preventDefault();\n            return;\n        }\n    };\n    DialogRenderer.prototype.wireDialogEvent = function (element) {\n        EventHandler.add(element, 'keydown', this.keyPress, this);\n        EventHandler.add(element, 'click', this.onShowFieldList, this);\n    };\n    DialogRenderer.prototype.unWireDialogEvent = function (element) {\n        EventHandler.remove(element, 'keydown', this.keyPress);\n        EventHandler.remove(element, 'click', this.onShowFieldList);\n    };\n    return DialogRenderer;\n}());\nexport { DialogRenderer };\n","import { createElement, addClass, removeClass, remove, EventHandler, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { closest } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { TreeView } from '@syncfusion/ej2-navigations';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MaskedTextBox } from '@syncfusion/ej2-inputs';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render Field List\n */\n/** @hidden */\nvar TreeViewRenderer = /** @class */ (function () {\n    /** Constructor for render module */\n    function TreeViewRenderer(parent) {\n        this.selectedNodes = [];\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * Initialize the field list tree rendering\n     * @returns void\n     * @private\n     */\n    TreeViewRenderer.prototype.render = function (axis) {\n        this.parentElement = this.parent.dialogRenderer.parentElement;\n        this.fieldListSort = 'None';\n        if (!this.parent.isAdaptive) {\n            var fieldTable = createElement('div', {\n                className: cls.FIELD_TABLE_CLASS + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_FIELD_TABLE_CLASS : '')\n            });\n            var treeHeader = createElement('div', {\n                className: cls.FIELD_HEADER_CLASS,\n                innerHTML: this.parent.localeObj.getConstant('allFields')\n            });\n            var treeOuterDiv = createElement('div', { className: cls.FIELD_LIST_TREE_CLASS + '-outer-div' });\n            this.treeViewElement = createElement('div', {\n                id: this.parent.element.id + '_TreeView',\n                className: cls.FIELD_LIST_CLASS + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_FIELD_LIST_CLASS : '')\n            });\n            var fieldHeaderWrappper = createElement('div', { className: 'e-field-header-wrapper' });\n            fieldHeaderWrappper.appendChild(treeHeader);\n            fieldTable.appendChild(fieldHeaderWrappper);\n            this.updateSortElements(fieldHeaderWrappper);\n            treeOuterDiv.appendChild(this.treeViewElement);\n            fieldTable.appendChild(treeOuterDiv);\n            this.parentElement.appendChild(fieldTable);\n            if (this.parent.renderMode === 'Fixed') {\n                var centerDiv = createElement('div', { className: cls.STATIC_CENTER_DIV_CLASS });\n                var axisHeader = createElement('div', {\n                    className: cls.STATIC_CENTER_HEADER_CLASS,\n                    innerHTML: this.parent.localeObj.getConstant('centerHeader')\n                });\n                this.parentElement.appendChild(centerDiv);\n                this.parentElement.appendChild(axisHeader);\n            }\n            this.renderTreeView();\n        }\n        else {\n            this.renderTreeDialog(axis);\n        }\n    };\n    TreeViewRenderer.prototype.updateSortElements = function (headerWrapper) {\n        var options = { 'None': 'sortNone', 'Ascend': 'sortAscending', 'Descend': 'sortDescending' };\n        var keys = Object.keys(options);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var option = keys_1[_i];\n            var spanElement = createElement('span', {\n                attrs: {\n                    'tabindex': '0',\n                    'aria-disabled': 'false',\n                    'aria-label': 'Sort ' + option,\n                    'data-sort': option,\n                    'title': this.parent.localeObj.getConstant(options[option])\n                },\n                className: cls.ICON + ' ' + 'e-sort-' + option.toLowerCase() + ' ' +\n                    (this.fieldListSort === option ? 'e-selected' : '')\n            });\n            headerWrapper.appendChild(spanElement);\n            this.unWireFieldListEvent(spanElement);\n            this.wireFieldListEvent(spanElement);\n        }\n    };\n    TreeViewRenderer.prototype.renderTreeView = function () {\n        this.fieldTable = new TreeView({\n            /* tslint:disable-next-line:max-line-length */\n            fields: { dataSource: this.getTreeData(), id: 'id', text: 'caption', isChecked: 'isSelected', parentID: 'pid', iconCss: 'spriteCssClass' },\n            nodeChecked: this.nodeStateChange.bind(this),\n            cssClass: cls.FIELD_LIST_TREE_CLASS,\n            showCheckBox: true,\n            allowDragAndDrop: true,\n            sortOrder: 'None',\n            autoCheck: false,\n            loadOnDemand: this.parent.dataType === 'olap' ? false : true,\n            enableRtl: this.parent.enableRtl,\n            nodeDragStart: this.dragStart.bind(this),\n            nodeDragStop: this.dragStop.bind(this),\n            drawNode: this.updateTreeNode.bind(this),\n            nodeExpanding: this.updateNodeIcon.bind(this),\n            nodeCollapsed: this.updateNodeIcon.bind(this),\n            nodeSelected: function (args) {\n                removeClass([args.node], 'e-active');\n                args.cancel = true;\n            }\n        });\n        this.treeViewElement.innerHTML = '';\n        this.fieldTable.isStringTemplate = true;\n        this.fieldTable.appendTo(this.treeViewElement);\n    };\n    TreeViewRenderer.prototype.updateNodeIcon = function (args) {\n        if (this.parent.dataType === 'olap') {\n            if (args.node && args.node.querySelector('.e-list-icon') &&\n                (args.node.querySelector('.e-list-icon').className.indexOf('e-folderCDB-icon') > -1)) {\n                var node = args.node.querySelector('.e-list-icon');\n                removeClass([node], 'e-folderCDB-icon');\n                addClass([node], 'e-folderCDB-open-icon');\n            }\n            else if (args.node && args.node.querySelector('.e-list-icon') &&\n                (args.node.querySelector('.e-list-icon').className.indexOf('e-folderCDB-open-icon') > -1)) {\n                var node = args.node.querySelector('.e-list-icon');\n                removeClass([node], 'e-folderCDB-open-icon');\n                addClass([node], 'e-folderCDB-icon');\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateTreeNode = function (args) {\n        var allowDrag = false;\n        if (this.parent.dataType === 'olap') {\n            allowDrag = this.updateOlapTreeNode(args);\n        }\n        else {\n            allowDrag = true;\n        }\n        var liTextElement = args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS);\n        if (args.node.querySelector('.e-list-icon') && liTextElement) {\n            var liIconElement = args.node.querySelector('.e-list-icon');\n            liTextElement.insertBefore(liIconElement, args.node.querySelector('.e-list-text'));\n        }\n        if (allowDrag && !this.parent.isAdaptive) {\n            /* tslint:disable */\n            var field = PivotUtil.getFieldInfo(args.nodeData.id, this.parent);\n            /* tslint:enable */\n            allowDrag = false;\n            var dragElement = createElement('span', {\n                attrs: {\n                    'tabindex': '-1',\n                    title: (field.fieldItem ? field.fieldItem.allowDragAndDrop ?\n                        this.parent.localeObj.getConstant('drag') : '' : this.parent.localeObj.getConstant('drag')),\n                    'aria-disabled': 'false'\n                },\n                className: cls.ICON + ' ' + cls.DRAG_CLASS + ' ' +\n                    (field.fieldItem ? field.fieldItem.allowDragAndDrop ? '' : cls.DRAG_DISABLE_CLASS : '')\n            });\n            if (args.node.querySelector('.e-checkbox-wrapper') &&\n                !args.node.querySelector('.cls.DRAG_CLASS') && liTextElement) {\n                liTextElement.insertBefore(dragElement, args.node.querySelector('.e-checkbox-wrapper'));\n            }\n        }\n        if (args.node.querySelector('.' + cls.NODE_CHECK_CLASS)) {\n            addClass([args.node.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n        }\n    };\n    TreeViewRenderer.prototype.updateOlapTreeNode = function (args) {\n        var allowDrag = false;\n        if (this.parent.dataType === 'olap') {\n            /* tslint:disable-next-line:max-line-length */\n            if (args.node && args.node.querySelector('.e-calcMemberGroupCDB,.e-measureGroupCDB-icon,.e-folderCDB-icon,.e-folderCDB-open-icon,.e-dimensionCDB-icon,.e-kpiCDB-icon')) {\n                args.node.querySelector('.e-checkbox-wrapper').style.display = 'none';\n            }\n            if (args.node && args.node.querySelector('.e-list-icon') &&\n                (args.node.querySelector('.e-list-icon').className.indexOf('e-level-members') > -1)) {\n                if (this.parent.isAdaptive) {\n                    args.node.querySelector('.e-checkbox-wrapper').style.display = 'none';\n                }\n                else {\n                    args.node.querySelector('.e-checkbox-wrapper').style.visibility = 'hidden';\n                }\n            }\n            if (args.node && (args.node.querySelector('.e-hierarchyCDB-icon,.e-attributeCDB-icon,.e-namedSetCDB-icon') ||\n                args.node.querySelector('.e-measure-icon,.e-kpiGoal-icon,.e-kpiStatus-icon,.e-kpiTrend-icon,.e-kpiValue-icon') ||\n                args.node.querySelector('.e-calc-measure-icon,.e-calc-dimension-icon'))) {\n                if (args.node.querySelector('.e-measure-icon')) {\n                    args.node.querySelector('.e-list-icon').style.display = 'none';\n                    allowDrag = true;\n                }\n                else {\n                    allowDrag = true;\n                }\n            }\n        }\n        else {\n            allowDrag = true;\n        }\n        return allowDrag;\n    };\n    TreeViewRenderer.prototype.renderTreeDialog = function (axis) {\n        var fieldListDialog = createElement('div', {\n            id: this.parent.element.id + '_FieldListTreeView',\n            className: cls.ADAPTIVE_FIELD_LIST_DIALOG_CLASS + ' ' + (this.parent.dataType === 'olap' ? 'e-olap-editor-dialog' : ''),\n        });\n        this.parentElement.appendChild(fieldListDialog);\n        this.fieldDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: false,\n            header: this.parent.localeObj.getConstant('adaptiveFieldHeader'),\n            content: this.createTreeView(this.getTreeData(axis)),\n            isModal: true,\n            visible: true,\n            showCloseIcon: false,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: '350px',\n            position: { X: 'center', Y: 'center' },\n            buttons: [{\n                    click: this.closeTreeDialog.bind(this),\n                    buttonModel: {\n                        cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel')\n                    }\n                }, {\n                    click: this.onFieldAdd.bind(this),\n                    buttonModel: {\n                        cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('add'),\n                        isPrimary: true\n                    }\n                }],\n            closeOnEscape: false,\n            target: this.parentElement.parentElement,\n            close: this.dialogClose.bind(this)\n        });\n        this.fieldDialog.isStringTemplate = true;\n        this.fieldDialog.appendTo(fieldListDialog);\n        // this.fieldDialog.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('adaptiveFieldHeader');\n    };\n    TreeViewRenderer.prototype.dialogClose = function () {\n        if (document.getElementById(this.parent.element.id + '_FieldListTreeView')) {\n            remove(document.getElementById(this.parent.element.id + '_FieldListTreeView'));\n        }\n    };\n    TreeViewRenderer.prototype.createTreeView = function (treeData) {\n        var editorTreeWrapper = createElement('div', {\n            id: this.parent.element.id + 'EditorDiv',\n            className: cls.EDITOR_TREE_WRAPPER_CLASS\n        });\n        var searchWrapper = createElement('div', {\n            id: this.parent.element.id + '_SearchDiv', attrs: { 'tabindex': '-1' },\n            className: cls.EDITOR_SEARCH_WRAPPER_CLASS\n        });\n        var editorSearch = createElement('input', { attrs: { 'type': 'text' } });\n        searchWrapper.appendChild(editorSearch);\n        var treeOuterDiv = createElement('div', { className: cls.EDITOR_TREE_CONTAINER_CLASS + '-outer-div' });\n        var treeViewContainer = createElement('div', {\n            className: cls.EDITOR_TREE_CONTAINER_CLASS + ' ' + (this.parent.dataType === 'olap' ? 'e-olap-field-list-tree' : '')\n        });\n        editorTreeWrapper.appendChild(searchWrapper);\n        this.editorSearch = new MaskedTextBox({\n            showClearButton: true,\n            placeholder: this.parent.localeObj.getConstant('search'),\n            enableRtl: this.parent.enableRtl,\n            cssClass: cls.EDITOR_SEARCH_CLASS,\n            change: this.textChange.bind(this)\n        });\n        this.editorSearch.isStringTemplate = true;\n        this.editorSearch.appendTo(editorSearch);\n        var promptDiv = createElement('div', {\n            className: cls.EMPTY_MEMBER_CLASS + ' ' + cls.ICON_DISABLE,\n            innerHTML: this.parent.localeObj.getConstant('noMatches')\n        });\n        editorTreeWrapper.appendChild(promptDiv);\n        treeOuterDiv.appendChild(treeViewContainer);\n        editorTreeWrapper.appendChild(treeOuterDiv);\n        this.fieldTable = new TreeView({\n            /* tslint:disable-next-line:max-line-length */\n            fields: { dataSource: treeData, id: 'id', text: 'caption', isChecked: 'isSelected', parentID: 'pid', iconCss: 'spriteCssClass' },\n            showCheckBox: true,\n            autoCheck: false,\n            loadOnDemand: this.parent.dataType === 'olap' ? false : true,\n            sortOrder: this.parent.dataType === 'olap' ? 'None' : 'Ascending',\n            enableRtl: this.parent.enableRtl,\n            nodeChecked: this.addNode.bind(this),\n            drawNode: this.updateTreeNode.bind(this),\n            nodeExpanding: this.updateNodeIcon.bind(this),\n            nodeCollapsed: this.updateNodeIcon.bind(this),\n            nodeSelected: function (args) {\n                removeClass([args.node], 'e-active');\n                args.cancel = true;\n            }\n        });\n        this.fieldTable.isStringTemplate = true;\n        this.fieldTable.appendTo(treeViewContainer);\n        return editorTreeWrapper;\n    };\n    TreeViewRenderer.prototype.textChange = function (e) {\n        this.parent.pivotCommon.eventBase.searchTreeNodes(e, this.fieldTable, true);\n        var promptDiv = this.fieldDialog.element.querySelector('.' + cls.EMPTY_MEMBER_CLASS);\n        var liList = [].slice.call(this.fieldTable.element.querySelectorAll('li'));\n        /* tslint:disable-next-line:max-line-length */\n        var disabledList = [].slice.call(this.fieldTable.element.querySelectorAll('li.' + cls.ICON_DISABLE));\n        if (liList.length === disabledList.length) {\n            removeClass([promptDiv], cls.ICON_DISABLE);\n        }\n        else {\n            addClass([promptDiv], cls.ICON_DISABLE);\n        }\n    };\n    TreeViewRenderer.prototype.dragStart = function (args) {\n        var _this = this;\n        if (args.event.target.classList.contains(cls.DRAG_CLASS) &&\n            !args.event.target.classList.contains(cls.DRAG_DISABLE_CLASS)) {\n            var fieldInfo = PivotUtil.getFieldInfo(args.draggedNode.getAttribute('data-uid'), this.parent);\n            var dragEventArgs = {\n                fieldName: fieldInfo.fieldName, fieldItem: fieldInfo.fieldItem, axis: fieldInfo.axis,\n                dataSourceSettings: this.parent.dataSourceSettings, cancel: false\n            };\n            var control = this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n            control.trigger(events.fieldDragStart, dragEventArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    _this.parent.isDragging = true;\n                    addClass([args.draggedNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.SELECTED_NODE_CLASS);\n                    var data = void 0;\n                    if (_this.parent.dataType === 'olap') {\n                        data = _this.parent.olapEngineModule.fieldList[args.draggedNode.getAttribute('data-uid')];\n                    }\n                    else {\n                        data = _this.parent.engineModule.fieldList[args.draggedNode.getAttribute('data-uid')];\n                    }\n                    var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n                    if (data && data.aggregateType === 'CalculatedField') {\n                        for (var _i = 0, axis_1 = axis; _i < axis_1.length; _i++) {\n                            var axisContent = axis_1[_i];\n                            addClass([_this.parentElement.querySelector('.' + axisContent)], cls.NO_DRAG_CLASS);\n                        }\n                    }\n                    var dragItem = args.clonedNode;\n                    if (dragItem && (_this.parent.getModuleName() === 'pivotfieldlist' &&\n                        _this.parent.renderMode) === 'Popup') {\n                        dragItem.style.zIndex = (_this.parent.dialogRenderer.fieldListDialog.zIndex + 1).toString();\n                    }\n                }\n                else {\n                    _this.parent.isDragging = false;\n                    args.cancel = true;\n                }\n            });\n        }\n        else {\n            this.parent.isDragging = false;\n            args.cancel = true;\n        }\n    };\n    // private getFieldDragArgs(args: DragAndDropEventArgs): FieldDragStartEventArgs {\n    //     let fieldInfo: FieldItemInfo = PivotUtil.getFieldInfo(args.draggedNode.getAttribute('data-uid'), this.parent);\n    //     let dragEventArgs: any = {\n    //         fieldName: fieldInfo.fieldName, fieldItem: fieldInfo.fieldItem, axis: fieldInfo.axis,\n    //         dataSourceSettings: this.parent.dataSourceSettings, cancel: false\n    //     }\n    //     let treeModule: TreeViewRenderer = this;\n    //     if (isBlazor()) {\n    //         dragEventArgs = this.getFieldDragEventArgs(dragEventArgs);\n    //         dragEventArgs.then((e: any) => {\n    //             return e;\n    //         });\n    //     }\n    //     let control: PivotView | PivotFieldList = this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n    //     control.trigger(events.fieldDragStart, dragEventArgs);\n    //     return dragEventArgs;\n    // }\n    // private getFieldDragEventArgs(dragEventArgs: FieldDragStartEventArgs): FieldDragStartEventArgs | Deferred {\n    //     let callbackPromise: Deferred = new Deferred();\n    //     let control: PivotView | PivotFieldList = this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n    //     control.trigger(events.fieldDragStart, dragEventArgs, (observedArgs: FieldDragStartEventArgs) => {\n    //         callbackPromise.resolve(observedArgs);\n    //     });\n    //     return callbackPromise;\n    // }\n    TreeViewRenderer.prototype.dragStop = function (args) {\n        args.cancel = true;\n        this.parent.isDragging = false;\n        var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n        for (var _i = 0, axis_2 = axis; _i < axis_2.length; _i++) {\n            var axisElement = axis_2[_i];\n            removeClass([this.parentElement.querySelector('.' + axisElement)], cls.NO_DRAG_CLASS);\n        }\n        removeClass([args.draggedNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.SELECTED_NODE_CLASS);\n        if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n            this.parent.pivotCommon.filterDialog.dialogPopUp.close();\n        }\n        var fieldName = args.draggedNodeData.id.toString();\n        if (!this.isNodeDropped(args, fieldName)) {\n            return;\n        }\n        var list = this.parent.pivotFieldList;\n        var selectedNode = list[fieldName];\n        this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ? this.parent :\n            (this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent);\n        if (this.parent.pivotCommon.nodeStateModified.onStateModified(args, fieldName)) {\n            if (this.parent.allowDeferLayoutUpdate) {\n                selectedNode.isSelected = true;\n                this.updateDataSource();\n            }\n            else {\n                this.parent.updateDataSource();\n            }\n            var parent_1 = this.parent;\n            //setTimeout(() => {\n            parent_1.axisFieldModule.render();\n            //});\n        }\n    };\n    TreeViewRenderer.prototype.isNodeDropped = function (args, targetID) {\n        var isDropped = true;\n        if (args.draggedNodeData.isChecked === 'true') {\n            var target = this.getButton(targetID);\n            var axisPanel = closest(target, '.' + cls.DROPPABLE_CLASS);\n            var droppableElement = closest(args.target, '.' + cls.DROPPABLE_CLASS);\n            if (target && axisPanel === droppableElement) {\n                var pivotButtons = [].slice.call(axisPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n                var dropTarget = closest(args.target, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n                var sourcePosition = void 0;\n                var dropPosition = -1;\n                for (var i = 0, n = pivotButtons.length; i < n; i++) {\n                    if (pivotButtons[i].id === target.id) {\n                        sourcePosition = i;\n                    }\n                    if (dropTarget) {\n                        var droppableButton = dropTarget.querySelector('.' + cls.PIVOT_BUTTON_CLASS);\n                        if (pivotButtons[i].id === droppableButton.id) {\n                            dropPosition = i;\n                        }\n                    }\n                }\n                if (sourcePosition === dropPosition || (sourcePosition === (pivotButtons.length - 1) && dropPosition === -1)) {\n                    var parentElement = document.getElementById(this.parent.element.id + '_Wrapper');\n                    removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n                    isDropped = false;\n                }\n            }\n        }\n        return isDropped;\n    };\n    TreeViewRenderer.prototype.getButton = function (fieldName) {\n        var wrapperElement = document.getElementById(this.parent.element.id + '_Wrapper');\n        var pivotButtons = [].slice.call(wrapperElement.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n        var buttonElement;\n        for (var i = 0, n = pivotButtons.length; i < n; i++) {\n            if (pivotButtons[i].id === fieldName) {\n                buttonElement = pivotButtons[i];\n                break;\n            }\n        }\n        return buttonElement;\n    };\n    TreeViewRenderer.prototype.nodeStateChange = function (args) {\n        var _this = this;\n        var node = closest(args.node, '.' + cls.TEXT_CONTENT_CLASS);\n        if (!isNullOrUndefined(node)) {\n            var li_1 = closest(node, 'li');\n            var id_1 = li_1.getAttribute('data-uid');\n            if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n                this.parent.pivotCommon.filterDialog.dialogPopUp.close();\n            }\n            var list = this.parent.pivotFieldList;\n            var selectedNode_1 = list[id_1];\n            var fieldInfo_1 = PivotUtil.getFieldInfo(id_1, this.parent);\n            var control = this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n            if (args.action === 'check') {\n                var eventdrop = {\n                    fieldName: id_1, dropField: fieldInfo_1.fieldItem,\n                    dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n                    dropAxis: (selectedNode_1.type === 'number' || (selectedNode_1.type === 'CalculatedField' &&\n                        selectedNode_1.formula && selectedNode_1.formula.indexOf('Measure') > -1 &&\n                        this.parent.dataType === 'olap')) ? 'values' : 'rows',\n                    dropPosition: fieldInfo_1.position, draggedAxis: 'fieldlist', cancel: false\n                };\n                control.trigger(events.fieldDrop, eventdrop, function (observedArgs) {\n                    if (!observedArgs.cancel) {\n                        addClass([node.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                        _this.updateSelectedNodes(li_1, args.action);\n                        var addNode = _this.parent.pivotCommon.dataSourceUpdate.getNewField(id_1, fieldInfo_1.fieldItem);\n                        _this.updateReportSettings(addNode, observedArgs);\n                        _this.updateNodeStateChange(id_1, args, selectedNode_1);\n                    }\n                    else {\n                        _this.updateCheckState(selectedNode_1);\n                    }\n                });\n            }\n            else {\n                var removeFieldArgs = {\n                    cancel: false, fieldName: id_1,\n                    dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n                    fieldItem: fieldInfo_1.fieldItem, axis: fieldInfo_1.axis\n                };\n                control.trigger(events.fieldRemove, removeFieldArgs, function (observedArgs) {\n                    if (!observedArgs.cancel) {\n                        removeClass([node.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                        _this.updateSelectedNodes(li_1, args.action);\n                        _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport(id_1);\n                        if (_this.parent.dataType === 'olap' && _this.parent.dataSourceSettings.values.length === 0) {\n                            _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport('[Measures]');\n                        }\n                        _this.updateNodeStateChange(id_1, args, selectedNode_1);\n                    }\n                    else {\n                        _this.updateCheckState(selectedNode_1);\n                    }\n                });\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateReportSettings = function (newField, dropArgs) {\n        var dropPosition = dropArgs.dropPosition;\n        var dropClass = dropArgs.dropAxis;\n        switch (dropClass) {\n            case 'filters':\n                dropPosition !== -1 ?\n                    this.parent.dataSourceSettings.filters.splice(dropPosition, 0, newField) :\n                    this.parent.dataSourceSettings.filters.push(newField);\n                break;\n            case 'rows':\n                dropPosition !== -1 ?\n                    this.parent.dataSourceSettings.rows.splice(dropPosition, 0, newField) :\n                    this.parent.dataSourceSettings.rows.push(newField);\n                break;\n            case 'columns':\n                dropPosition !== -1 ?\n                    this.parent.dataSourceSettings.columns.splice(dropPosition, 0, newField) :\n                    this.parent.dataSourceSettings.columns.push(newField);\n                break;\n            case 'values':\n                dropPosition !== -1 ?\n                    this.parent.dataSourceSettings.values.splice(dropPosition, 0, newField) :\n                    this.parent.dataSourceSettings.values.push(newField);\n                if (this.parent.dataType === 'olap' && this.parent.olapEngineModule &&\n                    !(this.parent.olapEngineModule).isMeasureAvail) {\n                    var measureField = {\n                        name: '[Measures]', caption: 'Measures', baseField: undefined, baseItem: undefined,\n                    };\n                    var fieldAxis = this.parent.dataSourceSettings.valueAxis === 'row' ?\n                        this.parent.dataSourceSettings.rows : this.parent.dataSourceSettings.columns;\n                    fieldAxis.push(measureField);\n                }\n                break;\n        }\n    };\n    TreeViewRenderer.prototype.updateCheckState = function (selectedNode) {\n        var chkState = this.fieldTable.element.querySelectorAll('.e-checkbox-wrapper');\n        var innerText = this.fieldTable.element.querySelectorAll('.e-list-text');\n        var checkClass = this.fieldTable.element.querySelectorAll('.e-frame');\n        for (var i = 0; i < chkState.length; i++) {\n            if (selectedNode.caption === innerText[i].textContent) {\n                if (chkState[i].getAttribute('aria-checked') === 'false') {\n                    chkState[i].setAttribute('aria-checked', 'false');\n                    checkClass[i].classList.add(cls.NODE_CHECK_CLASS);\n                }\n                else {\n                    chkState[i].setAttribute('aria-checked', 'true');\n                    checkClass[i].classList.remove(cls.NODE_CHECK_CLASS);\n                }\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateNodeStateChange = function (id, args, selectedNode) {\n        if (!this.parent.allowDeferLayoutUpdate) {\n            this.parent.updateDataSource(true);\n        }\n        else {\n            selectedNode.isSelected = args.action === 'check';\n            if (this.parent.dataType === 'olap') {\n                this.parent.olapEngineModule.updateFieldlistData(id, args.action === 'check');\n            }\n            this.updateDataSource();\n        }\n        var parent = this.parent;\n        setTimeout(function () {\n            parent.axisFieldModule.render();\n        });\n    };\n    TreeViewRenderer.prototype.updateSelectedNodes = function (li, state) {\n        if (li && li.querySelector('ul')) {\n            for (var _i = 0, _a = [].slice.call(li.querySelectorAll('li')); _i < _a.length; _i++) {\n                var element = _a[_i];\n                if (state === 'check') {\n                    addClass([element.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                }\n                else {\n                    removeClass([element.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                }\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateDataSource = function () {\n        if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.renderMode === 'Popup') {\n            if (this.parent.dataType === 'olap') {\n                this.parent.pivotGridModule.olapEngineModule = this.parent.olapEngineModule;\n            }\n            else {\n                this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n            }\n            /* tslint:disable-next-line:max-line-length */\n            this.parent.pivotGridModule.setProperties({ dataSourceSettings: this.parent.dataSourceSettings.properties }, true);\n            this.parent.pivotGridModule.notify(events.uiUpdate, this);\n        }\n        else {\n            this.parent.triggerPopulateEvent();\n        }\n    };\n    TreeViewRenderer.prototype.addNode = function (args) {\n        var _this = this;\n        var fieldList = this.parent.pivotFieldList;\n        var selectedNode = fieldList[args.data[0].id.toString()];\n        var fieldInfo = PivotUtil.getFieldInfo(selectedNode.id.toString(), this.parent);\n        var control = this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        if (args.action === 'check') {\n            var eventdrop = {\n                fieldName: fieldInfo.fieldName, dropField: fieldInfo.fieldItem,\n                dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n                dropAxis: 'rows', draggedAxis: 'fieldlist', cancel: false\n            };\n            control.trigger(events.fieldDrop, eventdrop, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    _this.selectedNodes.push(selectedNode.id.toString());\n                }\n                else {\n                    _this.updateCheckState(selectedNode);\n                }\n            });\n        }\n        else {\n            var removeFieldArgs = {\n                cancel: false, fieldName: fieldInfo.fieldName,\n                dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n                fieldItem: fieldInfo.fieldItem, axis: fieldInfo.axis\n            };\n            control.trigger(events.fieldRemove, removeFieldArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    var count = _this.selectedNodes.length;\n                    while (count--) {\n                        if (_this.selectedNodes[count] === selectedNode.id.toString()) {\n                            _this.selectedNodes.splice(count, 1);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    _this.updateCheckState(selectedNode);\n                }\n            });\n        }\n    };\n    TreeViewRenderer.prototype.refreshTreeView = function () {\n        if (this.fieldTable) {\n            var treeData = this.getUpdatedData();\n            this.fieldTable.fields = {\n                dataSource: treeData, id: 'id', text: 'caption', isChecked: 'isSelected', parentID: 'pid', iconCss: 'spriteCssClass'\n            };\n            this.fieldTable.dataBind();\n        }\n    };\n    TreeViewRenderer.prototype.getUpdatedData = function () {\n        var treeData = this.getTreeData();\n        var expandedNodes = this.fieldTable.expandedNodes;\n        this.updateExpandedNodes(treeData, expandedNodes);\n        return this.applySorting(treeData, this.fieldListSort);\n    };\n    TreeViewRenderer.prototype.getTreeData = function (axis) {\n        var data = [];\n        if (this.parent.dataType === 'olap') {\n            data = this.getOlapTreeData(axis);\n        }\n        else {\n            var keys = this.parent.pivotFieldList ? Object.keys(this.parent.pivotFieldList) : [];\n            var fieldList = {};\n            for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n                var key = keys_2[_i];\n                var member = this.parent.pivotFieldList[key];\n                fieldList[key] = { id: member.id, caption: member.caption, isSelected: member.isSelected };\n            }\n            if (this.parent.isAdaptive) {\n                /* tslint:disable-next-line:max-line-length */\n                var fields = [this.parent.dataSourceSettings.filters, this.parent.dataSourceSettings.columns, this.parent.dataSourceSettings.rows,\n                    this.parent.dataSourceSettings.values];\n                var currentFieldSet = fields[axis];\n                var len = keys.length;\n                while (len--) {\n                    fieldList[keys[len]].isSelected = false;\n                }\n                for (var _a = 0, currentFieldSet_1 = currentFieldSet; _a < currentFieldSet_1.length; _a++) {\n                    var item = currentFieldSet_1[_a];\n                    fieldList[item.name].isSelected = true;\n                }\n            }\n            var list = fieldList;\n            for (var _b = 0, keys_3 = keys; _b < keys_3.length; _b++) {\n                var member = keys_3[_b];\n                var obj = list[member];\n                data.push(obj);\n            }\n        }\n        return data;\n    };\n    TreeViewRenderer.prototype.getOlapTreeData = function (axis) {\n        var data = [];\n        var fieldListData = this.parent.olapEngineModule.fieldListData ? this.parent.olapEngineModule.fieldListData : [];\n        if (this.parent.isAdaptive) {\n            /* tslint:disable-next-line:max-line-length */\n            var fields = [\n                this.parent.dataSourceSettings.filters, this.parent.dataSourceSettings.columns,\n                this.parent.dataSourceSettings.rows, this.parent.dataSourceSettings.values\n            ];\n            var currentFieldSet = fields[axis];\n            var i = 0;\n            while (i < fieldListData.length) {\n                var item = fieldListData[i];\n                /* tslint:disable */\n                var framedSet = void 0;\n                /* tslint:enable */\n                if (axis === 3) {\n                    if (item.id.toLowerCase() !== '[measures]' &&\n                        (item.id.toLowerCase().indexOf('[measures]') === 0 ||\n                            (item.spriteCssClass && item.spriteCssClass.indexOf('e-measureCDB') !== -1)) ||\n                        (item.id.toLowerCase() === '[calculated members].[_0]' ||\n                            (item.spriteCssClass && item.spriteCssClass.indexOf('e-calc-measure-icon') !== -1))) {\n                        framedSet = {\n                            id: item.id, caption: item.caption, hasChildren: item.hasChildren,\n                            type: item.type, aggregateType: item.aggregateType,\n                            isSelected: item.isSelected, pid: item.pid, spriteCssClass: item.spriteCssClass\n                        };\n                        framedSet.isSelected = false;\n                        if (framedSet.spriteCssClass && framedSet.spriteCssClass.indexOf('e-measureCDB') !== -1) {\n                            framedSet.spriteCssClass = framedSet.spriteCssClass.replace('e-folderCDB-icon', 'e-measureGroupCDB-icon');\n                            framedSet.pid = undefined;\n                        }\n                        for (var _i = 0, currentFieldSet_2 = currentFieldSet; _i < currentFieldSet_2.length; _i++) {\n                            var field = currentFieldSet_2[_i];\n                            if (framedSet.id === field.name) {\n                                framedSet.isSelected = true;\n                                break;\n                            }\n                        }\n                        data.push(framedSet);\n                    }\n                }\n                else {\n                    if (!(item.id.toLowerCase().indexOf('[measures]') === 0) &&\n                        !(item.spriteCssClass && item.spriteCssClass.indexOf('e-measureCDB') !== -1) &&\n                        !(item.spriteCssClass && item.spriteCssClass.indexOf('e-calc-measure-icon') !== -1)) {\n                        framedSet = {\n                            id: item.id, caption: item.caption, hasChildren: item.hasChildren,\n                            type: item.type, aggregateType: item.aggregateType,\n                            isSelected: item.isSelected, pid: item.pid, spriteCssClass: item.spriteCssClass\n                        };\n                        framedSet.isSelected = false;\n                        for (var _a = 0, currentFieldSet_3 = currentFieldSet; _a < currentFieldSet_3.length; _a++) {\n                            var item_1 = currentFieldSet_3[_a];\n                            if (framedSet.id === item_1.name) {\n                                framedSet.isSelected = true;\n                                break;\n                            }\n                        }\n                        data.push(framedSet);\n                    }\n                }\n                i++;\n            }\n        }\n        else {\n            data = PivotUtil.getClonedData(this.parent.olapEngineModule.fieldListData);\n        }\n        return data;\n    };\n    TreeViewRenderer.prototype.updateExpandedNodes = function (data, expandedNodes) {\n        if (expandedNodes.length > 0) {\n            var i = 0;\n            for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n                var field = data_1[_i];\n                if (expandedNodes.indexOf(field.id) > -1) {\n                    i++;\n                    field.expanded = true;\n                    field.spriteCssClass = (field.spriteCssClass &&\n                        field.spriteCssClass.toString().indexOf('e-folderCDB-icon') > -1 ?\n                        field.spriteCssClass.toString().replace('e-folderCDB-icon', 'e-folderCDB-open-icon') :\n                        field.spriteCssClass);\n                    if (i === (expandedNodes.length)) {\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateSorting = function (args) {\n        var target = args.target;\n        var option = target.getAttribute('data-sort');\n        if (target.className.indexOf('e-selected') === -1) {\n            switch (option) {\n                case 'None':\n                    this.fieldListSort = 'None';\n                    addClass([target], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-ascend')], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-descend')], 'e-selected');\n                    break;\n                case 'Ascend':\n                    this.fieldListSort = 'Ascend';\n                    addClass([target], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-none')], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-descend')], 'e-selected');\n                    break;\n                case 'Descend':\n                    this.fieldListSort = 'Descend';\n                    addClass([target], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-ascend')], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-none')], 'e-selected');\n                    break;\n            }\n            this.refreshTreeView();\n        }\n    };\n    TreeViewRenderer.prototype.applySorting = function (treeData, sortOrder) {\n        if (this.parent.dataType === 'olap') {\n            var measure = void 0;\n            var calcMember = void 0;\n            if (this.parent.dataSourceSettings.calculatedFieldSettings.length > 0 &&\n                treeData[0].id.toLowerCase() === '[calculated members].[_0]') {\n                calcMember = treeData[0];\n                measure = treeData[1];\n                treeData.splice(0, 2);\n            }\n            else {\n                measure = treeData[0];\n                treeData.splice(0, 1);\n            }\n            /* tslint:disable:typedef */\n            treeData = sortOrder === 'Ascend' ?\n                (treeData.sort(function (a, b) { return (a.caption > b.caption) ? 1 : ((b.caption > a.caption) ? -1 : 0); })) :\n                sortOrder === 'Descend' ?\n                    (treeData.sort(function (a, b) { return (a.caption < b.caption) ? 1 : ((b.caption < a.caption) ? -1 : 0); })) :\n                    treeData;\n            /* tslint:enable:typedef */\n            if (calcMember) {\n                treeData.splice(0, 0, calcMember, measure);\n            }\n            else {\n                treeData.splice(0, 0, measure);\n            }\n        }\n        else {\n            this.fieldTable.sortOrder = ((sortOrder === 'Ascend' ? 'Ascending' : (sortOrder === 'Descend' ? 'Descending' : 'None')));\n        }\n        return treeData;\n    };\n    TreeViewRenderer.prototype.onFieldAdd = function (e) {\n        this.parent.dialogRenderer.updateDataSource(this.selectedNodes);\n        this.closeTreeDialog();\n    };\n    TreeViewRenderer.prototype.closeTreeDialog = function () {\n        this.selectedNodes = [];\n        this.fieldDialog.hide();\n    };\n    TreeViewRenderer.prototype.keyPress = function (e) {\n        var target = e.target;\n        if (e.keyCode === 13 && e.target) {\n            e.target.click();\n            e.preventDefault();\n            return;\n        }\n    };\n    TreeViewRenderer.prototype.wireFieldListEvent = function (element) {\n        EventHandler.add(element, 'keydown', this.keyPress, this);\n        EventHandler.add(element, 'click', this.updateSorting, this);\n    };\n    TreeViewRenderer.prototype.unWireFieldListEvent = function (element) {\n        EventHandler.remove(element, 'keydown', this.keyPress);\n        EventHandler.remove(element, 'click', this.updateSorting);\n    };\n    /**\n     * @hidden\n     */\n    TreeViewRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.treeViewUpdate, this.refreshTreeView, this);\n    };\n    /**\n     * @hidden\n     */\n    TreeViewRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.treeViewUpdate, this.refreshTreeView);\n    };\n    /**\n     * To destroy the tree view event listener\n     * @return {void}\n     * @hidden\n     */\n    TreeViewRenderer.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return TreeViewRenderer;\n}());\nexport { TreeViewRenderer };\n","import { createElement, Droppable, EventHandler, removeClass, addClass } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\n/**\n * Module to render Axis Field Table\n */\n/** @hidden */\nvar AxisTableRenderer = /** @class */ (function () {\n    /** Constructor for render module */\n    function AxisTableRenderer(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Initialize the axis table rendering\n     * @returns void\n     * @private\n     */\n    AxisTableRenderer.prototype.render = function () {\n        if (!this.parent.isAdaptive) {\n            var axisTable = createElement('div', {\n                className: cls.AXIS_TABLE_CLASS + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_AXIS_TABLE_CLASS : '')\n            });\n            this.leftAxisPanel = createElement('div', { className: cls.LEFT_AXIS_PANEL_CLASS });\n            this.rightAxisPanel = createElement('div', { className: cls.RIGHT_AXIS_PANEL_CLASS });\n            this.parent.dialogRenderer.parentElement.appendChild(axisTable);\n            axisTable.appendChild(this.leftAxisPanel);\n            axisTable.appendChild(this.rightAxisPanel);\n            this.axisTable = axisTable;\n            this.renderAxisTable();\n        }\n        this.parent.axisFieldModule.render();\n    };\n    AxisTableRenderer.prototype.renderAxisTable = function () {\n        var fieldLabels = ['filters', 'rows', 'columns', 'values'];\n        for (var len = 0, lnt = fieldLabels.length; len < lnt; len++) {\n            var axis = createElement('div', {\n                className: cls.FIELD_LIST_CLASS + '-' + fieldLabels[len]\n            });\n            var axisTitleWrapper = createElement('div', {\n                className: cls.AXIS_ICON_CLASS + '-wrapper'\n            });\n            var axisTitle = createElement('div', {\n                className: cls.AXIS_HEADER_CLASS,\n                attrs: { title: this.parent.localeObj.getConstant(fieldLabels[len]) },\n                innerHTML: this.parent.localeObj.getConstant(fieldLabels[len])\n            });\n            axisTitleWrapper.appendChild(this.getIconupdate(fieldLabels[len]));\n            axisTitleWrapper.appendChild(axisTitle);\n            var axisContent = createElement('div', { className: cls.AXIS_CONTENT_CLASS + ' ' + 'e-' + fieldLabels[len] });\n            var localePrompt = void 0;\n            if (fieldLabels[len] === 'rows') {\n                localePrompt = this.parent.localeObj.getConstant('dropRowPrompt');\n            }\n            else if (fieldLabels[len] === 'columns') {\n                localePrompt = this.parent.localeObj.getConstant('dropColPrompt');\n            }\n            else if (fieldLabels[len] === 'values') {\n                localePrompt = this.parent.localeObj.getConstant('dropValPrompt');\n            }\n            else {\n                localePrompt = this.parent.localeObj.getConstant('dropFilterPrompt');\n            }\n            var axisPrompt = createElement('span', {\n                className: cls.AXIS_PROMPT_CLASS,\n                innerHTML: localePrompt\n            });\n            var droppable = new Droppable(axisContent, {});\n            axis.appendChild(axisTitleWrapper);\n            axis.appendChild(axisContent);\n            axis.appendChild(axisPrompt);\n            if (len <= 1) {\n                this.leftAxisPanel.appendChild(axis);\n            }\n            else {\n                this.rightAxisPanel.appendChild(axis);\n            }\n            this.unWireEvent(axisContent);\n            this.wireEvent(axisContent);\n        }\n    };\n    AxisTableRenderer.prototype.getIconupdate = function (axis) {\n        var axisWrapper = createElement('span', {\n            attrs: { 'tabindex': '-1', 'aria-disabled': 'false' },\n            className: cls.AXIS_ICON_CLASS + '-icon-wrapper'\n        });\n        var axisElement = createElement('span', {\n            attrs: {\n                'tabindex': '-1', 'aria-disabled': 'false'\n            },\n            className: cls.ICON + ' ' + cls.AXIS_ICON_CLASS + '-' + axis\n        });\n        axisWrapper.appendChild(axisElement);\n        return axisWrapper;\n    };\n    AxisTableRenderer.prototype.wireEvent = function (element) {\n        EventHandler.add(element, 'mouseover', this.updateDropIndicator, this);\n        EventHandler.add(element, 'mouseleave', this.updateDropIndicator, this);\n    };\n    AxisTableRenderer.prototype.unWireEvent = function (element) {\n        EventHandler.remove(element, 'mouseover', this.updateDropIndicator);\n        EventHandler.remove(element, 'mouseleave', this.updateDropIndicator);\n    };\n    AxisTableRenderer.prototype.updateDropIndicator = function (e) {\n        var parentElement = this.parent.dialogRenderer.parentElement;\n        if (this.parent.isDragging && e.target.classList.contains(cls.AXIS_CONTENT_CLASS) && e.type === 'mouseover') {\n            removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n            var element = [].slice.call(e.target.querySelectorAll('.' + cls.PIVOT_BUTTON_WRAPPER_CLASS));\n            if (element.length > 0) {\n                addClass([element[element.length - 1].querySelector('.' + cls.DROP_INDICATOR_CLASS + '-last')], cls.INDICATOR_HOVER_CLASS);\n            }\n        }\n        else if (e.type === 'mouseleave') {\n            removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n        }\n    };\n    return AxisTableRenderer;\n}());\nexport { AxisTableRenderer };\n","import { createElement, Draggable, remove, extend, detach, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { EventHandler, isBlazor } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined as isNOU, addClass, removeClass, closest, Browser } from '@syncfusion/ej2-base';\nimport { PivotFieldList } from '../../pivotfieldlist/base/field-list';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { Button } from '@syncfusion/ej2-buttons';\nimport { AggregateMenu } from '../popups/aggregate-menu';\nimport { AxisFieldRenderer } from '../../pivotfieldlist/renderer/axis-field-renderer';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render Pivot button\n */\n/** @hidden */\nvar PivotButton = /** @class */ (function () {\n    /** Constructor for render module */\n    function PivotButton(parent) {\n        this.parent = parent;\n        this.menuOption = new AggregateMenu(this.parent);\n        this.parent.pivotButtonModule = this;\n        this.addEventListener();\n        if (this.parent instanceof PivotFieldList) {\n            this.axisField = new AxisFieldRenderer(this.parent);\n        }\n        this.isDestroyed = false;\n    }\n    /* tslint:disable */\n    PivotButton.prototype.renderPivotButton = function (args) {\n        var _this = this;\n        var _a;\n        var field = extend([], args.field, null, true);\n        var axis = args.axis;\n        var axisElement;\n        var valuePos = -1;\n        var showValuesButton = (this.parent.dataType === 'pivot' ? (this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.pivotGridModule) ?\n            this.parent.pivotGridModule.showValuesButton : this.parent.showValuesButton : false);\n        if (((this.parent.dataSourceSettings.valueAxis === 'row' && args.axis === 'rows') ||\n            (this.parent.dataSourceSettings.valueAxis === 'column' && args.axis === 'columns')) && showValuesButton && this.parent.dataSourceSettings.values.length > 1) {\n            valuePos = field.length;\n            if (isNullOrUndefined(PivotUtil.getFieldByName(this.parent.localeObj.getConstant('values'), field))) {\n                field.push({\n                    name: this.parent.localeObj.getConstant('values'), caption: this.parent.localeObj.getConstant('values'),\n                    axis: args.axis, showRemoveIcon: true, allowDragAndDrop: true\n                });\n            }\n        }\n        this.parentElement = this.parent.getModuleName() === 'pivotview' ? this.parent.element :\n            document.getElementById(this.parent.element.id + '_Wrapper');\n        if (this.parent.getModuleName() === 'pivotfieldlist') {\n            this.parentElement = document.getElementById(this.parent.element.id + '_Wrapper');\n            if (this.parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-' + axis)) {\n                var axisPrompt = this.parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-' + axis)\n                    .querySelector('.' + cls.AXIS_PROMPT_CLASS);\n                if (field.length === 0) {\n                    removeClass([axisPrompt], cls.ICON_DISABLE);\n                }\n                else {\n                    addClass([axisPrompt], cls.ICON_DISABLE);\n                }\n                axisElement =\n                    this.parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-' + axis).querySelector('.' + cls.AXIS_CONTENT_CLASS);\n            }\n            else {\n                return;\n            }\n        }\n        else {\n            this.parentElement = this.parent.element;\n            axisElement = this.parentElement.querySelector('.e-group-' + axis);\n        }\n        if (axisElement) {\n            if (this.parent.getModuleName() === 'pivotview' && field.length === 0) {\n                for (var _i = 0, _b = this.parentElement.querySelectorAll('.e-group-' + axis); _i < _b.length; _i++) {\n                    var element = _b[_i];\n                    if (!element.classList.contains(cls.GROUP_CHART_VALUE) && !element.classList.contains(cls.GROUP_CHART_COLUMN)) {\n                        var axisPrompt = createElement('span', {\n                            className: cls.AXIS_PROMPT_CLASS,\n                            innerHTML: (this.parent.groupingBarSettings.allowDragAndDrop ? axis === 'rows' ? this.parent.localeObj.getConstant('rowAxisPrompt') :\n                                axis === 'columns' ? this.parent.localeObj.getConstant('columnAxisPrompt') :\n                                    axis === 'values' ? this.parent.localeObj.getConstant('valueAxisPrompt') :\n                                        this.parent.localeObj.getConstant('filterAxisPrompt') : '')\n                        });\n                        element.appendChild(axisPrompt);\n                    }\n                }\n            }\n            else {\n                for (var i = 0, cnt = field.length; i < cnt; i++) {\n                    for (var _c = 0, _d = (this.parent.getModuleName() === 'pivotfieldlist' ? [axisElement] : this.parentElement.querySelectorAll('.e-group-' + axis)); _c < _d.length; _c++) {\n                        var element = _d[_c];\n                        element = element;\n                        var isMeasureAvail = (this.parent.dataType === 'olap' && (field[i].name.toLowerCase() === '[measures]' || axis === 'values'));\n                        var isMeasureFieldsAvail = (this.parent.dataType === 'olap' && axis === 'values');\n                        if (!element.classList.contains(cls.GROUP_CHART_VALUE) && !element.classList.contains(cls.GROUP_CHART_COLUMN)) {\n                            var buttonWrapper = createElement('div', {\n                                className: cls.PIVOT_BUTTON_WRAPPER_CLASS + (i === 0 ? ' e-first-btn' : ''),\n                                attrs: { 'data-tag': axis + ':' + field[i].name }\n                            });\n                            var buttonElement = createElement('div', {\n                                id: field[i].name, className: cls.PIVOT_BUTTON_CLASS + ' ' + field[i].name.replace(/[^A-Z0-9]/ig, ''),\n                                attrs: {\n                                    'data-uid': field[i].name,\n                                    'tabindex': (this.parent.getModuleName() === 'pivotview' && this.parent.grid && axis === 'rows' && !element.classList.contains(cls.GROUP_CHART_ROW)) ? '-1' : '0',\n                                    'isvalue': (i === valuePos || isMeasureAvail && !isMeasureFieldsAvail) ? 'true' : 'false',\n                                    'aria-disabled': 'false', 'aria-label': field[i].caption ? field[i].caption : field[i].name,\n                                    'data-type': (this.parent.dataType === 'olap' ? isMeasureFieldsAvail ? 'isMeasureFieldsAvail' : isMeasureAvail ? 'isMeasureAvail' : field[i].type : field[i].type),\n                                    'data-caption': field[i].caption ? field[i].caption : field[i].name,\n                                    'data-basefield': field[i].baseField,\n                                    'data-baseitem': field[i].baseItem\n                                }\n                            });\n                            var dropIndicatorElement = createElement('span', {\n                                attrs: { 'tabindex': '-1', 'aria-disabled': 'false' },\n                                className: cls.DROP_INDICATOR_CLASS\n                            });\n                            var dropLastIndicatorElement = createElement('span', {\n                                attrs: { 'tabindex': '-1', 'aria-disabled': 'false' },\n                                className: cls.DROP_INDICATOR_CLASS + '-last'\n                            });\n                            var dragWrapper = this.createButtonDragIcon(field[i], buttonElement);\n                            var contentElement = this.createButtonText(field, i, axis, valuePos);\n                            buttonElement.appendChild(contentElement);\n                            if (!isMeasureAvail && !field[i].isNamedSet && !field[i].isCalculatedField) {\n                                if (['filters', 'values'].indexOf(axis) === -1 && valuePos !== i &&\n                                    !(this.parent.dataType === 'olap' && ((this.parent.getModuleName() === 'pivotview' &&\n                                        this.parent.enableVirtualization) || (this.parent.getModuleName() === 'pivotfieldlist' &&\n                                        this.parent.pivotGridModule !== undefined &&\n                                        this.parent.pivotGridModule.enableVirtualization)))) {\n                                    this.createSortOption(buttonElement, field[i].name, field[i]);\n                                }\n                                if (axis !== 'values' && valuePos !== i) {\n                                    this.createFilterOption(buttonElement, field[i].name, axis, field[i]);\n                                }\n                                if (axis === 'values') {\n                                    this.getTypeStatus(field, i, buttonElement);\n                                }\n                            }\n                            if ((field[i].isCalculatedField || field[i].type === 'CalculatedField')) {\n                                var calcElement = createElement('span', {\n                                    attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('editCalculatedField') },\n                                    className: cls.ICON + ' ' + cls.CALC_EDIT\n                                });\n                                if (this.parent.allowCalculatedField && this.parent.calculatedFieldModule && field[i].showEditIcon) {\n                                    removeClass([calcElement], cls.ICON_DISABLE);\n                                }\n                                else {\n                                    addClass([calcElement], cls.ICON_DISABLE);\n                                }\n                                buttonElement.appendChild(calcElement);\n                            }\n                            var removeElement = createElement('span', {\n                                attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('remove') },\n                                className: cls.ICON + ' ' + cls.REMOVE_CLASS\n                            });\n                            if (this.parent.getModuleName() === 'pivotview') {\n                                if ((this.parent.groupingBarSettings.showRemoveIcon && field[i].showRemoveIcon)) {\n                                    removeClass([removeElement], cls.ICON_DISABLE);\n                                }\n                                else {\n                                    addClass([removeElement], cls.ICON_DISABLE);\n                                }\n                            }\n                            else {\n                                if (field[i].showRemoveIcon) {\n                                    removeClass([removeElement], cls.ICON_DISABLE);\n                                }\n                                else {\n                                    addClass([removeElement], cls.ICON_DISABLE);\n                                }\n                            }\n                            buttonElement.appendChild(removeElement);\n                            buttonWrapper.appendChild(dropIndicatorElement);\n                            buttonWrapper.appendChild(buttonElement);\n                            buttonWrapper.appendChild(dropLastIndicatorElement);\n                            element.appendChild(buttonWrapper);\n                            var pivotButton = new Button({ enableRtl: this.parent.enableRtl });\n                            pivotButton.isStringTemplate = true;\n                            pivotButton.appendTo(buttonElement);\n                            this.unWireEvent(buttonWrapper, i === valuePos ? 'values' : axis, isMeasureAvail);\n                            this.wireEvent(buttonWrapper, i === valuePos ? 'values' : axis, isMeasureAvail);\n                            if ((this.parent.getModuleName() === 'pivotview' && !this.parent.isAdaptive) ||\n                                this.parent.getModuleName() === 'pivotfieldlist') {\n                                this.createDraggable(field[i], this.parent.getModuleName() === 'pivotview' ? contentElement : dragWrapper);\n                            }\n                        }\n                    }\n                }\n                if (axis === 'values') {\n                    var _loop_1 = function (element) {\n                        if (element.classList.contains(cls.GROUP_CHART_VALUE) && this_1.parent.chartModule) {\n                            var valueData = field.map(function (item) { return { text: item.caption ? item.caption : item.name, value: item.name }; });\n                            var parent_1 = this_1.parent;\n                            if (this_1.valueFiedDropDownList && element.querySelector('.' + cls.GROUP_CHART_VALUE_DROPDOWN_DIV)) {\n                                this_1.valueFiedDropDownList.dataSource = valueData;\n                                this_1.valueFiedDropDownList.value = !parent_1.chartSettings.enableMultiAxis ?\n                                    parent_1.chartModule.currentMeasure : valueData[0].value;\n                            }\n                            else {\n                                var ddlDiv = createElement('div', { className: cls.GROUP_CHART_VALUE_DROPDOWN_DIV });\n                                element.appendChild(ddlDiv);\n                                this_1.valueFiedDropDownList = new DropDownList({\n                                    dataSource: valueData,\n                                    enableRtl: this_1.parent.enableRtl,\n                                    value: !parent_1.chartSettings.enableMultiAxis ?\n                                        parent_1.chartModule.currentMeasure : valueData[0].value,\n                                    width: 200,\n                                    fields: { value: 'value', text: 'text' },\n                                    cssClass: cls.GROUP_CHART_VALUE_DROPDOWN,\n                                    change: function (args) {\n                                        if (args.e && args.e !== null) {\n                                            parent_1.chartSettings.value = args.value;\n                                        }\n                                    }\n                                });\n                                this_1.valueFiedDropDownList.isStringTemplate = true;\n                                this_1.valueFiedDropDownList.appendTo(ddlDiv);\n                            }\n                        }\n                    };\n                    var this_1 = this;\n                    for (var _e = 0, _f = this.parentElement.querySelectorAll('.e-group-' + axis); _e < _f.length; _e++) {\n                        var element = _f[_e];\n                        _loop_1(element);\n                    }\n                }\n                else if (axis === 'columns') {\n                    var availColindex = undefined;\n                    for (var _g = 0, _h = this.parentElement.querySelectorAll('.e-group-' + axis); _g < _h.length; _g++) {\n                        var element = _h[_g];\n                        if (element.classList.contains(cls.GROUP_CHART_COLUMN) && this.parent.chartModule) {\n                            var currentMeasure = this.parent.chartModule.currentMeasure;\n                            var delimiter = this.parent.chartSettings.columnDelimiter ? this.parent.chartSettings.columnDelimiter : '-';\n                            var columnHeader = (this.parent.chartSettings.columnHeader && this.parent.chartSettings.columnHeader !== '') ?\n                                this.parent.chartSettings.columnHeader.split(delimiter).join(' - ') : '';\n                            var engineModule = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n                            var pivotValues = engineModule.pivotValues;\n                            var totColIndex = this.parent.chartModule.getColumnTotalIndex(pivotValues);\n                            var rKeys = Object.keys(pivotValues);\n                            var columnData = [];\n                            var firstValueRow = false;\n                            for (var _j = 0, rKeys_1 = rKeys; _j < rKeys_1.length; _j++) {\n                                var rKey = rKeys_1[_j];\n                                if (firstValueRow) {\n                                    break;\n                                }\n                                var rowIndex = Number(rKey);\n                                if (pivotValues[rowIndex][0] && pivotValues[rowIndex][0].axis === 'row' &&\n                                    (this.parent.dataSourceSettings.rows.length === 0 ? true : pivotValues[rowIndex][0].type !== 'grand sum')) {\n                                    var firstRowCell = pivotValues[rowIndex][0];\n                                    var tupInfo = this.parent.dataType === 'olap' ?\n                                        engineModule.tupRowInfo[firstRowCell.ordinal] : undefined;\n                                    var rows = pivotValues[rowIndex];\n                                    var cKeys = Object.keys(rows);\n                                    for (var _k = 0, cKeys_1 = cKeys; _k < cKeys_1.length; _k++) {\n                                        var cKey = cKeys_1[_k];\n                                        var cellIndex = Number(cKey);\n                                        var cell = pivotValues[rowIndex][cellIndex];\n                                        var actualText = (this.parent.dataType === 'olap' && tupInfo && tupInfo.measureName) ?\n                                            tupInfo.measureName : cell.actualText;\n                                        if (!totColIndex[cell.colIndex] && cell.axis === 'value' && firstRowCell.type !== 'header' &&\n                                            actualText !== '' && actualText === currentMeasure) {\n                                            firstValueRow = true;\n                                            var columnSeries = this.parent.dataType === 'olap' ? cell.columnHeaders.toString().split(/~~|::/).join(' - ')\n                                                : cell.columnHeaders.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).join(' - ');\n                                            columnData.push({ value: columnSeries, text: columnSeries, title: (_a = {}, _a['title'] = columnSeries, _a) });\n                                            if (columnSeries === columnHeader) {\n                                                availColindex = columnData.length;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            if (this.columnFieldDropDownList && element.querySelector('.' + cls.GROUP_CHART_COLUMN_DROPDOWN_DIV)) {\n                                this.columnFieldDropDownList.dataSource = columnData;\n                                if (availColindex !== undefined) {\n                                    this.columnFieldDropDownList.value = columnData[availColindex - 1].value;\n                                }\n                                else {\n                                    this.columnFieldDropDownList.value = columnData[0].value;\n                                }\n                            }\n                            else {\n                                var ddlDiv = createElement('div', { className: cls.GROUP_CHART_COLUMN_DROPDOWN_DIV });\n                                element.appendChild(ddlDiv);\n                                this.columnFieldDropDownList = new DropDownList({\n                                    dataSource: columnData,\n                                    enableRtl: this.parent.enableRtl,\n                                    value: availColindex ? columnData[availColindex - 1].value : (columnData[0] ? columnData[0].value : ''),\n                                    width: '200',\n                                    fields: { value: 'value', text: 'text', htmlAttributes: 'title' },\n                                    cssClass: cls.GROUP_CHART_COLUMN_DROPDOWN,\n                                    change: function (args) {\n                                        if (args.e && args.e !== null) {\n                                            var delimiter_1 = _this.parent.chartSettings.columnDelimiter ? _this.parent.chartSettings.columnDelimiter : '-';\n                                            _this.parent.chartSettings.columnHeader = args.value.split(' - ').join(delimiter_1);\n                                        }\n                                    }\n                                });\n                                this.columnFieldDropDownList.isStringTemplate = true;\n                                this.columnFieldDropDownList.appendTo(ddlDiv);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    PivotButton.prototype.createButtonText = function (field, i, axis, valuePos) {\n        var buttonText;\n        var aggregation;\n        var filterMem;\n        if (axis === 'filters') {\n            filterMem = this.updateButtontext(field[i].name);\n        }\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (engineModule.fieldList[field[i].name] !== undefined) {\n            aggregation = engineModule.fieldList[field[i].name].aggregateType;\n            if ((aggregation !== 'DistinctCount') && (engineModule.fieldList[field[i].name].type !== 'number' || engineModule.fieldList[field[i].name].type === 'include' ||\n                engineModule.fieldList[field[i].name].type === 'exclude')) {\n                aggregation = 'Count';\n            }\n            else {\n                aggregation = aggregation === undefined ? 'Sum' :\n                    engineModule.fieldList[field[i].name].aggregateType;\n            }\n        }\n        var text = field[i].caption ? field[i].caption : field[i].name;\n        buttonText = createElement('span', {\n            attrs: {\n                title: axis === 'filters' ? (this.parent.dataType === 'olap' && engineModule.fieldList[field[i].name].type === 'CalculatedField') ?\n                    text : (text + ' (' + filterMem + ')') : (this.parent.dataType === 'olap' ?\n                    text : (((!this.parent.dataSourceSettings.showAggregationOnValueField || axis !== 'values' || aggregation === 'CalculatedField') ?\n                    text : this.parent.localeObj.getConstant(aggregation) + ' ' + this.parent.localeObj.getConstant('of') + ' ' + text))),\n                'tabindex': '-1', 'aria-disabled': 'false', 'oncontextmenu': 'return false;',\n                'data-type': valuePos === i ? '' : aggregation\n            },\n            className: cls.PIVOT_BUTTON_CONTENT_CLASS + ' ' +\n                (this.parent.getModuleName() === 'pivotview' ?\n                    this.parent.groupingBarSettings.allowDragAndDrop && field[i].allowDragAndDrop ? '' : cls.DRAG_DISABLE_CLASS : ''),\n            innerHTML: axis === 'filters' ? (this.parent.dataType === 'olap' && engineModule.fieldList[field[i].name].type === 'CalculatedField') ?\n                text : (text + ' (' + filterMem + ')') : (this.parent.dataType === 'olap' ?\n                text : (!this.parent.dataSourceSettings.showAggregationOnValueField || axis !== 'values' || aggregation === 'CalculatedField' ?\n                text : this.parent.localeObj.getConstant(aggregation) + ' ' + this.parent.localeObj.getConstant('of') + ' ' + text))\n        });\n        return buttonText;\n    };\n    /* tslint:enable */\n    PivotButton.prototype.getTypeStatus = function (field, i, buttonElement) {\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        var fieldListItem = engineModule.fieldList[field[i].name];\n        if (fieldListItem.aggregateType !== 'CalculatedField' && this.validateDropdown(fieldListItem.type)) {\n            this.createSummaryType(buttonElement, field[i].name, field[i]);\n        }\n    };\n    PivotButton.prototype.validateDropdown = function (type) {\n        var aggregateType = this.parent.aggregateTypes;\n        if (type !== 'number') {\n            return (aggregateType.indexOf('Count') > -1 || aggregateType.indexOf('DistinctCount') > -1);\n        }\n        else {\n            for (var i = 0; i < aggregateType.length; i++) {\n                if (this.parent.getAllSummaryType().indexOf(aggregateType[i]) > -1) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    };\n    PivotButton.prototype.createSummaryType = function (pivotButton, fieldName, field) {\n        var spanElement = createElement('span', {\n            attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('format') },\n            className: cls.ICON + ' ' + cls.AXISFIELD_ICON_CLASS\n        });\n        if (this.parent.getModuleName() === 'pivotview') {\n            if (this.parent.groupingBarSettings.showValueTypeIcon && field.showValueTypeIcon) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        else {\n            if (field.showValueTypeIcon) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        pivotButton.appendChild(spanElement);\n        return spanElement;\n    };\n    PivotButton.prototype.createMenuOption = function (args) {\n        this.menuOption.render(args, this.parentElement);\n        this.parent.pivotButtonModule = this;\n    };\n    PivotButton.prototype.openCalculatedFieldDialog = function (args) {\n        var fieldName = args.target.parentElement.id;\n        if (this.parent.getModuleName() === 'pivotview') {\n            if (this.parent.isAdaptive && (this.parent.showFieldList &&\n                this.parent.pivotFieldListModule &&\n                !this.parent.pivotFieldListModule.isDestroyed)) {\n                this.parent.pivotFieldListModule.element\n                    .querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).click();\n                this.parent.pivotFieldListModule.dialogRenderer.adaptiveElement.select(4);\n                /* tslint:disable-next-line:no-any */\n                this.parent.pivotFieldListModule.calculatedFieldModule\n                    .updateAdaptiveCalculatedField(true, fieldName);\n            }\n            else {\n                if (!this.parent.isAdaptive) {\n                    this.parent.calculatedFieldModule.buttonCall = true;\n                }\n                this.parent.notify(events.initCalculatedField, { edit: true, fieldName: fieldName });\n            }\n        }\n        else if (this.parent.getModuleName() === 'pivotfieldlist') {\n            if (this.parent.isAdaptive) {\n                this.parent.dialogRenderer.adaptiveElement.select(4);\n                /* tslint:disable-next-line:no-any */\n                this.parent.calculatedFieldModule\n                    .updateAdaptiveCalculatedField(true, fieldName);\n                this.parent.calculatedFieldModule.buttonCall = true;\n            }\n            else {\n                if (this.parent.dialogRenderer.fieldListDialog) {\n                    this.parent.dialogRenderer.fieldListDialog.hide();\n                    addClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n                }\n                this.parent.notify(events.initCalculatedField, { edit: true, fieldName: fieldName });\n                if (this.parent.calculatedFieldModule) {\n                    this.parent.calculatedFieldModule.buttonCall = true;\n                }\n            }\n        }\n    };\n    PivotButton.prototype.createDraggable = function (field, target) {\n        this.draggable = new Draggable(target, {\n            clone: true,\n            enableTailMode: true,\n            enableAutoScroll: true,\n            helper: this.createDragClone.bind(this),\n            dragStart: this.onDragStart.bind(this),\n            drag: this.onDragging.bind(this),\n            dragStop: this.onDragStop.bind(this),\n            abort: (this.parent.getModuleName() === 'pivotview' ?\n                !(this.parent.groupingBarSettings.allowDragAndDrop && field.allowDragAndDrop) ?\n                    '.' + cls.PIVOT_BUTTON_CLASS : '' : !field.allowDragAndDrop ? '.' + cls.PIVOT_BUTTON_CLASS : '')\n        });\n    };\n    PivotButton.prototype.createButtonDragIcon = function (field, pivotButton) {\n        var dragWrapper = createElement('span', {\n            attrs: { 'tabindex': '-1', 'aria-disabled': 'false' }\n        });\n        var dragElement = createElement('span', {\n            attrs: {\n                'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('drag'),\n            },\n            className: cls.ICON + ' ' + cls.DRAG_CLASS + ' ' + (field.allowDragAndDrop ? '' : cls.DRAG_DISABLE_CLASS)\n        });\n        dragWrapper.appendChild(dragElement);\n        pivotButton.appendChild(dragWrapper);\n        return dragWrapper;\n    };\n    PivotButton.prototype.createSortOption = function (pivotButton, fieldName, field) {\n        var sortCLass;\n        var spanElement;\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (!this.parent.allowDeferLayoutUpdate) {\n            sortCLass = engineModule.fieldList[fieldName].sort === 'Descending' ? cls.SORT_DESCEND_CLASS : '';\n        }\n        else {\n            sortCLass = '';\n            for (var i = 0; i < this.parent.dataSourceSettings.sortSettings.length; i++) {\n                if (this.parent.dataSourceSettings.sortSettings[i].name === fieldName) {\n                    sortCLass = this.parent.dataSourceSettings.sortSettings[i].order === 'Descending' ? cls.SORT_DESCEND_CLASS : '';\n                }\n            }\n        }\n        if (engineModule.fieldList[fieldName].sort === 'None') {\n            spanElement = createElement('span', {\n                attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('sort') },\n                className: cls.ICON\n            });\n        }\n        else {\n            spanElement = createElement('span', {\n                attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('sort') },\n                className: cls.ICON + ' ' + cls.SORT_CLASS + ' ' + sortCLass\n            });\n        }\n        if (this.parent.dataSourceSettings.enableSorting) {\n            if (this.parent.getModuleName() === 'pivotview') {\n                if (field.showSortIcon && this.parent.groupingBarSettings.showSortIcon) {\n                    removeClass([spanElement], cls.ICON_DISABLE);\n                }\n                else {\n                    addClass([spanElement], cls.ICON_DISABLE);\n                }\n            }\n            else {\n                if (field.showSortIcon) {\n                    removeClass([spanElement], cls.ICON_DISABLE);\n                }\n                else {\n                    addClass([spanElement], cls.ICON_DISABLE);\n                }\n            }\n        }\n        else {\n            addClass([spanElement], cls.ICON_DISABLE);\n        }\n        pivotButton.appendChild(spanElement);\n        return spanElement;\n    };\n    PivotButton.prototype.createFilterOption = function (pivotButton, fieldName, axis, field) {\n        var filterCLass;\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (!this.parent.allowDeferLayoutUpdate) {\n            engineModule.fieldList[fieldName].filter = engineModule.fieldList[fieldName].filter === null ?\n                [] : engineModule.fieldList[fieldName].filter;\n            filterCLass = engineModule.fieldList[fieldName].filter.length === 0 ?\n                !engineModule.fieldList[fieldName].isExcelFilter ? cls.FILTER_CLASS : cls.FILTERED_CLASS : cls.FILTERED_CLASS;\n        }\n        else {\n            filterCLass = cls.FILTER_CLASS;\n            for (var i = 0; i < this.parent.dataSourceSettings.filterSettings.length; i++) {\n                if (this.parent.dataSourceSettings.filterSettings[i].name === fieldName) {\n                    filterCLass = cls.FILTERED_CLASS;\n                }\n            }\n        }\n        var spanElement = createElement('span', {\n            attrs: {\n                'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('filter'),\n            },\n            className: cls.FILTER_COMMON_CLASS + ' ' + cls.ICON + ' ' + filterCLass\n        });\n        if ((((this.parent.dataSourceSettings.allowLabelFilter || this.parent.dataSourceSettings.allowValueFilter) &&\n            axis !== 'filters') || this.parent.dataSourceSettings.allowMemberFilter)) {\n            removeClass([spanElement], cls.ICON_DISABLE);\n        }\n        else {\n            addClass([spanElement], cls.ICON_DISABLE);\n        }\n        if (this.parent.getModuleName() === 'pivotview') {\n            if ((((this.parent.dataSourceSettings.allowLabelFilter || this.parent.dataSourceSettings.allowValueFilter) &&\n                axis !== 'filters') || this.parent.dataSourceSettings.allowMemberFilter) &&\n                this.parent.groupingBarSettings.showFilterIcon && field.showFilterIcon) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        else {\n            if (field.showFilterIcon && (((this.parent.dataSourceSettings.allowLabelFilter ||\n                this.parent.dataSourceSettings.allowValueFilter) && axis !== 'filters') ||\n                this.parent.dataSourceSettings.allowMemberFilter)) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        pivotButton.appendChild(spanElement);\n        return spanElement;\n    };\n    // To update button text\n    PivotButton.prototype.updateButtontext = function (fieldName) {\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        var filterCount = engineModule.fieldList[fieldName].filter.length;\n        var filterType = engineModule.fieldList[fieldName].filterType;\n        var memLen = engineModule.fieldList[fieldName].dateMember.length;\n        var filterMem;\n        var firstNode = engineModule.fieldList[fieldName].filter[0];\n        if (this.parent.dataType === 'olap') {\n            filterMem = this.updateOlapButtonText(engineModule, fieldName, firstNode, filterCount);\n        }\n        else if (filterType === 'include') {\n            if (filterCount === 1) {\n                filterMem = firstNode;\n            }\n            else if (filterCount > 1) {\n                if (filterCount === memLen) {\n                    filterMem = this.parent.localeObj.getConstant('all');\n                }\n                else {\n                    filterMem = this.parent.localeObj.getConstant('multipleItems');\n                }\n            }\n        }\n        else if (filterType === 'exclude') {\n            if (filterCount === 1) {\n                if (memLen === 2) {\n                    if (firstNode !== engineModule.fieldList[fieldName].dateMember[0].actualText) {\n                        filterMem = firstNode;\n                    }\n                    else {\n                        filterMem = engineModule.fieldList[fieldName].dateMember[0].actualText;\n                    }\n                }\n                else {\n                    filterMem = this.parent.localeObj.getConstant('multipleItems');\n                }\n            }\n            else if (filterCount > 1) {\n                var j = void 0;\n                var allNodes = Object.keys(engineModule.fieldList[fieldName].members);\n                var filteredItems = engineModule.fieldList[fieldName].filter;\n                if (filterCount === (allNodes.length - 1)) {\n                    loop: for (j = 0; j < allNodes.length; j++) {\n                        var test = allNodes[j];\n                        var x = filteredItems.indexOf(test);\n                        if (x === -1) {\n                            filterMem = allNodes[j];\n                            break loop;\n                        }\n                    }\n                }\n                else {\n                    filterMem = this.parent.localeObj.getConstant('multipleItems');\n                }\n            }\n        }\n        else {\n            filterMem = this.parent.localeObj.getConstant('all');\n        }\n        return filterMem;\n    };\n    PivotButton.prototype.updateOlapButtonText = function (engineModule, fieldName, firstNode, filterCount) {\n        var filterMem;\n        var filterItems = engineModule.fieldList[fieldName].actualFilter;\n        if (filterItems.length > 0) {\n            var cMembers = engineModule.fieldList[fieldName].members;\n            var actualFilterItems = [];\n            if (engineModule.fieldList[fieldName].filterMembers.length > 0) {\n                var dummyfilterItems = {};\n                for (var _i = 0, filterItems_1 = filterItems; _i < filterItems_1.length; _i++) {\n                    var item = filterItems_1[_i];\n                    dummyfilterItems[item] = item;\n                    if (cMembers[item]) {\n                        dummyfilterItems = this.parent.pivotCommon.eventBase.getParentNode(fieldName, item, dummyfilterItems);\n                    }\n                }\n                var updatedFilterItems = dummyfilterItems ? Object.keys(dummyfilterItems) : [];\n                for (var _a = 0, updatedFilterItems_1 = updatedFilterItems; _a < updatedFilterItems_1.length; _a++) {\n                    var item = updatedFilterItems_1[_a];\n                    if (cMembers[item].isSelected) {\n                        if (!(cMembers[item].parent && cMembers[cMembers[item].parent].isSelected)) {\n                            actualFilterItems.push(item);\n                        }\n                    }\n                }\n                firstNode = actualFilterItems.length === 1 ? cMembers[actualFilterItems[0]].caption : firstNode;\n            }\n            filterCount = actualFilterItems.length === 0 ? filterCount : actualFilterItems.length;\n        }\n        if (filterCount === 0) {\n            filterMem = (engineModule.fieldList[fieldName].allMember ?\n                engineModule.fieldList[fieldName].allMember : this.parent.localeObj.getConstant('all'));\n        }\n        else if (filterCount === 1) {\n            filterMem = firstNode;\n        }\n        else if (filterCount > 1) {\n            filterMem = this.parent.localeObj.getConstant('multipleItems');\n        }\n        return filterMem;\n    };\n    PivotButton.prototype.createDragClone = function (args) {\n        var element = closest(args.element, '.' + cls.PIVOT_BUTTON_CLASS);\n        var cloneElement = createElement('div', {\n            id: this.parent.element.id + '_DragClone',\n            className: cls.DRAG_CLONE_CLASS\n        });\n        var contentElement = createElement('span', {\n            className: cls.TEXT_CONTENT_CLASS,\n            innerHTML: element.textContent\n        });\n        cloneElement.appendChild(contentElement);\n        document.body.appendChild(cloneElement);\n        return cloneElement;\n    };\n    PivotButton.prototype.onDragStart = function (e) {\n        var _this = this;\n        var element = closest(e.element, '.' + cls.PIVOT_BUTTON_CLASS);\n        var dragItem = document.getElementById(this.parent.element.id + '_DragClone');\n        var fieldInfo = PivotUtil.getFieldInfo(element.getAttribute('data-uid'), this.parent);\n        var dragEventArgs = {\n            fieldName: fieldInfo.fieldName,\n            fieldItem: fieldInfo.fieldItem,\n            axis: fieldInfo.axis,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n            cancel: false\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.fieldDragStart, dragEventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                _this.parent.isDragging = true;\n                var engineModule = void 0;\n                if (_this.parent.dataType === 'olap') {\n                    engineModule = _this.parent.olapEngineModule;\n                }\n                else {\n                    engineModule = _this.parent.engineModule;\n                }\n                var data = engineModule.fieldList[element.getAttribute('data-uid')];\n                var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n                addClass([element], cls.SELECTED_NODE_CLASS);\n                if (dragItem && (_this.parent.getModuleName() === 'pivotfieldlist' &&\n                    _this.parent.renderMode) === 'Popup') {\n                    var fieldListPopup = _this.parent;\n                    dragItem.style.zIndex = (fieldListPopup.dialogRenderer.fieldListDialog.zIndex + 1).toString();\n                }\n                if (data && data.aggregateType === 'CalculatedField') {\n                    for (var _i = 0, axis_1 = axis; _i < axis_1.length; _i++) {\n                        var axisContent = axis_1[_i];\n                        addClass([_this.parentElement.querySelector('.' + axisContent)], cls.NO_DRAG_CLASS);\n                    }\n                }\n                if (isBlazor()) {\n                    e.bindEvents(e.dragElement);\n                }\n            }\n            else {\n                _this.parent.isDragging = false;\n                _this.draggable.intDestroy(e.event);\n                detach(dragItem);\n            }\n        });\n    };\n    PivotButton.prototype.onDragging = function (e) {\n        this.draggable.setProperties({ cursorAt: { top: (!isNOU(e.event.targetTouches) || Browser.isDevice) ? 60 : -20, } });\n    };\n    PivotButton.prototype.onDragStop = function (args) {\n        this.parent.isDragging = false;\n        /* tslint:disable-next-line:max-line-length */\n        if (args.target.classList && (args.target.classList.contains(cls.GROUP_CHART_VALUE) || args.target.classList.contains(cls.GROUP_CHART_VALUE_DROPDOWN))) {\n            args.target = this.parent.element.querySelector('.' + cls.GROUP_CHART_ROW);\n        }\n        if (args.target.classList && args.element && (args.target.classList.contains(cls.GROUP_CHART_COLUMN) || args.target.classList.contains(cls.GROUP_CHART_COLUMN_DROPDOWN))) {\n            args.cancel = true;\n        }\n        var element = closest(args.element, '.' + cls.PIVOT_BUTTON_CLASS);\n        removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS)), cls.SELECTED_NODE_CLASS);\n        removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n        var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n        for (var _i = 0, axis_2 = axis; _i < axis_2.length; _i++) {\n            var axisContent = axis_2[_i];\n            removeClass([this.parentElement.querySelector('.' + axisContent)], cls.NO_DRAG_CLASS);\n        }\n        if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n            this.parent.pivotCommon.filterDialog.dialogPopUp.close();\n        }\n        if (document.getElementById(this.parent.element.id + '_DragClone')) {\n            remove(document.getElementById(this.parent.element.id + '_DragClone'));\n        }\n        document.body.style.cursor = 'auto';\n        if (!this.isButtonDropped(args.target, element) || args.cancel) {\n            return;\n        }\n        this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ? this.parent :\n            (this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent);\n        if (this.parent.pivotCommon.nodeStateModified.onStateModified(args, element.id)) {\n            this.updateDataSource();\n            var thisObj = this;\n            //setTimeout(() => {\n            thisObj.parent.axisFieldModule.render();\n            //});\n        }\n    };\n    PivotButton.prototype.isButtonDropped = function (dropTarget, target) {\n        var axisPanel = closest(target, '.' + cls.DROPPABLE_CLASS);\n        var droppableElement = closest(dropTarget, '.' + cls.DROPPABLE_CLASS);\n        var isDropped = true;\n        if (axisPanel === droppableElement) {\n            var pivotButtons = [].slice.call(axisPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n            var droppableTarget = closest(dropTarget, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n            var sourcePosition = void 0;\n            var droppedPosition = -1;\n            for (var i = 0, n = pivotButtons.length; i < n; i++) {\n                if (pivotButtons[i].id === target.id) {\n                    sourcePosition = i;\n                }\n                if (droppableTarget) {\n                    var droppableButton = droppableTarget.querySelector('.' + cls.PIVOT_BUTTON_CLASS);\n                    if (pivotButtons[i].id === droppableButton.id) {\n                        droppedPosition = i;\n                    }\n                }\n            }\n            if (sourcePosition === droppedPosition || (sourcePosition === (pivotButtons.length - 1) && droppedPosition === -1)) {\n                removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n                isDropped = false;\n            }\n        }\n        return isDropped;\n    };\n    PivotButton.prototype.updateSorting = function (args) {\n        var buttonElement = closest(args.target, '.' + cls.PIVOT_BUTTON_CLASS);\n        var fieldInfo = PivotUtil.getFieldInfo((buttonElement ? buttonElement.id : ''), this.parent);\n        if (!(args.target.classList.contains(cls.FILTER_COMMON_CLASS)) &&\n            !(args.target.classList.contains(cls.REMOVE_CLASS)) &&\n            !(args.target.classList.contains(cls.DRAG_CLASS)) &&\n            (buttonElement && fieldInfo.fieldItem && (fieldInfo.fieldItem.showSortIcon ||\n                isNullOrUndefined(fieldInfo.fieldItem.showSortIcon)))) {\n            if ((this.parent instanceof PivotFieldList || this.parent.groupingBarSettings.showSortIcon) &&\n                this.parent.dataSourceSettings.enableSorting &&\n                !(this.parent.dataType === 'olap' && ((this.parent.getModuleName() === 'pivotfieldlist' &&\n                    this.parent.pivotGridModule !== undefined &&\n                    this.parent.pivotGridModule.enableVirtualization) ||\n                    (this.parent.getModuleName() === 'pivotview' && this.parent.enableVirtualization)))) {\n                if (((this.parent.getModuleName() === 'pivotview' && this.parent.enableValueSorting) ||\n                    (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.pivotGridModule !== undefined &&\n                        this.parent.pivotGridModule.enableValueSorting))) {\n                    /* tslint:disable-next-line:max-line-length */\n                    if (this.parent.enableValueSorting || this.parent.pivotGridModule.enableValueSorting) {\n                        if (args.target.classList.contains('e-pivot-button')) {\n                            if (args.target.parentElement.getAttribute('data-tag').split(':')[0] === 'rows') {\n                                this.parent.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                            }\n                        }\n                        else {\n                            /* tslint:disable-next-line:max-line-length */\n                            if (args.target.parentElement.parentElement.getAttribute('data-tag').split(':')[0] === 'rows') {\n                                this.parent.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                            }\n                        }\n                    }\n                }\n                this.parent.pivotCommon.eventBase.updateSorting(args);\n                if (!this.parent.allowDeferLayoutUpdate || this.parent.getModuleName() !== 'pivotfieldlist') {\n                    this.updateDataSource(true);\n                }\n                var thisObj = this;\n                //setTimeout(() => {\n                if (thisObj.parent instanceof PivotFieldList) {\n                    thisObj.axisField.render();\n                }\n                //});\n            }\n        }\n    };\n    /** @hidden */\n    PivotButton.prototype.updateDataSource = function (isRefreshGrid) {\n        if (!this.parent.allowDeferLayoutUpdate || this.parent.getModuleName() === 'pivotview') {\n            this.parent.updateDataSource(isRefreshGrid);\n        }\n        else {\n            if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.renderMode === 'Popup') {\n                if (this.parent.dataType === 'olap') {\n                    this.parent.pivotGridModule.olapEngineModule = this.parent.olapEngineModule;\n                }\n                else {\n                    this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n                }\n                this.parent.pivotGridModule.notify(events.uiUpdate, this);\n                /* tslint:disable-next-line:max-line-length */\n                this.parent.\n                    pivotGridModule.setProperties({ dataSourceSettings: this.parent.dataSourceSettings.properties }, true);\n            }\n            else {\n                this.parent.triggerPopulateEvent();\n            }\n        }\n    };\n    PivotButton.prototype.updateFiltering = function (args) {\n        /* tslint:disable */\n        var pivotObj = this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent;\n        pivotObj.mouseEventArgs = args;\n        pivotObj.filterTargetID = this.parent.pivotCommon.moduleName !== 'pivotfieldlist' ?\n            this.parent.element : document.getElementById(this.parent.pivotCommon.parentID + '_Wrapper');\n        var fieldName = args.target.parentElement.id;\n        if (pivotObj && pivotObj.enableVirtualization && isBlazor() && pivotObj.dataType === 'pivot') {\n            var $this_1 = this;\n            pivotObj.interopAdaptor.invokeMethodAsync(\"PivotInteropMethod\", 'fetchFieldMembers', fieldName).then(function (data) {\n                var parsedData = JSON.parse(data.dateMembers);\n                var dateMembers = [];\n                var formattedMembers = {};\n                var members = {};\n                for (var i = 0; i < parsedData.length; i++) {\n                    dateMembers.push({ formattedText: parsedData[i].FormattedText, actualText: parsedData[i].ActualText });\n                    formattedMembers[parsedData[i].FormattedText] = {};\n                    members[parsedData[i].ActualText] = {};\n                }\n                $this_1.parent.engineModule.fieldList[fieldName].dateMember = dateMembers;\n                $this_1.parent.engineModule.fieldList[fieldName].formattedMembers = formattedMembers;\n                $this_1.parent.engineModule.fieldList[fieldName].members = members;\n                $this_1.updateFilterEvents();\n            });\n        }\n        else if (pivotObj.dataSourceSettings.mode === 'Server') {\n            pivotObj.getEngine('fetchFieldMembers', null, null, null, null, null, fieldName);\n        }\n        else {\n            this.updateFilterEvents();\n        }\n        /* tslint:enable */\n    };\n    /** @hidden */\n    PivotButton.prototype.updateFilterEvents = function () {\n        /* tslint:disable */\n        var pivotObj = this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent;\n        this.parent.pivotCommon.eventBase.updateFiltering(pivotObj.mouseEventArgs);\n        var target = pivotObj.mouseEventArgs.target;\n        this.fieldName = target.parentElement.id;\n        if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n            this.dialogPopUp = this.parent.pivotCommon.filterDialog.dialogPopUp;\n            this.parent.pivotCommon.filterDialog.dialogPopUp.close = this.removeFilterDialog.bind(this);\n            // this.memberTreeView = this.parent.pivotCommon.filterDialog.memberTreeView;\n            // this.parent.pivotCommon.filterDialog.memberTreeView.nodeChecked = this.nodeStateModified.bind(this);\n            // this.parent.pivotCommon.filterDialog.allMemberSelect.nodeChecked = this.nodeStateModified.bind(this);\n            this.bindDialogEvents();\n        }\n    };\n    PivotButton.prototype.bindDialogEvents = function () {\n        if (this.parent.pivotCommon.filterDialog.allowExcelLikeFilter && this.parent.pivotCommon.filterDialog.tabObj) {\n            this.index = this.parent.pivotCommon.filterDialog.tabObj.selectedItem;\n            this.updateDialogButtonEvents();\n            this.dialogPopUp.buttons = this.buttonModel();\n            this.dialogPopUp.dataBind();\n            this.parent.pivotCommon.filterDialog.tabObj.selected = this.tabSelect.bind(this);\n        }\n        else if (this.parent.dataSourceSettings.allowMemberFilter) {\n            this.index = 0;\n            this.updateDialogButtonEvents();\n        }\n    };\n    PivotButton.prototype.buttonModel = function () {\n        return [\n            {\n                /* tslint:disable:max-line-length */\n                buttonModel: {\n                    cssClass: 'e-clear-filter-button' + (this.parent.pivotCommon.filterDialog.allowExcelLikeFilter ? '' : ' ' + cls.ICON_DISABLE),\n                    iconCss: 'e-icons e-clear-filter-icon', enableRtl: this.parent.enableRtl,\n                    content: this.parent.localeObj.getConstant('clearFilter'), disabled: (this.parent.pivotCommon.filterDialog.filterObject ? false : true)\n                },\n                click: this.ClearFilter.bind(this)\n                /* tslint:enable:max-line-length */\n            },\n            {\n                buttonModel: {\n                    cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true\n                },\n                click: (this.index === 0 ? this.updateFilterState.bind(this, this.fieldName) : this.updateCustomFilter.bind(this))\n            },\n            {\n                click: this.parent.pivotCommon.filterDialog.closeFilterDialog.bind(this),\n                buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n            }\n        ];\n    };\n    PivotButton.prototype.tabSelect = function (e) {\n        this.index = e.selectedIndex;\n        this.updateDialogButtonEvents();\n        removeClass([].slice.call(this.dialogPopUp.element.querySelectorAll('.e-selected-tab')), 'e-selected-tab');\n        if (e.selectedIndex > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            addClass([this.dialogPopUp.element.querySelector('.e-filter-div-content' + '.' + (e.selectedIndex === 1 && this.parent.dataSourceSettings.allowLabelFilter ? 'e-label-filter' : 'e-value-filter'))], 'e-selected-tab');\n        }\n        if (e.selectedIndex === 0) {\n            this.parent.pivotCommon.filterDialog.updateCheckedState();\n        }\n        else {\n            this.dialogPopUp.buttons[0].buttonModel.disabled = false;\n            this.dialogPopUp.element.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n        }\n    };\n    PivotButton.prototype.updateDialogButtonEvents = function () {\n        this.dialogPopUp.buttons = this.buttonModel();\n        this.dialogPopUp.dataBind();\n    };\n    PivotButton.prototype.updateCustomFilter = function (args) {\n        var _this = this;\n        var dialogElement = this.dialogPopUp.element.querySelector('.e-selected-tab');\n        var fieldName = dialogElement.getAttribute('data-fieldname');\n        var levelName = dialogElement.getAttribute('data-selectedField');\n        var filterType = dialogElement.getAttribute('data-type');\n        var measure = dialogElement.getAttribute('data-measure');\n        var operator = dialogElement.getAttribute('data-operator');\n        var operand1 = dialogElement.getAttribute('data-value1');\n        var operand2 = dialogElement.getAttribute('data-value2');\n        var type = ((filterType === 'value') ? 'Value' : (filterType === 'date') ? 'Date' :\n            (filterType === 'number') ? 'Number' : 'Label');\n        var filterItem = {\n            name: fieldName,\n            type: type,\n            measure: measure,\n            condition: operator,\n            value1: filterType === 'date' && !isBlazor() ? new Date(operand1) : operand1,\n            value2: filterType === 'date' && !isBlazor() ? new Date(operand2) : operand2\n        };\n        var filterObject;\n        if (this.parent.dataType === 'olap') {\n            filterItem.selectedField = levelName;\n            this.removeDataSourceSettings(fieldName, levelName, type);\n            var filterItems = this.parent.dataSourceSettings.filterSettings;\n            for (var _i = 0, filterItems_2 = filterItems; _i < filterItems_2.length; _i++) {\n                var item = filterItems_2[_i];\n                if (item.name === fieldName && item.selectedField === levelName) {\n                    filterObject = item;\n                }\n            }\n        }\n        else {\n            filterObject = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n        }\n        if ((isNOU(operand1) || operand1 === '') ||\n            (['Between', 'NotBetween'].indexOf(operator) > -1 && (isNOU(operand2) || operand2 === ''))) {\n            var inputElementString = (type.toLowerCase() + ((isNOU(operand1) || operand1 === '') ? '_input_option_1' : '_input_option_2'));\n            var focusElement = dialogElement.querySelector('#' + this.parent.element.id + '_' + inputElementString);\n            addClass([focusElement], cls.EMPTY_FIELD);\n            focusElement.focus();\n            return;\n        }\n        var filterEventArgs = {\n            cancel: false,\n            filterSettings: filterItem,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings)\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.memberFiltering, filterEventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                filterItem = observedArgs.filterSettings;\n                if (filterObject) {\n                    // this.removeDataSourceSettings(fieldName);\n                    filterObject = filterObject.properties ?\n                        filterObject.properties : filterObject;\n                    filterObject.type = filterItem.type;\n                    filterObject.measure = filterItem.measure;\n                    filterObject.condition = filterItem.condition;\n                    filterObject.value1 = filterItem.value1;\n                    filterObject.value2 = filterItem.value2;\n                    if (_this.parent.dataType === 'olap') {\n                        filterObject.selectedField = filterItem.selectedField;\n                    }\n                }\n                else {\n                    _this.parent.dataSourceSettings.filterSettings.push(filterItem);\n                }\n            }\n            if (type !== 'Value') {\n                _this.parent.lastFilterInfo = PivotUtil.getFilterItemByName(fieldName, _this.parent.dataSourceSettings.filterSettings);\n            }\n            _this.dialogPopUp.close();\n            if (!observedArgs.cancel) {\n                _this.refreshPivotButtonState(fieldName, true);\n                _this.updateDataSource(true);\n            }\n        });\n    };\n    PivotButton.prototype.removeFilterDialog = function () {\n        if (this.dialogPopUp && !this.dialogPopUp.isDestroyed) {\n            this.dialogPopUp.destroy();\n            setTimeout(this.setFocus.bind(this));\n        }\n        if (document.getElementById(this.parentElement.id + '_EditorTreeView')) {\n            remove(document.getElementById(this.parentElement.id + '_EditorTreeView'));\n        }\n    };\n    PivotButton.prototype.setFocus = function () {\n        if (this.parentElement) {\n            var pivotButtons = [].slice.call(this.parentElement.querySelectorAll('.e-pivot-button'));\n            for (var _i = 0, pivotButtons_1 = pivotButtons; _i < pivotButtons_1.length; _i++) {\n                var item = pivotButtons_1[_i];\n                if (item.getAttribute('data-uid') === this.fieldName) {\n                    item.focus();\n                    break;\n                }\n            }\n        }\n    };\n    PivotButton.prototype.ClearFilter = function (e) {\n        var dialogElement = this.dialogPopUp.element;\n        var fieldName = dialogElement.getAttribute('data-fieldname');\n        var tabElement = dialogElement.querySelector('.e-selected-tab');\n        this.dialogPopUp.close();\n        if (this.parent.dataType === 'olap' && tabElement) {\n            var levelName = tabElement.getAttribute('data-selectedField');\n            this.removeDataSourceSettings(fieldName, levelName);\n        }\n        else {\n            this.removeDataSourceSettings(fieldName);\n        }\n        var filterObject = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n        this.refreshPivotButtonState(fieldName, filterObject ? true : false);\n        this.updateDataSource(true);\n    };\n    PivotButton.prototype.removeButton = function (args) {\n        var _this = this;\n        var target = args.target;\n        var fieldName = target.parentElement.id;\n        var fieldInfo = PivotUtil.getFieldInfo(fieldName, this.parent);\n        var removeFieldArgs = {\n            cancel: false, fieldName: fieldName,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n            fieldItem: fieldInfo.fieldItem, axis: fieldInfo.axis\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.fieldRemove, removeFieldArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                if (target.parentElement.getAttribute('isvalue') === 'true') {\n                    _this.parent.setProperties({ dataSourceSettings: { values: [] } }, true);\n                    if (_this.parent.dataType === 'olap') {\n                        _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport('[measures]');\n                    }\n                }\n                else {\n                    _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport(fieldName);\n                    if (_this.parent.dataType === 'olap' && _this.parent.dataSourceSettings.values.length === 0) {\n                        _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport('[measures]');\n                    }\n                }\n                if (_this.parent.getModuleName() === 'pivotfieldlist') {\n                    _this.parent.axisFieldModule.render();\n                }\n                _this.updateDataSource();\n            }\n        });\n    };\n    /** @hidden */\n    PivotButton.prototype.nodeStateModified = function (args) {\n        var target = closest(args.node, 'li');\n        var fieldName = target.getAttribute('data-fieldname');\n        if (target.getAttribute('data-uid') === 'all') {\n            this.memberTreeView.nodeChecked = null;\n            if (args.action === 'check') {\n                this.memberTreeView.checkAll();\n            }\n            else {\n                this.memberTreeView.uncheckAll();\n            }\n            if (this.parent.dataType === 'olap' && this.parent.olapEngineModule &&\n                !this.parent.olapEngineModule.fieldList[fieldName].isHierarchy) {\n                this.updateNodeStates(this.memberTreeView.getAllCheckedNodes(), fieldName, args.action);\n            }\n            this.checkedStateAll(args.action);\n            this.memberTreeView.nodeChecked = this.nodeStateModified.bind(this);\n        }\n        else {\n            if (this.parent.dataType === 'olap' && this.parent.olapEngineModule &&\n                !this.parent.olapEngineModule.fieldList[fieldName].isHierarchy) {\n                // let st1: number = new Date().getTime();\n                var checkedNodes = this.memberTreeView.getAllCheckedNodes();\n                // let st2: number = (new Date().getTime() - st1) / 1000;\n                // console.log('getAllCheckedNodes:' + st2);\n                this.updateNodeStates(checkedNodes, fieldName, args.action);\n            }\n            var pos = this.parent.pivotCommon.currentTreeItemsPos[target.getAttribute('data-uid')].index;\n            if (this.parent.pivotCommon.currentTreeItems[pos]) {\n                this.parent.pivotCommon.currentTreeItems[pos].isSelected = args.action === 'check';\n                this.parent.pivotCommon.currentTreeItemsPos[target.getAttribute('data-uid')].isSelected = args.action === 'check';\n            }\n        }\n        this.parent.pivotCommon.filterDialog.updateCheckedState();\n    };\n    PivotButton.prototype.checkedStateAll = function (state) {\n        var searchItemObj = {};\n        /* tslint:disable:no-any */\n        for (var _i = 0, _a = this.parent.pivotCommon.searchTreeItems; _i < _a.length; _i++) {\n            var item = _a[_i];\n            item.isSelected = state === 'check';\n            searchItemObj[item.id] = item.id;\n        }\n        for (var _b = 0, _c = this.parent.pivotCommon.currentTreeItems; _b < _c.length; _b++) {\n            var item = _c[_b];\n            if (searchItemObj[item.id] !== undefined) {\n                item.isSelected = state === 'check';\n                this.parent.pivotCommon.currentTreeItemsPos[item.id].isSelected = state === 'check';\n            }\n        }\n        /* tslint:enable:no-any */\n    };\n    PivotButton.prototype.updateNodeStates = function (checkedNodes, fieldName, state) {\n        var fieldList = this.parent.pivotCommon.engineModule.fieldList[fieldName];\n        var currentMembers = fieldList.members;\n        var searchMembers = fieldList.currrentMembers;\n        if (fieldList.searchMembers.length > 0) {\n            var members = Object.keys(searchMembers);\n            for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n                var member = members_1[_i];\n                if (searchMembers[member]) {\n                    searchMembers[member].isSelected = false;\n                }\n                if (currentMembers[member]) {\n                    currentMembers[member].isSelected = false;\n                    if (this.memberTreeView.element.querySelector('li[data-uid=\"' + member + '\"]')) {\n                        var element = this.memberTreeView.element.querySelector('li[data-uid=\"' + member + '\"]');\n                        if (element && !element.querySelector('ul')) {\n                            this.parent.pivotCommon.eventBase.updateChildNodeStates(fieldList.filterMembers, fieldName, member, false);\n                        }\n                    }\n                }\n            }\n            for (var _a = 0, checkedNodes_1 = checkedNodes; _a < checkedNodes_1.length; _a++) {\n                var node = checkedNodes_1[_a];\n                if (currentMembers[node]) {\n                    if (this.memberTreeView.element.querySelector('li[data-uid=\"' + node + '\"]')) {\n                        var element = this.memberTreeView.element.querySelector('li[data-uid=\"' + node + '\"]');\n                        if (element && !element.querySelector('ul')) {\n                            currentMembers[node].isSelected = true;\n                            this.parent.pivotCommon.eventBase.updateChildNodeStates(fieldList.filterMembers, fieldName, node, true);\n                        }\n                    }\n                }\n                if (searchMembers[node]) {\n                    searchMembers[node].isSelected = true;\n                }\n            }\n        }\n        else {\n            var members = Object.keys(currentMembers);\n            for (var _b = 0, members_2 = members; _b < members_2.length; _b++) {\n                var member = members_2[_b];\n                if (currentMembers[member].isSelected) {\n                    currentMembers[member].isSelected = false;\n                }\n            }\n            for (var _c = 0, checkedNodes_2 = checkedNodes; _c < checkedNodes_2.length; _c++) {\n                var node = checkedNodes_2[_c];\n                if (currentMembers[node]) {\n                    currentMembers[node].isSelected = true;\n                    this.parent.pivotCommon.eventBase.updateChildNodeStates(fieldList.filterMembers, fieldName, node, true);\n                }\n            }\n        }\n    };\n    PivotButton.prototype.updateFilterState = function (fieldName, args) {\n        var _this = this;\n        var isNodeUnChecked = false;\n        var filterItem = { items: [], name: fieldName, type: 'Include' };\n        var engineModule = this.parent.olapEngineModule;\n        if (this.parent.dataType === 'olap' && engineModule &&\n            !engineModule.fieldList[fieldName].isHierarchy) {\n            var cMembers = engineModule.fieldList[fieldName].members;\n            var sMembers = engineModule.fieldList[fieldName].currrentMembers;\n            filterItem.items = this.memberTreeView.getAllCheckedNodes();\n            filterItem.levelCount = engineModule.fieldList[fieldName].levelCount;\n            isNodeUnChecked = (filterItem.items.length ===\n                this.memberTreeView.fields.dataSource.length ? false : true);\n            if (engineModule.fieldList[fieldName].searchMembers.length > 0 && !isNodeUnChecked) {\n                var cNodeLength = Object.keys(cMembers).length;\n                var sNodeLength = Object.keys(sMembers).length;\n                isNodeUnChecked = cNodeLength === sNodeLength && cNodeLength === filterItem.items.length ? false : true;\n            }\n            var filterItems = filterItem.items;\n            for (var _i = 0, filterItems_3 = filterItems; _i < filterItems_3.length; _i++) {\n                var node = filterItems_3[_i];\n                if (engineModule.fieldList[fieldName].searchMembers.length > 0 && sMembers[node]) {\n                    sMembers[node].isSelected = true;\n                }\n                else if (cMembers[node]) {\n                    cMembers[node].isSelected = true;\n                }\n            }\n        }\n        else {\n            for (var _a = 0, _b = this.parent.pivotCommon.searchTreeItems; _a < _b.length; _a++) {\n                var item = _b[_a];\n                if (item.isSelected) {\n                    if (this.parent.pivotCommon.isDateField) {\n                        filterItem.items.push(item.name);\n                    }\n                    else {\n                        filterItem.items.push(item.id);\n                    }\n                }\n            }\n            isNodeUnChecked = (filterItem.items.length === this.parent.pivotCommon.currentTreeItems.length ?\n                false : true);\n        }\n        if (this.parent.dataType === 'olap') {\n            this.removeDataSourceSettings(fieldName);\n        }\n        var filterEventArgs = {\n            filterSettings: filterItem,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n            cancel: false\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.memberFiltering, filterEventArgs, function (observedArgs) {\n            filterItem = observedArgs.filterSettings;\n            if (!observedArgs.cancel) {\n                var filterObject = PivotUtil.getFilterItemByName(fieldName, _this.parent.dataSourceSettings.filterSettings);\n                if (filterObject) {\n                    for (var i = 0; i < _this.parent.dataSourceSettings.filterSettings.length; i++) {\n                        if (_this.parent.dataSourceSettings.filterSettings[i].name === fieldName) {\n                            _this.parent.dataSourceSettings.filterSettings.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n                _this.parent.dataSourceSettings.filterSettings.push(filterItem);\n            }\n            _this.dialogPopUp.close();\n            if (!observedArgs.cancel) {\n                _this.refreshPivotButtonState(fieldName, isNodeUnChecked);\n                if (!isNodeUnChecked) {\n                    _this.removeDataSourceSettings(fieldName);\n                }\n                _this.parent.lastFilterInfo = filterItem;\n                _this.updateDataSource(true);\n                var thisObj = _this;\n                //setTimeout(() => {\n                if (thisObj.parent instanceof PivotFieldList) {\n                    thisObj.axisField.render();\n                }\n                //});\n            }\n            var pivotButtons = [].slice.call(_this.parentElement.querySelectorAll('.e-pivot-button'));\n            for (var _i = 0, pivotButtons_2 = pivotButtons; _i < pivotButtons_2.length; _i++) {\n                var item = pivotButtons_2[_i];\n                if (item.getAttribute('data-uid') === fieldName) {\n                    item.focus();\n                    break;\n                }\n            }\n        });\n    };\n    PivotButton.prototype.refreshPivotButtonState = function (fieldName, isFiltered) {\n        var pivotButtons = [].slice.call(this.parentElement.querySelectorAll('.e-pivot-button'));\n        var selectedButton;\n        for (var _i = 0, pivotButtons_3 = pivotButtons; _i < pivotButtons_3.length; _i++) {\n            var item = pivotButtons_3[_i];\n            if (item.getAttribute('data-uid') === fieldName) {\n                selectedButton = item.querySelector('.' + cls.FILTER_COMMON_CLASS);\n                break;\n            }\n        }\n        if (isFiltered) {\n            removeClass([selectedButton], cls.FILTER_CLASS);\n            addClass([selectedButton], cls.FILTERED_CLASS);\n        }\n        else {\n            removeClass([selectedButton], cls.FILTERED_CLASS);\n            addClass([selectedButton], cls.FILTER_CLASS);\n        }\n    };\n    PivotButton.prototype.removeDataSourceSettings = function (fieldName, selectedField, type) {\n        var filterSettings = this.parent.dataSourceSettings.filterSettings;\n        for (var len = 0, lnt = filterSettings.length; len < lnt; len++) {\n            if (this.parent.dataType === 'olap' && selectedField) {\n                if (!type && filterSettings[len].name === fieldName &&\n                    filterSettings[len].selectedField === selectedField) {\n                    filterSettings.splice(len, 1);\n                    break;\n                }\n                else if (type) {\n                    if (filterSettings[len].type !== type &&\n                        filterSettings[len].name === fieldName) {\n                        filterSettings.splice(len, 1);\n                        lnt--;\n                        len--;\n                    }\n                }\n            }\n            else {\n                if (filterSettings[len].name === fieldName) {\n                    filterSettings.splice(len, 1);\n                    if (this.parent.dataType !== 'olap') {\n                        break;\n                    }\n                    lnt--;\n                    len--;\n                }\n            }\n        }\n    };\n    PivotButton.prototype.updateDropIndicator = function (e) {\n        if (this.parent.isDragging) {\n            removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            var element = closest(e.target, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n            addClass([element.querySelector('.' + cls.DROP_INDICATOR_CLASS)], cls.INDICATOR_HOVER_CLASS);\n        }\n    };\n    PivotButton.prototype.wireEvent = function (element, axis, isMeasureAvail) {\n        EventHandler.add(element, 'mouseover', this.updateDropIndicator, this);\n        if (!isMeasureAvail) {\n            if (['filters', 'values'].indexOf(axis) === -1 && element.querySelector('.' + cls.PIVOT_BUTTON_CLASS) !== null) {\n                EventHandler.add(element.querySelector('.' + cls.PIVOT_BUTTON_CLASS), 'click', this.updateSorting, this);\n            }\n            if (axis !== 'values' && element.querySelector('.' + cls.FILTER_COMMON_CLASS) !== null) {\n                EventHandler.add(element.querySelector('.' + cls.FILTER_COMMON_CLASS), 'click', this.updateFiltering, this);\n            }\n            if (axis === 'values' && element.querySelector('.' + cls.AXISFIELD_ICON_CLASS) !== null) {\n                EventHandler.add(element.querySelector('.' + cls.AXISFIELD_ICON_CLASS), 'click', this.createMenuOption, this);\n            }\n        }\n        if (element.querySelector('.' + cls.CALC_EDIT) !== null) {\n            EventHandler.add(element.querySelector('.' + cls.CALC_EDIT), 'click', this.openCalculatedFieldDialog, this);\n        }\n        EventHandler.add(element.querySelector('.' + cls.REMOVE_CLASS), 'click', this.removeButton, this);\n    };\n    PivotButton.prototype.unWireEvent = function (element, axis, isMeasureAvail) {\n        EventHandler.remove(element, 'mouseover', this.updateDropIndicator);\n        if (!isMeasureAvail) {\n            if (['filters', 'values'].indexOf(axis) === -1 && element.querySelector('.' + cls.PIVOT_BUTTON_CLASS) !== null) {\n                EventHandler.remove(element.querySelector('.' + cls.PIVOT_BUTTON_CLASS), 'click', this.updateSorting);\n            }\n            if (axis !== 'values' && element.querySelector('.' + cls.FILTER_COMMON_CLASS) !== null) {\n                EventHandler.remove(element.querySelector('.' + cls.FILTER_COMMON_CLASS), 'click', this.updateFiltering);\n            }\n            if (axis === 'values' && element.querySelector('.' + cls.AXISFIELD_ICON_CLASS) !== null) {\n                EventHandler.remove(element.querySelector('.' + cls.AXISFIELD_ICON_CLASS), 'click', this.createMenuOption);\n            }\n        }\n        if (element.querySelector('.' + cls.CALC_EDIT) !== null) {\n            EventHandler.remove(element.querySelector('.' + cls.CALC_EDIT), 'click', this.openCalculatedFieldDialog);\n        }\n        EventHandler.remove(element.querySelector('.' + cls.REMOVE_CLASS), 'click', this.removeButton);\n    };\n    /**\n     * @hidden\n     */\n    PivotButton.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.renderPivotButton\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.pivotButtonUpdate, this.handlers.load, this);\n    };\n    /**\n     * @hidden\n     */\n    PivotButton.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.pivotButtonUpdate, this.handlers.load);\n    };\n    /**\n     * To destroy the pivot button event listener\n     * @return {void}\n     * @hidden\n     */\n    PivotButton.prototype.destroy = function () {\n        if (this.menuOption) {\n            this.menuOption.destroy();\n        }\n        this.removeEventListener();\n        this.isDestroyed = true;\n    };\n    return PivotButton;\n}());\nexport { PivotButton };\n","import * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { PivotButton } from '../../common/actions/pivot-button';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Module to render Axis Fields\n */\n/** @hidden */\nvar AxisFieldRenderer = /** @class */ (function () {\n    /** Constructor for render module */\n    function AxisFieldRenderer(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Initialize the pivot button rendering\n     * @returns void\n     * @private\n     */\n    AxisFieldRenderer.prototype.render = function () {\n        /* tslint:disable */\n        var pivotButtonModule = ((!this.parent.pivotButtonModule || (this.parent.pivotButtonModule && this.parent.pivotButtonModule.isDestroyed)) ?\n            new PivotButton(this.parent) : this.parent.pivotButtonModule);\n        /* tslint:enable */\n        this.createPivotButtons();\n    };\n    AxisFieldRenderer.prototype.createPivotButtons = function () {\n        if (isNullOrUndefined(this.parent.dataSourceSettings.dataSource) && isNullOrUndefined(this.parent.dataSourceSettings.url)) {\n            this.parent.setProperties({ dataSourceSettings: { columns: [], rows: [], values: [], filters: [] } }, true);\n        }\n        var rows = this.parent.dataSourceSettings.rows;\n        var columns = this.parent.dataSourceSettings.columns;\n        var values = this.parent.dataSourceSettings.values;\n        var filters = this.parent.dataSourceSettings.filters;\n        var fields = [rows, columns, values, filters];\n        var parentElement = this.parent.dialogRenderer.parentElement;\n        if (parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-filters')) {\n            parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-filters').querySelector('.' + cls.AXIS_CONTENT_CLASS).innerHTML = '';\n        }\n        if (parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-rows')) {\n            parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-rows').querySelector('.' + cls.AXIS_CONTENT_CLASS).innerHTML = '';\n        }\n        if (parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-columns')) {\n            parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-columns').querySelector('.' + cls.AXIS_CONTENT_CLASS).innerHTML = '';\n        }\n        if (parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-values')) {\n            parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-values').querySelector('.' + cls.AXIS_CONTENT_CLASS).innerHTML = '';\n        }\n        var axis = ['rows', 'columns', 'values', 'filters'];\n        for (var len = 0, lnt = fields.length; len < lnt; len++) {\n            if (fields[len]) {\n                var args = {\n                    field: fields[len],\n                    axis: axis[len].toString()\n                };\n                this.parent.notify(events.pivotButtonUpdate, args);\n            }\n        }\n    };\n    return AxisFieldRenderer;\n}());\nexport { AxisFieldRenderer };\n","import { DialogRenderer } from '../renderer/dialog-renderer';\nimport { TreeViewRenderer } from '../renderer/tree-renderer';\nimport { AxisTableRenderer } from '../renderer/axis-table-renderer';\nimport { AxisFieldRenderer } from './axis-field-renderer';\n/**\n * Module to render Pivot Table component\n */\n/** @hidden */\nvar Render = /** @class */ (function () {\n    /** Constructor for render module */\n    function Render(parent) {\n        this.parent = parent;\n        this.parent.dialogRenderer = new DialogRenderer(this.parent);\n        this.parent.treeViewModule = new TreeViewRenderer(this.parent);\n        this.parent.axisTableModule = new AxisTableRenderer(this.parent);\n        this.parent.axisFieldModule = new AxisFieldRenderer(this.parent);\n    }\n    /**\n     * Initialize the pivot table rendering\n     * @returns void\n     * @private\n     */\n    Render.prototype.render = function () {\n        this.parent.dialogRenderer.render();\n        if (!this.parent.isAdaptive) {\n            this.parent.treeViewModule.render();\n        }\n        this.parent.axisTableModule.render();\n    };\n    return Render;\n}());\nexport { Render };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Event, Component, Internationalization, extend, isBlazor } from '@syncfusion/ej2-base';\nimport { L10n, remove, addClass, Browser, Complex, getInstance } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, removeClass, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { PivotEngine } from '../../base/engine';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { PivotCommon } from '../../common/base/pivot-common';\nimport { Render } from '../renderer/renderer';\nimport { PivotView } from '../../pivotview/base/pivotview';\nimport { DataSourceSettings } from '../../pivotview/model/datasourcesettings';\nimport { createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { PivotUtil } from '../../base/util';\nimport { OlapEngine } from '../../base/olap/engine';\n/**\n * Represents the PivotFieldList component.\n * ```html\n * <div id=\"pivotfieldlist\"></div>\n * <script>\n *  var pivotfieldlistObj = new PivotFieldList({ });\n *  pivotfieldlistObj.appendTo(\"#pivotfieldlist\");\n * </script>\n * ```\n */\nvar PivotFieldList = /** @class */ (function (_super) {\n    __extends(PivotFieldList, _super);\n    /* tslint:enable */\n    /**\n     * Constructor for creating the widget\n     * @param  {PivotFieldListModel} options?\n     * @param  {string|HTMLButtonElement} element?\n     */\n    function PivotFieldList(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @hidden */\n        _this.pivotChange = false;\n        _this.isRequiredUpdate = true;\n        /** @hidden */\n        _this.lastSortInfo = {};\n        /** @hidden */\n        _this.lastFilterInfo = {};\n        /** @hidden */\n        _this.lastAggregationInfo = {};\n        /** @hidden */\n        _this.lastCalcFieldInfo = {};\n        /** @hidden */\n        _this.isPopupView = false;\n        /** @hidden */\n        _this.enableValueSorting = false;\n        _this.request = new XMLHttpRequest();\n        _this.remoteData = [];\n        return _this;\n    }\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    PivotFieldList.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.allowCalculatedField) {\n            modules.push({ args: [this], member: 'calculatedfield' });\n        }\n        return modules;\n    };\n    /**\n     * @hidden\n     */\n    PivotFieldList.prototype.getAllSummaryType = function () {\n        return ['Sum', 'Count', 'DistinctCount', 'Product', 'Min', 'Max', 'Avg', 'Index',\n            'PopulationVar', 'SampleVar', 'PopulationStDev', 'SampleStDev', 'RunningTotals', 'PercentageOfGrandTotal',\n            'PercentageOfColumnTotal', 'PercentageOfRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentRowTotal',\n            'DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'];\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    PivotFieldList.prototype.preRender = function () {\n        if (this.dataSourceSettings && this.dataSourceSettings.providerType === 'SSAS') {\n            this.olapEngineModule = new OlapEngine();\n            this.dataType = 'olap';\n        }\n        else {\n            this.engineModule = new PivotEngine();\n            this.dataType = 'pivot';\n        }\n        this.isAdaptive = Browser.isDevice;\n        this.globalize = new Internationalization(this.locale);\n        this.renderModule = new Render(this);\n        this.defaultLocale = {\n            staticFieldList: 'Pivot Field List',\n            fieldList: 'Field List',\n            dropFilterPrompt: 'Drop filter here',\n            dropColPrompt: 'Drop column here',\n            dropRowPrompt: 'Drop row here',\n            dropValPrompt: 'Drop value here',\n            addPrompt: 'Add field here',\n            adaptiveFieldHeader: 'Choose field',\n            centerHeader: 'Drag fields between axes below:',\n            add: 'add',\n            drag: 'Drag',\n            filter: 'Filter',\n            filtered: 'Filtered',\n            sort: 'Sort',\n            remove: 'Remove',\n            filters: 'Filters',\n            rows: 'Rows',\n            columns: 'Columns',\n            values: 'Values',\n            CalculatedField: 'Calculated Field',\n            createCalculatedField: 'Create Calculated Field',\n            fieldName: 'Enter the field name',\n            error: 'Error',\n            invalidFormula: 'Invalid formula.',\n            dropText: 'Example: (\"Sum(Order_Count)\" + \"Sum(In_Stock)\") * 250',\n            dropTextMobile: 'Add fields and edit formula here.',\n            dropAction: 'Calculated field cannot be place in any other region except value axis.',\n            search: 'Search',\n            close: 'Close',\n            cancel: 'Cancel',\n            delete: 'Delete',\n            alert: 'Alert',\n            warning: 'Warning',\n            ok: 'OK',\n            allFields: 'All Fields',\n            formula: 'Formula',\n            fieldExist: 'A field already exists in this name. Please enter a different name.',\n            confirmText: 'A calculation field already exists in this name. Do you want to replace it?',\n            noMatches: 'No matches',\n            format: 'Summaries values by',\n            edit: 'Edit',\n            clear: 'Clear',\n            clearCalculatedField: 'Clear edited field info',\n            editCalculatedField: 'Edit calculated field',\n            sortAscending: 'Sort ascending order',\n            sortDescending: 'Sort descending order',\n            sortNone: 'Sort data order',\n            formulaField: 'Drag and drop fields to formula',\n            dragField: 'Drag field to formula',\n            clearFilter: 'Clear',\n            by: 'by',\n            enterValue: 'Enter value',\n            chooseDate: 'Enter date',\n            all: 'All',\n            multipleItems: 'Multiple items',\n            /* tslint:disable */\n            Equals: 'Equals',\n            DoesNotEquals: 'Does Not Equal',\n            BeginWith: 'Begins With',\n            DoesNotBeginWith: 'Does Not Begin With',\n            EndsWith: 'Ends With',\n            DoesNotEndsWith: 'Does Not End With',\n            Contains: 'Contains',\n            DoesNotContains: 'Does Not Contain',\n            GreaterThan: 'Greater Than',\n            GreaterThanOrEqualTo: 'Greater Than Or Equal To',\n            LessThan: 'Less Than',\n            LessThanOrEqualTo: 'Less Than Or Equal To',\n            Between: 'Between',\n            NotBetween: 'Not Between',\n            Before: 'Before',\n            BeforeOrEqualTo: 'Before Or Equal To',\n            After: 'After',\n            AfterOrEqualTo: 'After Or Equal To',\n            member: 'Member',\n            label: 'Label',\n            date: 'Date',\n            value: 'Value',\n            labelTextContent: 'Show the items for which the label',\n            dateTextContent: 'Show the items for which the date',\n            valueTextContent: 'Show the items for which',\n            And: 'and',\n            Sum: 'Sum',\n            Count: 'Count',\n            DistinctCount: 'Distinct Count',\n            Product: 'Product',\n            Avg: 'Avg',\n            Min: 'Min',\n            Max: 'Max',\n            Index: 'Index',\n            SampleStDev: 'Sample StDev',\n            PopulationStDev: 'Population StDev',\n            SampleVar: 'Sample Var',\n            PopulationVar: 'Population Var',\n            RunningTotals: 'Running Totals',\n            DifferenceFrom: 'Difference From',\n            PercentageOfDifferenceFrom: '% of Difference From',\n            PercentageOfGrandTotal: '% of Grand Total',\n            PercentageOfColumnTotal: '% of Column Total',\n            PercentageOfRowTotal: '% of Row Total',\n            PercentageOfParentTotal: '% of Parent Total',\n            PercentageOfParentColumnTotal: '% of Parent Column Total',\n            PercentageOfParentRowTotal: '% of Parent Row Total',\n            MoreOption: 'More...',\n            Years: 'Years',\n            Quarters: 'Quarters',\n            Months: 'Months',\n            Days: 'Days',\n            Hours: 'Hours',\n            Minutes: 'Minutes',\n            Seconds: 'Seconds',\n            /* tslint:enable */\n            apply: 'Apply',\n            valueFieldSettings: 'Value field settings',\n            sourceName: 'Field name :',\n            sourceCaption: 'Field caption',\n            summarizeValuesBy: 'Summarize values by',\n            baseField: 'Base field',\n            baseItem: 'Base item',\n            example: 'e.g:',\n            editorDataLimitMsg: ' more items. Search to refine further.',\n            deferLayoutUpdate: 'Defer Layout Update',\n            null: 'null',\n            undefined: 'undefined',\n            groupOutOfRange: 'Out of Range',\n            fieldDropErrorAction: 'The field you are moving cannot be placed in that area of the report',\n            memberType: 'Field Type',\n            selectedHierarchy: 'Parent Hierarchy',\n            formatString: 'Format',\n            expressionField: 'Expression',\n            olapDropText: 'Example: [Measures].[Order Quantity] + ([Measures].[Order Quantity] * 0.10)',\n            customFormat: 'Enter custom format string',\n            numberFormatString: 'Example: C, P, 0000 %, ###0.##0#, etc.',\n            Measure: 'Measure',\n            Dimension: 'Dimension',\n            Standard: 'Standard',\n            Currency: 'Currency',\n            Percent: 'Percent',\n            Custom: 'Custom',\n            blank: '(Blank)',\n            fieldTooltip: 'Drag and drop fields to create an expression. ' +\n                'And, if you want to edit the existing calculated fields! ' +\n                'You can achieve it by simply selecting the field under \"Calculated Members\".',\n            fieldTitle: 'Field Name',\n            QuarterYear: 'Quarter Year',\n            caption: 'Field Caption',\n            copy: 'Copy',\n            of: 'of',\n            group: 'Group',\n            removeCalculatedField: 'Are you sure you want to delete this calculated field?',\n            yes: 'Yes',\n            no: 'No',\n        };\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n        this.isDragging = false;\n        this.captionData = [];\n        this.wireEvent();\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotFieldList.prototype.frameCustomProperties = function (fieldListData, fieldList) {\n        if (this.pivotGridModule) {\n            this.pivotGridModule.updatePageSettings(false);\n        }\n        var pageSettings = this.pivotGridModule ? this.pivotGridModule.pageSettings : undefined;\n        var localeObj = this.pivotGridModule ? this.pivotGridModule.localeObj :\n            (this.staticPivotGridModule ? this.staticPivotGridModule.localeObj : this.localeObj);\n        var isDrillThrough = this.pivotGridModule ?\n            (this.pivotGridModule.allowDrillThrough || this.pivotGridModule.editSettings.allowEditing) : true;\n        var enableValueSorting = this.pivotGridModule ? this.pivotGridModule.enableValueSorting : undefined;\n        var customProperties;\n        if (this.dataType === 'olap') {\n            customProperties = {\n                mode: '',\n                savedFieldList: fieldList ? fieldList : undefined,\n                savedFieldListData: fieldListData ? fieldListData : undefined,\n                pageSettings: pageSettings,\n                enableValueSorting: enableValueSorting,\n                isDrillThrough: isDrillThrough,\n                localeObj: localeObj\n            };\n        }\n        else {\n            customProperties = {\n                mode: '',\n                savedFieldList: undefined,\n                pageSettings: pageSettings,\n                enableValueSorting: enableValueSorting,\n                isDrillThrough: isDrillThrough,\n                localeObj: localeObj\n            };\n        }\n        return customProperties;\n    };\n    /* tslint:disable */\n    /**\n     * Initialize the control rendering\n     * @returns void\n     * @private\n     */\n    PivotFieldList.prototype.render = function () {\n        if (this.dataType === 'pivot' && this.dataSourceSettings.url && this.dataSourceSettings.url !== '') {\n            if (this.dataSourceSettings.mode === 'Server') {\n                this.guid = PivotUtil.generateUUID();\n                this.getEngine('initialRender', null, null, null, null, null, null);\n            }\n            else {\n                this.request.open(\"GET\", this.dataSourceSettings.url, true);\n                this.request.withCredentials = false;\n                this.request.onreadystatechange = this.onReadyStateChange.bind(this);\n                this.request.setRequestHeader(\"Content-type\", \"text/plain\");\n                this.request.send(null);\n            }\n        }\n        else {\n            this.initialLoad();\n        }\n    };\n    /**\n     * @hidden\n     */\n    PivotFieldList.prototype.getEngine = function (action, drillItem, sortItem, aggField, cField, filterItem, memberName, rawDataArgs, editArgs) {\n        this.currentAction = action;\n        if (this.pivotGridModule) {\n            this.pivotGridModule.updatePageSettings(false);\n        }\n        var customProperties = {\n            pageSettings: this.pivotGridModule ? this.pivotGridModule.pageSettings : undefined,\n            enableValueSorting: this.pivotGridModule ? this.pivotGridModule.enableValueSorting : undefined,\n            enableDrillThrough: this.pivotGridModule ?\n                (this.pivotGridModule.allowDrillThrough || this.pivotGridModule.editSettings.allowEditing) : true,\n            locale: JSON.stringify(PivotUtil.getLocalizedObject(this))\n        };\n        var params = {\n            dataSourceSettings: JSON.parse(this.getPersistData()).dataSourceSettings,\n            action: action,\n            customProperties: customProperties,\n            drillItem: drillItem,\n            sortItem: sortItem,\n            aggregatedItem: aggField,\n            calculatedItem: cField,\n            filterItem: filterItem,\n            memberName: memberName,\n            fetchRawDataArgs: rawDataArgs,\n            editArgs: editArgs,\n            hash: this.guid\n        };\n        this.request.open(\"POST\", this.dataSourceSettings.url, true);\n        this.request.withCredentials = false;\n        this.request.onreadystatechange = this.onSuccess.bind(this);\n        this.request.setRequestHeader(\"Content-type\", \"application/json\");\n        this.request.send(JSON.stringify(params));\n    };\n    PivotFieldList.prototype.onSuccess = function () {\n        if (this.request.readyState === XMLHttpRequest.DONE) {\n            try {\n                var engine = JSON.parse(this.request.responseText);\n                if (this.currentAction === 'fetchFieldMembers') {\n                    var currentMembers = JSON.parse(engine.members);\n                    var dateMembers = [];\n                    var formattedMembers = {};\n                    var members = {};\n                    for (var i = 0; i < currentMembers.length; i++) {\n                        dateMembers.push({ formattedText: currentMembers[i].FormattedText, actualText: currentMembers[i].ActualText });\n                        formattedMembers[currentMembers[i].FormattedText] = {};\n                        members[currentMembers[i].ActualText] = {};\n                    }\n                    this.engineModule.fieldList[engine.memberName].dateMember = dateMembers;\n                    this.engineModule.fieldList[engine.memberName].formattedMembers = formattedMembers;\n                    this.engineModule.fieldList[engine.memberName].members = members;\n                    this.pivotButtonModule.updateFilterEvents();\n                }\n                else {\n                    this.engineModule.fieldList = PivotUtil.formatFieldList(JSON.parse(engine.fieldList));\n                    this.engineModule.fields = JSON.parse(engine.fields);\n                    this.engineModule.rowCount = JSON.parse(engine.pivotCount).RowCount;\n                    this.engineModule.columnCount = JSON.parse(engine.pivotCount).ColumnCount;\n                    this.engineModule.rowStartPos = JSON.parse(engine.pivotCount).RowStartPosition;\n                    this.engineModule.colStartPos = JSON.parse(engine.pivotCount).ColumnStartPosition;\n                    this.engineModule.rowFirstLvl = JSON.parse(engine.pivotCount).RowFirstLevel;\n                    this.engineModule.colFirstLvl = JSON.parse(engine.pivotCount).ColumnFirstLevel;\n                    var rowPos = void 0;\n                    var pivotValues = PivotUtil.formatPivotValues(JSON.parse(engine.pivotValue));\n                    for (var rCnt = 0; rCnt < pivotValues.length; rCnt++) {\n                        if (pivotValues[rCnt] && pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row') {\n                            rowPos = rCnt;\n                            break;\n                        }\n                    }\n                    this.engineModule.headerContent = PivotUtil.frameContent(pivotValues, 'header', rowPos, this);\n                    this.engineModule.pageSettings = this.pivotGridModule ? this.pivotGridModule.pageSettings : undefined;\n                    var valueSort = JSON.parse(engine.valueSortSettings);\n                    this.engineModule.valueSortSettings = {\n                        headerText: valueSort.HeaderText,\n                        headerDelimiter: valueSort.HeaderDelimiter,\n                        sortOrder: valueSort.SortOrder,\n                        columnIndex: valueSort.ColumnIndex\n                    };\n                    this.engineModule.pivotValues = pivotValues;\n                }\n            }\n            catch (error) {\n                this.engineModule.pivotValues = [];\n            }\n            if (this.currentAction !== 'fetchFieldMembers') {\n                this.initEngine();\n                if (this.calculatedFieldModule && this.calculatedFieldModule.isRequireUpdate) {\n                    this.calculatedFieldModule.endDialog();\n                    this.calculatedFieldModule.isRequireUpdate = false;\n                }\n                if (this.pivotGridModule && this.pivotGridModule.calculatedFieldModule && this.pivotGridModule.calculatedFieldModule.isRequireUpdate) {\n                    this.pivotGridModule.calculatedFieldModule.endDialog();\n                    this.pivotGridModule.calculatedFieldModule.isRequireUpdate = false;\n                }\n            }\n        }\n    };\n    PivotFieldList.prototype.onReadyStateChange = function () {\n        if (this.request.readyState === XMLHttpRequest.DONE) {\n            var dataSource = [];\n            if (this.dataSourceSettings.type === 'CSV') {\n                var jsonObject = this.request.responseText.split(/\\r?\\n|\\r/);\n                for (var i = 0; i < jsonObject.length; i++) {\n                    if (!isNullOrUndefined(jsonObject[i]) && jsonObject[i] !== '') {\n                        dataSource.push(jsonObject[i].split(','));\n                    }\n                }\n            }\n            else {\n                try {\n                    dataSource = JSON.parse(this.request.responseText);\n                }\n                catch (error) {\n                    dataSource = [];\n                }\n            }\n            if (isBlazor() && dataSource.length > 0) {\n                this.remoteData = dataSource;\n            }\n            else if (dataSource.length > 0) {\n                this.setProperties({ dataSourceSettings: { dataSource: dataSource } }, true);\n            }\n            this.initialLoad();\n        }\n    };\n    PivotFieldList.prototype.initialLoad = function () {\n        var _this = this;\n        /* tslint:disable-next-line:max-line-length */\n        this.trigger(events.load, { dataSourceSettings: isBlazor() ? PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings) : this.dataSourceSettings }, function (observedArgs) {\n            if (isBlazor()) {\n                observedArgs.dataSourceSettings.dataSource = _this.dataSourceSettings.dataSource;\n            }\n            _this.dataSourceSettings = observedArgs.dataSourceSettings;\n            addClass([_this.element], cls.ROOT);\n            if (_this.enableRtl) {\n                addClass([_this.element], cls.RTL);\n            }\n            else {\n                removeClass([_this.element], cls.RTL);\n            }\n            if (_this.isAdaptive) {\n                addClass([_this.element], cls.DEVICE);\n            }\n            else {\n                removeClass([_this.element], cls.DEVICE);\n            }\n            if (_this.cssClass) {\n                addClass([_this.element], _this.cssClass);\n            }\n            _this.notify(events.initialLoad, {});\n        });\n        if (isBlazor()) {\n            this.renderComplete();\n        }\n    };\n    /**\n     * Binding events to the Pivot Field List element.\n     * @hidden\n     */\n    PivotFieldList.prototype.wireEvent = function () {\n        this.on(events.initialLoad, this.generateData, this);\n        this.on(events.dataReady, this.fieldListRender, this);\n    };\n    /**\n     * Unbinding events from the element on widget destroy.\n     * @hidden\n     */\n    PivotFieldList.prototype.unWireEvent = function () {\n        if (this.pivotGridModule && this.pivotGridModule.isDestroyed) {\n            return;\n        }\n        this.off(events.initialLoad, this.generateData);\n        this.off(events.dataReady, this.fieldListRender);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    PivotFieldList.prototype.getPersistData = function () {\n        var keyEntity = ['dataSourceSettings'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Get component name.\n     * @returns string\n     * @private\n     */\n    PivotFieldList.prototype.getModuleName = function () {\n        return 'pivotfieldlist';\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    PivotFieldList.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var requireRefresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'locale':\n                    if (isBlazor()) {\n                        break;\n                    }\n                    else {\n                        _super.prototype.refresh.call(this);\n                    }\n                    break;\n                case 'dataSourceSettings':\n                    if (!isNullOrUndefined(newProp.dataSourceSettings.dataSource)) {\n                        if (newProp.dataSourceSettings.dataSource.length === 0 && !isNullOrUndefined(this.staticPivotGridModule)) {\n                            this.savedDataSourceSettings = PivotUtil.getClonedDataSourceSettings(this.staticPivotGridModule.dataSourceSettings);\n                            this.staticPivotGridModule.setProperties({ dataSourceSettings: { rows: [] } }, true);\n                            this.staticPivotGridModule.setProperties({ dataSourceSettings: { columns: [] } }, true);\n                            this.staticPivotGridModule.setProperties({ dataSourceSettings: { values: [] } }, true);\n                            this.engineModule.fieldList = {};\n                            this.staticPivotGridModule.pivotValues = [];\n                        }\n                        this.initEngine();\n                        if (!isNullOrUndefined(this.savedDataSourceSettings)) {\n                            PivotUtil.updateDataSourceSettings(this.staticPivotGridModule, this.savedDataSourceSettings);\n                            this.savedDataSourceSettings = undefined;\n                        }\n                    }\n                    if (PivotUtil.isButtonIconRefesh(prop, oldProp, newProp)) {\n                        if (this.isPopupView && this.pivotGridModule &&\n                            this.pivotGridModule.showGroupingBar && this.pivotGridModule.groupingBarModule) {\n                            var filters = PivotUtil.cloneFieldSettings(this.dataSourceSettings.filters);\n                            var values = PivotUtil.cloneFieldSettings(this.dataSourceSettings.values);\n                            var rows = PivotUtil.cloneFieldSettings(this.dataSourceSettings.rows);\n                            var columns = PivotUtil.cloneFieldSettings(this.dataSourceSettings.columns);\n                            /* tslint:disable-next-line:max-line-length */\n                            this.pivotGridModule.setProperties({ dataSourceSettings: { rows: rows, columns: columns, values: values, filters: filters } }, true);\n                            this.pivotGridModule.axisFieldModule.render();\n                        }\n                        else if (!this.isPopupView && this.staticPivotGridModule && !this.staticPivotGridModule.isDestroyed) {\n                            var pivot = this.staticPivotGridModule;\n                            if (pivot.showGroupingBar && pivot.groupingBarModule) {\n                                pivot.axisFieldModule.render();\n                            }\n                            if (pivot.showFieldList && pivot.pivotFieldListModule) {\n                                var rows = PivotUtil.cloneFieldSettings(pivot.dataSourceSettings.rows);\n                                var columns = PivotUtil.cloneFieldSettings(pivot.dataSourceSettings.columns);\n                                var values = PivotUtil.cloneFieldSettings(pivot.dataSourceSettings.values);\n                                var filters = PivotUtil.cloneFieldSettings(pivot.dataSourceSettings.filters);\n                                /* tslint:disable-next-line:max-line-length */\n                                pivot.pivotFieldListModule.setProperties({ dataSourceSettings: { rows: rows, columns: columns, values: values, filters: filters } }, true);\n                                pivot.pivotFieldListModule.axisFieldModule.render();\n                                if (pivot.pivotFieldListModule.treeViewModule.fieldTable && !pivot.isAdaptive) {\n                                    pivot.pivotFieldListModule.notify(events.treeViewUpdate, {});\n                                }\n                            }\n                        }\n                        this.axisFieldModule.render();\n                        if (this.treeViewModule.fieldTable && !this.isAdaptive) {\n                            this.notify(events.treeViewUpdate, {});\n                        }\n                    }\n                    break;\n                case 'aggregateTypes':\n                    if (this.axisFieldModule) {\n                        this.axisFieldModule.render();\n                    }\n                    if (this.pivotGridModule && this.pivotGridModule.axisFieldModule) {\n                        this.pivotGridModule.setProperties({ aggregateTypes: newProp.aggregateTypes }, true);\n                        this.pivotGridModule.axisFieldModule.render();\n                    }\n                    break;\n                case 'enableRtl':\n                    if (this.enableRtl) {\n                        addClass([this.element], cls.RTL);\n                    }\n                    else {\n                        removeClass([this.element], cls.RTL);\n                    }\n                    requireRefresh = true;\n                    break;\n            }\n            if (requireRefresh) {\n                this.fieldListRender();\n            }\n        }\n    };\n    /* tslint:disable */\n    PivotFieldList.prototype.initEngine = function () {\n        var _this = this;\n        if (this.dataType === 'pivot') {\n            var data = !isNullOrUndefined(this.dataSourceSettings.dataSource) ? this.dataSourceSettings.dataSource[0] :\n                !isNullOrUndefined(this.engineModule.data) ? this.engineModule.data[0] : undefined;\n            if (data && this.pivotCommon) {\n                var isArray = Object.prototype.toString.call(data) == '[object Array]';\n                if (isArray && this.dataSourceSettings.type === 'JSON') {\n                    this.pivotCommon.errorDialog.createErrorDialog(this.localeObj.getConstant('error'), this.localeObj.getConstant('invalidJSON'));\n                    return;\n                }\n                else if (!isArray && this.dataSourceSettings.type === 'CSV') {\n                    this.pivotCommon.errorDialog.createErrorDialog(this.localeObj.getConstant('error'), this.localeObj.getConstant('invalidCSV'));\n                    return;\n                }\n            }\n        }\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings)\n        };\n        var control = this.isPopupView ? this.pivotGridModule : this;\n        control.trigger(events.enginePopulating, args, function (observedArgs) {\n            PivotUtil.updateDataSourceSettings(_this, observedArgs.dataSourceSettings);\n            if (_this.dataType === 'pivot') {\n                if (_this.dataSourceSettings.groupSettings && _this.dataSourceSettings.groupSettings.length > 0) {\n                    var pivotDataSet = void 0;\n                    if (isBlazor()) {\n                        pivotDataSet = _this.engineModule.data;\n                    }\n                    else {\n                        pivotDataSet = _this.dataSourceSettings.dataSource;\n                    }\n                    _this.clonedDataSet = (_this.clonedDataSet ? _this.clonedDataSet : PivotUtil.getClonedData(pivotDataSet));\n                    if (isBlazor()) {\n                        _this.clonedReport = _this.clonedReport ? _this.clonedReport : extend({}, _this.dataSourceSettings, null, true);\n                    }\n                    else {\n                        _this.setProperties({ dataSourceSettings: { dataSource: [] } }, true);\n                        _this.clonedReport = _this.clonedReport ? _this.clonedReport : extend({}, _this.dataSourceSettings, null, true);\n                        _this.setProperties({ dataSourceSettings: { dataSource: pivotDataSet } }, true);\n                    }\n                }\n                var customProperties = _this.frameCustomProperties();\n                customProperties.enableValueSorting = _this.staticPivotGridModule ?\n                    _this.staticPivotGridModule.enableValueSorting : _this.enableValueSorting;\n                if (_this.dataSourceSettings.mode !== 'Server') {\n                    _this.engineModule.renderEngine(_this.dataSourceSettings, customProperties, _this.getValueCellInfo.bind(_this));\n                }\n                _this.pivotFieldList = _this.engineModule.fieldList;\n                var eventArgs = {\n                    pivotFieldList: _this.pivotFieldList,\n                    pivotValues: _this.engineModule.pivotValues\n                };\n                var this$_1 = _this;\n                control.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n                    this$_1.pivotFieldList = observedArgs.pivotFieldList;\n                    this$_1.engineModule.pivotValues = isBlazor() ? _this.engineModule.pivotValues : observedArgs.pivotValues;\n                    this$_1.notify(events.dataReady, {});\n                    this$_1.trigger(events.dataBound);\n                });\n            }\n            else if (_this.dataType === 'olap') {\n                _this.olapEngineModule.renderEngine(_this.dataSourceSettings, _this.frameCustomProperties(_this.olapEngineModule.fieldListData, _this.olapEngineModule.fieldList));\n                _this.pivotFieldList = _this.olapEngineModule.fieldList;\n                var eventArgs = {\n                    pivotFieldList: _this.pivotFieldList,\n                    pivotValues: _this.olapEngineModule.pivotValues\n                };\n                var this$_2 = _this;\n                control.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n                    this$_2.pivotFieldList = observedArgs.pivotFieldList;\n                    this$_2.olapEngineModule.pivotValues = isBlazor() ? _this.olapEngineModule.pivotValues : observedArgs.pivotValues;\n                    this$_2.notify(events.dataReady, {});\n                    this$_2.trigger(events.dataBound);\n                });\n            }\n        });\n    };\n    /* tslint:enable */\n    PivotFieldList.prototype.generateData = function () {\n        this.pivotFieldList = {};\n        if (this.dataSourceSettings && (this.dataSourceSettings.dataSource || this.dataSourceSettings.url)) {\n            if ((this.dataSourceSettings.url !== '' && this.dataType === 'olap') ||\n                this.dataSourceSettings.dataSource.length > 0) {\n                if (this.dataType === 'pivot') {\n                    this.engineModule.data = this.dataSourceSettings.dataSource;\n                }\n                this.initEngine();\n            }\n            else if (this.dataSourceSettings.dataSource instanceof DataManager) {\n                if (this.dataType === 'pivot' && this.remoteData.length > 0) {\n                    this.engineModule.data = this.remoteData;\n                    this.initEngine();\n                }\n                else {\n                    setTimeout(this.getData.bind(this), 100);\n                }\n            }\n        }\n        else if (isBlazor() && this.dataType === 'pivot' &&\n            this.engineModule.data && this.engineModule.data.length > 0) {\n            this.initEngine();\n        }\n        else {\n            this.notify(events.dataReady, {});\n            this.trigger(events.dataBound);\n        }\n    };\n    PivotFieldList.prototype.getValueCellInfo = function (aggregateObj) {\n        var args = aggregateObj;\n        this.trigger(events.aggregateCellInfo, args);\n        return args;\n    };\n    PivotFieldList.prototype.getData = function () {\n        this.dataSourceSettings.dataSource.executeQuery(new Query()).then(this.executeQuery.bind(this));\n    };\n    PivotFieldList.prototype.executeQuery = function (e) {\n        this.engineModule.data = e.result;\n        this.initEngine();\n    };\n    PivotFieldList.prototype.fieldListRender = function () {\n        this.element.innerHTML = '';\n        if (this.renderMode === 'Popup' && this.dialogRenderer.fieldListDialog && !this.dialogRenderer.fieldListDialog.isDestroyed) {\n            this.dialogRenderer.fieldListDialog.destroy();\n            remove(document.getElementById(this.element.id + '_Wrapper'));\n        }\n        this.renderModule.render();\n        this.fieldListSpinnerElement = this.renderMode === 'Popup' ?\n            this.dialogRenderer.fieldListDialog.element : this.element.querySelector('.e-pivotfieldlist-wrapper');\n        if (this.spinnerTemplate) {\n            createSpinner({ target: this.fieldListSpinnerElement, template: this.spinnerTemplate }, this.createElement);\n        }\n        else {\n            createSpinner({ target: this.fieldListSpinnerElement }, this.createElement);\n        }\n        var args;\n        args = {\n            pivotEngine: this.dataType === 'olap' ? this.olapEngineModule : this.engineModule,\n            dataSourceSettings: this.dataSourceSettings,\n            id: this.element.id,\n            element: document.getElementById(this.element.id + '_Wrapper'),\n            moduleName: this.getModuleName(),\n            enableRtl: this.enableRtl,\n            isAdaptive: this.isAdaptive,\n            renderMode: this.renderMode,\n            localeObj: this.localeObj,\n            dataType: this.dataType\n        };\n        this.pivotCommon = new PivotCommon(args);\n        this.pivotCommon.control = this;\n        if (this.allowDeferLayoutUpdate) {\n            this.clonedDataSource = extend({}, this.dataSourceSettings, null, true);\n            this.clonedFieldList = extend({}, this.pivotFieldList, null, true);\n        }\n    };\n    PivotFieldList.prototype.getFieldCaption = function (dataSourceSettings) {\n        this.getFields(dataSourceSettings);\n        if (this.captionData.length > 0) {\n            var lnt = this.captionData.length;\n            var engineModule = this.dataType === 'olap' ? this.olapEngineModule : this.engineModule;\n            while (lnt--) {\n                if (this.captionData[lnt]) {\n                    for (var _i = 0, _a = this.captionData[lnt]; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        if (obj) {\n                            if (engineModule.fieldList[obj.name]) {\n                                if (obj.caption) {\n                                    engineModule.fieldList[obj.name].caption = obj.caption;\n                                }\n                                else {\n                                    engineModule.fieldList[obj.name].caption = obj.name;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    PivotFieldList.prototype.getFields = function (dataSourceSettings) {\n        /* tslint:disable-next-line:max-line-length */\n        this.captionData = [dataSourceSettings.rows, dataSourceSettings.columns, dataSourceSettings.values, dataSourceSettings.filters];\n    };\n    /* tslint:disable */\n    /**\n     * Updates the PivotEngine using dataSource from Pivot Field List component.\n     * @method updateDataSource\n     * @return {void}\n     * @hidden\n     */\n    PivotFieldList.prototype.updateDataSource = function (isTreeViewRefresh, isEngineRefresh) {\n        var _this = this;\n        if (this.pivotGridModule) {\n            this.pivotGridModule.showWaitingPopup();\n        }\n        showSpinner(this.fieldListSpinnerElement);\n        var pivot = this;\n        var control = pivot.isPopupView ? pivot.pivotGridModule : pivot;\n        //setTimeout(() => {\n        var isOlapDataRefreshed = false;\n        var pageSettings = pivot.pivotGridModule && pivot.pivotGridModule.enableVirtualization ?\n            pivot.pivotGridModule.pageSettings : undefined;\n        var isCalcChange = Object.keys(pivot.lastCalcFieldInfo).length > 0 ? true : false;\n        var isSorted = Object.keys(pivot.lastSortInfo).length > 0 ? true : false;\n        var isAggChange = Object.keys(pivot.lastAggregationInfo).length > 0 ? true : false;\n        var isFiltered = Object.keys(pivot.lastFilterInfo).length > 0 ? true : false;\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(pivot.dataSourceSettings)\n        };\n        control.trigger(events.enginePopulating, args, function (observedArgs) {\n            if (!(pageSettings && (isSorted || isFiltered || isAggChange || isCalcChange))) {\n                PivotUtil.updateDataSourceSettings(pivot, observedArgs.dataSourceSettings);\n                PivotUtil.updateDataSourceSettings(pivot.pivotGridModule, observedArgs.dataSourceSettings);\n            }\n            if (isNullOrUndefined(isEngineRefresh)) {\n                if (pivot.dataType === 'pivot') {\n                    var customProperties = pivot.frameCustomProperties();\n                    if (!isSorted) {\n                        customProperties.enableValueSorting = pivot.staticPivotGridModule ?\n                            pivot.staticPivotGridModule.enableValueSorting : pivot.enableValueSorting;\n                    }\n                    else {\n                        pivot.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                        customProperties.enableValueSorting = false;\n                    }\n                    customProperties.savedFieldList = pivot.pivotFieldList;\n                    if (pageSettings && (isSorted || isFiltered || isAggChange || isCalcChange)) {\n                        var interopArguments = {};\n                        if (isSorted) {\n                            pivot.pivotGridModule.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                            if ((isBlazor())) {\n                                interopArguments = { 'key': 'onSort', 'arg': pivot.lastSortInfo };\n                            }\n                            else if (control.dataSourceSettings.mode === 'Server') {\n                                control.getEngine('onSort', null, pivot.lastSortInfo, null, null, null, null);\n                            }\n                            else {\n                                pivot.engineModule.onSort(pivot.lastSortInfo);\n                            }\n                            pivot.lastSortInfo = {};\n                        }\n                        if (isFiltered) {\n                            if (isBlazor()) {\n                                var dataArgs = window['sfBlazor'].copyWithoutCircularReferences([pivot.dataSourceSettings.filterSettings], pivot.dataSourceSettings.filterSettings);\n                                interopArguments = {\n                                    'key': 'onFilter',\n                                    'arg': { 'lastFilterInfo': pivot.lastFilterInfo, 'filterSettings': dataArgs }\n                                };\n                            }\n                            else if (control.dataSourceSettings.mode === 'Server') {\n                                control.getEngine('onFilter', null, null, null, null, pivot.lastFilterInfo, null);\n                            }\n                            else {\n                                pivot.engineModule.onFilter(pivot.lastFilterInfo, pivot.dataSourceSettings);\n                            }\n                            pivot.lastFilterInfo = {};\n                        }\n                        if (isAggChange) {\n                            if (isBlazor()) {\n                                interopArguments = { 'key': 'onAggregation', 'arg': pivot.lastAggregationInfo };\n                            }\n                            else if (control.dataSourceSettings.mode === 'Server') {\n                                control.getEngine('onAggregation', null, null, pivot.lastAggregationInfo, null, null, null);\n                            }\n                            else {\n                                pivot.engineModule.onAggregation(pivot.lastAggregationInfo);\n                            }\n                            pivot.lastAggregationInfo = {};\n                        }\n                        if (isCalcChange) {\n                            if (isBlazor()) {\n                                interopArguments = {\n                                    'key': 'onCalcOperation',\n                                    'arg': {\n                                        lastCalcFieldInfo: pivot.lastCalcFieldInfo,\n                                        values: pivot.dataSourceSettings.values,\n                                        calculatedFieldSettings: pivot.dataSourceSettings.calculatedFieldSettings\n                                    }\n                                };\n                            }\n                            else if (control.dataSourceSettings.mode === 'Server') {\n                                control.getEngine('onCalcOperation', null, null, null, pivot.lastCalcFieldInfo, null, null);\n                            }\n                            else {\n                                pivot.engineModule.onCalcOperation(pivot.lastCalcFieldInfo);\n                            }\n                            pivot.lastCalcFieldInfo = {};\n                        }\n                        if (isBlazor()) {\n                            var args_1 = window['sfBlazor'].copyWithoutCircularReferences([interopArguments['arg']], interopArguments['arg']);\n                            pivot.pivotGridModule.interopAdaptor.invokeMethodAsync(\"PivotInteropMethod\", interopArguments['key'], args_1).then(function (data) {\n                                if (data === 0) {\n                                    _this.pivotCommon.errorDialog.createErrorDialog(_this.localeObj.getConstant('error'), (pivot.dataSourceSettings.type === 'CSV' ?\n                                        _this.localeObj.getConstant('invalidCSV') : _this.localeObj.getConstant('invalidJSON')));\n                                    return;\n                                }\n                                else {\n                                    pivot.pivotGridModule.updateBlazorData(data, pivot.pivotGridModule);\n                                    pivot.getFieldCaption(pivot.dataSourceSettings);\n                                    pivot.enginePopulatedEventMethod(pivot, isTreeViewRefresh, isOlapDataRefreshed);\n                                    if (pivot.calculatedFieldModule && pivot.calculatedFieldModule.isRequireUpdate) {\n                                        pivot.calculatedFieldModule.endDialog();\n                                        pivot.calculatedFieldModule.isRequireUpdate = false;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    else {\n                        if (isBlazor() && pageSettings) {\n                            var dataArgs = window['sfBlazor'].copyWithoutCircularReferences([pivot.dataSourceSettings.properties], pivot.dataSourceSettings.properties);\n                            pivot.pivotGridModule.interopAdaptor.invokeMethodAsync(\"PivotInteropMethod\", 'renderEngine', { 'dataSourceSettings': dataArgs, 'customProperties': customProperties }).then(function (data) {\n                                if (data === 0) {\n                                    _this.pivotCommon.errorDialog.createErrorDialog(_this.localeObj.getConstant('error'), (pivot.dataSourceSettings.type === 'CSV' ?\n                                        _this.localeObj.getConstant('invalidCSV') : _this.localeObj.getConstant('invalidJSON')));\n                                    return;\n                                }\n                                else {\n                                    pivot.pivotGridModule.updateBlazorData(data, pivot.pivotGridModule);\n                                    pivot.getFieldCaption(pivot.dataSourceSettings);\n                                    pivot.enginePopulatedEventMethod(pivot, isTreeViewRefresh, isOlapDataRefreshed);\n                                }\n                            });\n                        }\n                        else if (pivot.dataSourceSettings.mode === 'Server') {\n                            if (isSorted)\n                                control.getEngine('onSort', null, pivot.lastSortInfo, null, null, null, null);\n                            else if (isAggChange)\n                                control.getEngine('onAggregation', null, null, pivot.lastAggregationInfo, null, null, null);\n                            else if (isCalcChange)\n                                control.getEngine('onCalcOperation', null, null, null, pivot.lastCalcFieldInfo, null, null);\n                            else if (isFiltered)\n                                control.getEngine('onFilter', null, null, null, null, pivot.lastFilterInfo, null);\n                            else\n                                control.getEngine('onDrop', null, null, null, null, null, null);\n                            pivot.lastSortInfo = {};\n                            pivot.lastAggregationInfo = {};\n                            pivot.lastCalcFieldInfo = {};\n                            pivot.lastFilterInfo = {};\n                        }\n                        else {\n                            pivot.engineModule.renderEngine(pivot.dataSourceSettings, customProperties, pivot.getValueCellInfo.bind(pivot));\n                        }\n                    }\n                }\n                else {\n                    isOlapDataRefreshed = pivot.updateOlapDataSource(pivot, isSorted, isCalcChange, isOlapDataRefreshed);\n                }\n                if (!(isBlazor() && pageSettings)) {\n                    pivot.getFieldCaption(pivot.dataSourceSettings);\n                }\n            }\n            else {\n                pivot.axisFieldModule.render();\n                pivot.isRequiredUpdate = false;\n            }\n            if (!(isBlazor() && pageSettings)) {\n                pivot.enginePopulatedEventMethod(pivot, isTreeViewRefresh, isOlapDataRefreshed);\n            }\n        });\n        //});\n    };\n    /* tslint:enable */\n    PivotFieldList.prototype.enginePopulatedEventMethod = function (pivot, isTreeViewRefresh, isOlapDataRefreshed) {\n        var control = pivot.isPopupView ? pivot.pivotGridModule : pivot;\n        var eventArgs = {\n            dataSourceSettings: pivot.dataSourceSettings,\n            pivotFieldList: pivot.dataType === 'pivot' ? pivot.engineModule.fieldList : pivot.olapEngineModule.fieldList,\n            pivotValues: pivot.dataType === 'pivot' ? pivot.engineModule.pivotValues : pivot.olapEngineModule.pivotValues\n        };\n        control.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n            var dataSource = pivot.dataSourceSettings.dataSource;\n            if (isBlazor() && observedArgs.dataSourceSettings.dataSource instanceof Object) {\n                observedArgs.dataSourceSettings.dataSource = dataSource;\n            }\n            pivot.dataSourceSettings = observedArgs.dataSourceSettings;\n            pivot.pivotCommon.dataSourceSettings = pivot.dataSourceSettings;\n            pivot.pivotFieldList = observedArgs.pivotFieldList;\n            if (pivot.dataType === 'olap') {\n                pivot.olapEngineModule.pivotValues = isBlazor() ? pivot.olapEngineModule.pivotValues : observedArgs.pivotValues;\n                pivot.pivotCommon.engineModule = pivot.olapEngineModule;\n            }\n            else {\n                pivot.engineModule.pivotValues = isBlazor() ? pivot.engineModule.pivotValues : observedArgs.pivotValues;\n                pivot.pivotCommon.engineModule = pivot.engineModule;\n            }\n            if (!isTreeViewRefresh && pivot.treeViewModule.fieldTable && !pivot.isAdaptive) {\n                pivot.notify(events.treeViewUpdate, {});\n            }\n            if (pivot.isRequiredUpdate) {\n                if (pivot.allowDeferLayoutUpdate) {\n                    pivot.clonedDataSource = extend({}, pivot.dataSourceSettings, null, true);\n                    pivot.clonedFieldList = extend({}, pivot.pivotFieldList, null, true);\n                }\n                pivot.updateView(pivot.pivotGridModule);\n            }\n            else if (pivot.renderMode === 'Popup' && pivot.allowDeferLayoutUpdate) {\n                pivot.pivotGridModule.engineModule = pivot.engineModule;\n                /* tslint:disable:align */\n                pivot.pivotGridModule.setProperties({\n                    dataSourceSettings: pivot.dataSourceSettings.properties\n                }, true);\n                pivot.pivotGridModule.notify(events.uiUpdate, pivot);\n                hideSpinner(pivot.fieldListSpinnerElement);\n                /* tslint:enable:align */\n            }\n            if (pivot.renderMode === 'Popup' && pivot.pivotGridModule &&\n                pivot.pivotGridModule.allowDeferLayoutUpdate && !pivot.isRequiredUpdate) {\n                hideSpinner(pivot.fieldListSpinnerElement);\n                pivot.pivotGridModule.hideWaitingPopup();\n            }\n            pivot.isRequiredUpdate = true;\n            if (!pivot.pivotGridModule || isOlapDataRefreshed) {\n                hideSpinner(pivot.fieldListSpinnerElement);\n            }\n            else {\n                pivot.pivotGridModule.fieldListSpinnerElement = pivot.fieldListSpinnerElement;\n            }\n        });\n    };\n    PivotFieldList.prototype.updateOlapDataSource = function (pivot, isSorted, isCalcChange, isOlapDataRefreshed) {\n        var customProperties = pivot.frameCustomProperties(pivot.olapEngineModule.fieldListData, pivot.olapEngineModule.fieldList);\n        customProperties.savedFieldList = pivot.pivotFieldList;\n        if (isCalcChange || isSorted) {\n            pivot.olapEngineModule.savedFieldList = pivot.pivotFieldList;\n            pivot.olapEngineModule.savedFieldListData = pivot.olapEngineModule.fieldListData;\n            if (isCalcChange) {\n                pivot.olapEngineModule.updateCalcFields(pivot.dataSourceSettings, pivot.lastCalcFieldInfo);\n                pivot.lastCalcFieldInfo = {};\n                isOlapDataRefreshed = pivot.olapEngineModule.dataFields[pivot.lastCalcFieldInfo.name] ? false : true;\n                if (pivot.pivotGridModule) {\n                    pivot.pivotGridModule.hideWaitingPopup();\n                }\n            }\n            else {\n                pivot.olapEngineModule.onSort(pivot.dataSourceSettings);\n            }\n        }\n        else {\n            pivot.olapEngineModule.renderEngine(pivot.dataSourceSettings, customProperties);\n        }\n        return isOlapDataRefreshed;\n    };\n    /**\n     * Updates the Pivot Field List component using dataSource from PivotView component.\n     * @method updateControl\n     * @return {void}\n     */\n    PivotFieldList.prototype.update = function (control) {\n        if (isBlazor() && control !== undefined) {\n            /* tslint:disable */\n            var pivotId = control.ID;\n            var pivotInstance = getInstance('#' + pivotId, PivotView);\n            control = pivotInstance;\n            /* tslint:enable */\n        }\n        if (control) {\n            this.clonedDataSet = control.clonedDataSet;\n            if (isBlazor() && !this.isPopupView) {\n                PivotUtil.updateDataSourceSettings(this, PivotUtil.getClonedDataSourceSettings(control.dataSourceSettings));\n            }\n            else {\n                this.setProperties({ dataSourceSettings: control.dataSourceSettings }, true);\n            }\n            this.engineModule = control.engineModule;\n            this.olapEngineModule = control.olapEngineModule;\n            this.dataType = control.dataType;\n            this.pivotFieldList = this.dataType === 'olap' ? control.olapEngineModule.fieldList : control.engineModule.fieldList;\n            if (this.renderMode === 'Popup') {\n                this.pivotGridModule = control;\n            }\n            this.getFieldCaption(control.dataSourceSettings);\n            this.pivotCommon.engineModule = this.dataType === 'olap' ? this.olapEngineModule : this.engineModule;\n            this.pivotCommon.dataSourceSettings = this.dataSourceSettings;\n            this.pivotCommon.control = this;\n            if (this.treeViewModule.fieldTable && !this.isAdaptive) {\n                this.notify(events.treeViewUpdate, {});\n            }\n            this.axisFieldModule.render();\n            if (this.renderMode === 'Fixed' && this.allowDeferLayoutUpdate) {\n                this.clonedDataSource = extend({}, this.dataSourceSettings, null, true);\n                this.clonedFieldList = extend({}, this.pivotFieldList, null, true);\n            }\n            if (!this.isPopupView) {\n                this.staticPivotGridModule = control;\n            }\n        }\n    };\n    /**\n     * Updates the PivotView component using dataSource from Pivot Field List component.\n     * @method refreshTargetControl\n     * @return {void}\n     */\n    PivotFieldList.prototype.updateView = function (control) {\n        if (isBlazor() && control !== undefined) {\n            /* tslint:disable */\n            var pivotId = control.ID;\n            var pivotInstance = getInstance('#' + pivotId, PivotView);\n            control = pivotInstance;\n            /* tslint:enable */\n        }\n        if (control) {\n            control.clonedDataSet = this.clonedDataSet;\n            if (isBlazor()) {\n                PivotUtil.updateDataSourceSettings(control, PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings));\n            }\n            else {\n                control.setProperties({ dataSourceSettings: this.dataSourceSettings }, true);\n            }\n            control.engineModule = this.engineModule;\n            control.olapEngineModule = this.olapEngineModule;\n            control.dataType = this.dataType;\n            if (!this.pivotChange) {\n                control.pivotValues = this.dataType === 'olap' ? this.olapEngineModule.pivotValues : this.engineModule.pivotValues;\n            }\n            var eventArgs = {\n                dataSourceSettings: PivotUtil.getClonedDataSourceSettings(control.dataSourceSettings),\n                pivotValues: control.pivotValues\n            };\n            control.trigger(events.fieldListRefreshed, eventArgs);\n            if (!this.isPopupView) {\n                this.staticPivotGridModule = control;\n            }\n            if (control.enableVirtualization && isBlazor()) {\n                control.renderPivotGrid();\n            }\n            else {\n                control.dataBind();\n            }\n        }\n    };\n    /**\n     * Called internally to trigger populate event.\n     * @hidden\n     */\n    PivotFieldList.prototype.triggerPopulateEvent = function () {\n        var _this = this;\n        var control = this.isPopupView ? this.pivotGridModule : this;\n        var eventArgs = {\n            dataSourceSettings: this.dataSourceSettings,\n            pivotFieldList: this.dataType === 'olap' ? this.olapEngineModule.fieldList : this.engineModule.fieldList,\n            pivotValues: this.dataType === 'olap' ? this.olapEngineModule.pivotValues : this.engineModule.pivotValues\n        };\n        control.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n            _this.dataSourceSettings = observedArgs.dataSourceSettings;\n            _this.pivotFieldList = observedArgs.pivotFieldList;\n            if (_this.dataType === 'olap') {\n                _this.olapEngineModule.pivotValues = isBlazor() ? _this.olapEngineModule.pivotValues : observedArgs.pivotValues;\n            }\n            else {\n                _this.engineModule.pivotValues = isBlazor() ? _this.engineModule.pivotValues : observedArgs.pivotValues;\n            }\n        });\n    };\n    /**\n     * Destroys the Field Table component.\n     * @method destroy\n     * @return {void}\n     */\n    PivotFieldList.prototype.destroy = function () {\n        this.unWireEvent();\n        if (this.treeViewModule) {\n            this.treeViewModule.destroy();\n        }\n        if (this.pivotButtonModule) {\n            this.pivotButtonModule.destroy();\n        }\n        if (this.allowDeferLayoutUpdate && this.dialogRenderer &&\n            this.dialogRenderer.deferUpdateCheckBox && !this.dialogRenderer.deferUpdateCheckBox.isDestroyed) {\n            this.dialogRenderer.deferUpdateCheckBox.destroy();\n        }\n        _super.prototype.destroy.call(this);\n        this.element.innerHTML = '';\n        removeClass([this.element], cls.ROOT);\n        removeClass([this.element], cls.RTL);\n        removeClass([this.element], cls.DEVICE);\n        if (this.renderMode === 'Popup') {\n            if (this.dialogRenderer.fieldListDialog && !this.dialogRenderer.fieldListDialog.isDestroyed) {\n                this.dialogRenderer.fieldListDialog.destroy();\n            }\n            if (document.getElementById(this.element.id + '_Wrapper')) {\n                remove(document.getElementById(this.element.id + '_Wrapper'));\n            }\n        }\n    };\n    __decorate([\n        Complex({}, DataSourceSettings)\n    ], PivotFieldList.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property('Popup')\n    ], PivotFieldList.prototype, \"renderMode\", void 0);\n    __decorate([\n        Property()\n    ], PivotFieldList.prototype, \"target\", void 0);\n    __decorate([\n        Property('')\n    ], PivotFieldList.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotFieldList.prototype, \"allowCalculatedField\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotFieldList.prototype, \"showValuesButton\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotFieldList.prototype, \"allowDeferLayoutUpdate\", void 0);\n    __decorate([\n        Property(1000)\n    ], PivotFieldList.prototype, \"maxNodeLimitInMemberEditor\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotFieldList.prototype, \"loadOnDemandInMemberEditor\", void 0);\n    __decorate([\n        Property()\n    ], PivotFieldList.prototype, \"spinnerTemplate\", void 0);\n    __decorate([\n        Property(['Sum', 'Count', 'DistinctCount', 'Product', 'Min', 'Max', 'Avg', 'Index', 'PopulationVar', 'SampleVar', 'PopulationStDev', 'SampleStDev', 'RunningTotals', 'PercentageOfGrandTotal', 'PercentageOfColumnTotal', 'PercentageOfRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentRowTotal', 'DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'])\n    ], PivotFieldList.prototype, \"aggregateTypes\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"enginePopulating\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"memberFiltering\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"enginePopulated\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"onFieldDropped\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"fieldDrop\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"fieldDragStart\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"aggregateCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"memberEditorOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"calculatedFieldCreate\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"aggregateMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"fieldRemove\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"destroyed\", void 0);\n    PivotFieldList = __decorate([\n        NotifyPropertyChanges\n    ], PivotFieldList);\n    return PivotFieldList;\n}(Component));\nexport { PivotFieldList };\n","import { Dialog, Tooltip } from '@syncfusion/ej2-popups';\nimport { Droppable, createElement, extend, remove, addClass, closest, getInstance, isBlazor } from '@syncfusion/ej2-base';\nimport { prepend, append, KeyboardEvents, removeClass, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Button, RadioButton, CheckBox } from '@syncfusion/ej2-buttons';\nimport { MaskedTextBox } from '@syncfusion/ej2-inputs';\nimport * as cls from '../../common/base/css-constant';\nimport { TreeView } from '@syncfusion/ej2-navigations';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport * as events from '../../common/base/constant';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render Calculated Field Dialog\n */\nvar COUNT = 'Count';\nvar AVG = 'Avg';\nvar MIN = 'Min';\nvar MAX = 'Max';\nvar SUM = 'Sum';\nvar DISTINCTCOUNT = 'DistinctCount';\nvar PRODUCT = 'Product';\nvar STDEV = 'SampleStDev';\nvar STDEVP = 'PopulationStDev';\nvar VAR = 'SampleVar';\nvar VARP = 'PopulationVar';\nvar CALC = 'CalculatedField';\nvar AGRTYPE = 'AggregateType';\n/** @hidden */\nvar CalculatedField = /** @class */ (function () {\n    /** Constructor for calculatedfield module */\n    function CalculatedField(parent) {\n        /** @hidden */\n        this.isFormula = false;\n        /** @hidden */\n        this.isRequireUpdate = false;\n        this.parent = parent;\n        this.existingReport = null;\n        this.parent.calculatedFieldModule = this;\n        this.removeEventListener();\n        this.addEventListener();\n        this.parentID = this.parent.element.id;\n        this.dialog = null;\n        this.inputObj = null;\n        this.treeObj = null;\n        this.droppable = null;\n        this.menuObj = null;\n        this.newFields = null;\n        this.isFieldExist = true;\n        this.formulaText = null;\n        this.fieldText = null;\n        this.formatText = null;\n        this.formatType = null;\n        this.fieldType = null;\n        this.parentHierarchy = null;\n        this.isEdit = false;\n        this.currentFieldName = null;\n        this.confirmPopUp = null;\n    }\n    /**\n     * To get module name.\n     * @returns string\n     */\n    CalculatedField.prototype.getModuleName = function () {\n        return 'calculatedfield';\n    };\n    CalculatedField.prototype.keyActionHandler = function (e) {\n        var node = e.currentTarget.querySelector('.e-hover.e-node-focus');\n        if (node) {\n            switch (e.action) {\n                case 'moveRight':\n                case 'shiftE':\n                    if (this.parent.dataType === 'pivot') {\n                        this.displayMenu(node);\n                    }\n                    break;\n                case 'delete':\n                    if (node.tagName === 'LI' && !node.querySelector('.e-list-icon.e-format') && !node.querySelector('.e-list-icon').classList.contains('.e-icons') && (node.querySelector('.' + cls.GRID_REMOVE) &&\n                        node.querySelector('.' + cls.GRID_REMOVE).classList.contains('e-list-icon'))) {\n                        this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeCalculatedField'), {}, true, node);\n                    }\n                    break;\n                case 'enter':\n                    var field = node.getAttribute('data-field');\n                    var type = node.getAttribute('data-type');\n                    var dropField = this.dialog.element.querySelector('#' + this.parentID + 'droppable');\n                    if (this.parent.dataType === 'pivot') {\n                        if (dropField.value === '') {\n                            if (type === CALC) {\n                                dropField.value = node.getAttribute('data-uid');\n                            }\n                            else {\n                                dropField.value = '\"' + type + '(' + field + ')' + '\"';\n                            }\n                        }\n                        else if (dropField.value !== '') {\n                            if (type === CALC) {\n                                dropField.value = dropField.value + node.getAttribute('data-uid');\n                            }\n                            else {\n                                dropField.value = dropField.value + '\"' + type + '(' + field + ')' + '\"';\n                            }\n                        }\n                    }\n                    else {\n                        if (this.parent.olapEngineModule && this.parent.olapEngineModule.fieldList[field] &&\n                            this.parent.olapEngineModule.fieldList[field].isCalculatedField) {\n                            field = this.parent.olapEngineModule.fieldList[field].tag;\n                        }\n                        if (dropField.value === '') {\n                            dropField.value = field;\n                        }\n                        else if (dropField.value !== '') {\n                            dropField.value = dropField.value + field;\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    /* tslint:disable:max-line-length */\n    /**\n     * Trigger while click treeview icon.\n     * @param  {NodeClickEventArgs} e\n     * @returns void\n     */\n    CalculatedField.prototype.fieldClickHandler = function (e) {\n        var node = closest(e.event.target, 'li');\n        if (e.event.target.classList.contains(cls.FORMAT) ||\n            e.event.target.classList.contains(cls.CALC_EDIT) ||\n            e.event.target.classList.contains(cls.CALC_EDITED) ||\n            e.event.target.classList.contains(cls.GRID_REMOVE)) {\n            if (!this.parent.isAdaptive) {\n                this.displayMenu(node, e.node, e.event.target);\n            }\n            else if (this.parent.dataType === 'olap' && this.parent.isAdaptive) {\n                if (node.tagName === 'LI' && node.querySelector('.e-list-edit-icon').classList.contains(cls.CALC_EDIT) && e.event.target.classList.contains(cls.CALC_EDIT)) {\n                    this.isEdit = true;\n                    this.currentFieldName = node.getAttribute('data-field');\n                    this.fieldText = node.getAttribute('data-caption');\n                    this.formulaText = node.getAttribute('data-formula');\n                    this.formatType = node.getAttribute('data-formatString');\n                    this.formatText = this.formatType === 'Custom' ? node.getAttribute('data-customString') : null;\n                    this.fieldType = node.getAttribute('data-membertype');\n                    this.parentHierarchy = this.fieldType === 'Dimension' ? node.getAttribute('data-hierarchy') : null;\n                    addClass([node.querySelector('.e-list-edit-icon')], cls.CALC_EDITED);\n                    removeClass([node.querySelector('.e-list-edit-icon')], cls.CALC_EDIT);\n                    this.renderMobileLayout(this.parent.dialogRenderer.adaptiveElement);\n                }\n                else if (node.tagName === 'LI' && node.querySelector('.e-list-edit-icon').classList.contains(cls.CALC_EDITED) && e.event.target.classList.contains(cls.CALC_EDITED)) {\n                    this.isEdit = false;\n                    this.fieldText = this.formatText = this.formulaText = this.currentFieldName = null;\n                    this.parentHierarchy = this.fieldType = this.formatType = null;\n                    addClass([node.querySelector('.e-list-edit-icon')], cls.CALC_EDIT);\n                    removeClass([node.querySelector('.e-list-edit-icon')], cls.CALC_EDITED);\n                }\n                else if (node.tagName === 'LI' && node.querySelector('.' + cls.GRID_REMOVE).classList.contains('e-icons') && e.event.target.classList.contains(cls.GRID_REMOVE)) {\n                    this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeCalculatedField'), {}, true, e.node);\n                }\n            }\n        }\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * Trigger while click treeview icon.\n     * @param  {AccordionClickArgs} e\n     * @returns void\n     */\n    CalculatedField.prototype.accordionClickHandler = function (e) {\n        if (e.item && e.item.iconCss.indexOf('e-list-icon') !== -1 &&\n            closest(e.originalEvent.target, '.e-acrdn-header-icon')) {\n            var node = closest(e.originalEvent.target, '.e-acrdn-header').querySelector('.' + cls.CALCCHECK);\n            var fieldName = node.getAttribute('data-field');\n            var formatObj = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.formatSettings);\n            var optionElement = closest(e.originalEvent.target, '.e-acrdn-header-icon');\n            if (optionElement.querySelector('.' + cls.CALC_EDIT) && e.originalEvent.target.classList.contains(cls.CALC_EDIT)) {\n                this.isEdit = true;\n                this.currentFieldName = this.fieldText = fieldName;\n                this.formulaText = this.parent.engineModule.fieldList[fieldName].formula;\n                this.formatText = formatObj ? formatObj.format : '';\n                addClass([optionElement.querySelector('.e-list-icon')], cls.CALC_EDITED);\n                removeClass([optionElement.querySelector('.e-list-icon')], cls.CALC_EDIT);\n                this.renderMobileLayout(this.parent.dialogRenderer.adaptiveElement);\n            }\n            else if (optionElement.querySelector('.' + cls.CALC_EDITED) &&\n                e.originalEvent.target.classList.contains(cls.CALC_EDITED)) {\n                this.isEdit = false;\n                this.fieldText = this.formatText = this.formulaText = this.currentFieldName = null;\n                addClass([optionElement.querySelector('.e-list-icon')], cls.CALC_EDIT);\n                removeClass([optionElement.querySelector('.e-list-icon')], cls.CALC_EDITED);\n            }\n            else if (optionElement.querySelector('.' + cls.GRID_REMOVE) &&\n                e.originalEvent.target.classList.contains(cls.GRID_REMOVE)) {\n                this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeCalculatedField'), {}, true, node);\n            }\n        }\n    };\n    CalculatedField.prototype.accordionCreated = function () {\n        var allElement = this.accordion.element.querySelectorAll('.e-acrdn-item');\n        for (var i = 0; i < allElement.length; i++) {\n            if (allElement[i].querySelector('.' + cls.CALC_EDIT) || allElement[i].querySelector('.' + cls.CALC_EDITED)) {\n                var element = createElement('span', {\n                    className: 'e-list-icon ' + cls.GRID_REMOVE + ' e-icons',\n                });\n                append([element], allElement[i].querySelector('.e-acrdn-header-icon'));\n            }\n        }\n    };\n    CalculatedField.prototype.clearFormula = function () {\n        if (this.treeObj && this.treeObj.element.querySelector('li')) {\n            removeClass(this.treeObj.element.querySelectorAll('li'), 'e-active');\n            this.displayMenu(this.treeObj.element.querySelector('li'));\n        }\n    };\n    /**\n     * To display context menu.\n     * @param  {HTMLElement} node\n     * @returns void\n     */\n    /* tslint:disable:max-func-body-length */\n    CalculatedField.prototype.displayMenu = function (node, treeNode, target) {\n        var edit = target ? target.classList.contains(cls.CALC_EDIT) : true;\n        var edited = target ? target.classList.contains(cls.CALC_EDITED) : true;\n        /* tslint:disable:max-line-length */\n        if (this.parent.dataType === 'pivot' && node.querySelector('.e-list-icon.e-format') &&\n            node.querySelector('.e-list-icon.e-format').classList.contains(cls.ICON) &&\n            !node.querySelector('.e-list-icon').classList.contains(cls.CALC_EDITED) &&\n            !node.querySelector('.e-list-icon').classList.contains(cls.GRID_REMOVE) &&\n            !node.querySelector('.e-list-icon').classList.contains(cls.CALC_EDIT) && node.tagName === 'LI') {\n            if (this.menuObj && !this.menuObj.isDestroyed) {\n                this.menuObj.destroy();\n            }\n            this.curMenu = node.querySelector('.' + cls.LIST_TEXT_CLASS);\n            this.openContextMenu(node);\n        }\n        else if (node.tagName === 'LI' && (node.querySelector('.' + cls.CALC_EDIT) &&\n            node.querySelector('.' + cls.CALC_EDIT).classList.contains('e-list-icon') && edit ||\n            (this.parent.dataType === 'olap' && node.getAttribute('data-type') === CALC && node.classList.contains('e-active') && ((target && !target.classList.contains(cls.GRID_REMOVE)) || !target)))) {\n            this.isEdit = true;\n            var fieldName = node.getAttribute('data-field');\n            var caption = node.getAttribute('data-caption');\n            this.currentFieldName = fieldName;\n            this.inputObj.value = caption;\n            this.inputObj.dataBind();\n            var formatString = node.getAttribute('data-formatString');\n            var dialogElement = this.dialog.element;\n            var customFormat = getInstance(dialogElement.querySelector('#' + this.parentID + 'Custom_Format_Element'), MaskedTextBox);\n            if (this.parent.dataType === 'olap') {\n                var memberType = node.getAttribute('data-membertype');\n                var parentHierarchy = node.getAttribute('data-hierarchy');\n                var expression = node.getAttribute('data-formula');\n                var customString = node.getAttribute('data-customString');\n                var fieldTitle = dialogElement.querySelector('#' + this.parentID + '_' + 'FieldNameTitle');\n                var memberTypeDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Member_Type_Div'), DropDownList);\n                var hierarchyDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Hierarchy_List_Div'), DropDownList);\n                var formatDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Format_Div'), DropDownList);\n                /* tslint:enable:max-line-length */\n                fieldTitle.innerHTML = this.parent.localeObj.getConstant('caption');\n                document.querySelector('#' + this.parentID + 'droppable').value = expression;\n                memberTypeDrop.readonly = true;\n                memberTypeDrop.value = memberType;\n                memberTypeDrop.dataBind();\n                if (memberType === 'Dimension') {\n                    hierarchyDrop.value = parentHierarchy;\n                }\n                if (formatString !== '') {\n                    formatDrop.value = formatString;\n                    formatDrop.dataBind();\n                }\n                customFormat.value = customString;\n            }\n            else {\n                customFormat.value = formatString;\n                addClass(this.treeObj.element.querySelectorAll('.' + cls.CALC_EDITED), cls.CALC_EDIT);\n                removeClass(this.treeObj.element.querySelectorAll('.' + cls.CALC_EDITED), cls.CALC_EDITED);\n                addClass([node.querySelector('.e-list-icon')], cls.CALC_EDITED);\n                removeClass([node.querySelector('.e-list-icon')], cls.CALC_EDIT);\n                node.querySelector('.' + cls.CALC_EDITED).setAttribute('title', this.parent.localeObj.getConstant('clearCalculatedField'));\n                document.querySelector('#' + this.parentID + 'droppable').value = node.getAttribute('data-uid');\n            }\n            customFormat.dataBind();\n        }\n        else if (node.tagName === 'LI' && (node.querySelector('.' + cls.CALC_EDITED) &&\n            node.querySelector('.' + cls.CALC_EDITED).classList.contains('e-list-icon') && edited ||\n            (this.parent.dataType === 'olap' && !node.classList.contains('e-active')))) {\n            this.isEdit = false;\n            this.inputObj.value = '';\n            this.inputObj.dataBind();\n            var dialogElement = this.dialog.element;\n            /* tslint:disable:max-line-length */\n            var customFormat = getInstance(dialogElement.querySelector('#' + this.parentID + 'Custom_Format_Element'), MaskedTextBox);\n            customFormat.value = '';\n            customFormat.dataBind();\n            if (this.parent.dataType === 'olap') {\n                var hierarchyDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Hierarchy_List_Div'), DropDownList);\n                var formatDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Format_Div'), DropDownList);\n                var memberTypeDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Member_Type_Div'), DropDownList);\n                var fieldTitle = dialogElement.querySelector('#' + this.parentID + '_' + 'FieldNameTitle');\n                /* tslint:enable:max-line-length */\n                fieldTitle.innerHTML = this.parent.localeObj.getConstant('fieldTitle');\n                hierarchyDrop.index = 0;\n                hierarchyDrop.dataBind();\n                formatDrop.index = 0;\n                formatDrop.dataBind();\n                memberTypeDrop.index = 0;\n                memberTypeDrop.readonly = false;\n                memberTypeDrop.dataBind();\n            }\n            else {\n                addClass(this.treeObj.element.querySelectorAll('.' + cls.CALC_EDITED), cls.CALC_EDIT);\n                removeClass(this.treeObj.element.querySelectorAll('.' + cls.CALC_EDITED), cls.CALC_EDITED);\n                node.querySelector('.' + cls.CALC_EDIT).setAttribute('title', this.parent.localeObj.getConstant('edit'));\n            }\n            document.querySelector('#' + this.parentID + 'droppable').value = '';\n        }\n        else if (node.tagName === 'LI' && (node.querySelector('.' + cls.GRID_REMOVE) &&\n            node.querySelector('.' + cls.GRID_REMOVE).classList.contains('e-list-icon')) && !edit && !edited) {\n            var dropField = document.querySelector('#' + this.parentID + 'droppable');\n            var field = {\n                name: this.isEdit ? this.currentFieldName : this.inputObj.value,\n                caption: this.inputObj.value,\n                formula: dropField.value\n            };\n            this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeCalculatedField'), field, true, treeNode);\n        }\n    };\n    CalculatedField.prototype.removeCalcField = function (node) {\n        var dataSourceSettings = this.parent.dataSourceSettings;\n        var fieldName = node.getAttribute('data-field');\n        var calcfields = dataSourceSettings.calculatedFieldSettings;\n        var engineModule;\n        if (this.parent.dataType === 'pivot') {\n            if (!this.parent.isAdaptive) {\n                this.treeObj.removeNodes([node]);\n            }\n            else {\n                var index = parseInt(node.getAttribute('id').split(this.parentID + '_')[1], 10);\n                if (typeof index === 'number') {\n                    this.accordion.removeItem(index);\n                }\n            }\n        }\n        for (var i = 0; i < calcfields.length; i++) {\n            if (calcfields[i] && calcfields[i].name === fieldName) {\n                calcfields.splice(i, 1);\n                break;\n            }\n        }\n        /* tslint:disable:max-line-length */\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n            var fields_1 = engineModule.fieldListData ? engineModule.fieldListData : [];\n            /* tslint:disable:no-any */\n            for (var _i = 0, _a = Object.keys(fields_1); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (fields_1[item].name === fieldName) {\n                    var index = parseInt(item, 10);\n                    if (typeof (index) === 'number') {\n                        fields_1.splice(index, 1);\n                        break;\n                    }\n                }\n            }\n            /* tslint:enable:no-any */\n            var parentID = this.treeObj.getNode(node).parentID;\n            this.treeObj.removeNodes([node]);\n            if (calcfields.length <= 0) {\n                this.treeObj.removeNodes([parentID]);\n            }\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (engineModule.fields) {\n            for (var i = 0; i < engineModule.fields.length; i++) {\n                if (engineModule.fields[i] === fieldName) {\n                    engineModule.fields.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        if (engineModule.savedFieldList && engineModule.savedFieldList[fieldName]) {\n            delete engineModule.savedFieldList[fieldName];\n        }\n        if (engineModule.fieldList && engineModule.fieldList[fieldName]) {\n            delete engineModule.fieldList[fieldName];\n        }\n        var formatFields = dataSourceSettings.formatSettings;\n        for (var i = 0; i < formatFields.length; i++) {\n            if (formatFields[i] && formatFields[i].name === fieldName) {\n                formatFields.splice(i, 1);\n                break;\n            }\n        }\n        var fields = [dataSourceSettings.values, dataSourceSettings.rows, dataSourceSettings.columns, dataSourceSettings.filters];\n        for (var i = 0, n = fields.length; i < n; i++) {\n            for (var j = 0, length_1 = fields[i].length; j < length_1; j++) {\n                if (fields[i][j].name === fieldName) {\n                    fields[i].splice(j, 1);\n                    break;\n                }\n            }\n        }\n        /* tslint:enable:max-line-length */\n        if (this.isEdit && this.currentFieldName === fieldName) {\n            this.isEdit = false;\n            this.inputObj.value = '';\n            this.currentFieldName = this.formatText = this.fieldText = this.formatType = null;\n            this.formulaText = this.fieldType = this.parentHierarchy = null;\n        }\n        if (!this.parent.allowDeferLayoutUpdate || this.parent.getModuleName() !== 'pivotfieldlist') {\n            this.parent.updateDataSource();\n        }\n        this.removeErrorDialog();\n    };\n    /**\n     * To set position for context menu.\n     * @returns void\n     */\n    CalculatedField.prototype.openContextMenu = function (node) {\n        var _this = this;\n        var fieldName = node.getAttribute('data-field');\n        var type = this.parent.engineModule.fieldList[fieldName].type !== 'number' ? 'string' : 'number';\n        var validSummaryTypes = (type === 'string' ? this.getValidSummaryType().slice(0, 2) : this.getValidSummaryType());\n        var eventArgs = {\n            cancel: false, fieldName: fieldName,\n            aggregateTypes: this.getMenuItems(type).slice()\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' && this.parent.isPopupView ?\n            this.parent.pivotGridModule : this.parent;\n        control.trigger(events.aggregateMenuOpen, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                var duplicateTypes = [];\n                var items = [];\n                for (var _i = 0, _a = observedArgs.aggregateTypes; _i < _a.length; _i++) {\n                    var option = _a[_i];\n                    if (validSummaryTypes.indexOf(option) > -1 && duplicateTypes.indexOf(option) === -1) {\n                        duplicateTypes.push(option);\n                        items.push({\n                            id: _this.parent.element.id + 'Calc_' + option,\n                            text: _this.parent.localeObj.getConstant(option)\n                        });\n                    }\n                }\n                _this.createMenu(items, node);\n                var pos = node.getBoundingClientRect();\n                var offset = window.scrollY || document.documentElement.scrollTop;\n                if (_this.parent.enableRtl) {\n                    _this.menuObj.open(pos.top + offset, pos.left - 100);\n                }\n                else {\n                    _this.menuObj.open(pos.top + offset, pos.left + 150);\n                }\n            }\n        });\n    };\n    /**\n     * Triggers while select menu.\n     * @param  {MenuEventArgs} menu\n     * @returns void\n     */\n    CalculatedField.prototype.selectContextMenu = function (menu) {\n        if (menu.element.textContent !== null) {\n            var field = closest(this.curMenu, '.e-list-item').getAttribute('data-caption');\n            closest(this.curMenu, '.e-list-item').setAttribute('data-type', menu.element.id.split('_').pop());\n            this.curMenu.textContent = field + ' (' + menu.element.textContent + ')';\n            addClass([this.curMenu.parentElement.parentElement], ['e-node-focus', 'e-hover']);\n            this.curMenu.parentElement.parentElement.setAttribute('tabindex', '-1');\n            this.curMenu.parentElement.parentElement.focus();\n        }\n    };\n    /**\n     * To create context menu.\n     * @returns void\n     */\n    CalculatedField.prototype.createMenu = function (menuItems, node) {\n        var _this = this;\n        var menuOptions = {\n            cssClass: this.parentID + 'calculatedmenu',\n            items: menuItems,\n            enableRtl: this.parent.enableRtl,\n            // beforeOpen: this.beforeMenuOpen.bind(this),\n            select: this.selectContextMenu.bind(this),\n            onClose: function () {\n                _this.treeObj.element.focus();\n                addClass([node], ['e-hover', 'e-node-focus']);\n            }\n        };\n        var contextMenu;\n        if (document.querySelector('#' + this.parentID + 'CalcContextmenu')) {\n            contextMenu = document.querySelector('#' + this.parentID + 'CalcContextmenu');\n        }\n        else {\n            contextMenu = createElement('ul', {\n                id: this.parentID + 'CalcContextmenu'\n            });\n        }\n        this.dialog.element.appendChild(contextMenu);\n        this.menuObj = new Menu(menuOptions);\n        this.menuObj.isStringTemplate = true;\n        this.menuObj.appendTo(contextMenu);\n    };\n    /**\n     * Triggers while click OK button.\n     * @returns void\n     */\n    /* tslint:disable:max-func-body-length */\n    CalculatedField.prototype.applyFormula = function () {\n        var _this = this;\n        var currentObj = this;\n        var isExist = false;\n        removeClass([document.getElementById(this.parentID + 'ddlelement')], cls.EMPTY_FIELD);\n        this.newFields =\n            extend([], this.parent.dataSourceSettings.calculatedFieldSettings, null, true);\n        var eventArgs = {\n            fieldName: this.isEdit ? this.currentFieldName : this.inputObj.value,\n            calculatedField: this.getCalculatedFieldInfo(),\n            calculatedFieldSettings: PivotUtil.cloneCalculatedFieldSettings(this.parent.dataSourceSettings.calculatedFieldSettings),\n            cancel: false\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            /* tslint:disable-next-line:max-line-length */\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.calculatedFieldCreate, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                var calcInfo = observedArgs.calculatedField;\n                if (!_this.isEdit) {\n                    if (currentObj.parent.dataType === 'olap') {\n                        var field = calcInfo.name;\n                        if (currentObj.parent.olapEngineModule.fieldList[field] &&\n                            currentObj.parent.olapEngineModule.fieldList[field].type !== 'CalculatedField') {\n                            isExist = true;\n                        }\n                    }\n                    else {\n                        for (var _i = 0, _a = Object.keys(currentObj.parent.engineModule.fieldList); _i < _a.length; _i++) {\n                            var key = _a[_i];\n                            if (calcInfo.name && calcInfo.name === key &&\n                                currentObj.parent.engineModule.fieldList[key].aggregateType !== 'CalculatedField') {\n                                isExist = true;\n                            }\n                        }\n                    }\n                }\n                if (isExist) {\n                    currentObj.parent.pivotCommon.errorDialog.createErrorDialog(currentObj.parent.localeObj.getConstant('error'), currentObj.parent.localeObj.getConstant('fieldExist'));\n                    return;\n                }\n                _this.existingReport = extend({}, _this.parent.dataSourceSettings, null, true);\n                var report = _this.parent.dataSourceSettings;\n                if (!isNullOrUndefined(calcInfo.name) && calcInfo.name !== '' &&\n                    !isNullOrUndefined(calcInfo.caption) && calcInfo.caption !== '' && calcInfo.formula && calcInfo.formula !== '') {\n                    var field = void 0;\n                    if (_this.parent.dataType === 'olap') {\n                        field = {\n                            name: calcInfo.name,\n                            formula: calcInfo.formula,\n                            formatString: calcInfo.formatString\n                        };\n                        if (!isNullOrUndefined(calcInfo.hierarchyUniqueName)) {\n                            field.hierarchyUniqueName = calcInfo.hierarchyUniqueName;\n                        }\n                        _this.isFieldExist = false;\n                        if (!_this.isEdit) {\n                            for (var i = 0; i < report.calculatedFieldSettings.length; i++) {\n                                if (report.calculatedFieldSettings[i].name === field.name) {\n                                    _this.createConfirmDialog(currentObj.parent.localeObj.getConstant('alert'), currentObj.parent.localeObj.getConstant('confirmText'), calcInfo);\n                                    return;\n                                }\n                            }\n                        }\n                        else {\n                            for (var i = 0; i < report.calculatedFieldSettings.length; i++) {\n                                if (report.calculatedFieldSettings[i].name === field.name && _this.isEdit) {\n                                    report.calculatedFieldSettings[i].hierarchyUniqueName = calcInfo.hierarchyUniqueName;\n                                    _this.parent.olapEngineModule.fieldList[field.name].caption = calcInfo.caption;\n                                    report.calculatedFieldSettings[i].formatString = field.formatString;\n                                    report.calculatedFieldSettings[i].formula = field.formula;\n                                    field = report.calculatedFieldSettings[i];\n                                    _this.isFieldExist = true;\n                                    break;\n                                }\n                            }\n                            var axisFields = [report.rows, report.columns, report.values, report.filters];\n                            var isFieldExist = false;\n                            for (var _b = 0, axisFields_1 = axisFields; _b < axisFields_1.length; _b++) {\n                                var fields = axisFields_1[_b];\n                                for (var _c = 0, fields_2 = fields; _c < fields_2.length; _c++) {\n                                    var item = fields_2[_c];\n                                    if (item.isCalculatedField && field.name !== null &&\n                                        item.name === field.name && _this.isEdit) {\n                                        item.caption = calcInfo.caption;\n                                        _this.isFieldExist = true;\n                                        isFieldExist = true;\n                                        break;\n                                    }\n                                }\n                                if (isFieldExist) {\n                                    break;\n                                }\n                            }\n                        }\n                        if (!_this.isFieldExist) {\n                            report.calculatedFieldSettings.push(field);\n                        }\n                        _this.parent.lastCalcFieldInfo = field;\n                    }\n                    else {\n                        field = {\n                            name: calcInfo.name,\n                            caption: calcInfo.caption,\n                            type: 'CalculatedField'\n                        };\n                        var cField = {\n                            name: calcInfo.name,\n                            formula: calcInfo.formula\n                        };\n                        if (!isNullOrUndefined(calcInfo.formatString)) {\n                            cField.formatString = calcInfo.formatString;\n                        }\n                        _this.isFieldExist = true;\n                        if (!_this.isEdit) {\n                            for (var i = 0; i < report.values.length; i++) {\n                                if (report.values[i].type === CALC && report.values[i].name === field.name) {\n                                    for (var j = 0; j < report.calculatedFieldSettings.length; j++) {\n                                        if (report.calculatedFieldSettings[j].name === field.name) {\n                                            _this.createConfirmDialog(currentObj.parent.localeObj.getConstant('alert'), currentObj.parent.localeObj.getConstant('confirmText'), calcInfo);\n                                            return;\n                                        }\n                                    }\n                                    _this.isFieldExist = false;\n                                }\n                            }\n                        }\n                        else {\n                            for (var i = 0; i < report.values.length; i++) {\n                                if (report.values[i].type === CALC && field.name !== null &&\n                                    report.values[i].name === field.name && _this.isEdit) {\n                                    for (var j = 0; j < report.calculatedFieldSettings.length; j++) {\n                                        if (report.calculatedFieldSettings[j].name === field.name) {\n                                            report.values[i].caption = calcInfo.caption;\n                                            _this.currentFormula = report.calculatedFieldSettings[j].formula;\n                                            report.calculatedFieldSettings[j].formula = calcInfo.formula;\n                                            _this.parent.engineModule.fieldList[field.name].caption = calcInfo.caption;\n                                            _this.updateFormatSettings(report, field.name, calcInfo.formatString);\n                                            _this.isFieldExist = false;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        if (_this.isFieldExist) {\n                            report.values.push(field);\n                            report.calculatedFieldSettings.push(cField);\n                            _this.updateFormatSettings(report, field.name, calcInfo.formatString);\n                        }\n                        _this.parent.lastCalcFieldInfo = cField;\n                    }\n                    _this.addFormula(report, field.name);\n                }\n                else {\n                    if (isNullOrUndefined(calcInfo.name) || calcInfo.name === '' ||\n                        isNullOrUndefined(calcInfo.caption) || calcInfo.caption === '') {\n                        _this.inputObj.value = '';\n                        addClass([document.getElementById(_this.parentID + 'ddlelement')], cls.EMPTY_FIELD);\n                        document.getElementById(_this.parentID + 'ddlelement').focus();\n                    }\n                    else {\n                        _this.parent.pivotCommon.errorDialog.createErrorDialog(_this.parent.localeObj.getConstant('error'), _this.parent.localeObj.getConstant('invalidFormula'));\n                    }\n                }\n            }\n            else {\n                _this.endDialog();\n                _this.parent.lastCalcFieldInfo = {};\n                _this.isFormula = false;\n            }\n        });\n    };\n    /* tslint:disable:max-line-length */\n    CalculatedField.prototype.getCalculatedFieldInfo = function () {\n        var field;\n        var dropField = document.querySelector('#' + this.parentID + 'droppable');\n        var dialogElement = this.parent.isAdaptive ? this.parent.dialogRenderer.adaptiveElement.element : this.dialog.element;\n        var customFormat = getInstance(dialogElement.querySelector('#' + this.parentID + 'Custom_Format_Element'), MaskedTextBox);\n        field = {\n            name: this.isEdit ? this.currentFieldName : this.inputObj.value,\n            caption: this.inputObj.value,\n            formula: dropField.value\n        };\n        if (this.parent.dataType === 'olap') {\n            var formatDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Format_Div'), DropDownList);\n            var memberTypeDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Member_Type_Div'), DropDownList);\n            var hierarchyDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Hierarchy_List_Div'), DropDownList);\n            field.formatString = (formatDrop.value === 'Custom' ? customFormat.value : formatDrop.value);\n            if (memberTypeDrop.value === 'Dimension') {\n                field.hierarchyUniqueName = hierarchyDrop.value;\n            }\n        }\n        else {\n            field.formatString = customFormat.value;\n        }\n        return field;\n    };\n    /* tslint:enable:max-line-length */\n    CalculatedField.prototype.updateFormatSettings = function (report, fieldName, formatString) {\n        var newFormat = { name: fieldName, format: formatString, useGrouping: true };\n        var isFormatExist = false;\n        for (var i = 0; i < report.formatSettings.length; i++) {\n            if (report.formatSettings[i].name === fieldName) {\n                if (formatString === 'undefined' || formatString === undefined || formatString === '') {\n                    report.formatSettings.splice(i, 1);\n                    isFormatExist = true;\n                    break;\n                }\n                else {\n                    var formatObj = report.formatSettings[i].properties ?\n                        report.formatSettings[i].properties : report.formatSettings[i];\n                    formatObj.format = formatString;\n                    report.formatSettings.splice(i, 1, formatObj);\n                    isFormatExist = true;\n                    break;\n                }\n            }\n        }\n        if (!isFormatExist && formatString !== '') {\n            report.formatSettings.push(newFormat);\n        }\n    };\n    CalculatedField.prototype.addFormula = function (report, field) {\n        this.isFormula = true;\n        this.field = field;\n        if (isBlazor() || this.parent.dataSourceSettings.mode === 'Server') {\n            PivotUtil.updateDataSourceSettings(this.parent, PivotUtil.getClonedDataSourceSettings(report));\n        }\n        else {\n            this.parent.setProperties({ dataSourceSettings: report }, true);\n        }\n        if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.allowDeferLayoutUpdate) {\n            this.parent.isRequiredUpdate = false;\n        }\n        try {\n            this.parent.updateDataSource(false);\n            var pivot = this.parent.getModuleName() === 'pivotfieldlist' ?\n                this.parent.pivotGridModule : this.parent;\n            if (!(isBlazor() && pivot && pivot.enableVirtualization) && (pivot && pivot.dataSourceSettings.mode !== 'Server')) {\n                this.endDialog();\n            }\n            else {\n                this.isRequireUpdate = true;\n            }\n            if (this.parent.getModuleName() === 'pivotfieldlist' &&\n                this.parent.renderMode === 'Fixed' && this.parent.allowDeferLayoutUpdate) {\n                this.parent.pivotChange = true;\n            }\n        }\n        catch (exception) {\n            this.showError();\n        }\n    };\n    /** @hidden */\n    CalculatedField.prototype.endDialog = function () {\n        this.isEdit = false;\n        if (this.dialog) {\n            this.dialog.close();\n        }\n        else {\n            this.inputObj.value = '';\n            this.currentFieldName = this.formatText = this.fieldText = this.formatType = null;\n            this.formulaText = this.fieldType = this.parentHierarchy = null;\n            /* tslint:disable:max-line-length */\n            var dialogElement = this.parent.isAdaptive ? this.parent.dialogRenderer.parentElement : this.dialog.element;\n            this.parent.dialogRenderer.parentElement.querySelector('.' + cls.CALCINPUT).value = '';\n            this.parent.dialogRenderer.parentElement.querySelector('#' + this.parentID + 'droppable').value = '';\n            this.parent.dialogRenderer.parentElement.querySelector('#' + this.parentID + 'Custom_Format_Element').value = '';\n            if (this.parent.dataType === 'olap') {\n                var customFormat = getInstance(dialogElement.querySelector('#' + this.parentID + 'Custom_Format_Element'), MaskedTextBox);\n                var formatDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Format_Div'), DropDownList);\n                var memberTypeDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Member_Type_Div'), DropDownList);\n                var hierarchyDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Hierarchy_List_Div'), DropDownList);\n                formatDrop.index = 0;\n                formatDrop.dataBind();\n                memberTypeDrop.index = 0;\n                memberTypeDrop.readonly = false;\n                memberTypeDrop.dataBind();\n                hierarchyDrop.index = 0;\n                hierarchyDrop.enabled = false;\n                hierarchyDrop.dataBind();\n                customFormat.enabled = false;\n                customFormat.dataBind();\n            }\n            /* tslint:enable:max-line-length */\n        }\n    };\n    /** @hidden */\n    CalculatedField.prototype.showError = function () {\n        if (this.parent.engineModule.fieldList[this.field]) {\n            delete this.parent.engineModule.fieldList[this.field];\n        }\n        this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('invalidFormula'));\n        if (isBlazor()) {\n            PivotUtil.updateDataSourceSettings(this.parent, PivotUtil.getClonedDataSourceSettings(this.existingReport));\n        }\n        else {\n            this.parent.setProperties({ dataSourceSettings: this.existingReport }, true);\n        }\n        if (this.isEdit) {\n            var calcFields = this.parent.dataSourceSettings.calculatedFieldSettings;\n            for (var i = 0; calcFields && i < calcFields.length; i++) {\n                if (calcFields[i].name === this.field) {\n                    calcFields[i].formula = this.currentFormula;\n                    break;\n                }\n            }\n        }\n        else if (this.parent.engineModule.fields) {\n            for (var i = 0; i < this.parent.engineModule.fields.length; i++) {\n                if (this.parent.engineModule.fields[i] === this.field) {\n                    this.parent.engineModule.fields.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this.parent.lastCalcFieldInfo = {};\n        this.parent.updateDataSource(false);\n        this.isFormula = false;\n    };\n    /**\n     * To get treeview data\n     * @param  {PivotGrid|PivotFieldList} parent\n     * @returns Object\n     */\n    CalculatedField.prototype.getFieldListData = function (parent) {\n        var fields = [];\n        if (this.parent.dataType === 'olap') {\n            /* tslint:disable-next-line:max-line-length */\n            fields = PivotUtil.getClonedData(parent.olapEngineModule.fieldListData ? parent.olapEngineModule.fieldListData : []);\n            for (var _i = 0, _a = fields; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.spriteCssClass &&\n                    (item.spriteCssClass.indexOf('e-attributeCDB-icon') > -1 ||\n                        item.spriteCssClass.indexOf('e-level-members') > -1)) {\n                    item.hasChildren = true;\n                }\n                else if (item.spriteCssClass &&\n                    (item.spriteCssClass.indexOf('e-namedSetCDB-icon') > -1)) {\n                    item.hasChildren = false;\n                }\n                else if (item.spriteCssClass &&\n                    (item.spriteCssClass.indexOf('e-calcMemberGroupCDB') > -1)) {\n                    item.expanded = this.isEdit;\n                }\n            }\n        }\n        else {\n            for (var _b = 0, _c = (parent.engineModule.fieldList ? Object.keys(parent.engineModule.fieldList) : []); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var type = null;\n                var typeVal = null;\n                if ((parent.engineModule.fieldList[key].type !== 'number' || parent.engineModule.fieldList[key].type === 'include' ||\n                    parent.engineModule.fieldList[key].type === 'exclude') &&\n                    (parent.engineModule.fieldList[key].aggregateType !== 'DistinctCount')) {\n                    typeVal = COUNT;\n                }\n                else {\n                    typeVal = parent.engineModule.fieldList[key].aggregateType !== undefined ?\n                        (parent.engineModule.fieldList[key].aggregateType) : SUM;\n                }\n                type = this.parent.localeObj.getConstant(typeVal);\n                fields.push({\n                    index: parent.engineModule.fieldList[key].index,\n                    name: parent.engineModule.fieldList[key].caption + ' (' + type + ')',\n                    type: typeVal,\n                    icon: cls.FORMAT + ' ' + cls.ICON,\n                    formula: parent.engineModule.fieldList[key].formula,\n                    field: key,\n                    caption: parent.engineModule.fieldList[key].caption ? parent.engineModule.fieldList[key].caption : key\n                });\n            }\n        }\n        return fields;\n    };\n    /**\n     * Triggers before menu opens.\n     * @param  {BeforeOpenCloseMenuEventArgs} args\n     * @returns void\n     */\n    /**\n     * Trigger while drop node in formula field.\n     * @param  {DragAndDropEventArgs} args\n     * @returns void\n     */\n    CalculatedField.prototype.fieldDropped = function (args) {\n        args.cancel = true;\n        var dropField = this.dialog.element.querySelector('#' + this.parentID + 'droppable');\n        removeClass([dropField], 'e-copy-drop');\n        removeClass([args.draggedNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.SELECTED_NODE_CLASS);\n        var field = args.draggedNode.getAttribute('data-field');\n        if (this.parent.dataType === 'olap') {\n            if (this.parent.olapEngineModule.fieldList[field] &&\n                this.parent.olapEngineModule.fieldList[field].isCalculatedField) {\n                field = this.parent.olapEngineModule.fieldList[field].tag;\n            }\n            if (args.target.id === this.parentID + 'droppable' && dropField.value === '') {\n                dropField.value = field;\n                dropField.focus();\n            }\n            else if (args.target.id === (this.parentID + 'droppable') && dropField.value !== '') {\n                var textCovered = void 0;\n                var currentValue = dropField.value;\n                var cursorPos = dropField.selectionStart;\n                var textAfterText = currentValue.substring(cursorPos, currentValue.length);\n                var textBeforeText = currentValue.substring(0, cursorPos);\n                textCovered = textBeforeText + field;\n                dropField.value = textBeforeText + field + textAfterText;\n                dropField.focus();\n                dropField.setSelectionRange(textCovered.length, textCovered.length);\n            }\n            else {\n                args.cancel = true;\n            }\n        }\n        else {\n            var type = args.draggedNode.getAttribute('data-type');\n            if (args.target.id === this.parentID + 'droppable' && dropField.value === '') {\n                if (type === CALC) {\n                    dropField.value = args.draggedNodeData.id.toString();\n                }\n                else {\n                    dropField.value = '\"' + type + '(' + field + ')' + '\"';\n                }\n                dropField.focus();\n            }\n            else if (args.target.id === (this.parentID + 'droppable') && dropField.value !== '') {\n                var textCovered = void 0;\n                var cursorPos = dropField.selectionStart;\n                var currentValue = dropField.value;\n                var textBeforeText = currentValue.substring(0, cursorPos);\n                var textAfterText = currentValue.substring(cursorPos, currentValue.length);\n                if (type === CALC) {\n                    textCovered = textBeforeText + args.draggedNodeData.id.toString();\n                    dropField.value = textBeforeText + args.draggedNodeData.id.toString() + textAfterText;\n                }\n                else {\n                    textCovered = textBeforeText + '\"' + type + '(' + field + ')' + '\"';\n                    dropField.value = textBeforeText + '\"' + type + '(' + field + ')' + '\"' + textAfterText;\n                }\n                dropField.focus();\n                dropField.setSelectionRange(textCovered.length, textCovered.length);\n            }\n            else {\n                args.cancel = true;\n            }\n        }\n    };\n    /**\n     * To create dialog.\n     * @returns void\n     */\n    CalculatedField.prototype.createDialog = function () {\n        var _this = this;\n        if (document.querySelector('#' + this.parentID + 'calculateddialog') !== null) {\n            remove(document.querySelector('#' + this.parentID + 'calculateddialog'));\n            while (!isNullOrUndefined(document.querySelector('.' + this.parentID + 'calculatedmenu'))) {\n                remove(document.querySelector('.' + this.parentID + 'calculatedmenu'));\n            }\n        }\n        this.parent.element.appendChild(createElement('div', {\n            id: this.parentID + 'calculateddialog',\n            className: cls.CALCDIALOG + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_CALCDIALOG : '')\n        }));\n        var calcButtons = [\n            {\n                click: this.applyFormula.bind(this),\n                buttonModel: {\n                    content: this.parent.localeObj.getConstant('ok'),\n                    isPrimary: true\n                }\n            },\n            {\n                click: this.cancelClick.bind(this),\n                buttonModel: {\n                    content: this.parent.localeObj.getConstant('cancel')\n                }\n            }\n        ];\n        if (this.parent.dataType === 'olap') {\n            var clearButton = {\n                click: this.clearFormula.bind(this),\n                buttonModel: {\n                    cssClass: 'e-calc-clear-btn',\n                    content: this.parent.localeObj.getConstant('clear'),\n                }\n            };\n            calcButtons.splice(0, 0, clearButton);\n        }\n        this.dialog = new Dialog({\n            allowDragging: true,\n            position: { X: 'center', Y: 'center' },\n            buttons: calcButtons,\n            close: this.closeDialog.bind(this),\n            beforeOpen: this.beforeOpen.bind(this),\n            open: function () {\n                if (_this.dialog.element.querySelector('#' + _this.parentID + 'ddlelement')) {\n                    _this.dialog.element.querySelector('#' + _this.parentID + 'ddlelement').focus();\n                }\n            },\n            animationSettings: { effect: 'Zoom' },\n            width: '25%',\n            isModal: false,\n            closeOnEscape: true,\n            enableRtl: this.parent.enableRtl,\n            showCloseIcon: true,\n            header: this.parent.localeObj.getConstant('createCalculatedField'),\n            target: document.body\n        });\n        this.dialog.isStringTemplate = true;\n        this.dialog.appendTo('#' + this.parentID + 'calculateddialog');\n    };\n    CalculatedField.prototype.cancelClick = function () {\n        this.dialog.close();\n        this.isEdit = false;\n    };\n    CalculatedField.prototype.beforeOpen = function (args) {\n        // this.dialog.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('createCalculatedField');\n        this.dialog.element.querySelector('.e-dlg-header').\n            setAttribute('title', this.parent.localeObj.getConstant('createCalculatedField'));\n    };\n    CalculatedField.prototype.closeDialog = function (args) {\n        if (this.parent.getModuleName() === 'pivotfieldlist') {\n            this.parent.axisFieldModule.render();\n            if (this.parent.renderMode !== 'Fixed') {\n                addClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n                this.parent.dialogRenderer.fieldListDialog.show();\n            }\n        }\n        this.treeObj.destroy();\n        this.dialog.destroy();\n        this.newFields = null;\n        if (this.menuObj && !this.menuObj.isDestroyed) {\n            this.menuObj.destroy();\n        }\n        remove(document.getElementById(this.parentID + 'calculateddialog'));\n        if (!isNullOrUndefined(document.querySelector('.' + this.parentID + 'calculatedmenu'))) {\n            remove(document.querySelector('.' + this.parentID + 'calculatedmenu'));\n        }\n        var timeOut = ((this.parent.getModuleName() === 'pivotview') ||\n            ((this.parent.getModuleName() === 'pivotfieldlist') &&\n                this.parent.renderMode === 'Fixed')) ? 0 : 500;\n        if (this.buttonCall) {\n            this.buttonCall = false;\n            setTimeout(this.setFocus.bind(this), timeOut);\n        }\n    };\n    CalculatedField.prototype.setFocus = function () {\n        var parentElement;\n        if (this.parent.getModuleName() === 'pivotview' && this.parent.element) {\n            parentElement = this.parent.element;\n        }\n        else if (document.getElementById(this.parent.element.id + '_Wrapper')) {\n            parentElement = document.getElementById(this.parent.element.id + '_Wrapper');\n        }\n        if (parentElement) {\n            var pivotButtons = [].slice.call(parentElement.querySelectorAll('.e-pivot-button'));\n            for (var _i = 0, pivotButtons_1 = pivotButtons; _i < pivotButtons_1.length; _i++) {\n                var item = pivotButtons_1[_i];\n                if (item.getAttribute('data-uid') === this.currentFieldName) {\n                    item.focus();\n                    break;\n                }\n            }\n        }\n    };\n    /* tslint:disable:max-line-length */\n    /**\n     * To render dialog elements.\n     * @returns void\n     */\n    CalculatedField.prototype.renderDialogElements = function () {\n        var outerDiv = createElement('div', {\n            id: this.parentID + 'outerDiv',\n            className: (this.parent.dataType === 'olap' ? cls.OLAP_CALCOUTERDIV + ' ' : '') + cls.CALCOUTERDIV\n        });\n        var olapFieldTreeDiv = createElement('div', { id: this.parentID + 'Olap_Tree_Div', className: 'e-olap-field-tree-div' });\n        var olapCalcDiv = createElement('div', { id: this.parentID + 'Olap_Calc_Div', className: 'e-olap-calculated-div' });\n        if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.\n            dialogRenderer.parentElement.querySelector('.' + cls.FORMULA) !== null && this.parent.isAdaptive) {\n            var accordDiv = createElement('div', { id: this.parentID + 'accordDiv', className: cls.CALCACCORD });\n            outerDiv.appendChild(accordDiv);\n            var buttonDiv = createElement('div', { id: this.parentID + 'buttonDiv', className: cls.CALCBUTTONDIV });\n            var addBtn = createElement('button', {\n                id: this.parentID + 'addBtn', innerHTML: this.parent.localeObj.getConstant('add'),\n                className: cls.CALCADDBTN, attrs: { 'type': 'button' }\n            });\n            var cancelBtn = createElement('button', {\n                id: this.parentID + 'cancelBtn', innerHTML: this.parent.localeObj.getConstant('cancel'),\n                className: cls.CALCCANCELBTN, attrs: { 'type': 'button' }\n            });\n            buttonDiv.appendChild(cancelBtn);\n            buttonDiv.appendChild(addBtn);\n            outerDiv.appendChild(buttonDiv);\n        }\n        else {\n            if (!this.parent.isAdaptive && this.parent.dataType === 'olap') {\n                var formulaTitle = createElement('div', {\n                    className: cls.PIVOT_FIELD_TITLE_CLASS, id: this.parentID + '_' + 'FieldNameTitle',\n                    innerHTML: this.parent.localeObj.getConstant('fieldTitle')\n                });\n                olapCalcDiv.appendChild(formulaTitle);\n            }\n            var inputDiv = createElement('div', { id: this.parentID + 'outerDiv', className: cls.CALCINPUTDIV });\n            var inputObj = createElement('input', {\n                id: this.parentID + 'ddlelement',\n                attrs: { 'type': 'text' },\n                className: cls.CALCINPUT\n            });\n            inputDiv.appendChild(inputObj);\n            (this.parent.dataType === 'olap' && !this.parent.isAdaptive ? olapCalcDiv.appendChild(inputDiv) : outerDiv.appendChild(inputDiv));\n            var wrapDiv = createElement('div', { id: this.parentID + 'control_wrapper', className: cls.TREEVIEWOUTER });\n            if (!this.parent.isAdaptive) {\n                var fieldTitle = createElement('div', {\n                    className: cls.PIVOT_ALL_FIELD_TITLE_CLASS,\n                    innerHTML: (this.parent.dataType === 'olap' ? this.parent.localeObj.getConstant('allFields') :\n                        this.parent.localeObj.getConstant('formulaField'))\n                });\n                if (this.parent.dataType === 'olap') {\n                    var headerWrapperDiv = createElement('div', { className: cls.PIVOT_ALL_FIELD_TITLE_CLASS + '-wrapper' });\n                    headerWrapperDiv.appendChild(fieldTitle);\n                    var spanElement = createElement('span', {\n                        attrs: {\n                            'tabindex': '0',\n                            'aria-disabled': 'false',\n                            'aria-label': this.parent.localeObj.getConstant('fieldTooltip'),\n                        },\n                        className: cls.ICON + ' ' + cls.CALC_INFO\n                    });\n                    headerWrapperDiv.appendChild(spanElement);\n                    var tooltip = new Tooltip({\n                        content: this.parent.localeObj.getConstant('fieldTooltip'),\n                        position: (this.parent.enableRtl ? 'RightCenter' : 'LeftCenter'),\n                        target: '.' + cls.CALC_INFO,\n                        offsetY: (this.parent.enableRtl ? -10 : -10),\n                        width: 220\n                    });\n                    tooltip.appendTo(headerWrapperDiv);\n                    wrapDiv.appendChild(headerWrapperDiv);\n                }\n                else {\n                    outerDiv.appendChild(fieldTitle);\n                }\n            }\n            var treeOuterDiv = createElement('div', { className: cls.TREEVIEW + '-outer-div' });\n            wrapDiv.appendChild(treeOuterDiv);\n            treeOuterDiv.appendChild(createElement('div', { id: this.parentID + 'tree', className: cls.TREEVIEW }));\n            (this.parent.dataType === 'olap' && !this.parent.isAdaptive ? olapFieldTreeDiv.appendChild(wrapDiv) : outerDiv.appendChild(wrapDiv));\n            if (!this.parent.isAdaptive) {\n                var formulaTitle = createElement('div', {\n                    className: cls.PIVOT_FORMULA_TITLE_CLASS,\n                    innerHTML: (this.parent.dataType === 'olap' ? this.parent.localeObj.getConstant('expressionField') :\n                        this.parent.localeObj.getConstant('formula'))\n                });\n                (this.parent.dataType === 'olap' ? olapCalcDiv.appendChild(formulaTitle) : outerDiv.appendChild(formulaTitle));\n            }\n            var dropDiv = createElement('textarea', {\n                id: this.parentID + 'droppable',\n                className: cls.FORMULA,\n                attrs: {\n                    'placeholder': this.parent.isAdaptive ? this.parent.localeObj.getConstant('dropTextMobile') :\n                        (this.parent.dataType === 'olap' ? this.parent.localeObj.getConstant('olapDropText') :\n                            this.parent.localeObj.getConstant('dropText'))\n                }\n            });\n            (this.parent.dataType === 'olap' && !this.parent.isAdaptive ? olapCalcDiv.appendChild(dropDiv) : outerDiv.appendChild(dropDiv));\n            if (this.parent.isAdaptive) {\n                var buttonDiv = createElement('div', { id: this.parentID + 'buttonDiv', className: cls.CALCBUTTONDIV });\n                var okBtn = createElement('button', {\n                    id: this.parentID + 'okBtn', innerHTML: this.parent.localeObj.getConstant('apply'),\n                    className: cls.CALCOKBTN, attrs: { 'type': 'button' }\n                });\n                buttonDiv.appendChild(okBtn);\n                outerDiv.appendChild(buttonDiv);\n            }\n            if (this.parent.dataType === 'olap') {\n                if (!this.parent.isAdaptive) {\n                    var memberTypeTitle = createElement('div', {\n                        className: cls.OLAP_MEMBER_TITLE_CLASS,\n                        innerHTML: this.parent.localeObj.getConstant('memberType')\n                    });\n                    olapCalcDiv.appendChild(memberTypeTitle);\n                }\n                var memberTypeDrop = createElement('div', { id: this.parentID + 'Member_Type_Div', className: cls.CALC_MEMBER_TYPE_DIV });\n                (this.parent.isAdaptive ? outerDiv.appendChild(memberTypeDrop) : olapCalcDiv.appendChild(memberTypeDrop));\n                if (!this.parent.isAdaptive) {\n                    var hierarchyTitle = createElement('div', {\n                        className: cls.OLAP_HIERARCHY_TITLE_CLASS,\n                        innerHTML: this.parent.localeObj.getConstant('selectedHierarchy')\n                    });\n                    olapCalcDiv.appendChild(hierarchyTitle);\n                }\n                var hierarchyDrop = createElement('div', { id: this.parentID + 'Hierarchy_List_Div', className: cls.CALC_HIERARCHY_LIST_DIV });\n                (this.parent.isAdaptive ? outerDiv.appendChild(hierarchyDrop) : olapCalcDiv.appendChild(hierarchyDrop));\n                if (!this.parent.isAdaptive) {\n                    var formatTitle = createElement('div', {\n                        className: cls.OLAP_FORMAT_TITLE_CLASS,\n                        innerHTML: this.parent.localeObj.getConstant('formatString')\n                    });\n                    olapCalcDiv.appendChild(formatTitle);\n                }\n                var formatDrop = createElement('div', { id: this.parentID + 'Format_Div', className: cls.CALC_FORMAT_TYPE_DIV });\n                (this.parent.isAdaptive ? outerDiv.appendChild(formatDrop) : olapCalcDiv.appendChild(formatDrop));\n                var customFormatDiv = createElement('div', { id: this.parentID + 'custom_Format_Div', className: cls.OLAP_CALC_CUSTOM_FORMAT_INPUTDIV });\n                var customFormatObj = createElement('input', {\n                    id: this.parentID + 'Custom_Format_Element',\n                    attrs: { 'type': 'text' },\n                    className: cls.CALC_FORMAT_INPUT\n                });\n                customFormatDiv.appendChild(customFormatObj);\n                olapCalcDiv.appendChild(customFormatDiv);\n                (this.parent.isAdaptive ? outerDiv.appendChild(customFormatDiv) : olapCalcDiv.appendChild(customFormatDiv));\n                if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.\n                    dialogRenderer.parentElement.querySelector('.' + cls.FORMULA) === null && this.parent.isAdaptive) {\n                    var okBtn = outerDiv.querySelector('.' + cls.CALCOKBTN);\n                    outerDiv.appendChild(okBtn);\n                }\n                else {\n                    outerDiv.appendChild(olapFieldTreeDiv);\n                    outerDiv.appendChild(olapCalcDiv);\n                }\n            }\n            else {\n                var customFormatDiv = createElement('div', { id: this.parentID + 'custom_Format_Div', className: cls.CALC_CUSTOM_FORMAT_INPUTDIV });\n                if (!this.parent.isAdaptive) {\n                    var formatTitle = createElement('div', {\n                        className: cls.OLAP_FORMAT_TITLE_CLASS,\n                        innerHTML: this.parent.localeObj.getConstant('formatString')\n                    });\n                    customFormatDiv.appendChild(formatTitle);\n                }\n                var customFormatObj = createElement('input', {\n                    id: this.parentID + 'Custom_Format_Element',\n                    attrs: { 'type': 'text' },\n                    className: cls.CALC_FORMAT_INPUT\n                });\n                customFormatDiv.appendChild(customFormatObj);\n                (this.parent.isAdaptive ? outerDiv.insertBefore(customFormatDiv, outerDiv.querySelector('#' + this.parentID + 'buttonDiv')) : outerDiv.appendChild(customFormatDiv));\n            }\n        }\n        return outerDiv;\n    };\n    /**\n     * To create calculated field adaptive layout.\n     * @returns void\n     */\n    CalculatedField.prototype.renderAdaptiveLayout = function (isEdit) {\n        var dialogElement = this.parent.dialogRenderer.adaptiveElement;\n        if (isEdit) {\n            if (dialogElement.element.querySelector('#' + this.parentID + 'droppable')) {\n                this.formulaText = document.querySelector('#' + this.parentID + 'droppable').value;\n                this.fieldText = this.inputObj.value;\n            }\n            if (dialogElement.element.querySelector('.' + cls.CALC_MEMBER_TYPE_DIV)) {\n                var memberTypeDrop = getInstance(dialogElement.element.querySelector('#' + this.parentID + 'Member_Type_Div'), DropDownList);\n                this.fieldType = memberTypeDrop.value;\n            }\n            if (dialogElement.element.querySelector('.' + cls.CALC_HIERARCHY_LIST_DIV)) {\n                var hierarchyDrop = getInstance(dialogElement.element.querySelector('#' + this.parentID + 'Hierarchy_List_Div'), DropDownList);\n                this.parentHierarchy = this.fieldType === 'Dimension' ? hierarchyDrop.value : null;\n            }\n            if (dialogElement.element.querySelector('.' + cls.CALC_FORMAT_TYPE_DIV)) {\n                var formatDrop = getInstance(dialogElement.element.querySelector('#' + this.parentID + 'Format_Div'), DropDownList);\n                this.formatType = formatDrop.value;\n            }\n            if (dialogElement.element.querySelector('.' + cls.CALC_FORMAT_INPUT)) {\n                var customFormat = getInstance(dialogElement.element.querySelector('#' + this.parentID + 'Custom_Format_Element'), MaskedTextBox);\n                this.formatText = this.parent.dataType === 'olap' ? this.formatType === 'Custom' ? customFormat.value : null : customFormat.value;\n            }\n        }\n        else {\n            this.currentFieldName = this.formulaText = this.fieldText = this.formatText = null;\n            this.fieldType = this.formatType = this.parentHierarchy = null;\n        }\n        this.renderMobileLayout(dialogElement);\n    };\n    /**\n     * To update calculated field info in adaptive layout.\n     * @returns void\n     */\n    CalculatedField.prototype.updateAdaptiveCalculatedField = function (isEdit, fieldName) {\n        var dialogElement = this.parent.dialogRenderer.adaptiveElement.element;\n        this.isEdit = isEdit;\n        var calcInfo = (isEdit ? (this.parent.dataType === 'pivot' ?\n            this.parent.engineModule.fieldList[fieldName] : this.parent.olapEngineModule.fieldList[fieldName]) :\n            {\n                id: null, caption: null, formula: null, fieldType: 'Measure',\n                formatString: (this.parent.dataType === 'pivot' ? null : 'Standard'), parentHierarchy: null\n            });\n        this.currentFieldName = calcInfo.id;\n        if (dialogElement.querySelector('#' + this.parentID + 'droppable')) {\n            this.formulaText = document.querySelector('#' + this.parentID + 'droppable').value = calcInfo.formula;\n            this.fieldText = this.inputObj.value = calcInfo.caption;\n            this.inputObj.dataBind();\n        }\n        if (dialogElement.querySelector('.' + cls.CALC_MEMBER_TYPE_DIV)) {\n            var memberTypeDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Member_Type_Div'), DropDownList);\n            this.fieldType = memberTypeDrop.value = calcInfo.fieldType;\n            memberTypeDrop.readonly = isEdit ? true : false;\n            memberTypeDrop.dataBind();\n        }\n        if (dialogElement.querySelector('.' + cls.CALC_HIERARCHY_LIST_DIV)) {\n            var hierarchyDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Hierarchy_List_Div'), DropDownList);\n            if (this.fieldType === 'Dimension') {\n                this.parentHierarchy = hierarchyDrop.value = calcInfo.parentHierarchy;\n            }\n            else {\n                this.parentHierarchy = null;\n                hierarchyDrop.index = 0;\n            }\n            hierarchyDrop.dataBind();\n        }\n        if (dialogElement.querySelector('.' + cls.CALC_FORMAT_TYPE_DIV)) {\n            var formatStringData = ['Standard', 'Currency', 'Percent'];\n            var formatDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Format_Div'), DropDownList);\n            this.formatType = formatDrop.value = (formatStringData.indexOf(calcInfo.formatString) > -1 ? calcInfo.formatString : 'Custom');\n        }\n        if (dialogElement.querySelector('.' + cls.CALC_FORMAT_INPUT)) {\n            var customFormat = getInstance(dialogElement.querySelector('#' + this.parentID + 'Custom_Format_Element'), MaskedTextBox);\n            var formatObj = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.formatSettings);\n            if (this.parent.dataType === 'pivot') {\n                this.formatText = customFormat.value = formatObj ? formatObj.format : null;\n            }\n            else {\n                this.formatText = customFormat.value = (this.formatType === 'Custom' ? calcInfo.formatString : null);\n            }\n            customFormat.dataBind();\n        }\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * To create treeview.\n     * @returns void\n     */\n    CalculatedField.prototype.createOlapDropElements = function () {\n        var _this = this;\n        var dialogElement = (this.parent.isAdaptive ?\n            this.parent.dialogRenderer.parentElement : this.dialog.element);\n        var mData = [];\n        var fData = [];\n        var fieldData = [];\n        var memberTypeData = ['Measure', 'Dimension'];\n        var formatStringData = ['Standard', 'Currency', 'Percent', 'Custom'];\n        for (var _i = 0, memberTypeData_1 = memberTypeData; _i < memberTypeData_1.length; _i++) {\n            var type = memberTypeData_1[_i];\n            mData.push({ value: type, text: this.parent.localeObj.getConstant(type) });\n        }\n        for (var _a = 0, formatStringData_1 = formatStringData; _a < formatStringData_1.length; _a++) {\n            var format = formatStringData_1[_a];\n            fData.push({ value: format, text: this.parent.localeObj.getConstant(format) });\n        }\n        var fields = PivotUtil.getClonedData(this.parent.olapEngineModule.fieldListData);\n        for (var _b = 0, _c = fields; _b < _c.length; _b++) {\n            var item = _c[_b];\n            if (item.spriteCssClass &&\n                (item.spriteCssClass.indexOf('e-attributeCDB-icon') > -1 ||\n                    item.spriteCssClass.indexOf('e-hierarchyCDB-icon') > -1)) {\n                fieldData.push({ value: item.id, text: item.caption });\n            }\n        }\n        var memberTypeObj = new DropDownList({\n            dataSource: mData, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' },\n            value: this.fieldType !== null ? this.fieldType : mData[0].value,\n            readonly: this.isEdit,\n            cssClass: cls.MEMBER_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                hierarchyListObj.enabled = args.value === 'Dimension' ? true : false;\n                _this.fieldType = args.value;\n                _this.formulaText = document.querySelector('#' + _this.parentID + 'droppable').value;\n                hierarchyListObj.dataBind();\n            }\n        });\n        memberTypeObj.isStringTemplate = true;\n        memberTypeObj.appendTo(dialogElement.querySelector('#' + this.parentID + 'Member_Type_Div'));\n        var hierarchyListObj = new DropDownList({\n            dataSource: fieldData, enableRtl: this.parent.enableRtl,\n            allowFiltering: true,\n            enabled: memberTypeObj.value === 'Dimension' ? true : false,\n            filterBarPlaceholder: this.parent.localeObj.getConstant('example') + ' ' + fieldData[0].text.toString(),\n            fields: { value: 'value', text: 'text' },\n            value: this.parentHierarchy !== null && memberTypeObj.value === 'Dimension' ?\n                this.parentHierarchy : fieldData[0].value,\n            cssClass: cls.MEMBER_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                _this.parentHierarchy = args.value;\n                _this.formulaText = document.querySelector('#' + _this.parentID + 'droppable').value;\n            }\n        });\n        hierarchyListObj.isStringTemplate = true;\n        hierarchyListObj.appendTo(dialogElement.querySelector('#' + this.parentID + 'Hierarchy_List_Div'));\n        var formatStringObj = new DropDownList({\n            dataSource: fData, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' },\n            value: this.formatType !== null ? this.formatType : fData[0].value,\n            cssClass: cls.MEMBER_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                customerFormatObj.enabled = args.value === 'Custom' ? true : false;\n                _this.formatType = args.value;\n                _this.formulaText = document.querySelector('#' + _this.parentID + 'droppable').value;\n                customerFormatObj.dataBind();\n            }\n        });\n        formatStringObj.isStringTemplate = true;\n        formatStringObj.appendTo(dialogElement.querySelector('#' + this.parentID + 'Format_Div'));\n        var customerFormatObj = new MaskedTextBox({\n            placeholder: this.parent.localeObj.getConstant('customFormat'),\n            value: this.formatText !== null && formatStringObj.value === 'Custom' ? this.formatText : null,\n            enabled: formatStringObj.value === 'Custom' ? true : false,\n            change: function (args) {\n                _this.formatText = args.value;\n                _this.formulaText = document.querySelector('#' + _this.parentID + 'droppable').value;\n            }\n        });\n        customerFormatObj.isStringTemplate = true;\n        customerFormatObj.appendTo('#' + this.parentID + 'Custom_Format_Element');\n    };\n    /**\n     * To create treeview.\n     * @returns void\n     */\n    CalculatedField.prototype.createTreeView = function () {\n        var _this = this;\n        if (this.parent.dataType === 'olap') {\n            this.treeObj = new TreeView({\n                /* tslint:disable-next-line:max-line-length */\n                fields: { dataSource: this.getFieldListData(this.parent), id: 'id', text: 'caption', parentID: 'pid', iconCss: 'spriteCssClass' },\n                allowDragAndDrop: true,\n                enableRtl: this.parent.enableRtl,\n                nodeDragStart: this.dragStart.bind(this),\n                nodeDragging: function (e) {\n                    if (e.event.target && e.event.target.classList.contains(cls.FORMULA)) {\n                        removeClass([e.clonedNode], cls.NO_DRAG_CLASS);\n                        addClass([e.event.target], 'e-copy-drop');\n                    }\n                    else {\n                        addClass([e.clonedNode], cls.NO_DRAG_CLASS);\n                        removeClass([e.event.target], 'e-copy-drop');\n                        e.dropIndicator = 'e-no-drop';\n                        addClass([e.clonedNode.querySelector('.' + cls.ICON)], 'e-icon-expandable');\n                        removeClass([e.clonedNode.querySelector('.' + cls.ICON)], 'e-list-icon');\n                    }\n                },\n                nodeClicked: this.fieldClickHandler.bind(this),\n                nodeSelected: function (args) {\n                    if (args.node.getAttribute('data-type') === CALC) {\n                        _this.displayMenu(args.node);\n                    }\n                    else {\n                        removeClass([args.node], 'e-active');\n                        args.cancel = true;\n                    }\n                },\n                nodeDragStop: this.fieldDropped.bind(this),\n                drawNode: this.drawTreeNode.bind(this),\n                nodeExpanding: this.updateNodeIcon.bind(this),\n                nodeCollapsed: this.updateNodeIcon.bind(this),\n                sortOrder: 'None'\n            });\n        }\n        else {\n            this.treeObj = new TreeView({\n                fields: { dataSource: this.getFieldListData(this.parent), id: 'formula', text: 'name', iconCss: 'icon' },\n                allowDragAndDrop: true,\n                enableRtl: this.parent.enableRtl,\n                nodeCollapsing: this.nodeCollapsing.bind(this),\n                nodeDragStart: this.dragStart.bind(this),\n                nodeClicked: this.fieldClickHandler.bind(this),\n                nodeDragStop: this.fieldDropped.bind(this),\n                drawNode: this.drawTreeNode.bind(this),\n                keyPress: function (args) {\n                    if (args.event.keyCode === 39) {\n                        args.cancel = true;\n                    }\n                },\n                sortOrder: 'Ascending'\n            });\n        }\n        this.treeObj.isStringTemplate = true;\n        this.treeObj.appendTo('#' + this.parentID + 'tree');\n    };\n    CalculatedField.prototype.updateNodeIcon = function (args) {\n        if (args.node && args.node.querySelector('.e-list-icon') &&\n            args.node.querySelector('.e-icon-expandable.e-process') &&\n            (args.node.querySelector('.e-list-icon').className.indexOf('e-folderCDB-icon') > -1)) {\n            var node = args.node.querySelector('.e-list-icon');\n            removeClass([node], 'e-folderCDB-icon');\n            addClass([node], 'e-folderCDB-open-icon');\n        }\n        else if (args.node && args.node.querySelector('.e-list-icon') &&\n            args.node.querySelector('.e-icon-expandable') &&\n            (args.node.querySelector('.e-list-icon').className.indexOf('e-folderCDB-open-icon') > -1)) {\n            var node = args.node.querySelector('.e-list-icon');\n            removeClass([node], 'e-folderCDB-open-icon');\n            addClass([node], 'e-folderCDB-icon');\n        }\n        else {\n            var curTreeData = this.treeObj.fields.dataSource;\n            var fieldListData = curTreeData;\n            var childNodes = [];\n            for (var _i = 0, fieldListData_1 = fieldListData; _i < fieldListData_1.length; _i++) {\n                var item = fieldListData_1[_i];\n                if (item.pid === args.nodeData.id.toString()) {\n                    childNodes.push(item);\n                }\n            }\n            if (childNodes.length === 0) {\n                this.parent.olapEngineModule.calcChildMembers = [];\n                this.parent.olapEngineModule.getCalcChildMembers(this.parent.dataSourceSettings, args.nodeData.id.toString());\n                childNodes = this.parent.olapEngineModule.calcChildMembers;\n                this.parent.olapEngineModule.calcChildMembers = [];\n                for (var _a = 0, childNodes_1 = childNodes; _a < childNodes_1.length; _a++) {\n                    var node = childNodes_1[_a];\n                    node.pid = args.nodeData.id.toString();\n                    node.hasChildren = false;\n                    node.spriteCssClass = 'e-level-members';\n                    node.caption = (node.caption === '' ? this.parent.localeObj.getConstant('blank') : node.caption);\n                    curTreeData.push(node);\n                }\n                this.treeObj.addNodes(childNodes, args.node);\n            }\n            else {\n                return;\n            }\n        }\n    };\n    CalculatedField.prototype.nodeCollapsing = function (args) {\n        args.cancel = true;\n    };\n    CalculatedField.prototype.dragStart = function (args) {\n        var isDrag = false;\n        var dragItem = args.clonedNode;\n        if (dragItem && ((this.parent.dataType === 'olap' &&\n            (dragItem.querySelector('.e-calc-dimension-icon,.e-calc-measure-icon,.e-measure-icon') ||\n                dragItem.querySelector('.e-dimensionCDB-icon,.e-attributeCDB-icon,.e-hierarchyCDB-icon') ||\n                dragItem.querySelector('.e-level-members,.e-namedSetCDB-icon'))) || (this.parent.dataType === 'pivot' &&\n            args.event.target.classList.contains(cls.DRAG_CLASS)))) {\n            isDrag = true;\n        }\n        if (isDrag) {\n            addClass([args.draggedNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.SELECTED_NODE_CLASS);\n            addClass([dragItem], cls.PIVOTCALC);\n            dragItem.style.zIndex = (this.dialog.zIndex + 1).toString();\n            dragItem.style.display = 'inline';\n        }\n        else {\n            args.cancel = true;\n        }\n    };\n    /**\n     * Trigger before treeview text append.\n     * @param  {DrawNodeEventArgs} args\n     * @returns void\n     */\n    CalculatedField.prototype.drawTreeNode = function (args) {\n        if (this.parent.dataType === 'olap') {\n            if (args.node.querySelector('.e-measure-icon')) {\n                args.node.querySelector('.e-list-icon').style.display = 'none';\n            }\n            var field = args.nodeData;\n            args.node.setAttribute('data-field', field.id);\n            args.node.setAttribute('data-caption', field.caption);\n            var liTextElement = args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS);\n            if (args.nodeData && args.nodeData.type === CALC &&\n                liTextElement && args.node.querySelector('.e-list-icon.e-calc-member')) {\n                args.node.setAttribute('data-type', field.type);\n                args.node.setAttribute('data-membertype', field.fieldType);\n                args.node.setAttribute('data-hierarchy', field.parentHierarchy ? field.parentHierarchy : '');\n                args.node.setAttribute('data-formula', field.formula);\n                var formatStringData = ['Standard', 'Currency', 'Percent'];\n                var formatString = void 0;\n                formatString = (field.formatString ? formatStringData.indexOf(field.formatString) > -1 ?\n                    field.formatString : 'Custom' : '');\n                args.node.setAttribute('data-formatString', formatString);\n                args.node.setAttribute('data-customString', (formatString === 'Custom' ? field.formatString : ''));\n                var removeElement = createElement('span', {\n                    className: cls.GRID_REMOVE + ' e-icons e-list-icon'\n                });\n                liTextElement.classList.add('e-calcfieldmember');\n                if (this.parent.isAdaptive) {\n                    var editElement = createElement('span', {\n                        className: 'e-list-edit-icon' + (this.isEdit && this.currentFieldName === field.id ?\n                            ' e-edited ' : ' e-edit ') + cls.ICON\n                    });\n                    var editWrapper = createElement('div', { className: 'e-list-header-icon' });\n                    editWrapper.appendChild(editElement);\n                    editWrapper.appendChild(removeElement);\n                    liTextElement.appendChild(editWrapper);\n                }\n                else {\n                    liTextElement.appendChild(removeElement);\n                }\n            }\n            if (this.parent.isAdaptive) {\n                var liTextElement_1 = args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS);\n                if (args.node && args.node.querySelector('.e-list-icon') && liTextElement_1) {\n                    var liIconElement = args.node.querySelector('.e-list-icon');\n                    liTextElement_1.insertBefore(liIconElement, args.node.querySelector('.e-list-text'));\n                }\n                if (args.node && args.node.querySelector('.e-calcMemberGroupCDB,.e-measureGroupCDB-icon,.e-folderCDB-icon')) {\n                    args.node.querySelector('.e-checkbox-wrapper').style.display = 'none';\n                }\n                if (args.node && args.node.querySelector('.e-level-members')) {\n                    args.node.querySelector('.e-list-icon').style.display = 'none';\n                }\n            }\n        }\n        else {\n            var field = args.nodeData.field;\n            args.node.setAttribute('data-field', field);\n            args.node.setAttribute('data-caption', args.nodeData.caption);\n            args.node.setAttribute('data-type', args.nodeData.type);\n            var formatObj = PivotUtil.getFieldByName(field, this.parent.dataSourceSettings.formatSettings);\n            args.node.setAttribute('data-formatString', formatObj ? formatObj.format : '');\n            var dragElement = createElement('span', {\n                attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('dragField') },\n                className: cls.ICON + ' e-drag'\n            });\n            var spaceElement = createElement('div', {\n                className: ' e-iconspace'\n            });\n            prepend([dragElement], args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS));\n            /* tslint:disable-next-line:max-line-length */\n            append([spaceElement, args.node.querySelector('.' + cls.FORMAT)], args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS));\n            if (this.getMenuItems(this.parent.engineModule.fieldList[field].type).length <= 0) {\n                removeClass([args.node.querySelector('.' + cls.FORMAT)], cls.ICON);\n            }\n            else {\n                args.node.querySelector('.' + cls.FORMAT).setAttribute('title', this.parent.localeObj.getConstant('format'));\n            }\n            if (this.parent.engineModule.fieldList[field].aggregateType === CALC) {\n                args.node.querySelector('.' + cls.FORMAT).setAttribute('title', this.parent.localeObj.getConstant('remove'));\n                addClass([args.node.querySelector('.' + cls.FORMAT)], cls.GRID_REMOVE);\n                addClass([args.node.querySelector('.' + 'e-iconspace')], [cls.CALC_EDIT, cls.ICON, 'e-list-icon']);\n                args.node.querySelector('.' + cls.CALC_EDIT).setAttribute('title', this.parent.localeObj.getConstant('edit'));\n                args.node.querySelector('.' + cls.CALC_EDIT).setAttribute('aria-disabled', 'false');\n                args.node.querySelector('.' + cls.CALC_EDIT).setAttribute('tabindex', '-1');\n                removeClass([args.node.querySelector('.' + cls.FORMAT)], cls.FORMAT);\n                removeClass([args.node.querySelector('.e-iconspace')], 'e-iconspace');\n            }\n        }\n    };\n    /**\n     * To create radio buttons.\n     * @param  {string} key\n     * @returns HTMLElement\n     */\n    CalculatedField.prototype.createTypeContainer = function (key) {\n        var wrapDiv = createElement('div', { id: this.parentID + 'control_wrapper', className: cls.TREEVIEWOUTER });\n        var type = this.getMenuItems(this.parent.engineModule.fieldList[key].type);\n        for (var i = 0; i < type.length; i++) {\n            var input = createElement('input', {\n                id: this.parentID + 'radio' + key + type[i],\n                attrs: { 'type': 'radio', 'data-ftxt': key, 'data-value': type[i] },\n                className: cls.CALCRADIO\n            });\n            wrapDiv.appendChild(input);\n        }\n        return wrapDiv;\n    };\n    CalculatedField.prototype.getMenuItems = function (fieldType, summaryType) {\n        var menuItems = !isNullOrUndefined(summaryType) ? summaryType : this.parent.aggregateTypes;\n        var type = [];\n        var menuTypes = this.getValidSummaryType();\n        for (var i = 0; i < menuItems.length; i++) {\n            if ((menuTypes.indexOf(menuItems[i]) > -1) && (type.indexOf(menuItems[i]) < 0)) {\n                if (((menuItems[i] === COUNT || menuItems[i] === DISTINCTCOUNT) && fieldType !== 'number')\n                    || (fieldType === 'number')) {\n                    type.push(menuItems[i]);\n                }\n            }\n        }\n        return type;\n    };\n    CalculatedField.prototype.getValidSummaryType = function () {\n        return [COUNT, DISTINCTCOUNT, SUM, AVG,\n            MIN, MAX, PRODUCT, STDEV, STDEVP,\n            VAR, VARP];\n    };\n    /**\n     * To get Accordion Data.\n     * @param  {PivotView | PivotFieldList} parent\n     * @returns AccordionItemModel\n     */\n    CalculatedField.prototype.getAccordionData = function (parent) {\n        var data = [];\n        var keys = Object.keys(parent.engineModule.fieldList);\n        for (var index = 0, i = keys.length; index < i; index++) {\n            var key = keys[index];\n            data.push({\n                header: '<input id=' + this.parentID + '_' + index + ' class=' + cls.CALCCHECK + ' type=\"checkbox\" data-field=' +\n                    key + ' data-caption=' + this.parent.engineModule.fieldList[key].caption + ' data-type=' +\n                    this.parent.engineModule.fieldList[key].type + '/>',\n                content: (this.parent.engineModule.fieldList[key].aggregateType === CALC ||\n                    (this.getMenuItems(this.parent.engineModule.fieldList[key].type).length < 1)) ? '' :\n                    this.createTypeContainer(key).outerHTML,\n                iconCss: this.parent.engineModule.fieldList[key].aggregateType === CALC ? 'e-list-icon' + ' ' +\n                    (this.isEdit && this.currentFieldName === key ? 'e-edited' : 'e-edit') : ''\n            });\n        }\n        return data;\n    };\n    /**\n     * To render mobile layout.\n     * @param  {Tab} tabObj\n     * @returns void\n     */\n    CalculatedField.prototype.renderMobileLayout = function (tabObj) {\n        var _this = this;\n        tabObj.items[4].content = this.renderDialogElements().outerHTML;\n        tabObj.dataBind();\n        if (this.parent.dataType === 'olap' && this.parent.isAdaptive && this.parent.\n            dialogRenderer.parentElement.querySelector('.' + cls.FORMULA) !== null) {\n            this.createOlapDropElements();\n        }\n        var cancelBtn = new Button({ cssClass: cls.FLAT, isPrimary: true });\n        cancelBtn.isStringTemplate = true;\n        cancelBtn.appendTo('#' + this.parentID + 'cancelBtn');\n        if (cancelBtn.element) {\n            cancelBtn.element.onclick = this.cancelBtnClick.bind(this);\n        }\n        if (this.parent.\n            dialogRenderer.parentElement.querySelector('.' + cls.FORMULA) !== null && this.parent.isAdaptive) {\n            var okBtn = new Button({ cssClass: cls.FLAT + ' ' + cls.OUTLINE_CLASS, isPrimary: true });\n            okBtn.isStringTemplate = true;\n            okBtn.appendTo('#' + this.parentID + 'okBtn');\n            this.inputObj = new MaskedTextBox({\n                placeholder: this.parent.localeObj.getConstant('fieldName'),\n                change: function (args) {\n                    _this.fieldText = args.value;\n                    _this.formulaText = document.querySelector('#' + _this.parentID + 'droppable').value;\n                }\n            });\n            this.inputObj.isStringTemplate = true;\n            this.inputObj.appendTo('#' + this.parentID + 'ddlelement');\n            if (this.parent.dataType === 'pivot') {\n                var formatInputObj = new MaskedTextBox({\n                    placeholder: this.parent.localeObj.getConstant('numberFormatString'),\n                    change: function (args) {\n                        _this.formatText = args.value;\n                        _this.formulaText = document.querySelector('#' + _this.parentID + 'droppable').value;\n                    }\n                });\n                formatInputObj.isStringTemplate = true;\n                formatInputObj.appendTo('#' + this.parentID + 'Custom_Format_Element');\n                if (this.formatText !== null && this.parent.\n                    dialogRenderer.parentElement.querySelector('.' + cls.CALC_FORMAT_INPUT) !== null) {\n                    this.parent.\n                        /* tslint:disable-next-line:max-line-length */\n                        dialogRenderer.parentElement.querySelector('.' + cls.CALC_FORMAT_INPUT).value = this.formatText;\n                    formatInputObj.value = this.formatText;\n                }\n            }\n            if (this.formulaText !== null && this.parent.\n                dialogRenderer.parentElement.querySelector('#' + this.parentID + 'droppable') !== null) {\n                var drop = this.parent.\n                    dialogRenderer.parentElement.querySelector('#' + this.parentID + 'droppable');\n                drop.value = this.formulaText;\n            }\n            if (this.fieldText !== null && this.parent.\n                dialogRenderer.parentElement.querySelector('.' + cls.CALCINPUT) !== null) {\n                this.parent.\n                    dialogRenderer.parentElement.querySelector('.' + cls.CALCINPUT).value = this.fieldText;\n                this.inputObj.value = this.fieldText;\n            }\n            if (okBtn.element) {\n                okBtn.element.onclick = this.applyFormula.bind(this);\n            }\n        }\n        else if (this.parent.isAdaptive) {\n            var addBtn = new Button({ cssClass: cls.FLAT, isPrimary: true });\n            addBtn.isStringTemplate = true;\n            addBtn.appendTo('#' + this.parentID + 'addBtn');\n            if (this.parent.dataType === 'olap') {\n                this.treeObj = new TreeView({\n                    /* tslint:disable-next-line:max-line-length */\n                    fields: { dataSource: this.getFieldListData(this.parent), id: 'id', text: 'caption', parentID: 'pid', iconCss: 'spriteCssClass' },\n                    showCheckBox: true,\n                    autoCheck: false,\n                    sortOrder: 'None',\n                    enableRtl: this.parent.enableRtl,\n                    nodeClicked: this.fieldClickHandler.bind(this),\n                    drawNode: this.drawTreeNode.bind(this),\n                    nodeExpanding: this.updateNodeIcon.bind(this),\n                    nodeCollapsed: this.updateNodeIcon.bind(this),\n                    nodeSelected: function (args) {\n                        removeClass([args.node], 'e-active');\n                        args.cancel = true;\n                    }\n                });\n                this.treeObj.isStringTemplate = true;\n                this.treeObj.appendTo('#' + this.parentID + 'accordDiv');\n            }\n            else {\n                this.accordion = new Accordion({\n                    items: this.getAccordionData(this.parent),\n                    enableRtl: this.parent.enableRtl,\n                    expanding: this.accordionExpand.bind(this),\n                    clicked: this.accordionClickHandler.bind(this),\n                    created: this.accordionCreated.bind(this)\n                });\n                this.accordion.isStringTemplate = true;\n                this.accordion.appendTo('#' + this.parentID + 'accordDiv');\n                this.updateType();\n            }\n            if (addBtn.element) {\n                addBtn.element.onclick = this.addBtnClick.bind(this);\n            }\n        }\n    };\n    CalculatedField.prototype.accordionExpand = function (args) {\n        if (args.element.querySelectorAll('.e-radio-wrapper').length === 0) {\n            var keys = Object.keys(this.parent.engineModule.fieldList);\n            for (var index = 0, i = keys.length; index < i; index++) {\n                var key = keys[index];\n                var type = this.parent.engineModule.fieldList[key].type !== 'number' ? [COUNT, DISTINCTCOUNT] :\n                    [SUM, COUNT, AVG, MIN, MAX, DISTINCTCOUNT, PRODUCT, STDEV, STDEVP, VAR, VARP];\n                var radiobutton = void 0;\n                if (key === args.element.querySelector('[data-field').getAttribute('data-field')) {\n                    for (var i_1 = 0; i_1 < type.length; i_1++) {\n                        radiobutton = new RadioButton({\n                            label: this.parent.localeObj.getConstant(type[i_1]),\n                            name: AGRTYPE + key,\n                            checked: args.element.querySelector('[data-type').getAttribute('data-type') === type[i_1],\n                            change: this.onChange.bind(this),\n                        });\n                        radiobutton.isStringTemplate = true;\n                        radiobutton.appendTo('#' + this.parentID + 'radio' + key + type[i_1]);\n                    }\n                }\n            }\n        }\n    };\n    CalculatedField.prototype.onChange = function (args) {\n        var type = args.event.target.parentElement.querySelector('.e-label')\n            .innerText;\n        var field = args.event.target.closest('.e-acrdn-item').\n            querySelector('[data-field').getAttribute('data-caption');\n        args.event.target.\n            closest('.e-acrdn-item').querySelector('.e-label').\n            innerText = field + ' (' + type + ')';\n        args.event.target.closest('.e-acrdn-item').\n            querySelector('[data-type').setAttribute('data-type', args.event.target.getAttribute('data-value'));\n    };\n    CalculatedField.prototype.updateType = function () {\n        var keys = Object.keys(this.parent.engineModule.fieldList);\n        for (var index = 0, i = keys.length; index < i; index++) {\n            var key = keys[index];\n            var type = null;\n            if ((this.parent.engineModule.fieldList[key].type !== 'number' ||\n                this.parent.engineModule.fieldList[key].type === 'include' ||\n                this.parent.engineModule.fieldList[key].type === 'exclude') &&\n                (this.parent.engineModule.fieldList[key].aggregateType !== 'DistinctCount')) {\n                type = COUNT;\n            }\n            else {\n                type = this.parent.engineModule.fieldList[key].aggregateType !== undefined ?\n                    this.parent.engineModule.fieldList[key].aggregateType : SUM;\n            }\n            var checkbox = new CheckBox({\n                label: this.parent.engineModule.fieldList[key].caption + ' (' + this.parent.localeObj.getConstant(type) + ')'\n            });\n            checkbox.isStringTemplate = true;\n            checkbox.appendTo('#' + this.parentID + '_' + index);\n            document.querySelector('#' + this.parentID + '_' + index).setAttribute('data-field', key);\n            document.querySelector('#' + this.parentID + '_' + index).setAttribute('data-type', type);\n        }\n    };\n    /**\n     * Trigger while click cancel button.\n     * @returns void\n     */\n    CalculatedField.prototype.cancelBtnClick = function () {\n        this.renderMobileLayout(this.parent.dialogRenderer.adaptiveElement);\n    };\n    /**\n     * Trigger while click add button.\n     * @returns void\n     */\n    CalculatedField.prototype.addBtnClick = function () {\n        var fieldText = '';\n        var field = null;\n        var type = null;\n        if (this.parent.dataType === 'pivot') {\n            var node = document.querySelectorAll('.e-accordion .e-check');\n            for (var i = 0; i < node.length; i++) {\n                field = node[i].parentElement.querySelector('[data-field]').getAttribute('data-field');\n                type = node[i].parentElement.querySelector('[data-field]').getAttribute('data-type');\n                if (type.indexOf(CALC) === -1) {\n                    fieldText = fieldText + ('\"' + type + '(' + field + ')' + '\"');\n                }\n                else {\n                    for (var j = 0; j < this.parent.dataSourceSettings.calculatedFieldSettings.length; j++) {\n                        if (this.parent.dataSourceSettings.calculatedFieldSettings[j].name === field) {\n                            fieldText = fieldText + this.parent.dataSourceSettings.calculatedFieldSettings[j].formula;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            var nodes = this.treeObj.getAllCheckedNodes();\n            var olapEngine = this.parent.olapEngineModule;\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var item = nodes_1[_i];\n                fieldText = fieldText + (olapEngine.fieldList[item] &&\n                    olapEngine.fieldList[item].type === CALC ? olapEngine.fieldList[item].tag : item);\n            }\n        }\n        this.formulaText = this.formulaText !== null ? (this.formulaText + fieldText) : fieldText;\n        this.renderMobileLayout(this.parent.dialogRenderer.adaptiveElement);\n    };\n    /**\n     * To create calculated field dialog elements.\n     * @returns void\n     * @hidden\n     */\n    CalculatedField.prototype.createCalculatedFieldDialog = function (args) {\n        if (this.parent.isAdaptive && this.parent.getModuleName() === 'pivotfieldlist') {\n            this.renderAdaptiveLayout(args && args.edit !== undefined ? args.edit : true);\n            this.isEdit = (args && args.edit !== undefined ? args.edit : this.isEdit);\n        }\n        else if (!this.parent.isAdaptive) {\n            this.isEdit = (args && args.edit !== undefined ? args.edit : false);\n            this.renderDialogLayout();\n            if (args && args.edit) {\n                var target = this.treeObj.element.querySelector('li[data-field=\"' + args.fieldName + '\"]');\n                if (target) {\n                    addClass([target], ['e-active', 'e-node-focus']);\n                    target.setAttribute('aria-selected', 'true');\n                    target.id = this.treeObj.element.id + '_active';\n                    if (this.parent.dataType === 'pivot') {\n                        /* tslint:disable-next-line */\n                        var e = { event: { target: target.querySelector('.e-list-icon.e-edit.e-icons') } };\n                        this.fieldClickHandler(e);\n                    }\n                    else {\n                        this.displayMenu(target);\n                    }\n                }\n            }\n            this.dialog.element.style.top = parseInt(this.dialog.element.style.top, 10) < 0 ? '0px' : this.dialog.element.style.top;\n        }\n    };\n    /**\n     * To create calculated field desktop layout.\n     * @returns void\n     */\n    CalculatedField.prototype.renderDialogLayout = function () {\n        this.newFields =\n            extend([], this.parent.dataSourceSettings.calculatedFieldSettings, null, true);\n        this.createDialog();\n        this.dialog.content = this.renderDialogElements();\n        this.dialog.refresh();\n        this.inputObj = new MaskedTextBox({\n            placeholder: this.parent.localeObj.getConstant('fieldName')\n        });\n        this.inputObj.isStringTemplate = true;\n        this.inputObj.appendTo('#' + this.parentID + 'ddlelement');\n        if (this.parent.dataType === 'pivot') {\n            var customerFormatObj = new MaskedTextBox({\n                placeholder: this.parent.localeObj.getConstant('numberFormatString')\n            });\n            customerFormatObj.isStringTemplate = true;\n            customerFormatObj.appendTo('#' + this.parentID + 'Custom_Format_Element');\n        }\n        if (this.parent.dataType === 'olap' && !this.parent.isAdaptive) {\n            this.createOlapDropElements();\n        }\n        this.createTreeView();\n        this.droppable = new Droppable(this.dialog.element.querySelector('#' + this.parentID + 'droppable'));\n        this.keyboardEvents = new KeyboardEvents(this.parent.calculatedFieldModule.dialog.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: { moveRight: 'rightarrow', enter: 'enter', shiftE: 'shift+E', delete: 'delete' },\n            eventName: 'keydown'\n        });\n    };\n    /**\n     * Creates the error dialog for the unexpected action done.\n     * @method createConfirmDialog\n     * @return {void}\n     * @hidden\n     */\n    CalculatedField.prototype.createConfirmDialog = function (title, description, calcInfo, isRemove, node) {\n        var errorDialog = createElement('div', {\n            id: this.parentID + '_ErrorDialog',\n            className: cls.ERROR_DIALOG_CLASS\n        });\n        /* tslint:disable:max-line-length */\n        this.parent.element.appendChild(errorDialog);\n        this.confirmPopUp = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: false,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: isRemove ? this.removeCalcField.bind(this, node) : this.replaceFormula.bind(this, calcInfo),\n                    buttonModel: {\n                        cssClass: cls.OK_BUTTON_CLASS + ' ' + cls.FLAT_CLASS,\n                        content: isRemove ? this.parent.localeObj.getConstant('yes') : this.parent.localeObj.getConstant('ok'), isPrimary: true\n                    }\n                },\n                {\n                    click: this.removeErrorDialog.bind(this),\n                    buttonModel: {\n                        cssClass: cls.CANCEL_BUTTON_CLASS,\n                        content: isRemove ? this.parent.localeObj.getConstant('no') : this.parent.localeObj.getConstant('cancel'), isPrimary: true\n                    }\n                }\n            ],\n            header: title,\n            content: description,\n            isModal: true,\n            visible: true,\n            closeOnEscape: true,\n            target: document.body,\n            close: this.removeErrorDialog.bind(this),\n        });\n        /* tslint:enable:max-line-length */\n        this.confirmPopUp.isStringTemplate = true;\n        this.confirmPopUp.appendTo(errorDialog);\n        // this.confirmPopUp.element.querySelector('.e-dlg-header').innerHTML = title;\n    };\n    CalculatedField.prototype.replaceFormula = function (calcInfo) {\n        var report = this.parent.dataSourceSettings;\n        if (this.parent.dataType === 'olap') {\n            for (var j = 0; j < report.calculatedFieldSettings.length; j++) {\n                if (report.calculatedFieldSettings[j].name === calcInfo.name) {\n                    if (!isNullOrUndefined(calcInfo.hierarchyUniqueName)) {\n                        report.calculatedFieldSettings[j].hierarchyUniqueName = calcInfo.hierarchyUniqueName;\n                    }\n                    report.calculatedFieldSettings[j].formatString = calcInfo.formatString;\n                    report.calculatedFieldSettings[j].formula = calcInfo.formula;\n                    this.parent.lastCalcFieldInfo = report.calculatedFieldSettings[j];\n                    break;\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < report.values.length; i++) {\n                if (report.values[i].type === CALC && report.values[i].name === calcInfo.name) {\n                    for (var j = 0; j < report.calculatedFieldSettings.length; j++) {\n                        if (report.calculatedFieldSettings[j].name === calcInfo.name) {\n                            report.calculatedFieldSettings[j].formula = calcInfo.formula;\n                            this.parent.lastCalcFieldInfo = report.calculatedFieldSettings[j];\n                            this.updateFormatSettings(report, calcInfo.name, calcInfo.formatString);\n                        }\n                    }\n                }\n            }\n        }\n        this.addFormula(report, calcInfo.name);\n        this.removeErrorDialog();\n    };\n    CalculatedField.prototype.removeErrorDialog = function () {\n        if (document.getElementById(this.parentID + '_ErrorDialog')) {\n            remove(document.getElementById(this.parentID + '_ErrorDialog').parentElement);\n        }\n    };\n    /**\n     * To add event listener.\n     * @returns void\n     * @hidden\n     */\n    CalculatedField.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initCalculatedField, this.createCalculatedFieldDialog, this);\n    };\n    /**\n     * To remove event listener.\n     * @returns void\n     * @hidden\n     */\n    CalculatedField.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initCalculatedField, this.createCalculatedFieldDialog);\n    };\n    /**\n     * To destroy the calculated field dialog\n     * @returns void\n     * @hidden\n     */\n    CalculatedField.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return CalculatedField;\n}());\nexport { CalculatedField };\n","import * as events from '../../common/base/constant';\nimport * as cls from '../base/css-constant';\nimport { PivotFieldList } from '../../pivotfieldlist/base/field-list';\nimport { createElement, setStyleAttribute, formatUnit, prepend, addClass, removeClass, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { CalculatedField } from '../../common/calculatedfield/calculated-field';\nPivotFieldList.Inject(CalculatedField);\n/**\n * Module for Field List rendering\n */\n/** @hidden */\nvar FieldList = /** @class */ (function () {\n    /** Constructor for Field List module */\n    function FieldList(parent) {\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    FieldList.prototype.getModuleName = function () {\n        return 'fieldlist';\n    };\n    FieldList.prototype.initiateModule = function () {\n        this.element = createElement('div', {\n            id: this.parent.element.id + '_PivotFieldList',\n            styles: 'position:' + (this.parent.enableRtl ? 'static' : 'absolute') + ';height:0;width:' + this.parent.element.style.width +\n                ';display:none'\n        });\n        var containerWrapper = createElement('div', {\n            id: this.parent.element.id + 'containerwrapper'\n        });\n        this.parent.element.parentElement.appendChild(containerWrapper);\n        containerWrapper.appendChild(this.element);\n        containerWrapper.appendChild(this.parent.element);\n        this.parent.pivotFieldListModule = new PivotFieldList({\n            dataSourceSettings: {\n                providerType: this.parent.dataSourceSettings.providerType,\n                rows: [],\n                columns: [],\n                values: [],\n                filters: []\n            },\n            spinnerTemplate: this.parent.spinnerTemplate,\n            allowDeferLayoutUpdate: this.parent.allowDeferLayoutUpdate,\n            renderMode: 'Popup',\n            allowCalculatedField: this.parent.allowCalculatedField,\n            showValuesButton: this.parent.showValuesButton,\n            enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            target: this.parent.element.parentElement,\n            aggregateTypes: this.parent.aggregateTypes,\n            maxNodeLimitInMemberEditor: this.parent.maxNodeLimitInMemberEditor,\n            aggregateCellInfo: this.parent.bindTriggerEvents.bind(this.parent),\n        });\n        this.parent.pivotFieldListModule.isPopupView = true;\n        this.parent.pivotFieldListModule.pivotGridModule = this.parent;\n        this.parent.pivotFieldListModule.appendTo('#' + this.element.id);\n    };\n    FieldList.prototype.updateControl = function () {\n        if (this.element) {\n            this.element.style.display = 'block';\n            prepend([this.element], this.parent.element);\n            if (this.parent.showGroupingBar && this.parent.groupingBarModule) {\n                clearTimeout(this.timeOutObj);\n                this.timeOutObj = setTimeout(this.update.bind(this));\n            }\n            else if (!isNullOrUndefined((this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)))) {\n                setStyleAttribute(this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS), {\n                    left: 'auto'\n                });\n                if (this.parent.enableRtl) {\n                    removeClass([this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], 'e-fieldlist-left');\n                }\n                else {\n                    addClass([this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], 'e-fieldlist-left');\n                }\n            }\n            setStyleAttribute(this.element, {\n                width: formatUnit(this.parent.element.offsetWidth)\n            });\n        }\n        this.parent.pivotFieldListModule.update(this.parent);\n    };\n    FieldList.prototype.update = function () {\n        var currentWidth;\n        if (this.parent.currentView !== 'Table') {\n            currentWidth = this.parent.chart ? this.parent.chartModule.calculatedWidth : currentWidth;\n        }\n        else {\n            currentWidth = this.parent.grid ? this.parent.grid.element.offsetWidth : currentWidth;\n        }\n        if (currentWidth && (!isNullOrUndefined((this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS))))) {\n            var actualWidth = currentWidth < 400 ? 400 : currentWidth;\n            setStyleAttribute(this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS), {\n                left: formatUnit(this.parent.enableRtl ?\n                    -Math.abs((actualWidth) -\n                        this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth) :\n                    (actualWidth) -\n                        this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth)\n            });\n            if (this.parent.enableRtl) {\n                addClass([this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], 'e-fieldlist-left');\n            }\n            else {\n                removeClass([this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], 'e-fieldlist-left');\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    FieldList.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.initiateModule,\n            update: this.updateControl\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initSubComponent, this.handlers.load, this);\n        this.parent.on(events.uiUpdate, this.handlers.update, this);\n    };\n    /**\n     * @hidden\n     */\n    FieldList.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initSubComponent, this.handlers.load);\n        this.parent.off(events.uiUpdate, this.handlers.update);\n    };\n    /**\n     * To destroy the Field List\n     * @return {void}\n     * @hidden\n     */\n    FieldList.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.parent.pivotFieldListModule) {\n            this.parent.pivotFieldListModule.destroy();\n        }\n        else {\n            return;\n        }\n    };\n    return FieldList;\n}());\nexport { FieldList };\n","import { PivotButton } from '../actions/pivot-button';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { createElement, prepend } from '@syncfusion/ej2-base';\n/**\n * Module to render Axis Fields\n */\n/** @hidden */\nvar AxisFields = /** @class */ (function () {\n    /** Constructor for render module */\n    function AxisFields(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Initialize the grouping bar pivot button rendering\n     * @returns void\n     * @private\n     */\n    AxisFields.prototype.render = function () {\n        /* tslint:disable:no-any */\n        var pivotButtonModule = ((!this.parent.pivotButtonModule || (this.parent.pivotButtonModule && this.parent.pivotButtonModule.isDestroyed)) ?\n            new PivotButton(this.parent) : this.parent.pivotButtonModule);\n        this.createPivotButtons();\n        var pivotButtons = [];\n        for (var _i = 0, _a = this.parent.element.querySelectorAll('.' + cls.GROUP_ROW_CLASS); _i < _a.length; _i++) {\n            var element = _a[_i];\n            if (!element.classList.contains(cls.GROUP_CHART_ROW)) {\n                pivotButtons = pivotButtons.concat([].slice.call(element.querySelectorAll('.' + cls.PIVOT_BUTTON_WRAPPER_CLASS)));\n            }\n        }\n        var vlen = pivotButtons.length;\n        for (var j = 0; j < vlen; j++) {\n            var indentWidth = 24;\n            var indentDiv = createElement('span', {\n                className: 'e-indent-div',\n                styles: 'width:' + j * indentWidth + 'px'\n            });\n            prepend([indentDiv], pivotButtons[j]);\n        }\n    };\n    AxisFields.prototype.createPivotButtons = function () {\n        var fields = [this.parent.dataSourceSettings.rows, this.parent.dataSourceSettings.columns,\n            this.parent.dataSourceSettings.values, this.parent.dataSourceSettings.filters];\n        for (var _i = 0, _a = this.parent.element.querySelectorAll('.' + cls.GROUP_ROW_CLASS + ',.' + cls.GROUP_COLUMN_CLASS + ',.'\n            + cls.GROUP_VALUE_CLASS + ',.' + cls.GROUP_FILTER_CLASS); _i < _a.length; _i++) {\n            var element = _a[_i];\n            if ((this.parent.dataSourceSettings.values.length > 0 ? !element.classList.contains(cls.GROUP_CHART_VALUE) : true) ||\n                (this.parent.dataSourceSettings.columns.length > 0 ? !element.classList.contains(cls.GROUP_CHART_COLUMN) : true)) {\n                element.innerHTML = '';\n            }\n        }\n        /* tslint:enable:no-any */\n        var axis = ['rows', 'columns', 'values', 'filters'];\n        var count = axis.length;\n        for (var i = 0, lnt = fields.length; i < lnt; i++) {\n            if (fields[i]) {\n                var args = {\n                    field: fields[i],\n                    axis: axis[i].toString()\n                };\n                this.parent.notify(events.pivotButtonUpdate, args);\n            }\n        }\n    };\n    return AxisFields;\n}());\nexport { AxisFields };\n","import { createElement, remove, Droppable, setStyleAttribute, removeClass } from '@syncfusion/ej2-base';\nimport { EventHandler, Touch, closest, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { addClass, formatUnit } from '@syncfusion/ej2-base';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { AxisFields } from './axis-field-renderer';\n/**\n * Module for GroupingBar rendering\n */\n/** @hidden */\nvar GroupingBar = /** @class */ (function () {\n    /** Constructor for GroupingBar module */\n    function GroupingBar(parent) {\n        this.parent = parent;\n        this.parent.groupingBarModule = this;\n        this.resColWidth = (this.parent.isAdaptive ? 180 : 249);\n        this.addEventListener();\n        this.parent.axisFieldModule = new AxisFields(this.parent);\n        this.touchObj = new Touch(this.parent.element, {\n            tapHold: this.tapHoldHandler.bind(this)\n        });\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    GroupingBar.prototype.getModuleName = function () {\n        return 'groupingbar';\n    };\n    /** @hidden */\n    GroupingBar.prototype.renderLayout = function () {\n        this.groupingTable = createElement('div', { className: cls.GROUPING_BAR_CLASS });\n        this.leftAxisPanel = createElement('div', { className: cls.LEFT_AXIS_PANEL_CLASS });\n        this.rightAxisPanel = createElement('div', { className: cls.RIGHT_AXIS_PANEL_CLASS });\n        var rowAxisPanel = createElement('div', { className: cls.AXIS_ROW_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper' });\n        var columnAxisPanel = createElement('div', {\n            className: cls.AXIS_COLUMN_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper'\n        });\n        var valueAxisPanel = createElement('div', {\n            className: cls.AXIS_VALUE_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper'\n        });\n        var filterAxisPanel = createElement('div', {\n            className: cls.AXIS_FILTER_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper'\n        });\n        this.rowPanel = createElement('div', { className: cls.GROUP_ROW_CLASS + ' ' + cls.ROW_AXIS_CLASS });\n        this.columnPanel = createElement('div', { className: cls.GROUP_COLUMN_CLASS + ' ' + cls.COLUMN_AXIS_CLASS });\n        this.valuePanel = createElement('div', { className: cls.GROUP_VALUE_CLASS + ' ' + cls.VALUE_AXIS_CLASS });\n        this.filterPanel = createElement('div', { className: cls.GROUP_FILTER_CLASS + ' ' + cls.FILTER_AXIS_CLASS });\n        rowAxisPanel.appendChild(this.rowPanel);\n        columnAxisPanel.appendChild(this.columnPanel);\n        valueAxisPanel.appendChild(this.valuePanel);\n        filterAxisPanel.appendChild(this.filterPanel);\n        this.rowAxisPanel = rowAxisPanel;\n        this.columnAxisPanel = columnAxisPanel;\n        this.valueAxisPanel = valueAxisPanel;\n        this.filterAxisPanel = filterAxisPanel;\n        this.leftAxisPanel.appendChild(valueAxisPanel);\n        this.leftAxisPanel.appendChild(rowAxisPanel);\n        this.rightAxisPanel.appendChild(filterAxisPanel);\n        this.rightAxisPanel.appendChild(columnAxisPanel);\n        this.groupingTable.appendChild(this.leftAxisPanel);\n        this.groupingTable.appendChild(this.rightAxisPanel);\n        this.groupingTable.classList.add(cls.GRID_GROUPING_BAR_CLASS);\n        this.groupingTable.querySelector('.' + cls.GROUP_ROW_CLASS).classList.add(cls.GROUP_PIVOT_ROW);\n        var axisPanels = [this.rowPanel, this.columnPanel, this.valuePanel, this.filterPanel];\n        for (var _i = 0, axisPanels_1 = axisPanels; _i < axisPanels_1.length; _i++) {\n            var element = axisPanels_1[_i];\n            if (this.parent.groupingBarSettings.allowDragAndDrop) {\n                new Droppable(element, {});\n            }\n            this.unWireEvent(element);\n            this.wireEvent(element);\n        }\n        if (this.parent.displayOption.view !== 'Table' && this.parent.groupingBarSettings.displayMode !== 'Table') {\n            this.groupingChartTable = this.groupingTable.cloneNode(true);\n            this.groupingChartTable.classList.add(cls.CHART_GROUPING_BAR_CLASS);\n            this.groupingChartTable.classList.remove(cls.GRID_GROUPING_BAR_CLASS);\n            this.groupingChartTable.querySelector('.' + cls.GROUP_ROW_CLASS).classList.add(cls.GROUP_CHART_ROW);\n            this.groupingChartTable.querySelector('.' + cls.GROUP_ROW_CLASS).classList.remove(cls.GROUP_PIVOT_ROW);\n            if (this.parent.chartSettings.enableMultiAxis && this.parent.chartSettings.chartSeries &&\n                ['Pie', 'Pyramid', 'Doughnut', 'Funnel'].indexOf(this.parent.chartSettings.chartSeries.type) < 0) {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_VALUE_CLASS).classList.add(cls.GROUP_CHART_MULTI_VALUE);\n            }\n            else {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_VALUE_CLASS).classList.add(cls.GROUP_CHART_VALUE);\n                this.groupingChartTable.querySelector('.' + cls.GROUP_VALUE_CLASS).classList.remove(cls.DROPPABLE_CLASS);\n            }\n            if (this.parent.chartSettings.chartSeries &&\n                ['Pie', 'Pyramid', 'Doughnut', 'Funnel'].indexOf(this.parent.chartSettings.chartSeries.type) > -1) {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_COLUMN_CLASS).classList.add(cls.GROUP_CHART_COLUMN);\n                this.groupingChartTable.querySelector('.' + cls.GROUP_COLUMN_CLASS).classList.remove(cls.DROPPABLE_CLASS);\n            }\n            else {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_COLUMN_CLASS).classList.add(cls.GROUP_CHART_ACCUMULATION_COLUMN);\n            }\n            this.groupingChartTable.querySelector('.' + cls.GROUP_FILTER_CLASS).classList.add(cls.GROUP_CHART_FILTER);\n        }\n        else {\n            this.groupingChartTable = undefined;\n        }\n        if (this.parent.displayOption.view === 'Chart' || this.parent.groupingBarSettings.displayMode === 'Chart') {\n            this.groupingTable = undefined;\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    GroupingBar.prototype.appendToElement = function () {\n        if (this.parent.element.querySelector('.' + cls.GRID_CLASS) || this.parent.element.querySelector('.' + cls.PIVOTCHART)) {\n            if (this.parent.showGroupingBar) {\n                if (this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                    /* tslint:disable-next-line:no-any */\n                    for (var _i = 0, _a = this.parent.element.querySelectorAll('.' + cls.GROUPING_BAR_CLASS); _i < _a.length; _i++) {\n                        var element = _a[_i];\n                        remove(element);\n                    }\n                }\n                if (this.groupingChartTable) {\n                    if (this.parent.element.querySelector('#' + this.parent.element.id + '_chart')) {\n                        setStyleAttribute(this.groupingChartTable, {\n                            width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n                        });\n                        this.parent.element.insertBefore(this.groupingChartTable, this.parent.element.querySelector('#' + this.parent.element.id + '_chart'));\n                    }\n                    else {\n                        this.groupingChartTable = undefined;\n                    }\n                }\n                if (this.parent.displayOption.view !== 'Chart' && this.groupingTable) {\n                    if (this.parent.isAdaptive) {\n                        this.leftAxisPanel.style.minWidth = '180px';\n                        this.valuePanel.style.minWidth = '180px';\n                    }\n                    if (this.parent.firstColWidth) {\n                        this.leftAxisPanel.style.minWidth = 'auto';\n                        this.valuePanel.style.minWidth = 'auto';\n                    }\n                    this.filterPanel.removeAttribute('style');\n                    this.columnPanel.removeAttribute('style');\n                    this.rowPanel.removeAttribute('style');\n                    this.filterPanel.removeAttribute('style');\n                    var emptyRowCount = void 0;\n                    if (this.parent.dataType === 'olap') {\n                        emptyRowCount = this.parent.olapEngineModule.headerContent ?\n                            Object.keys(this.parent.olapEngineModule.headerContent).length : 0;\n                    }\n                    else {\n                        emptyRowCount = this.parent.engineModule.headerContent ?\n                            Object.keys(this.parent.engineModule.headerContent).length : 0;\n                    }\n                    if (!isNullOrUndefined(emptyRowCount)) {\n                        var emptyHeader = this.parent.element.querySelector('.e-frozenheader').querySelector('.e-columnheader');\n                        emptyHeader.removeAttribute('style');\n                        addClass([emptyHeader.querySelector('.e-headercell')], 'e-group-row');\n                        emptyHeader.querySelector('.e-group-row').appendChild(this.rowAxisPanel);\n                        emptyHeader.querySelector('.e-group-row').querySelector('.e-headercelldiv').style.display = 'none';\n                        emptyHeader.querySelector('.e-group-row').querySelector('.e-sortfilterdiv').style.display = 'none';\n                    }\n                    this.parent.element.insertBefore(this.groupingTable, this.parent.element.querySelector('.' + cls.GRID_CLASS));\n                    setStyleAttribute(this.groupingTable, {\n                        width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n                    });\n                    this.groupingTable.style.minWidth = '400px';\n                    this.parent.axisFieldModule.render();\n                    this.setGridRowWidth();\n                    var colGroupElement = this.parent.element.querySelector('.e-frozenheader').querySelector('colgroup').children[0];\n                    var rightAxisPanelWidth = formatUnit(this.groupingTable.offsetWidth - parseInt(colGroupElement.style.width, 10));\n                    setStyleAttribute(this.valuePanel, { width: colGroupElement.style.width });\n                    setStyleAttribute(this.rightAxisPanel, { width: rightAxisPanelWidth });\n                    var rightPanelHeight = (this.valuePanel.offsetHeight / 2);\n                    if (rightPanelHeight > this.columnPanel.offsetHeight) {\n                        setStyleAttribute(this.filterPanel, { height: formatUnit(rightPanelHeight) });\n                        setStyleAttribute(this.columnPanel, { height: formatUnit(rightPanelHeight + 2) });\n                    }\n                    var topLeftHeight = this.parent.element.querySelector('.e-headercontent').offsetHeight;\n                    setStyleAttribute(this.rowPanel, {\n                        height: topLeftHeight + 'px'\n                    });\n                    if (this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler')) {\n                        this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler').style.height =\n                            topLeftHeight + 'px';\n                    }\n                    var colRows = [].slice.call(this.parent.element.querySelector('.e-movableheader').querySelector('thead').querySelectorAll('tr'));\n                    var columnRows = colRows.filter(function (trCell) {\n                        return (trCell.childNodes.length > 0);\n                    });\n                    var colHeight = topLeftHeight / columnRows.length;\n                    for (var _b = 0, columnRows_1 = columnRows; _b < columnRows_1.length; _b++) {\n                        var element = columnRows_1[_b];\n                        setStyleAttribute(element, { 'height': colHeight + 'px' });\n                        var rowHeader = [].slice.call(element.querySelectorAll('.e-rhandler'));\n                        for (var _c = 0, rowHeader_1 = rowHeader; _c < rowHeader_1.length; _c++) {\n                            var rhElement = rowHeader_1[_c];\n                            setStyleAttribute(rhElement, { 'height': colHeight + 'px' });\n                        }\n                    }\n                }\n                else {\n                    this.parent.axisFieldModule.render();\n                }\n                if (this.parent.showToolbar && this.parent.displayOption.view === 'Both') {\n                    if (this.parent.currentView === 'Table') {\n                        this.parent.element.querySelector('.e-chart-grouping-bar').style.display = 'none';\n                    }\n                    else {\n                        this.parent.element.querySelector('.e-pivot-grouping-bar').style.display = 'none';\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    GroupingBar.prototype.refreshUI = function () {\n        if (this.groupingChartTable) {\n            setStyleAttribute(this.groupingChartTable, {\n                width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n            });\n        }\n        if (this.groupingTable) {\n            setStyleAttribute(this.groupingTable, {\n                width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n            });\n            this.groupingTable.style.minWidth = '400px';\n            var colGroupElement = this.parent.element.querySelector('.e-frozenheader').querySelector('colgroup').children[0];\n            var rightAxisWidth = formatUnit(this.groupingTable.offsetWidth - parseInt(colGroupElement.style.width, 10));\n            setStyleAttribute(this.valuePanel, { width: colGroupElement.style.width });\n            setStyleAttribute(this.rightAxisPanel, { width: rightAxisWidth });\n            if (this.parent.showFieldList && this.parent.pivotFieldListModule && this.parent.pivotFieldListModule.element) {\n                clearTimeout(this.timeOutObj);\n                this.timeOutObj = setTimeout(this.alignIcon.bind(this));\n            }\n            if (!this.parent.grid.element.querySelector('.e-group-row')) {\n                var emptyRowHeader = this.parent.element.querySelector('.e-frozenheader').querySelector('.e-columnheader');\n                addClass([emptyRowHeader.querySelector('.e-headercell')], 'e-group-row');\n                setStyleAttribute(this.rowPanel, {\n                    height: this.parent.element.querySelector('.e-headercontent').offsetHeight + 'px'\n                });\n                emptyRowHeader.querySelector('.e-group-row').appendChild(this.rowAxisPanel);\n                setStyleAttribute(emptyRowHeader.querySelector('.e-group-row').querySelector('.e-headercelldiv'), {\n                    display: 'none'\n                });\n                setStyleAttribute(emptyRowHeader.querySelector('.e-group-row').querySelector('.e-sortfilterdiv'), {\n                    display: 'none'\n                });\n                var groupHeight = this.parent.element.querySelector('.e-headercontent').offsetHeight;\n                setStyleAttribute(this.rowPanel, {\n                    height: groupHeight + 'px'\n                });\n                if (this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler')) {\n                    this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler').style.height =\n                        groupHeight + 'px';\n                }\n                var colRowElements = [].slice.call(this.parent.element.querySelector('.e-movableheader').querySelector('thead').querySelectorAll('tr'));\n                var columnRows = colRowElements.filter(function (trCell) {\n                    return (trCell.childNodes.length > 0);\n                });\n                var colHeight = groupHeight / columnRows.length;\n                for (var _i = 0, columnRows_2 = columnRows; _i < columnRows_2.length; _i++) {\n                    var element = columnRows_2[_i];\n                    setStyleAttribute(element, { 'height': colHeight + 'px' });\n                    var rowHeader = [].slice.call(element.querySelectorAll('.e-rhandler'));\n                    for (var _a = 0, rowHeader_2 = rowHeader; _a < rowHeader_2.length; _a++) {\n                        var handlerElement = rowHeader_2[_a];\n                        setStyleAttribute(handlerElement, { 'height': colHeight + 'px' });\n                    }\n                }\n            }\n        }\n    };\n    /** @hidden */\n    GroupingBar.prototype.alignIcon = function () {\n        var element = this.parent.pivotFieldListModule.element;\n        var currentWidth;\n        if (this.parent.currentView === 'Table') {\n            currentWidth = this.parent.grid ? this.parent.grid.element.offsetWidth : currentWidth;\n        }\n        else {\n            currentWidth = this.parent.chart ? this.parent.chartModule.calculatedWidth : currentWidth;\n        }\n        if (currentWidth) {\n            var actWidth = currentWidth < 400 ? 400 : currentWidth;\n            setStyleAttribute(element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS), {\n                left: formatUnit(this.parent.enableRtl ?\n                    -Math.abs((actWidth) -\n                        element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth) :\n                    (actWidth) -\n                        element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth)\n            });\n        }\n    };\n    /**\n     * @hidden\n     */\n    GroupingBar.prototype.setGridRowWidth = function () {\n        var colGroupElement = this.parent.element.querySelector('.e-frozenheader').querySelector('colgroup').children[0];\n        if (this.rowPanel.querySelector('.' + cls.PIVOT_BUTTON_CLASS)) {\n            if (!this.parent.isAdaptive) {\n                var pivotButtons = [].slice.call(this.rowPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_WRAPPER_CLASS));\n                var lastButton = pivotButtons[pivotButtons.length - 1];\n                var lastButtonWidth = (lastButton.querySelector('.' + cls.PIVOT_BUTTON_CLASS).offsetWidth +\n                    lastButton.querySelector('.e-indent-div').offsetWidth + 20);\n                var buttonWidth = formatUnit(lastButtonWidth < this.resColWidth ? this.resColWidth : lastButtonWidth);\n                var rowHeaderTable = this.parent.element.querySelector('.e-frozenheader').querySelector('table');\n                var rowContentTable = this.parent.element.querySelector('.e-frozencontent').querySelector('table');\n                var rowContent = this.parent.element.querySelector('.e-frozencontent').querySelector('colgroup').children[0];\n                var colwidth = parseInt(buttonWidth, 10);\n                var gridColumn = this.parent.grid.columns;\n                if (gridColumn && gridColumn.length > 0) {\n                    gridColumn[0].width = (gridColumn[0].width >= this.resColWidth ?\n                        (colwidth > this.resColWidth ? colwidth : this.resColWidth) :\n                        (colwidth > this.resColWidth ? colwidth : this.resColWidth));\n                }\n                var valueColWidth = void 0;\n                if (this.parent.dataType === 'olap') {\n                    valueColWidth = this.parent.renderModule.calculateColWidth(this.parent.olapEngineModule.pivotValues.length > 0 ?\n                        this.parent.olapEngineModule.pivotValues[0].length : 2);\n                }\n                else {\n                    valueColWidth = this.parent.renderModule.calculateColWidth((this.parent.dataSourceSettings.values.length > 0 &&\n                        this.parent.engineModule.pivotValues.length > 0) ?\n                        this.parent.engineModule.pivotValues[0].length : 2);\n                }\n                for (var cCnt = 0; cCnt < gridColumn.length; cCnt++) {\n                    if (cCnt !== 0) {\n                        if (gridColumn[cCnt].columns) {\n                            this.setColWidth(gridColumn[cCnt].columns, valueColWidth);\n                        }\n                        else {\n                            if (gridColumn[cCnt].width !== 'auto') {\n                                /* tslint:disable:no-any */\n                                var levelName = gridColumn[cCnt].customAttributes ?\n                                    gridColumn[cCnt].customAttributes.cell.valueSort.levelName : '';\n                                gridColumn[cCnt].width = this.parent.renderModule.setSavedWidth(levelName, valueColWidth);\n                                /* tslint:enable:no-any */\n                            }\n                            else {\n                                gridColumn[cCnt].minWidth = valueColWidth;\n                            }\n                        }\n                    }\n                }\n                this.parent.posCount = 0;\n                this.parent.setGridColumns(this.parent.grid.columns);\n                this.parent.grid.headerModule.refreshUI();\n                if (!this.parent.firstColWidth) {\n                    colGroupElement.style.width = buttonWidth;\n                    rowContent.style.width = buttonWidth;\n                    rowHeaderTable.style.width = buttonWidth;\n                    rowContentTable.style.width = buttonWidth;\n                    setStyleAttribute(rowHeaderTable, { 'width': buttonWidth });\n                    setStyleAttribute(rowContentTable, { 'width': buttonWidth });\n                }\n            }\n            else {\n                if (!this.parent.firstColWidth) {\n                    var gridColumn = this.parent.grid.columns;\n                    if (gridColumn && gridColumn.length > 0) {\n                        gridColumn[0].width = this.resColWidth;\n                    }\n                    this.parent.posCount = 0;\n                    this.parent.grid.headerModule.refreshUI();\n                }\n            }\n        }\n        else {\n            if (this.parent.grid.columns && this.parent.grid.columns.length > 0) {\n                this.parent.grid.columns[0].width = this.parent.grid.columns[0].width > this.resColWidth ?\n                    this.parent.grid.columns[0].width : this.resColWidth;\n            }\n            this.parent.grid.headerModule.refreshUI();\n        }\n        if (this.groupingTable) {\n            this.refreshUI();\n        }\n    };\n    GroupingBar.prototype.setColWidth = function (columns, width) {\n        for (var cCnt = 0; cCnt < columns.length; cCnt++) {\n            if (columns[cCnt].columns) {\n                this.setColWidth(columns[cCnt].columns, width);\n            }\n            else {\n                if (columns[cCnt].width != \"auto\") {\n                    columns[cCnt].width = width;\n                }\n                else {\n                    columns[cCnt].minWidth = width;\n                }\n            }\n        }\n    };\n    GroupingBar.prototype.wireEvent = function (element) {\n        EventHandler.add(element, 'mouseover', this.dropIndicatorUpdate, this);\n        EventHandler.add(element, 'mouseleave', this.dropIndicatorUpdate, this);\n    };\n    GroupingBar.prototype.unWireEvent = function (element) {\n        EventHandler.remove(element, 'mouseover', this.dropIndicatorUpdate);\n        EventHandler.remove(element, 'mouseleave', this.dropIndicatorUpdate);\n    };\n    GroupingBar.prototype.dropIndicatorUpdate = function (e) {\n        if ((this.parent.isDragging && e.target.classList.contains(cls.DROPPABLE_CLASS) && e.type === 'mouseover') ||\n            e.type === 'mouseleave') {\n            removeClass([].slice.call(this.parent.element.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(this.parent.element.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n        }\n    };\n    GroupingBar.prototype.tapHoldHandler = function (e) {\n        var target = closest(e.originalEvent.target, '.' + cls.PIVOT_BUTTON_CLASS);\n        if (!isNullOrUndefined(target) && this.parent.isAdaptive) {\n            var pos = target.getBoundingClientRect();\n            this.parent.contextMenuModule.fieldElement = target;\n            this.parent.contextMenuModule.menuObj.open(pos.top, pos.left);\n            return;\n        }\n    };\n    /**\n     * @hidden\n     */\n    GroupingBar.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.renderLayout,\n            end: this.appendToElement,\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initSubComponent, this.handlers.load, this); //For initial rendering\n        this.parent.on(events.uiUpdate, this.handlers.end, this);\n    };\n    /**\n     * @hidden\n     */\n    GroupingBar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.uiUpdate, this.handlers.end);\n        this.parent.off(events.initSubComponent, this.handlers.load);\n    };\n    /**\n     * To destroy the groupingbar\n     * @return {void}\n     * @hidden\n     */\n    GroupingBar.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.parent.pivotButtonModule) {\n            this.parent.pivotButtonModule.destroy();\n        }\n        if (this.touchObj && !this.touchObj.isDestroyed) {\n            this.touchObj.destroy();\n        }\n        if (this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n            remove(this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS));\n        }\n    };\n    return GroupingBar;\n}());\nexport { GroupingBar };\n","import { Dialog } from '@syncfusion/ej2-popups';\nimport { isNullOrUndefined as isNaN, createElement, extend, remove, addClass } from '@syncfusion/ej2-base';\nimport { Button } from '@syncfusion/ej2-buttons';\nimport { ColorPicker } from '@syncfusion/ej2-inputs';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\n/**\n * Module to render Conditional Formatting Dialog\n */\n/** @hidden */\nvar ConditionalFormatting = /** @class */ (function () {\n    /** Constructor for conditionalformatting module */\n    function ConditionalFormatting(parent) {\n        this.parent = parent;\n        this.parent.conditionalFormattingModule = this;\n        this.parentID = this.parent.element.id;\n        this.dialog = null;\n        this.fieldsDropDown = [];\n        this.conditionsDropDown = [];\n        this.fontNameDropDown = [];\n        this.fontSizeDropDown = [];\n        this.fontColor = [];\n        this.backgroundColor = [];\n        this.newFormat = [];\n    }\n    /**\n     * To get module name.\n     * @returns string\n     */\n    ConditionalFormatting.prototype.getModuleName = function () {\n        return 'conditionalformatting';\n    };\n    ConditionalFormatting.prototype.createDialog = function () {\n        if (document.querySelector('#' + this.parentID + 'conditionalformatting') !== null) {\n            remove(document.querySelector('#' + this.parentID + 'conditionalformatting'));\n        }\n        this.parent.element.appendChild(createElement('div', {\n            id: this.parentID + 'conditionalformatting',\n        }));\n        var buttonModel = [\n            {\n                click: this.addButtonClick.bind(this),\n                buttonModel: {\n                    cssClass: this.parent.isAdaptive ? (cls.FORMAT_ROUND_BUTTON + ' ' + cls.FORMAT_CONDITION_BUTTON) :\n                        cls.FORMAT_CONDITION_BUTTON,\n                    iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS,\n                    content: this.parent.isAdaptive ? '' : this.parent.localeObj.getConstant('condition'),\n                }\n            },\n            {\n                click: this.applyButtonClick.bind(this),\n                buttonModel: {\n                    cssClass: cls.FLAT_CLASS + ' ' + cls.FORMAT_APPLY_BUTTON,\n                    content: this.parent.localeObj.getConstant('apply')\n                }\n            },\n            {\n                click: this.cancelButtonClick.bind(this),\n                buttonModel: {\n                    cssClass: cls.FLAT_CLASS + ' ' + cls.FORMAT_CANCEL_BUTTON,\n                    content: this.parent.localeObj.getConstant('cancel')\n                }\n            }\n        ];\n        if (this.parent.isAdaptive) {\n            this.dialog = new Dialog({\n                animationSettings: { effect: 'Zoom' }, isModal: true, width: '100%', height: '100%',\n                showCloseIcon: false, closeOnEscape: false, enableRtl: this.parent.enableRtl,\n                position: { X: 'center', Y: 'center' }, allowDragging: true, buttons: buttonModel,\n                beforeOpen: this.beforeOpen.bind(this), close: this.removeDialog.bind(this),\n                cssClass: cls.FORMAT_DIALOG, header: this.parent.localeObj.getConstant('conditionalFormating'), target: document.body\n            });\n        }\n        else {\n            this.dialog = new Dialog({\n                allowDragging: true, position: { X: 'center', Y: this.parent.element.offsetTop }, buttons: buttonModel,\n                beforeOpen: this.beforeOpen.bind(this), close: this.removeDialog.bind(this),\n                cssClass: cls.FORMAT_DIALOG, isModal: false, closeOnEscape: true, enableRtl: this.parent.enableRtl,\n                showCloseIcon: true, header: this.parent.localeObj.getConstant('conditionalFormating'), target: this.parent.element\n            });\n        }\n        this.dialog.isStringTemplate = true;\n        this.dialog.appendTo('#' + this.parentID + 'conditionalformatting');\n        // this.dialog.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('conditionalFormating');\n    };\n    ConditionalFormatting.prototype.beforeOpen = function (args) {\n        this.dialog.element.querySelector('.' + cls.DIALOG_HEADER).\n            setAttribute('title', this.parent.localeObj.getConstant('conditionalFormating'));\n    };\n    ConditionalFormatting.prototype.addButtonClick = function () {\n        var _this = this;\n        var format = {\n            conditions: 'LessThan',\n            value1: 0,\n            applyGrandTotals: true,\n            style: {\n                backgroundColor: 'white',\n                color: 'black',\n                fontFamily: 'Arial',\n                fontSize: '12px'\n            }\n        };\n        var conditionalFormating = this;\n        this.parent.trigger(events.conditionalFormatting, format, function (observedArgs) {\n            conditionalFormating.refreshConditionValues();\n            _this.destroyColorPickers();\n            conditionalFormating.newFormat.push(observedArgs);\n            conditionalFormating.addFormat();\n        });\n    };\n    ConditionalFormatting.prototype.applyButtonClick = function () {\n        if (this.refreshConditionValues()) {\n            this.parent.setProperties({ dataSourceSettings: { conditionalFormatSettings: this.newFormat } }, true);\n            this.parent.renderPivotGrid();\n            this.dialog.close();\n        }\n    };\n    ConditionalFormatting.prototype.cancelButtonClick = function () {\n        this.dialog.close();\n        this.newFormat = [];\n    };\n    ConditionalFormatting.prototype.refreshConditionValues = function () {\n        for (var i = 0; i < this.newFormat.length; i++) {\n            if (document.querySelector('#' + this.parentID + 'conditionvalue1' + i).value === '' ||\n                document.querySelector('#' + this.parentID + 'conditionvalue2' + i).value === '') {\n                document.querySelector('#' + this.parentID + 'conditionvalue1' + i).value === '' ?\n                    document.querySelector('#' + this.parentID + 'conditionvalue1' + i).focus() :\n                    document.querySelector('#' + this.parentID + 'conditionvalue2' + i).focus();\n                return false;\n            }\n            this.newFormat[i].value1 =\n                Number(document.querySelector('#' + this.parentID + 'conditionvalue1' + i).value);\n            this.newFormat[i].value2 =\n                Number(document.querySelector('#' + this.parentID + 'conditionvalue2' + i).value);\n        }\n        return true;\n    };\n    ConditionalFormatting.prototype.addFormat = function () {\n        var format = createElement('div', { id: this.parentID + 'formatDiv', className: cls.FORMAT_NEW });\n        for (var i = 0; i < this.newFormat.length; i++) {\n            format.appendChild(this.createDialogElements(i));\n        }\n        if (this.newFormat.length === 0) {\n            var outerDiv = this.createDialogElements();\n            var element = createElement('p', {\n                id: this.parentID + 'emptyFormat',\n                className: cls.EMPTY_FORMAT,\n                innerHTML: this.parent.localeObj.getConstant('emptyFormat')\n            });\n            outerDiv.appendChild(element);\n            format.appendChild(outerDiv);\n        }\n        this.dialog.setProperties({ 'content': format }, false);\n        for (var i = 0; i < this.newFormat.length; i++) {\n            this.renderDropDowns(i);\n            this.renderColorPicker(i);\n        }\n    };\n    ConditionalFormatting.prototype.createDialogElements = function (i) {\n        var outerDiv = createElement('div', {\n            id: this.parentID + 'outerDiv' + i, className: cls.FORMAT_OUTER\n        });\n        if (i !== undefined) {\n            var format = this.newFormat[i];\n            var button = createElement('button', {\n                id: this.parentID + 'removeButton' + i, className: cls.FORMAT_DELETE_BUTTON,\n                attrs: { type: 'button', 'title': this.parent.localeObj.getConstant('delete') }\n            });\n            outerDiv.appendChild(button);\n            var innerDiv = createElement('div', { id: this.parentID + 'innerDiv', className: cls.FORMAT_INNER });\n            var table = createElement('table', { id: this.parentID + 'cftable', className: cls.FORMAT_TABLE });\n            var tRow = createElement('tr');\n            var td = createElement('td');\n            var valuelabel = createElement('span', {\n                id: this.parentID + 'valuelabel' + i, className: cls.FORMAT_VALUE_LABEL,\n                innerHTML: this.parent.localeObj.getConstant('value')\n            });\n            td.appendChild(valuelabel);\n            tRow.appendChild(td);\n            table.appendChild(tRow);\n            tRow = createElement('tr');\n            td = createElement('td');\n            var measureDropdown = createElement('div', { id: this.parentID + 'measure' + i });\n            var measureInput = createElement('input', {\n                id: this.parentID + 'measureinput' + i,\n                attrs: { 'type': 'text', 'tabindex': '0' }\n            });\n            measureDropdown.appendChild(measureInput);\n            td.appendChild(measureDropdown);\n            tRow.appendChild(td);\n            td = createElement('td');\n            var conditionDropdown = createElement('div', { id: this.parentID + 'condition' });\n            var conditionInput = createElement('input', {\n                id: this.parentID + 'conditioninput' + i,\n                attrs: { 'type': 'text', 'tabindex': '0' }\n            });\n            conditionDropdown.appendChild(conditionInput);\n            td.appendChild(conditionDropdown);\n            tRow.appendChild(td);\n            td = createElement('td');\n            var style = !(format.conditions === 'Between' || format.conditions === 'NotBetween') ? 'display:none; width:10px' : '';\n            var value1 = createElement('input', {\n                id: this.parentID + 'conditionvalue1' + i,\n                attrs: {\n                    'type': 'text', 'tabindex': '0', 'value': !isNaN(format.value1) ? format.value1.toString() : '0',\n                    'placeholder': this.parent.localeObj.getConstant('emptyInput')\n                },\n                styles: this.parent.isAdaptive ? style === '' ? 'width: 35%' : 'width: 100%' : style === '' ? 'width: 45px' :\n                    'width: 120px',\n                className: cls.INPUT + ' ' + cls.FORMAT_VALUE1\n            });\n            td.appendChild(value1);\n            var valuespan = createElement('span', {\n                id: this.parentID + 'valuespan' + i, className: cls.FORMAT_VALUE_SPAN,\n                innerHTML: '&', styles: style\n            });\n            td.appendChild(valuespan);\n            var value2 = createElement('input', {\n                id: this.parentID + 'conditionvalue2' + i,\n                attrs: {\n                    'type': 'text', 'tabindex': '0', 'value': !isNaN(format.value2) ? format.value2.toString() : '0',\n                    'placeholder': this.parent.localeObj.getConstant('emptyInput')\n                },\n                styles: (this.parent.isAdaptive && style === '') ? 'width: 35%' : style === '' ? 'width: 45px' : style,\n                className: cls.INPUT + ' ' + cls.FORMAT_VALUE2\n            });\n            td.appendChild(value2);\n            tRow.appendChild(td);\n            table.appendChild(tRow);\n            if (this.parent.isAdaptive) {\n                innerDiv.appendChild(table);\n                table = createElement('table', { id: this.parentID + 'cftable', className: cls.FORMAT_TABLE });\n            }\n            tRow = createElement('tr');\n            td = createElement('td');\n            var formatlabel = createElement('span', {\n                id: this.parentID + 'formatlabel' + i, className: cls.FORMAT_LABEL,\n                innerHTML: this.parent.localeObj.getConstant('formatLabel')\n            });\n            td.appendChild(formatlabel);\n            tRow.appendChild(td);\n            table.appendChild(tRow);\n            tRow = createElement('tr');\n            td = createElement('td');\n            var fontNameDropdown = createElement('div', { id: this.parentID + 'fontname' });\n            var fontNameInput = createElement('input', {\n                id: this.parentID + 'fontnameinput' + i, attrs: { 'type': 'text', 'tabindex': '0' }\n            });\n            fontNameDropdown.appendChild(fontNameInput);\n            td.appendChild(fontNameDropdown);\n            tRow.appendChild(td);\n            td = createElement('td');\n            var fontSizeDropdown = createElement('div', { id: this.parentID + 'fontsize' });\n            var fontSizeInput = createElement('input', {\n                id: this.parentID + 'fontsizeinput' + i, attrs: { 'type': 'text', 'tabindex': '0' }\n            });\n            fontSizeDropdown.appendChild(fontSizeInput);\n            td.appendChild(fontSizeDropdown);\n            tRow.appendChild(td);\n            if (this.parent.isAdaptive) {\n                table.appendChild(tRow);\n                tRow = createElement('tr');\n                table.appendChild(tRow);\n                tRow = createElement('tr');\n            }\n            td = createElement('td');\n            var colorPicker1 = createElement('input', {\n                id: this.parentID + 'fontcolor' + i, attrs: { 'type': 'color', 'tabindex': '0' }, className: cls.FORMAT_FONT_COLOR\n            });\n            td.appendChild(colorPicker1);\n            var colorPicker2 = createElement('input', {\n                id: this.parentID + 'backgroundcolor' + i, attrs: { 'type': 'color', 'tabindex': '0' }, className: cls.FORMAT_BACK_COLOR\n            });\n            td.appendChild(colorPicker2);\n            tRow.appendChild(td);\n            td = createElement('td');\n            var valuePreview = createElement('div', {\n                id: this.parentID + 'valuepreview' + i, className: cls.INPUT + ' ' + cls.FORMAT_VALUE_PREVIEW,\n                innerHTML: '123.45',\n            });\n            td.appendChild(valuePreview);\n            tRow.appendChild(td);\n            table.appendChild(tRow);\n            innerDiv.appendChild(table);\n            outerDiv.appendChild(innerDiv);\n        }\n        return outerDiv;\n    };\n    ConditionalFormatting.prototype.renderDropDowns = function (i) {\n        var format = this.newFormat[i];\n        var fields = [];\n        fields.push({\n            index: 0, name: this.parent.localeObj.getConstant('AllValues'),\n            field: this.parent.localeObj.getConstant('AllValues')\n        });\n        for (var i_1 = 0; i_1 < this.parent.dataSourceSettings.values.length; i_1++) {\n            fields.push({\n                index: i_1 + 1,\n                name: this.parent.dataSourceSettings.values[i_1].caption || this.parent.dataSourceSettings.values[i_1].name,\n                field: this.parent.dataSourceSettings.values[i_1].name\n            });\n        }\n        var value = isNaN(format.measure) ? this.parent.localeObj.getConstant('AllValues') : format.measure;\n        this.fieldsDropDown[i] = new DropDownList({\n            dataSource: fields, fields: { text: 'name', value: 'field' },\n            value: value, width: this.parent.isAdaptive ? '100%' : '120px',\n            popupHeight: '200px', popupWidth: 'auto',\n            change: this.measureChange.bind(this, i)\n        });\n        this.fieldsDropDown[i].isStringTemplate = true;\n        this.fieldsDropDown[i].appendTo('#' + this.parentID + 'measureinput' + i);\n        var conditions = [\n            { value: 'LessThan', name: this.parent.localeObj.getConstant('LessThan') },\n            { value: 'LessThanOrEqualTo', name: this.parent.localeObj.getConstant('LessThanOrEqualTo') },\n            { value: 'GreaterThan', name: this.parent.localeObj.getConstant('GreaterThan') },\n            { value: 'GreaterThanOrEqualTo', name: this.parent.localeObj.getConstant('GreaterThanOrEqualTo') },\n            { value: 'Equals', name: this.parent.localeObj.getConstant('Equals') },\n            { value: 'NotEquals', name: this.parent.localeObj.getConstant('NotEquals') },\n            { value: 'Between', name: this.parent.localeObj.getConstant('Between') },\n            { value: 'NotBetween', name: this.parent.localeObj.getConstant('NotBetween') }\n        ];\n        value = isNaN(format.conditions) ? 'LessThan' : format.conditions;\n        this.conditionsDropDown[i] = new DropDownList({\n            dataSource: conditions, fields: { value: 'value', text: 'name' },\n            value: value, width: this.parent.isAdaptive ? '100%' : '120px',\n            popupHeight: '200px', popupWidth: 'auto',\n            change: this.conditionChange.bind(this, i)\n        });\n        this.conditionsDropDown[i].isStringTemplate = true;\n        this.conditionsDropDown[i].appendTo('#' + this.parentID + 'conditioninput' + i);\n        var fontNames = [\n            { index: 0, name: 'Arial' }, { index: 1, name: 'San Serif' }, { index: 2, name: 'Impact' },\n            { index: 3, name: 'Trebuchet MS' }, { index: 4, name: 'Serif' }, { index: 5, name: 'Verdana' },\n            { index: 6, name: 'Courier New' }, { index: 7, name: 'Times New Roman' }, { index: 8, name: 'Tahoma' },\n            { index: 9, name: 'Gerogia' }\n        ];\n        value = isNaN(format.style.fontFamily) ? 'Arial' : format.style.fontFamily;\n        this.fontNameDropDown[i] = new DropDownList({\n            dataSource: fontNames, fields: { text: 'name' },\n            value: value, width: this.parent.isAdaptive ? '100%' : '120px',\n            popupWidth: '150px', popupHeight: '200px',\n            change: this.fontNameChange.bind(this, i)\n        });\n        this.fontNameDropDown[i].isStringTemplate = true;\n        this.fontNameDropDown[i].appendTo('#' + this.parentID + 'fontnameinput' + i);\n        var fontSize = [\n            { index: 0, name: '9px' }, { index: 1, name: '10px' }, { index: 2, name: '11px' }, { index: 3, name: '12px' },\n            { index: 4, name: '13px' }, { index: 5, name: '14px' }, { index: 6, name: '15px' }, { index: 6, name: '16px' }\n        ];\n        value = isNaN(format.style.fontSize) ? '12px' : format.style.fontSize;\n        this.fontSizeDropDown[i] = new DropDownList({\n            dataSource: fontSize, fields: { text: 'name' }, popupHeight: '200px',\n            value: value, width: this.parent.isAdaptive ? '100%' : '120px',\n            change: this.fontSizeChange.bind(this, i)\n        });\n        this.fontSizeDropDown[i].isStringTemplate = true;\n        this.fontSizeDropDown[i].appendTo('#' + this.parentID + 'fontsizeinput' + i);\n    };\n    ConditionalFormatting.prototype.conditionChange = function (i, args) {\n        this.newFormat[i].conditions = args.value;\n        if (args.value === 'Between' || args.value === 'NotBetween') {\n            document.querySelector('#' + this.parentID + 'valuespan' + i).style.display = 'inline-block';\n            document.querySelector('#' + this.parentID + 'valuespan' + i).style.width =\n                this.parent.isAdaptive ? '10%' : '10px';\n            document.querySelector('#' + this.parentID + 'conditionvalue2' + i).style.display = 'inline-block';\n            document.querySelector('#' + this.parentID + 'conditionvalue2' + i).style.width =\n                this.parent.isAdaptive ? '35%' : '45px';\n            document.querySelector('#' + this.parentID + 'conditionvalue1' + i).style.width =\n                this.parent.isAdaptive ? '35%' : '45px';\n        }\n        else {\n            document.querySelector('#' + this.parentID + 'valuespan' + i).style.display = 'none';\n            document.querySelector('#' + this.parentID + 'conditionvalue2' + i).style.display = 'none';\n            document.querySelector('#' + this.parentID + 'conditionvalue1' + i).style.width =\n                this.parent.isAdaptive ? '100%' : '120px';\n        }\n    };\n    ConditionalFormatting.prototype.fontNameChange = function (i, args) {\n        this.newFormat[i].style.fontFamily = args.value.toString();\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.fontFamily = args.value;\n    };\n    ConditionalFormatting.prototype.fontSizeChange = function (i, args) {\n        this.newFormat[i].style.fontSize = args.value.toString();\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.fontSize = args.value;\n    };\n    ConditionalFormatting.prototype.measureChange = function (i, args) {\n        this.newFormat[i].measure = args.value.toString() === this.parent.localeObj.getConstant('AllValues') ?\n            undefined : args.value.toString();\n    };\n    ConditionalFormatting.prototype.renderColorPicker = function (i) {\n        var format = this.newFormat[i];\n        var value = isNaN(format.style.color) ? 'black' : format.style.color;\n        var color = this.isHex(value.substr(1)) ? value : this.colourNameToHex(value);\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.color = color;\n        this.fontColor[i] = new ColorPicker({\n            cssClass: cls.FORMAT_COLOR_PICKER + ' ' + cls.FORMAT_FONT_COLOR_PICKER,\n            value: color, mode: 'Palette',\n            change: this.fontColorChange.bind(this, i)\n        });\n        this.fontColor[i].isStringTemplate = true;\n        this.fontColor[i].appendTo('#' + this.parentID + 'fontcolor' + i);\n        addClass([this.fontColor[i].element.nextElementSibling.querySelector('.' + cls.SELECTED_COLOR)], cls.ICON);\n        value = isNaN(format.style.backgroundColor) ? 'white' : format.style.backgroundColor;\n        color = this.isHex(value.substr(1)) ? value : this.colourNameToHex(value);\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.backgroundColor = color;\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.fontFamily = format.style.fontFamily;\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.fontSize = format.style.fontSize;\n        this.backgroundColor[i] = new ColorPicker({\n            cssClass: cls.FORMAT_COLOR_PICKER, value: color, mode: 'Palette',\n            change: this.backColorChange.bind(this, i)\n        });\n        this.backgroundColor[i].isStringTemplate = true;\n        this.backgroundColor[i].appendTo('#' + this.parentID + 'backgroundcolor' + i);\n        addClass([this.backgroundColor[i].element.nextElementSibling.querySelector('.e-selected-color')], cls.ICON);\n        var toggleBtn = new Button({\n            iconCss: cls.ICON + ' ' + cls.FORMAT_DELETE_ICON,\n            cssClass: cls.FLAT\n        });\n        toggleBtn.isStringTemplate = true;\n        toggleBtn.appendTo('#' + this.parentID + 'removeButton' + i);\n        toggleBtn.element.onclick = this.toggleButtonClick.bind(this, i);\n    };\n    ConditionalFormatting.prototype.backColorChange = function (i, args) {\n        this.newFormat[i].style.backgroundColor = args.currentValue.hex;\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.backgroundColor =\n            args.currentValue.hex;\n    };\n    ConditionalFormatting.prototype.fontColorChange = function (i, args) {\n        this.newFormat[i].style.color = args.currentValue.hex;\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.color =\n            args.currentValue.hex;\n    };\n    ConditionalFormatting.prototype.toggleButtonClick = function (i) {\n        this.destroyColorPickers();\n        this.newFormat.splice(i, 1);\n        this.addFormat();\n    };\n    /**\n     * To check is Hex or not.\n     * @returns boolean\n     * @hidden\n     */\n    ConditionalFormatting.prototype.isHex = function (h) {\n        var a = parseInt(h, 16);\n        while (h.charAt(0) === '0') {\n            h = h.substr(1);\n        }\n        return (a.toString(16) === h.toLowerCase() || (a === 0 && h === ''));\n    };\n    /**\n     * To convert hex to RGB.\n     * @returns { r: number, g: number, b: number } | null\n     * @hidden\n     */\n    ConditionalFormatting.prototype.hexToRgb = function (hex) {\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        return result ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16)\n        } : null;\n    };\n    /**\n     * To convert color to hex.\n     * @returns string\n     * @hidden\n     */\n    ConditionalFormatting.prototype.colourNameToHex = function (colour) {\n        var colours = {\n            'aliceblue': '#f0f8ff', 'antiquewhite': '#faebd7', 'aqua': '#00ffff', 'aquamarine': '#7fffd4',\n            'azure': '#f0ffff', 'beige': '#f5f5dc', 'bisque': '#ffe4c4', 'black': '#000000',\n            'blanchedalmond': '#ffebcd', 'blue': '#0000ff',\n            'blueviolet': '#8a2be2', 'brown': '#a52a2a', 'burlywood': '#deb887', 'cadetblue': '#5f9ea0',\n            'chartreuse': '#7fff00', 'chocolate': '#d2691e',\n            'coral': '#ff7f50', 'cornflowerblue': '#6495ed', 'cornsilk': '#fff8dc', 'crimson': '#dc143c', 'cyan': '#00ffff',\n            'darkblue': '#00008b', 'darkcyan': '#008b8b', 'darkgoldenrod': '#b8860b', 'darkgray': '#a9a9a9', 'darkgreen': '#006400',\n            'darkkhaki': '#bdb76b', 'darkmagenta': '#8b008b', 'darkolivegreen': '#556b2f',\n            'darkorange': '#ff8c00', 'darkorchid': '#9932cc', 'darkred': '#8b0000', 'darksalmon': '#e9967a', 'darkseagreen': '#8fbc8f',\n            'darkslateblue': '#483d8b', 'darkslategray': '#2f4f4f', 'darkturquoise': '#00ced1',\n            'darkviolet': '#9400d3', 'deeppink': '#ff1493', 'deepskyblue': '#00bfff', 'dimgray': '#696969', 'dodgerblue': '#1e90ff',\n            'firebrick': '#b22222', 'floralwhite': '#fffaf0', 'forestgreen': '#228b22', 'fuchsia': '#ff00ff',\n            'gainsboro': '#dcdcdc', 'ghostwhite': '#f8f8ff', 'gold': '#ffd700', 'goldenrod': '#daa520',\n            'gray': '#808080', 'green': '#008000',\n            'greenyellow': '#adff2f', 'honeydew': '#f0fff0', 'hotpink': '#ff69b4', 'indianred ': '#cd5c5c',\n            'indigo': '#4b0082', 'ivory': '#fffff0',\n            'khaki': '#f0e68c', 'lavender': '#e6e6fa', 'lavenderblush': '#fff0f5', 'lawngreen': '#7cfc00', 'lemonchiffon': '#fffacd',\n            'lightblue': '#add8e6', 'lightcoral': '#f08080', 'lightcyan': '#e0ffff', 'lightgoldenrodyellow': '#fafad2',\n            'lightgrey': '#d3d3d3', 'lightgreen': '#90ee90', 'lightpink': '#ffb6c1', 'lightsalmon': '#ffa07a', 'lightseagreen': '#20b2aa',\n            'lightskyblue': '#87cefa', 'lightslategray': '#778899', 'lightsteelblue': '#b0c4de',\n            'lightyellow': '#ffffe0', 'lime': '#00ff00', 'limegreen': '#32cd32', 'linen': '#faf0e6',\n            'magenta': '#ff00ff', 'maroon': '#800000', 'mediumaquamarine': '#66cdaa', 'mediumblue': '#0000cd', 'mediumorchid': '#ba55d3',\n            'mediumpurple': '#9370d8', 'mediumseagreen': '#3cb371', 'mediumslateblue': '#7b68ee',\n            'mediumspringgreen': '#00fa9a', 'mediumturquoise': '#48d1cc', 'mediumvioletred': '#c71585', 'midnightblue': '#191970',\n            'mintcream': '#f5fffa', 'mistyrose': '#ffe4e1', 'moccasin': '#ffe4b5', 'navajowhite': '#ffdead', 'navy': '#000080',\n            'oldlace': '#fdf5e6', 'olive': '#808000', 'olivedrab': '#6b8e23', 'orange': '#ffa500', 'orangered': '#ff4500',\n            'orchid': '#da70d6',\n            'palegoldenrod': '#eee8aa', 'palegreen': '#98fb98', 'paleturquoise': '#afeeee', 'palevioletred': '#d87093',\n            'papayawhip': '#ffefd5',\n            'peachpuff': '#ffdab9', 'peru': '#cd853f', 'pink': '#ffc0cb', 'plum': '#dda0dd', 'powderblue': '#b0e0e6', 'purple': '#800080',\n            'rebeccapurple': '#663399', 'red': '#ff0000', 'rosybrown': '#bc8f8f', 'royalblue': '#4169e1',\n            'saddlebrown': '#8b4513', 'salmon': '#fa8072', 'sandybrown': '#f4a460', 'seagreen': '#2e8b57',\n            'seashell': '#fff5ee', 'sienna': '#a0522d',\n            'silver': '#c0c0c0', 'skyblue': '#87ceeb', 'slateblue': '#6a5acd', 'slategray': '#708090', 'snow': '#fffafa',\n            'springgreen': '#00ff7f',\n            'steelblue': '#4682b4', 'tan': '#d2b48c', 'teal': '#008080', 'thistle': '#d8bfd8', 'tomato': '#ff6347', 'turquoise': '#40e0d0',\n            'violet': '#ee82ee', 'wheat': '#f5deb3', 'white': '#ffffff', 'whitesmoke': '#f5f5f5', 'yellow': '#ffff00',\n            'yellowgreen': '#9acd32'\n        };\n        if (typeof colours[colour.toLowerCase()] !== 'undefined') {\n            return colours[colour.toLowerCase()];\n        }\n        else if (colour.search('rgba') === 0) {\n            var value = colour.substr(5).split(')')[0].split(',');\n            var rgb = '';\n            var a = '';\n            for (var i = 0; i < value.length - 1; i++) {\n                value[i] = (+value[i]).toString(16);\n                if (value[i].length === 1) {\n                    value[i] = '0' + value[i];\n                }\n                rgb = rgb + value[i];\n            }\n            a = (Math.round(+value[3] * 255)).toString(16);\n            return '#' + rgb + a;\n        }\n        else if (colour.search('rgb') === 0) {\n            var value = colour.substr(4).split(')')[0].split(',');\n            var rgb = '';\n            for (var i = 0; i < value.length; i++) {\n                value[i] = (+value[i]).toString(16);\n                if (value[i].length === 1) {\n                    value[i] = '0' + value[i];\n                }\n                rgb = rgb + value[i];\n            }\n            return '#' + rgb;\n        }\n        return '#d5d5d5';\n    };\n    ConditionalFormatting.prototype.removeDialog = function () {\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.destroyColorPickers();\n            this.dialog.destroy();\n        }\n        if (document.querySelector('#' + this.parentID + 'conditionalformatting')) {\n            remove(document.querySelector('#' + this.parentID + 'conditionalformatting'));\n        }\n    };\n    ConditionalFormatting.prototype.destroyColorPickers = function () {\n        for (var i = 0; i < (this.newFormat ? this.newFormat.length : 0); i++) {\n            if (this.fontColor && this.fontColor[i] && !this.fontColor[i].isDestroyed) {\n                this.fontColor[i].destroy();\n            }\n            if (this.backgroundColor && this.backgroundColor[i] && !this.backgroundColor[i].isDestroyed) {\n                this.backgroundColor[i].destroy();\n            }\n        }\n    };\n    /**\n     * To create Conditional Formatting dialog.\n     * @returns void\n     */\n    ConditionalFormatting.prototype.showConditionalFormattingDialog = function () {\n        this.newFormat = [];\n        for (var i = 0; i < this.parent.dataSourceSettings.conditionalFormatSettings.length; i++) {\n            this.newFormat.push(extend({}, this.parent.dataSourceSettings.conditionalFormatSettings[i].properties, null, true));\n        }\n        this.createDialog();\n        this.dialog.refresh();\n        this.addFormat();\n    };\n    /**\n     * To destroy the Conditional Formatting dialog\n     * @returns void\n     * @hidden\n     */\n    ConditionalFormatting.prototype.destroy = function () {\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.dialog.close();\n        }\n        else {\n            return;\n        }\n    };\n    return ConditionalFormatting;\n}());\nexport { ConditionalFormatting };\n","import { Toolbar as tool, Menu } from '@syncfusion/ej2-navigations';\nimport { remove, createElement, formatUnit, isBlazor, getInstance, addClass, removeClass } from '@syncfusion/ej2-base';\nimport * as events from '../../common/base/constant';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport * as cls from '../../common/base/css-constant';\nimport { Deferred } from '@syncfusion/ej2-data';\nimport { CheckBox } from '@syncfusion/ej2-buttons';\nimport { PdfPageOrientation } from '@syncfusion/ej2-pdf-export';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module for Toolbar\n */\n/** @hidden */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        /** @hidden */\n        this.isMultiAxisChange = false;\n        this.currentReport = '';\n        this.parent = parent;\n        this.parent.toolbarModule = this;\n        this.addEventListener();\n    }\n    /**\n     * It returns the Module name.\n     * @returns string\n     * @hidden\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    Toolbar.prototype.createToolbar = function () {\n        this.parent.isModified = false;\n        this.renderDialog();\n        if (document.querySelector('#' + this.parent.element.id + 'pivot-toolbar') !== null) {\n            remove(document.querySelector('#' + this.parent.element.id + 'pivot-toolbar'));\n        }\n        var element = createElement('div', {\n            id: this.parent.element.id + 'pivot-toolbar',\n            className: cls.GRID_TOOLBAR\n        });\n        if (this.parent.showFieldList && this.parent.element.querySelector('#' + this.parent.element.id + '_PivotFieldList')) {\n            this.parent.element.insertBefore(element, this.parent.element.querySelector('#' + this.parent.element.id + '_PivotFieldList'));\n        }\n        else if (this.parent.showGroupingBar &&\n            this.parent.element.querySelector('#' + this.parent.element.id + ' .' + 'e-pivot-grouping-bar')) {\n            this.parent.element.insertBefore(element, this.parent.element.querySelector('#' + this.parent.element.id + ' .' + 'e-pivot-grouping-bar'));\n        }\n        else {\n            this.parent.element.insertBefore(element, this.parent.element.querySelector('#' + this.parent.element.id + '_grid'));\n        }\n        this.toolbar = new tool({\n            created: this.create.bind(this),\n            enableRtl: this.parent.enableRtl,\n            items: this.getItems(),\n            allowKeyboard: false,\n        });\n        this.toolbar.isStringTemplate = true;\n        var viewStr = 'viewContainerRef';\n        var registerTemp = 'registeredTemplate';\n        if (this.parent[viewStr]) {\n            this.toolbar[registerTemp] = {};\n            this.toolbar[viewStr] = this.parent[viewStr];\n        }\n        if (this.parent.toolbarTemplate && typeof (this.parent.toolbarTemplate) === 'string') {\n            this.toolbar.appendTo(this.parent.toolbarTemplate);\n            this.parent.element.replaceChild(this.toolbar.element, this.parent.element.querySelector('.' + cls.GRID_TOOLBAR));\n            this.toolbar.element.classList.add(cls.GRID_TOOLBAR);\n        }\n        else {\n            this.toolbar.appendTo('#' + this.parent.element.id + 'pivot-toolbar');\n            this.toolbar.width = this.parent.grid ? (this.parent.getGridWidthAsNumber() - 2) : (this.parent.getWidthAsNumber() - 2);\n        }\n        if (this.parent.chart) {\n            this.parent.chart.setProperties({ width: this.parent.grid ? this.parent.getGridWidthAsNumber().toString() : this.parent.getWidthAsNumber().toString() }, true);\n        }\n        if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n            this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n            this.parent.groupingBarModule.refreshUI();\n        }\n    };\n    Toolbar.prototype.fetchReports = function () {\n        /* tslint:disable:no-any */\n        var reports = { reportName: [] };\n        var tool = this;\n        if (isBlazor()) {\n            reports = this.fetchReportsArgs();\n            reports.then(function (e) {\n                tool.reportList.dataSource = e.reportName;\n                return e;\n            });\n        }\n        else {\n            /* tslint:enable:no-any */\n            this.parent.trigger(events.fetchReport, reports);\n        }\n        return reports;\n    };\n    Toolbar.prototype.fetchReportsArgs = function () {\n        var callbackPromise = new Deferred();\n        var reports = { reportName: [] };\n        this.parent.trigger(events.fetchReport, reports, function (observedArgs) {\n            callbackPromise.resolve(observedArgs);\n        });\n        return callbackPromise;\n    };\n    /* tslint:disable */\n    Toolbar.prototype.getItems = function () {\n        var toolbar = this.parent.toolbar.filter(function (v, i, a) { return a.indexOf(v) === i; });\n        var items = [];\n        for (var _i = 0, toolbar_1 = toolbar; _i < toolbar_1.length; _i++) {\n            var item = toolbar_1[_i];\n            switch (item) {\n                case 'New':\n                    items.push({\n                        prefixIcon: cls.GRID_NEW + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('new'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'new'\n                    });\n                    break;\n                case 'Save':\n                    items.push({\n                        prefixIcon: cls.GRID_SAVE + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('save'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'save'\n                    });\n                    break;\n                case 'SaveAs':\n                    items.push({\n                        prefixIcon: cls.GRID_SAVEAS + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('saveAs'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'saveas'\n                    });\n                    break;\n                case 'Rename':\n                    items.push({\n                        prefixIcon: cls.GRID_RENAME + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('rename'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'rename'\n                    });\n                    break;\n                case 'Remove':\n                    items.push({\n                        prefixIcon: cls.GRID_REMOVE + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('deleteReport'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'remove'\n                    });\n                    break;\n                case 'Load':\n                    items.push({\n                        template: '<div><input class=' + cls.GRID_LOAD + ' id=' + this.parent.element.id + '_reportlist></input></div>',\n                        click: this.actionClick.bind(this),\n                        id: this.parent.element.id + 'load'\n                    });\n                    break;\n                case 'Grid':\n                    var toDisable = this.parent.displayOption.view === 'Chart';\n                    items.push({\n                        prefixIcon: cls.TOOLBAR_GRID + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('grid'),\n                        id: this.parent.element.id + 'grid', cssClass: toDisable ? cls.MENU_DISABLE : '',\n                        click: this.menuItemClick.bind(this)\n                    });\n                    break;\n                case 'Chart':\n                    var validTypes = (this.parent.displayOption.view === 'Table');\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'chart_menu\"></ul>',\n                        id: this.parent.element.id + 'chartmenu', cssClass: validTypes ? cls.MENU_DISABLE : ''\n                    });\n                    break;\n                case 'MDX':\n                    if (this.parent.dataType === 'olap') {\n                        items.push({\n                            prefixIcon: cls.GRID_MDX + ' ' + cls.ICON, id: this.parent.element.id + 'mdxQuery',\n                            click: this.actionClick.bind(this), tooltipText: this.parent.localeObj.getConstant('mdxQuery')\n                        });\n                    }\n                    break;\n                case 'Export':\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'export_menu\"></ul>',\n                        id: this.parent.element.id + 'exportmenu'\n                    });\n                    break;\n                case 'SubTotal':\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'subtotal_menu\"></ul>',\n                        id: this.parent.element.id + 'subtotalmenu'\n                    });\n                    break;\n                case 'GrandTotal':\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'grandtotal_menu\"></ul>',\n                        id: this.parent.element.id + 'grandtotalmenu'\n                    });\n                    break;\n                case 'ConditionalFormatting':\n                    items.push({\n                        prefixIcon: cls.GRID_FORMATTING + ' ' + cls.ICON, id: this.parent.element.id + 'formatting',\n                        click: this.actionClick.bind(this), tooltipText: this.parent.localeObj.getConstant('toolbarFormatting')\n                    });\n                    break;\n                case 'NumberFormatting':\n                    items.push({\n                        prefixIcon: cls.FORMATTING_TOOLBAR + ' ' + cls.ICON, id: this.parent.element.id + 'numberFormatting',\n                        click: this.actionClick.bind(this), tooltipText: this.parent.localeObj.getConstant('numberFormat')\n                    });\n                    break;\n                case 'Formatting':\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'formatting_menu\"></ul>',\n                        id: this.parent.element.id + 'formattingmenu'\n                    });\n                    break;\n                case 'FieldList':\n                    items.push({\n                        prefixIcon: cls.TOOLBAR_FIELDLIST + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('fieldList'),\n                        click: this.actionClick.bind(this), align: 'Right', id: this.parent.element.id + 'fieldlist'\n                    });\n                    if (this.parent.element.querySelector('.e-toggle-field-list')) {\n                        this.parent.element.querySelector('.e-toggle-field-list').style.display = 'none';\n                    }\n                    break;\n                default:\n                    if (typeof (item) === 'object') {\n                        items.push(item);\n                    }\n            }\n        }\n        if (this.parent.showFieldList && toolbar.indexOf('FieldList') === -1 && this.parent.element.querySelector('#' + this.parent.element.id + '_PivotFieldList') &&\n            this.parent.element.querySelector('#' + this.parent.element.id + '_PivotFieldList').style.display === 'none') {\n            this.parent.element.querySelector('#' + this.parent.element.id + '_PivotFieldList').style.display = 'block';\n        }\n        var toolbarArgs = { customToolbar: items };\n        this.parent.trigger(events.toolbarRender, toolbarArgs);\n        return items;\n    };\n    /* tslint:enable */\n    Toolbar.prototype.reportChange = function (args) {\n        this.dropArgs = args;\n        if (this.parent.isModified && this.currentReport !== '') {\n            this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('newReportConfirm'));\n        }\n        else {\n            this.reportLoad(args);\n        }\n    };\n    Toolbar.prototype.reportLoad = function (args) {\n        var _this_1 = this;\n        if (this.action !== 'Save' && this.action !== 'Rename' && this.action !== 'New') {\n            var loadArgs = {\n                reportName: args.itemData.value\n            };\n            this.parent.trigger(events.loadReport, loadArgs, function (observedArgs) {\n                _this_1.currentReport = observedArgs.reportName;\n                _this_1.parent.isModified = false;\n            });\n        }\n    };\n    Toolbar.prototype.saveReport = function (args) {\n        if (this.currentReport && this.currentReport !== '' && args.item.id === (this.parent.element.id + 'save')) {\n            var saveArgs = {\n                report: this.parent.getPersistData(),\n                reportName: this.currentReport\n            };\n            this.parent.trigger(events.saveReport, saveArgs);\n            this.parent.isModified = false;\n        }\n        else if (this.currentReport === '' && (args.item.id === (this.parent.element.id + 'save') || args.item.id === (this.parent.element.id + 'saveas'))) {\n            this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('emptyReport'));\n            return;\n        }\n        else {\n            this.dialogShow(args, 'saveAs');\n        }\n    };\n    Toolbar.prototype.mdxQueryDialog = function (args) {\n        if (!(this.mdxDialog && !this.mdxDialog.isDestroyed)) {\n            this.renderMDXDialog();\n        }\n        var outerDiv = createElement('div', {\n            className: cls.MDX_QUERY\n        });\n        var textarea = createElement('textarea', {\n            className: cls.MDX_QUERY_CONTENT,\n            innerHTML: this.parent.olapEngineModule.getMDXQuery(this.parent.dataSourceSettings).trim(),\n            attrs: { 'readonly': 'readonly' }\n        });\n        outerDiv.appendChild(textarea);\n        this.mdxDialog.content = outerDiv;\n        this.mdxDialog.show();\n    };\n    Toolbar.prototype.dialogShow = function (args, action) {\n        if (args) {\n            this.dialog.header = args.item.tooltipText;\n            var outerDiv = createElement('div', {\n                className: cls.GRID_REPORT_OUTER\n            });\n            var label = createElement('div', {\n                className: cls.GRID_REPORT_LABEL,\n                innerHTML: this.parent.localeObj.getConstant('reportName')\n            });\n            var input = createElement('input', {\n                className: cls.GRID_REPORT_INPUT + ' ' + cls.INPUT,\n                innerHTML: (action && action === 'rename' ? this.currentReport : ''),\n                attrs: {\n                    'placeholder': this.parent.localeObj.getConstant('emptyReportName'),\n                    'value': (action && action === 'rename' ? this.currentReport : '')\n                },\n            });\n            input.setSelectionRange(input.textContent.length, input.textContent.length);\n            outerDiv.appendChild(label);\n            outerDiv.appendChild(input);\n            this.dialog.content = outerDiv;\n            this.dialog.refresh();\n            this.dialog.show();\n        }\n    };\n    Toolbar.prototype.renameReport = function (args) {\n        this.parent.trigger(events.toolbarClick, args);\n        if (this.currentReport && this.currentReport !== '') {\n            this.dialogShow(args, 'rename');\n        }\n        else {\n            this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('emptyReport'));\n            return;\n        }\n    };\n    Toolbar.prototype.actionClick = function (args) {\n        switch (args.item.id) {\n            case (this.parent.element.id + 'save'):\n            case (this.parent.element.id + 'saveas'):\n                this.saveReport(args);\n                break;\n            case (this.parent.element.id + 'remove'):\n                this.action = 'Remove';\n                if (this.currentReport && this.currentReport !== '') {\n                    this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeConfirm'));\n                }\n                else {\n                    this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('emptyReport'));\n                }\n                return;\n            case (this.parent.element.id + 'rename'):\n                this.renameReport(args);\n                break;\n            case (this.parent.element.id + 'new'):\n                this.action = 'New';\n                this.newArgs = args;\n                if (this.parent.isModified && this.currentReport && this.currentReport !== '') {\n                    this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('newReportConfirm'));\n                }\n                else {\n                    this.createNewReport(args);\n                }\n                break;\n            case (this.parent.element.id + 'load'):\n                this.action = 'Load';\n                break;\n            case (this.parent.element.id + 'fieldlist'):\n                if (this.parent.pivotFieldListModule && this.parent.pivotFieldListModule.dialogRenderer) {\n                    this.parent.pivotFieldListModule.dialogRenderer.fieldListDialog.show();\n                }\n                break;\n            case (this.parent.element.id + 'formatting'):\n                if (this.parent.conditionalFormattingModule) {\n                    this.parent.conditionalFormattingModule.showConditionalFormattingDialog();\n                }\n                break;\n            case (this.parent.element.id + 'mdxQuery'):\n                this.mdxQueryDialog(args);\n                break;\n            case (this.parent.element.id + 'numberFormatting'):\n                if (this.parent.numberFormattingModule) {\n                    this.parent.numberFormattingModule.showNumberFormattingDialog();\n                }\n                break;\n        }\n    };\n    Toolbar.prototype.renderDialog = function () {\n        if (document.querySelector('#' + this.parent.element.id + 'report-dialog') !== null) {\n            remove(document.querySelector('#' + this.parent.element.id + 'report-dialog'));\n        }\n        this.parent.element.appendChild(createElement('div', {\n            id: this.parent.element.id + 'report-dialog',\n            className: cls.GRID_REPORT_DIALOG\n        }));\n        this.dialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.okBtnClick.bind(this),\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('ok'),\n                        isPrimary: true\n                    }\n                },\n                {\n                    click: this.cancelBtnClick.bind(this),\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('cancel')\n                    }\n                }\n            ],\n            isModal: true,\n            visible: false,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            zIndex: 1000001,\n            closeOnEscape: true,\n            target: document.body\n        });\n        this.dialog.isStringTemplate = true;\n        this.dialog.appendTo('#' + this.parent.element.id + 'report-dialog');\n    };\n    Toolbar.prototype.renderMDXDialog = function () {\n        if (document.querySelector('#' + this.parent.element.id + 'mdx-dialog') !== null) {\n            remove(document.querySelector('#' + this.parent.element.id + 'mdx-dialog'));\n        }\n        this.parent.element.appendChild(createElement('div', {\n            id: this.parent.element.id + 'mdx-dialog',\n            className: cls.GRID_MDX_DIALOG\n        }));\n        this.mdxDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.copyMDXQuery.bind(this),\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('copy'),\n                        isPrimary: true\n                    }\n                }\n            ],\n            header: this.parent.localeObj.getConstant('mdxQuery'),\n            isModal: true,\n            visible: false,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            zIndex: 1000001,\n            closeOnEscape: true,\n            target: document.body\n        });\n        this.mdxDialog.isStringTemplate = true;\n        this.mdxDialog.appendTo('#' + this.parent.element.id + 'mdx-dialog');\n    };\n    Toolbar.prototype.copyMDXQuery = function () {\n        var textArea = this.mdxDialog.element.querySelector('.' + cls.MDX_QUERY_CONTENT);\n        try {\n            textArea.select();\n            document.execCommand('copy');\n        }\n        catch (err) {\n            window.alert('Oops, unable to copy');\n        }\n        return;\n    };\n    Toolbar.prototype.okBtnClick = function () {\n        var reportInput = this.dialog.element.querySelector('.' + cls.GRID_REPORT_INPUT);\n        if (reportInput && reportInput.value === '') {\n            reportInput.focus();\n            return;\n        }\n        if ((this.dialog.header === this.parent.localeObj.getConstant('save') ||\n            this.dialog.header === this.parent.localeObj.getConstant('saveAs')) &&\n            reportInput.value && reportInput.value !== '') {\n            this.action = 'Save';\n            this.currentReport = reportInput.value;\n            var isExist_1 = false;\n            /* tslint:disable */\n            var _this_2 = this;\n            /* tslint:enable */\n            var reports = { reportName: [] };\n            this.parent.trigger(events.fetchReport, reports, function (observedArgs) {\n                for (var i = 0; i < observedArgs.reportName.length; i++) {\n                    if (reportInput.value === observedArgs.reportName[i]) {\n                        isExist_1 = true;\n                        break;\n                    }\n                }\n                if (isExist_1) {\n                    _this_2.createConfirmDialog(_this_2.parent.localeObj.getConstant('alert'), _this_2.parent.localeObj.getConstant('replaceConfirmBefore') + '\"' + reportInput.value + '\"' +\n                        _this_2.parent.localeObj.getConstant('replaceConfirmAfter'));\n                    return;\n                }\n                var saveArgs = {\n                    report: _this_2.parent.getPersistData(),\n                    reportName: reportInput.value\n                };\n                _this_2.parent.trigger(events.saveReport, saveArgs);\n                _this_2.parent.isModified = false;\n                _this_2.updateReportList();\n                _this_2.dialog.hide();\n            });\n        }\n        else if (this.dialog.header === this.parent.localeObj.getConstant('new') &&\n            reportInput.value && reportInput.value !== '') {\n            this.action = 'New';\n            this.currentReport = reportInput.value;\n            var isExist_2 = false;\n            /* tslint:disable */\n            var _this_3 = this;\n            /* tslint:enable */\n            var reports_1 = { reportName: [] };\n            this.parent.trigger(events.fetchReport, reports_1, function (observedArgs) {\n                for (var i = 0; i < observedArgs.reportName.length; i++) {\n                    if (reportInput.value === reports_1.reportName[i]) {\n                        isExist_2 = true;\n                        break;\n                    }\n                }\n                if (isExist_2) {\n                    _this_3.createConfirmDialog(_this_3.parent.localeObj.getConstant('alert'), _this_3.parent.localeObj.getConstant('replaceConfirmBefore') + '\"' + reportInput.value + '\"' +\n                        _this_3.parent.localeObj.getConstant('replaceConfirmAfter'));\n                    return;\n                }\n                _this_3.parent.trigger(events.newReport);\n                if (isBlazor()) {\n                    _this_3.parent.setProperties({ dataSourceSettings: { columns: [], rows: [], values: [], filters: [] } }, false);\n                }\n                var saveArgs = {\n                    report: _this_3.parent.getPersistData(),\n                    reportName: reportInput.value\n                };\n                _this_3.parent.trigger(events.saveReport, saveArgs);\n                _this_3.parent.isModified = false;\n                _this_3.updateReportList();\n                _this_3.dialog.hide();\n            });\n        }\n        else if (this.dialog.header === this.parent.localeObj.getConstant('rename') && reportInput.value && reportInput.value !== '') {\n            if (this.currentReport === reportInput.value) {\n                this.dialog.hide();\n                return;\n            }\n            this.action = 'Rename';\n            var isExist_3 = false;\n            /* tslint:disable */\n            var _this_4 = this;\n            /* tslint:enable */\n            var reports = { reportName: [] };\n            this.parent.trigger(events.fetchReport, reports, function (observedArgs) {\n                _this_4.renameText = reportInput.value;\n                for (var i = 0; i < observedArgs.reportName.length; i++) {\n                    if (reportInput.value === observedArgs.reportName[i]) {\n                        isExist_3 = true;\n                        break;\n                    }\n                }\n                if (isExist_3) {\n                    _this_4.createConfirmDialog(_this_4.parent.localeObj.getConstant('alert'), _this_4.parent.localeObj.getConstant('replaceConfirmBefore') + '\"' + reportInput.value + '\"' +\n                        _this_4.parent.localeObj.getConstant('replaceConfirmAfter'));\n                    return;\n                }\n                var renameArgs = {\n                    reportName: _this_4.currentReport,\n                    rename: reportInput.value\n                };\n                _this_4.parent.trigger(events.renameReport, renameArgs);\n                _this_4.currentReport = reportInput.value;\n                _this_4.updateReportList();\n                _this_4.dialog.hide();\n            });\n        }\n    };\n    Toolbar.prototype.createNewReport = function (args) {\n        this.dialogShow(args);\n    };\n    Toolbar.prototype.cancelBtnClick = function () {\n        this.dialog.hide();\n    };\n    Toolbar.prototype.createConfirmDialog = function (title, description) {\n        if (document.getElementById(this.parent.element.id + '_ConfirmDialog')) {\n            remove(document.getElementById(this.parent.element.id + '_ConfirmDialog').parentElement);\n        }\n        var errorDialog = createElement('div', {\n            id: this.parent.element.id + '_ConfirmDialog',\n            className: cls.ERROR_DIALOG_CLASS\n        });\n        this.parent.element.appendChild(errorDialog);\n        this.confirmPopUp = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            header: title,\n            content: description,\n            isModal: true,\n            visible: true,\n            closeOnEscape: true,\n            target: document.body,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('yes'), isPrimary: true,\n                        cssClass: cls.OK_BUTTON_CLASS\n                    },\n                    click: this.okButtonClick.bind(this)\n                },\n                {\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('no'),\n                        cssClass: cls.CANCEL_BUTTON_CLASS\n                    },\n                    click: this.cancelButtonClick.bind(this)\n                }\n            ]\n        });\n        this.confirmPopUp.isStringTemplate = true;\n        this.confirmPopUp.appendTo(errorDialog);\n        this.confirmPopUp.element.querySelector('.e-dlg-header').innerHTML = title;\n    };\n    Toolbar.prototype.okButtonClick = function () {\n        var _this_1 = this;\n        if (this.action === 'Remove') {\n            var removeArgs = {\n                reportName: this.currentReport\n            };\n            this.parent.trigger(events.removeReport, removeArgs);\n            var reports = this.fetchReports();\n            if (reports.reportName && reports.reportName.length > 0) {\n                var loadArgs = {\n                    reportName: reports.reportName[reports.reportName.length - 1]\n                };\n                this.parent.trigger(events.loadReport, loadArgs, function (observedArgs) {\n                    _this_1.currentReport = observedArgs.reportName;\n                    _this_1.parent.isModified = false;\n                });\n                this.currentReport = reports.reportName[reports.reportName.length - 1];\n            }\n            else {\n                this.currentReport = '';\n                this.parent.isModified = false;\n                this.action = '';\n            }\n            this.updateReportList();\n        }\n        else if (this.action === 'New' || (this.action !== 'Save' && this.action !== 'Rename' && this.action !== 'New')) {\n            if (this.currentReport && this.currentReport !== '' && this.parent.isModified) {\n                var saveArgs = {\n                    report: this.parent.getPersistData(),\n                    reportName: this.currentReport\n                };\n                this.parent.trigger(events.saveReport, saveArgs);\n                this.parent.isModified = false;\n                if (this.action === 'New') {\n                    this.createNewReport(this.newArgs);\n                }\n                else {\n                    this.reportLoad(this.dropArgs);\n                }\n            }\n            else if (this.action === 'New') {\n                this.parent.trigger(events.newReport);\n                if (isBlazor()) {\n                    this.parent.setProperties({ dataSourceSettings: { columns: [], rows: [], values: [], filters: [] } }, false);\n                }\n                var saveArgs = {\n                    report: this.parent.getPersistData(),\n                    reportName: this.currentReport\n                };\n                this.parent.trigger(events.saveReport, saveArgs);\n                this.parent.isModified = false;\n                this.updateReportList();\n                this.dialog.hide();\n            }\n        }\n        else if (this.action === 'Save') {\n            var saveArgs = {\n                report: this.parent.getPersistData(),\n                reportName: this.currentReport\n            };\n            this.parent.trigger(events.saveReport, saveArgs);\n            this.parent.isModified = false;\n            this.updateReportList();\n            this.dialog.hide();\n        }\n        else if (this.action === 'Rename') {\n            var renameArgs = {\n                reportName: this.currentReport,\n                rename: this.renameText,\n                isReportExists: true\n            };\n            this.parent.trigger(events.renameReport, renameArgs);\n            this.currentReport = this.renameText;\n            this.parent.isModified = false;\n            this.updateReportList();\n            this.dialog.hide();\n        }\n        this.confirmPopUp.hide();\n    };\n    Toolbar.prototype.cancelButtonClick = function () {\n        if (this.action === 'New') {\n            if (this.parent.isModified) {\n                this.createNewReport(this.newArgs);\n            }\n            else {\n                this.dialog.hide();\n            }\n        }\n        else if (this.action === 'Save') {\n            this.currentReport = this.reportList.value;\n            this.dialog.hide();\n        }\n        else if (this.action === 'Rename') {\n            this.dialog.hide();\n        }\n        else if (this.dropArgs && this.action !== 'Remove') {\n            this.reportLoad(this.dropArgs);\n        }\n        this.confirmPopUp.hide();\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.createChartMenu = function () {\n        var _this_1 = this;\n        if (document.querySelector('#' + this.parent.element.id + 'chart_menu')) {\n            var menuItems = [];\n            var types = this.getValidChartType();\n            for (var i = 0; (i < types.length && i < 7); i++) {\n                var type = types[i];\n                menuItems.push({\n                    text: this.parent.localeObj.getConstant(type.toLowerCase()),\n                    id: this.parent.element.id + '_' + type,\n                });\n            }\n            if (menuItems.length === 7) {\n                menuItems.splice(6);\n                menuItems.push({\n                    text: this.parent.localeObj.getConstant('MoreOption'),\n                    id: this.parent.element.id + '_' + 'ChartMoreOption',\n                });\n            }\n            var toDisable = (menuItems.length <= 0 || this.parent.displayOption.view === 'Table');\n            menuItems.push({\n                separator: true\n            });\n            menuItems.push({\n                text: this.parent.localeObj.getConstant('multipleAxes'),\n                id: this.parent.element.id + '_' + 'multipleAxes'\n            });\n            menuItems.push({\n                text: this.parent.localeObj.getConstant('showLegend'),\n                id: this.parent.element.id + '_' + 'showLegend'\n            });\n            var menu = [{\n                    iconCss: cls.TOOLBAR_CHART + ' ' + cls.ICON,\n                    items: toDisable ? [] : menuItems,\n                }];\n            if (this.chartMenu && !this.chartMenu.isDestroyed) {\n                this.chartMenu.destroy();\n            }\n            this.chartMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this),\n                beforeOpen: this.whitespaceRemove.bind(this),\n                onClose: function (args) {\n                    _this_1.focusToolBar();\n                },\n                beforeItemRender: this.multipleAxesCheckbox.bind(this)\n            });\n            this.chartMenu.isStringTemplate = true;\n            this.chartMenu.appendTo('#' + this.parent.element.id + 'chart_menu');\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    Toolbar.prototype.create = function () {\n        var _this_1 = this;\n        if (this.parent.element.querySelector('#' + this.parent.element.id + 'chart_menu')) {\n            this.createChartMenu();\n        }\n        if (this.parent.element.querySelector('#' + this.parent.element.id + 'export_menu')) {\n            var menu = [{\n                    iconCss: cls.GRID_EXPORT + ' ' + cls.ICON,\n                    items: [\n                        {\n                            text: this.parent.localeObj.getConstant('pdf'),\n                            iconCss: cls.GRID_PDF_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'pdf'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('excel'),\n                            iconCss: cls.GRID_EXCEL_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'excel'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('csv'),\n                            iconCss: cls.GRID_CSV_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'csv'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('png'),\n                            iconCss: cls.GRID_PNG_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'png'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('jpeg'),\n                            iconCss: cls.GRID_JPEG_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'jpeg'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('svg'),\n                            iconCss: cls.GRID_SVG_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'svg'\n                        }\n                    ]\n                }];\n            this.exportMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this), beforeOpen: this.updateExportMenu.bind(this),\n                onClose: function (args) {\n                    _this_1.focusToolBar();\n                }\n            });\n            this.exportMenu.isStringTemplate = true;\n            this.exportMenu.appendTo('#' + this.parent.element.id + 'export_menu');\n        }\n        if (this.parent.element.querySelector('#' + this.parent.element.id + 'subtotal_menu')) {\n            var menu = [{\n                    iconCss: cls.GRID_SUB_TOTAL + ' ' + cls.ICON,\n                    items: [\n                        {\n                            text: this.parent.localeObj.getConstant('showSubTotals'),\n                            id: this.parent.element.id + 'subtotal',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('doNotShowSubTotals'),\n                            id: this.parent.element.id + 'notsubtotal',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('showSubTotalsRowsOnly'),\n                            id: this.parent.element.id + 'subtotalrow',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('showSubTotalsColumnsOnly'),\n                            id: this.parent.element.id + 'subtotalcolumn',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                    ]\n                }];\n            this.subTotalMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this), beforeOpen: this.updateSubtotalSelection.bind(this),\n                onClose: function (args) {\n                    _this_1.focusToolBar();\n                }\n            });\n            this.subTotalMenu.isStringTemplate = true;\n            this.subTotalMenu.appendTo('#' + this.parent.element.id + 'subtotal_menu');\n        }\n        if (this.parent.element.querySelector('#' + this.parent.element.id + 'grandtotal_menu')) {\n            var menu = [{\n                    iconCss: cls.GRID_GRAND_TOTAL + ' ' + cls.ICON,\n                    items: [\n                        {\n                            text: this.parent.localeObj.getConstant('showGrandTotals'),\n                            id: this.parent.element.id + 'grandtotal',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('doNotShowGrandTotals'),\n                            id: this.parent.element.id + 'notgrandtotal',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('showGrandTotalsRowsOnly'),\n                            id: this.parent.element.id + 'grandtotalrow',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('showGrandTotalsColumnsOnly'),\n                            id: this.parent.element.id + 'grandtotalcolumn',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                    ]\n                }];\n            this.grandTotalMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this), beforeOpen: this.updateGrandtotalSelection.bind(this),\n                onClose: function (args) {\n                    _this_1.focusToolBar();\n                }\n            });\n            this.grandTotalMenu.isStringTemplate = true;\n            this.grandTotalMenu.appendTo('#' + this.parent.element.id + 'grandtotal_menu');\n        }\n        if (this.parent.element.querySelector('#' + this.parent.element.id + 'formatting_menu')) {\n            var menu = [{\n                    iconCss: cls.FORMATTING_MENU + ' ' + cls.ICON,\n                    items: [\n                        {\n                            text: this.parent.localeObj.getConstant('numberFormatMenu'),\n                            iconCss: cls.NUMBER_FORMATTING_MENU + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'numberFormattingMenu'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('conditionalFormatingMenu'),\n                            iconCss: cls.CONDITIONAL_FORMATTING_MENU + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'conditionalFormattingMenu'\n                        }\n                    ]\n                }];\n            this.formattingMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this)\n            });\n            this.formattingMenu.isStringTemplate = true;\n            this.formattingMenu.appendTo('#' + this.parent.element.id + 'formatting_menu');\n        }\n        if (this.parent.element.querySelector('#' + this.parent.element.id + '_reportlist')) {\n            var saveArgs = {\n                report: this.parent.getPersistData(),\n                reportName: this.parent.localeObj.getConstant('defaultReport')\n            };\n            if (isBlazor()) {\n                var pivotData = JSON.parse(saveArgs.report);\n                pivotData.dataSourceSettings = PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings);\n                saveArgs.report = JSON.stringify(pivotData);\n            }\n            this.currentReport = this.parent.localeObj.getConstant('defaultReport');\n            this.parent.trigger(events.saveReport, saveArgs);\n            var reports = this.fetchReports();\n            this.reportList = new DropDownList({\n                dataSource: reports.reportName,\n                width: '150px',\n                popupHeight: '200px',\n                placeholder: this.currentReport === '' ? this.parent.localeObj.getConstant('reportList') : '',\n                enableRtl: this.parent.enableRtl,\n                cssClass: cls.REPORT_LIST_DROP,\n                select: this.reportChange.bind(this),\n                value: this.currentReport\n            });\n            this.reportList.isStringTemplate = true;\n            this.reportList.appendTo('#' + this.parent.element.id + '_reportlist');\n        }\n        this.updateItemElements();\n    };\n    Toolbar.prototype.updateItemElements = function () {\n        var itemElements = [].slice.call(this.toolbar.element.querySelectorAll('.e-toolbar-item'));\n        for (var _i = 0, itemElements_1 = itemElements; _i < itemElements_1.length; _i++) {\n            var element = itemElements_1[_i];\n            if (element.querySelector('button')) {\n                element.querySelector('button').setAttribute('tabindex', '0');\n            }\n            else if (element.querySelector('.e-menu.e-menu-parent')) {\n                element.querySelector('.e-menu.e-menu-parent').setAttribute('tabindex', '-1');\n                if (element.querySelector('.e-menu-item.e-menu-caret-icon')) {\n                    element.querySelector('.e-menu-item.e-menu-caret-icon').setAttribute('tabindex', '0');\n                }\n            }\n        }\n    };\n    Toolbar.prototype.whitespaceRemove = function (args) {\n        args.element.style.padding = '0px';\n        var separator = args.element.querySelector('.e-separator');\n        if (separator) {\n            separator.style.margin = '0px';\n        }\n    };\n    Toolbar.prototype.multipleAxesCheckbox = function (args) {\n        if (this.parent.element.id + '_' + 'multipleAxes' === args.element.id) {\n            var inputCheckbox = createElement('input', {\n                id: this.parent.element.id + '_' + 'checkBox'\n            });\n            inputCheckbox.style.display = 'none';\n            this.parent.element.appendChild(inputCheckbox);\n            var checkbox = new CheckBox({\n                label: this.parent.localeObj.getConstant('multipleAxes'),\n                cssClass: 'e-multipleAxes',\n                checked: this.parent.chartSettings.enableMultiAxis,\n                enableRtl: this.parent.enableRtl\n            });\n            args.element.innerText = '';\n            checkbox.appendTo('#' + this.parent.element.id + '_' + 'checkBox');\n            if ((['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(this.parent.chartSettings.chartSeries.type) > -1) &&\n                !args.element.classList.contains(cls.MENU_DISABLE)) {\n                args.element.classList.add(cls.MENU_DISABLE);\n                checkbox.disabled = true;\n            }\n            else if ((['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(this.parent.chartSettings.chartSeries.type) < 0) &&\n                args.element.classList.contains(cls.MENU_DISABLE)) {\n                args.element.classList.remove(cls.MENU_DISABLE);\n                checkbox.disabled = false;\n            }\n            var checkboxObj = this.parent.element.querySelector('.e-checkbox-wrapper.e-multipleAxes');\n            args.element.appendChild(checkboxObj);\n        }\n        else if (this.parent.element.id + '_' + 'showLegend' === args.element.id) {\n            var inputCheckbox = createElement('input', {\n                id: this.parent.element.id + '_' + 'showLegendCheckBox'\n            });\n            inputCheckbox.style.display = 'none';\n            this.parent.element.appendChild(inputCheckbox);\n            var checkbox = new CheckBox({\n                label: this.parent.localeObj.getConstant('showLegend'),\n                checked: this.getLableState(this.parent.chartSettings.chartSeries.type),\n                cssClass: 'e-showLegend',\n                enableRtl: this.parent.enableRtl\n            });\n            args.element.innerText = '';\n            checkbox.appendTo('#' + this.parent.element.id + '_' + 'showLegendCheckBox');\n            var checkboxObj = this.parent.element.querySelector('.e-checkbox-wrapper.e-showLegend');\n            args.element.appendChild(checkboxObj);\n        }\n    };\n    Toolbar.prototype.getLableState = function (type) {\n        var chartSettings = JSON.parse(this.parent.getPersistData()).chartSettings;\n        if (chartSettings && chartSettings.legendSettings && chartSettings.legendSettings.visible !== undefined) {\n            this.showLableState = chartSettings.legendSettings.visible;\n        }\n        else {\n            this.showLableState = ['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(this.parent.chartSettings.chartSeries.type) > -1 ?\n                false : true;\n        }\n        return this.showLableState;\n    };\n    Toolbar.prototype.getAllChartItems = function () {\n        return ['Line', 'Column', 'Area', 'Bar', 'StackingColumn', 'StackingArea', 'StackingBar', 'StepLine', 'StepArea',\n            'SplineArea', 'Scatter', 'Spline', 'StackingColumn100', 'StackingBar100', 'StackingArea100', 'Bubble', 'Pareto',\n            'Polar', 'Radar', 'Pie', 'Pyramid', 'Funnel', 'Doughnut'];\n    };\n    Toolbar.prototype.updateExportMenu = function (args) {\n        var items = [].slice.call(args.element.querySelectorAll('li'));\n        if (this.parent.currentView === 'Table') {\n            addClass(items.slice(3), cls.MENU_HIDE);\n            removeClass(items.slice(1, 3), cls.MENU_HIDE);\n        }\n        else {\n            addClass(items.slice(1, 3), cls.MENU_HIDE);\n            removeClass(items.slice(3), cls.MENU_HIDE);\n        }\n    };\n    /* tslint:disable:max-line-length */\n    Toolbar.prototype.updateSubtotalSelection = function (args) {\n        if (!args.element.querySelector('#' + this.parent.element.id + 'subtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'notsubtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'notsubtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'subtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'subtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (this.parent.dataSourceSettings.showSubTotals && this.parent.dataSourceSettings.showRowSubTotals && !this.parent.dataSourceSettings.showColumnSubTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (this.parent.dataSourceSettings.showSubTotals && !this.parent.dataSourceSettings.showRowSubTotals && this.parent.dataSourceSettings.showColumnSubTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (this.parent.dataSourceSettings.showSubTotals && this.parent.dataSourceSettings.showRowSubTotals && this.parent.dataSourceSettings.showColumnSubTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (!this.parent.dataSourceSettings.showSubTotals || (!this.parent.dataSourceSettings.showRowSubTotals && !this.parent.dataSourceSettings.showColumnSubTotals)) {\n            args.element.querySelector('#' + this.parent.element.id + 'notsubtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n    };\n    Toolbar.prototype.updateGrandtotalSelection = function (args) {\n        if (!args.element.querySelector('#' + this.parent.element.id + 'grandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'notgrandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'notgrandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'grandtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'grandtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (this.parent.dataSourceSettings.showGrandTotals && this.parent.dataSourceSettings.showRowGrandTotals && !this.parent.dataSourceSettings.showColumnGrandTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (this.parent.dataSourceSettings.showGrandTotals && !this.parent.dataSourceSettings.showRowGrandTotals && this.parent.dataSourceSettings.showColumnGrandTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (this.parent.dataSourceSettings.showGrandTotals && this.parent.dataSourceSettings.showRowGrandTotals && this.parent.dataSourceSettings.showColumnGrandTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (!this.parent.dataSourceSettings.showGrandTotals || (!this.parent.dataSourceSettings.showRowGrandTotals && !this.parent.dataSourceSettings.showColumnGrandTotals)) {\n            args.element.querySelector('#' + this.parent.element.id + 'notgrandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n    };\n    /* tslint:enable:max-line-length */\n    Toolbar.prototype.updateReportList = function () {\n        var reports;\n        if (isBlazor()) {\n            /* tslint:disable */\n            var _this_5 = this;\n            /* tslint:enable */\n            reports = { reportName: [] };\n            this.parent.trigger(events.fetchReport, reports, function (observedArgs) {\n                _this_5.reportList.dataSource = observedArgs.reportName;\n                if (_this_5.currentReport === '' && _this_5.reportList.dataSource.length > 0) {\n                    _this_5.reportList.value = _this_5.reportList.dataSource[_this_5.reportList.dataSource.length - 1];\n                    _this_5.reportList.text = _this_5.reportList.dataSource[_this_5.reportList.dataSource.length - 1];\n                    _this_5.currentReport = _this_5.reportList.dataSource[_this_5.reportList.dataSource.length - 1];\n                }\n                else {\n                    _this_5.reportList.value = _this_5.currentReport;\n                    _this_5.reportList.text = _this_5.currentReport;\n                }\n                _this_5.reportList.refresh();\n            });\n        }\n        else {\n            reports = this.fetchReports();\n            this.reportList.dataSource = reports.reportName;\n            if (this.currentReport === '' && this.reportList.dataSource.length > 0) {\n                this.reportList.value = this.reportList.dataSource[this.reportList.dataSource.length - 1];\n                this.reportList.text = this.reportList.dataSource[this.reportList.dataSource.length - 1];\n                this.currentReport = this.reportList.dataSource[this.reportList.dataSource.length - 1];\n            }\n            else {\n                this.reportList.value = this.currentReport;\n                this.reportList.text = this.currentReport;\n            }\n            this.reportList.refresh();\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    Toolbar.prototype.menuItemClick = function (args) {\n        var _this_1 = this;\n        var exportArgs = {};\n        var type;\n        if (this.getAllChartItems().indexOf(args.item.id.split(this.parent.element.id + '_')[1]) > -1 ||\n            (args.item.id.split(this.parent.element.id + '_')[1] === 'ChartMoreOption') ||\n            (args.item.id.split(this.parent.element.id + '_')[1] === 'multipleAxes') ||\n            (args.item.id.split(this.parent.element.id + '_')[1] === 'showLegend')) {\n            type = args.item.id.split(this.parent.element.id + '_')[1];\n        }\n        /* tslint:disable:max-line-length */\n        switch (args.item.id) {\n            case (this.parent.element.id + 'grid'):\n                if (this.parent.grid && this.parent.chart) {\n                    this.parent.grid.element.style.display = '';\n                    this.parent.chart.element.style.display = 'none';\n                    if (this.parent.chartSettings.enableMultiAxis && this.parent.chartSettings.enableScrollOnMultiAxis) {\n                        this.parent.element.querySelector('.e-pivotchart').style.display = 'none';\n                    }\n                    this.parent.currentView = 'Table';\n                    this.parent.setProperties({ displayOption: { primary: 'Table' } }, true);\n                    if (this.parent.showGroupingBar && this.parent.groupingBarModule) {\n                        this.parent.element.querySelector('.e-pivot-grouping-bar').style.display = '';\n                        this.parent.element.querySelector('.e-chart-grouping-bar').style.display = 'none';\n                    }\n                    this.parent.layoutRefresh();\n                }\n                if (isBlazor() && this.parent.element.querySelector('.e-toggle-field-list') && this.parent.toolbar.indexOf('FieldList') !== -1) {\n                    this.parent.element.querySelector('.e-toggle-field-list').style.display = 'none';\n                }\n                break;\n            case (this.parent.element.id + 'pdf'):\n                if (this.parent.currentView === 'Table') {\n                    exportArgs = {\n                        pdfExportProperties: { fileName: 'Export.pdf' },\n                        pdfDoc: undefined,\n                        isBlob: false,\n                        isMultipleExport: false\n                    };\n                    this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                        if (isBlazor()) {\n                            var pdfProperties = PivotUtil.formatPdfExportProperties(observedArgs.pdfExportProperties);\n                            _this_1.parent.pdfExport(pdfProperties, observedArgs.isMultipleExport, observedArgs.pdfDoc, observedArgs.isBlob);\n                        }\n                        else {\n                            _this_1.parent.pdfExport(observedArgs.pdfExportProperties, observedArgs.isMultipleExport, observedArgs.pdfDoc, observedArgs.isBlob);\n                        }\n                    });\n                }\n                else {\n                    exportArgs = {\n                        width: undefined,\n                        height: undefined,\n                        orientation: PdfPageOrientation.Landscape,\n                        type: 'PDF',\n                        fileName: 'result',\n                    };\n                    this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                        _this_1.parent.chartExport(observedArgs.type, observedArgs.fileName, observedArgs.orientation, observedArgs.width, observedArgs.height);\n                    });\n                }\n                break;\n            case (this.parent.element.id + 'excel'):\n                exportArgs = {\n                    excelExportProperties: { fileName: 'Export.xlsx' },\n                    isBlob: false,\n                    isMultipleExport: false,\n                    workbook: undefined\n                };\n                this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                    if (isBlazor()) {\n                        var excelProperties = PivotUtil.formatExcelExportProperties(observedArgs.excelExportProperties);\n                        _this_1.parent.excelExport(excelProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                    }\n                    else {\n                        _this_1.parent.excelExport(observedArgs.excelExportProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                    }\n                });\n                break;\n            case (this.parent.element.id + 'csv'):\n                exportArgs = {\n                    excelExportProperties: { fileName: 'Export.csv' },\n                    isBlob: false,\n                    isMultipleExport: false,\n                    workbook: undefined\n                };\n                this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                    if (isBlazor()) {\n                        var excelProperties = PivotUtil.formatExcelExportProperties(observedArgs.excelExportProperties);\n                        _this_1.parent.csvExport(excelProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                    }\n                    else {\n                        _this_1.parent.csvExport(observedArgs.excelExportProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                    }\n                });\n                break;\n            case (this.parent.element.id + 'png'):\n                exportArgs = {\n                    type: 'PNG',\n                    width: undefined,\n                    height: undefined,\n                    fileName: 'result',\n                    orientation: PdfPageOrientation.Landscape,\n                };\n                this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                    _this_1.parent.chartExport(observedArgs.type, observedArgs.fileName, observedArgs.orientation, observedArgs.width, observedArgs.height);\n                });\n                break;\n            case (this.parent.element.id + 'jpeg'):\n                exportArgs = {\n                    type: 'JPEG',\n                    fileName: 'result',\n                    orientation: PdfPageOrientation.Landscape,\n                    width: undefined,\n                    height: undefined,\n                };\n                this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                    _this_1.parent.chartExport(observedArgs.type, observedArgs.fileName, observedArgs.orientation, observedArgs.width, observedArgs.height);\n                });\n                break;\n            case (this.parent.element.id + 'svg'):\n                exportArgs = {\n                    width: undefined,\n                    height: undefined,\n                    type: 'SVG',\n                    fileName: 'result',\n                    orientation: PdfPageOrientation.Landscape,\n                };\n                this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                    _this_1.parent.chartExport(observedArgs.type, observedArgs.fileName, observedArgs.orientation, observedArgs.width, observedArgs.height);\n                });\n                break;\n            case (this.parent.element.id + 'notsubtotal'):\n                this.parent.setProperties({ dataSourceSettings: { showSubTotals: false, showColumnSubTotals: false, showRowSubTotals: false } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'subtotalrow'):\n                this.parent.setProperties({ dataSourceSettings: { showSubTotals: true, showColumnSubTotals: false, showRowSubTotals: true } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'subtotalcolumn'):\n                this.parent.setProperties({ dataSourceSettings: { showSubTotals: true, showColumnSubTotals: true, showRowSubTotals: false } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'subtotal'):\n                this.parent.setProperties({ dataSourceSettings: { showSubTotals: true, showColumnSubTotals: true, showRowSubTotals: true } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'notgrandtotal'):\n                this.parent.setProperties({ dataSourceSettings: { showGrandTotals: false, showColumnGrandTotals: false, showRowGrandTotals: false } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'grandtotalrow'):\n                this.parent.setProperties({ dataSourceSettings: { showGrandTotals: true, showColumnGrandTotals: false, showRowGrandTotals: true } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'grandtotalcolumn'):\n                this.parent.setProperties({ dataSourceSettings: { showGrandTotals: true, showColumnGrandTotals: true, showRowGrandTotals: false } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'grandtotal'):\n                this.parent.setProperties({ dataSourceSettings: { showGrandTotals: true, showColumnGrandTotals: true, showRowGrandTotals: true } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'numberFormattingMenu'):\n                if (this.parent.numberFormattingModule) {\n                    this.parent.numberFormattingModule.showNumberFormattingDialog();\n                }\n                break;\n            case (this.parent.element.id + 'conditionalFormattingMenu'):\n                if (this.parent.conditionalFormattingModule) {\n                    this.parent.conditionalFormattingModule.showConditionalFormattingDialog();\n                }\n                break;\n            case (this.parent.element.id + '_' + type):\n                if (args.item && args.item.text) {\n                    if (type === 'ChartMoreOption') {\n                        this.createChartTypeDialog();\n                    }\n                    else if (type === 'multipleAxes') {\n                        if (this.parent.chartSettings.enableScrollOnMultiAxis) {\n                            this.isMultiAxisChange = true;\n                        }\n                        this.parent.chartSettings.enableMultiAxis = !this.parent.chartSettings.enableMultiAxis;\n                        this.updateChartType(this.parent.chartSettings.chartSeries.type, true);\n                    }\n                    else if (this.getAllChartItems().indexOf(type) > -1) {\n                        this.updateChartType(type, false);\n                    }\n                    else if (type === 'showLegend') {\n                        this.parent.chart.legendSettings.visible = !this.showLableState;\n                        if (this.parent.chartSettings.legendSettings) {\n                            this.parent.chartSettings.legendSettings.visible = !this.showLableState;\n                        }\n                        else {\n                            this.parent.setProperties({ chartSettings: { legendSettings: { visible: !this.showLableState } } }, true);\n                        }\n                        this.updateChartType(this.parent.chartSettings.chartSeries.type, true);\n                    }\n                }\n                if (isBlazor() && this.parent.element.querySelector('.e-toggle-field-list') && this.parent.toolbar.indexOf('FieldList') !== -1) {\n                    this.parent.element.querySelector('.e-toggle-field-list').style.display = 'none';\n                }\n                break;\n        }\n        /* tslint:enable:max-line-length */\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initToolbar, this.createToolbar, this);\n    };\n    Toolbar.prototype.getValidChartType = function () {\n        var menuItems = [];\n        for (var i = 0; (i <= this.parent.chartTypes.length); i++) {\n            var type = this.parent.chartTypes[i];\n            if ((this.getAllChartItems().indexOf(type) > -1) && (menuItems.indexOf(type) < 0)) {\n                menuItems.push(type);\n            }\n        }\n        return menuItems;\n    };\n    Toolbar.prototype.createChartTypeDialog = function () {\n        var _this_1 = this;\n        var chartDialog = this.parent.element.appendChild(createElement('div', {\n            id: this.parent.element.id + '_ChartTypeDialog',\n            className: cls.PIVOTCHART_TYPE_DIALOG\n        }));\n        this.chartTypesDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            header: this.parent.localeObj.getConstant('chartTypeSettings'),\n            content: this.getDialogContent(),\n            isModal: true,\n            beforeOpen: this.beforeOpen.bind(this),\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: function () { _this_1.chartTypeDialogUpdate(); },\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true },\n                },\n                {\n                    click: function () { _this_1.removeDialog(); },\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            closeOnEscape: true,\n            target: this.parent.element,\n            close: this.removeDialog.bind(this)\n        });\n        this.chartTypesDialog.isStringTemplate = true;\n        this.chartTypesDialog.appendTo(chartDialog);\n    };\n    Toolbar.prototype.removeDialog = function () {\n        if (this.chartTypesDialog && !this.chartTypesDialog.isDestroyed) {\n            this.chartTypesDialog.destroy();\n        }\n        if (document.getElementById(this.parent.element.id + '_ChartTypeDialog')) {\n            remove(document.getElementById(this.parent.element.id + '_ChartTypeDialog'));\n        }\n    };\n    Toolbar.prototype.chartTypeDialogUpdate = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var chartType = getInstance('#' + this.parent.element.id + '_ChartTypeOption', DropDownList).value;\n        var checked = getInstance('#' + this.parent.element.id + '_DialogMultipleAxis', CheckBox).checked;\n        var checkedShow = getInstance('#' + this.parent.element.id + '_DialogShowLabel', CheckBox).checked;\n        this.parent.chart.legendSettings.visible = checkedShow;\n        if (this.chartLableState) {\n            this.parent.chart.legendSettings.visible = checkedShow;\n            if (this.parent.chartSettings.legendSettings) {\n                this.parent.chartSettings.legendSettings.visible = checkedShow;\n            }\n            else {\n                this.parent.setProperties({ chartSettings: { legendSettings: { visible: checkedShow } } }, true);\n            }\n        }\n        this.updateChartType(chartType, false);\n        this.parent.chartSettings.enableMultiAxis = checked;\n        this.chartTypesDialog.close();\n    };\n    Toolbar.prototype.updateChartType = function (type, isMultiAxis) {\n        if (this.getAllChartItems().indexOf(type) > -1) {\n            if (this.parent.chart) {\n                this.parent.currentView = 'Chart';\n                this.parent.setProperties({ displayOption: { primary: 'Chart' } }, true);\n                /* tslint:disable:max-line-length */\n                this.parent.chart.element.style.width = formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber());\n                this.parent.chart.setProperties({ width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber()) }, true);\n                if (this.parent.chartSettings.chartSeries.type === type && !isMultiAxis) {\n                    this.parent.chartModule.updateView();\n                }\n                else {\n                    this.parent.chartSettings.chartSeries.type = type;\n                }\n            }\n        }\n    };\n    Toolbar.prototype.getDialogContent = function () {\n        var mainWrapper = createElement('div', { className: 'e-chart-type-div-content' });\n        var optionWrapperDiv = createElement('div', { className: 'e-chart-type-option-wrapper' });\n        var optionTextDiv = createElement('div', {\n            className: 'e-chart-type-option-text', innerHTML: this.parent.localeObj.getConstant('ChartType')\n        });\n        var dropOptionDiv = createElement('div', { id: this.parent.element.id + '_ChartTypeOption' });\n        optionWrapperDiv.appendChild(optionTextDiv);\n        optionWrapperDiv.appendChild(dropOptionDiv);\n        var chartTypeDatasource = [];\n        var chartType = this.getValidChartType();\n        for (var i = 0; i < chartType.length; i++) {\n            chartTypeDatasource.push({ value: chartType[i], text: this.parent.localeObj.getConstant(chartType[i].toLowerCase()) });\n        }\n        var optionWrapper = new DropDownList({\n            dataSource: chartTypeDatasource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' },\n            value: this.parent.chartSettings.chartSeries.type ? this.parent.chartSettings.chartSeries.type : this.getValidChartType()[0],\n            width: '100%',\n            change: this.changeDropDown.bind(this)\n        });\n        optionWrapper.isStringTemplate = true;\n        optionWrapper.appendTo(dropOptionDiv);\n        mainWrapper.appendChild(optionWrapperDiv);\n        var checkboxWrap = createElement('input', {\n            id: this.parent.element.id + '_DialogMultipleAxis',\n            attrs: { 'type': 'checkbox' }\n        });\n        mainWrapper.appendChild(checkboxWrap);\n        var labelCheckboxWrap = createElement('input', {\n            id: this.parent.element.id + '_DialogShowLabel',\n            attrs: { 'type': 'checkbox' }\n        });\n        mainWrapper.appendChild(labelCheckboxWrap);\n        return mainWrapper;\n    };\n    Toolbar.prototype.changeDropDown = function (args) {\n        var chartSettings = JSON.parse(this.parent.getPersistData()).chartSettings;\n        if (!(chartSettings && chartSettings.legendSettings && chartSettings.legendSettings.visible !== undefined)) {\n            var checked = ['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(args.value.toString()) > -1 ?\n                false : true;\n            getInstance('#' + this.parent.element.id + '_DialogShowLabel', CheckBox).checked = checked;\n        }\n        if (['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(args.value.toString()) > -1) {\n            getInstance('#' + this.parent.element.id + '_DialogMultipleAxis', CheckBox).disabled = true;\n        }\n        else {\n            getInstance('#' + this.parent.element.id + '_DialogMultipleAxis', CheckBox).disabled = false;\n        }\n    };\n    Toolbar.prototype.beforeOpen = function () {\n        var _this_1 = this;\n        var checkbox = new CheckBox({\n            label: this.parent.localeObj.getConstant('multipleAxes'),\n            cssClass: 'e-dialog-multiple-axis',\n            checked: this.parent.chartSettings.enableMultiAxis ? this.parent.chartSettings.enableMultiAxis : false,\n            enableRtl: this.parent.enableRtl,\n        });\n        var checkbox1 = new CheckBox({\n            label: this.parent.localeObj.getConstant('showLegend'),\n            checked: this.getLableState(this.parent.chartSettings.chartSeries.type),\n            change: function () { _this_1.chartLableState = true; },\n            cssClass: 'e-dialog-show-legend',\n            enableRtl: this.parent.enableRtl,\n        });\n        checkbox1.appendTo(this.chartTypesDialog.element.querySelector('#' + this.parent.element.id + '_DialogShowLabel'));\n        checkbox.appendTo(this.chartTypesDialog.element.querySelector('#' + this.parent.element.id + '_DialogMultipleAxis'));\n        if (['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(this.parent.chartSettings.chartSeries.type) > -1) {\n            checkbox.disabled = true;\n        }\n        var chartSettings = JSON.parse(this.parent.getPersistData()).chartSettings;\n        if (chartSettings && chartSettings.legendSettings && chartSettings.legendSettings.visible !== undefined) {\n            this.chartLableState = true;\n        }\n        else {\n            this.chartLableState = false;\n        }\n    };\n    /**\n     * To refresh the toolbar\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.refreshToolbar = function () {\n        this.createToolbar();\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initToolbar, this.createToolbar);\n    };\n    /**\n     * To destroy the toolbar\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.confirmPopUp && !this.confirmPopUp.isDestroyed) {\n            this.confirmPopUp.destroy();\n        }\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.dialog.destroy();\n        }\n        if (this.mdxDialog && !this.mdxDialog.isDestroyed) {\n            this.mdxDialog.destroy();\n        }\n        if (this.chartMenu && !this.chartMenu.isDestroyed) {\n            this.chartMenu.destroy();\n        }\n        if (this.chartTypesDialog && !this.chartTypesDialog.isDestroyed) {\n            this.chartTypesDialog.destroy();\n        }\n        if (this.exportMenu && !this.exportMenu.isDestroyed) {\n            this.exportMenu.destroy();\n        }\n        if (this.subTotalMenu && !this.subTotalMenu.isDestroyed) {\n            this.subTotalMenu.destroy();\n        }\n        if (this.grandTotalMenu && !this.grandTotalMenu.isDestroyed) {\n            this.grandTotalMenu.destroy();\n        }\n        if (this.formattingMenu && !this.formattingMenu.isDestroyed) {\n            this.formattingMenu.destroy();\n        }\n        if (this.reportList && !this.reportList.isDestroyed) {\n            this.reportList.destroy();\n        }\n        if (this.toolbar && !this.toolbar.isDestroyed) {\n            this.toolbar.destroy();\n        }\n        if (document.querySelector('#' + this.parent.element.id + 'pivot-toolbar')) {\n            remove(document.querySelector('#' + this.parent.element.id + 'pivot-toolbar'));\n        }\n    };\n    Toolbar.prototype.focusToolBar = function () {\n        removeClass(document.querySelector('.' + cls.GRID_TOOLBAR).querySelectorAll('.e-menu-item.e-focused'), 'e-focused');\n        removeClass(document.querySelector('.' + cls.GRID_TOOLBAR).querySelectorAll('.e-menu-item.e-selected'), 'e-selected');\n        if (document.querySelector('.e-toolbar-items')) {\n            addClass([document.querySelector('.e-toolbar-items')], 'e-focused');\n        }\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Dialog } from '@syncfusion/ej2-popups';\nimport { createElement, remove, extend } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render NumberFormatting Dialog\n */\nvar NumberFormatting = /** @class */ (function () {\n    function NumberFormatting(parent) {\n        this.parent = parent;\n        this.parent.numberFormattingModule = this;\n        this.removeEventListener();\n        this.addEventListener();\n        this.newFormat = [];\n        this.lastFormattedValue = [];\n    }\n    /**\n     * To get module name.\n     * @returns string\n     */\n    NumberFormatting.prototype.getModuleName = function () {\n        return 'numberformatting';\n    };\n    /**\n     * To show Number Formatting dialog.\n     * @returns void\n     */\n    NumberFormatting.prototype.showNumberFormattingDialog = function () {\n        var _this = this;\n        var valueDialog = createElement('div', {\n            id: this.parent.element.id + '_FormatDialog',\n            className: cls.FORMATTING_DIALOG\n        });\n        this.parent.element.appendChild(valueDialog);\n        this.dialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            header: this.parent.localeObj.getConstant('numberFormat'),\n            content: this.getDialogContent(),\n            isModal: true,\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.updateFormatting.bind(this),\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('apply'), isPrimary: true }\n                },\n                {\n                    click: function () { _this.dialog.hide(); },\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            closeOnEscape: true,\n            target: this.parent.element,\n            overlayClick: function () { _this.removeDialog(); },\n            close: this.removeDialog.bind(this)\n        });\n        this.dialog.isStringTemplate = true;\n        this.dialog.appendTo(valueDialog);\n        this.dialog.element.querySelector('.' + cls.DIALOG_HEADER).innerHTML = this.parent.localeObj.getConstant('numberFormat');\n        var formatObject;\n        this.newFormat = [{ name: this.parent.localeObj.getConstant('AllValues'), format: 'N0', useGrouping: true }];\n        var format = [];\n        for (var i = 0; i < this.parent.dataSourceSettings.values.length; i++) {\n            for (var j = 0; j < this.parent.dataSourceSettings.formatSettings.length; j++) {\n                if (this.parent.dataSourceSettings.formatSettings[j].name === this.parent.dataSourceSettings.values[i].name) {\n                    formatObject = {\n                        name: this.parent.dataSourceSettings.formatSettings[j].name,\n                        format: this.parent.dataSourceSettings.formatSettings[j].format,\n                        useGrouping: this.parent.dataSourceSettings.formatSettings[j].useGrouping\n                    };\n                    this.newFormat.push(formatObject);\n                }\n            }\n        }\n        for (var i = 0; i < this.newFormat.length; i++) {\n            format.push(this.newFormat[i].name);\n        }\n        for (var j = 0; j < this.parent.dataSourceSettings.values.length; j++) {\n            if (format.indexOf(this.parent.dataSourceSettings.values[j].name) === -1) {\n                formatObject = {\n                    name: this.parent.dataSourceSettings.values[j].name, format: 'N0',\n                    useGrouping: true\n                };\n                this.newFormat.push(formatObject);\n            }\n        }\n        this.renderControls();\n    };\n    NumberFormatting.prototype.getDialogContent = function () {\n        var outerElement = createElement('div', {\n            id: this.parent.element.id + '_FormatDialogOuter',\n            className: cls.FORMATTING_DIALOG_OUTER\n        });\n        var table = createElement('table', {\n            id: this.parent.element.id + '_FormatTable',\n            className: cls.FORMATTING_TABLE\n        });\n        var tRow = createElement('tr');\n        var tValue = createElement('td');\n        var valueLable = createElement('div', {\n            id: this.parent.element.id + '_FormatValueLable',\n            className: cls.FORMATTING_VALUE_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('values')\n        });\n        var valueDrop = createElement('div', {\n            id: this.parent.element.id + '_FormatValueDrop'\n        });\n        tValue.appendChild(valueLable);\n        tValue.appendChild(valueDrop);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        tValue = createElement('td');\n        var formatLable = createElement('div', {\n            id: this.parent.element.id + '_FormatLable',\n            className: cls.FORMATTING_FORMAT_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('formatType')\n        });\n        var formatDrop = createElement('div', {\n            id: this.parent.element.id + '_FormatDrop'\n        });\n        tValue.appendChild(formatLable);\n        tValue.appendChild(formatDrop);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        tValue = createElement('td');\n        var groupingLable = createElement('div', {\n            id: this.parent.element.id + '_GroupingLable',\n            className: cls.FORMATTING_GROUPING_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('grouping')\n        });\n        var groupingDrop = createElement('div', {\n            id: this.parent.element.id + '_GroupingDrop'\n        });\n        tValue.appendChild(groupingLable);\n        tValue.appendChild(groupingDrop);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        tValue = createElement('td');\n        var decimalLable = createElement('div', {\n            id: this.parent.element.id + '_DecimalLable',\n            className: cls.FORMATTING_DECIMAL_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('decimalPlaces')\n        });\n        var decimalDrop = createElement('div', {\n            id: this.parent.element.id + '_DecimalDrop'\n        });\n        tValue.appendChild(decimalLable);\n        tValue.appendChild(decimalDrop);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        tValue = createElement('td');\n        this.customLable = createElement('div', {\n            id: this.parent.element.id + '_CustomLable',\n            className: cls.FORMATTING_CUSTOM_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('customFormatString')\n        });\n        this.customText = createElement('input', {\n            id: this.parent.element.id + '_CustomText',\n            attrs: {\n                'type': 'text', 'tabindex': '0'\n            },\n            className: cls.INPUT + ' ' + cls.FORMATTING_CUSTOM_TEXT\n        });\n        tValue.appendChild(this.customLable);\n        tValue.appendChild(this.customText);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        table.appendChild(tRow);\n        outerElement.appendChild(table);\n        return outerElement;\n    };\n    NumberFormatting.prototype.renderControls = function () {\n        if (this.dialog.element.querySelector('#' + this.parent.element.id + '_FormatValueDrop')) {\n            var valueFields = [];\n            valueFields.push({\n                index: 0, name: this.parent.localeObj.getConstant('AllValues'), field: this.parent.localeObj.getConstant('AllValues')\n            });\n            for (var i = 0; i < this.parent.dataSourceSettings.values.length; i++) {\n                valueFields.push({\n                    index: i + 1, name: this.parent.dataSourceSettings.values[i].caption || this.parent.dataSourceSettings.values[i].name,\n                    field: this.parent.dataSourceSettings.values[i].name\n                });\n            }\n            this.valuesDropDown = new DropDownList({\n                dataSource: valueFields, fields: { text: 'name', value: 'field' }, enableRtl: this.parent.enableRtl,\n                index: 0, cssClass: cls.FORMATTING_VALUE_DROP, change: this.valueChange.bind(this), width: '100%',\n                open: this.customUpdate.bind(this)\n            });\n            this.valuesDropDown.isStringTemplate = true;\n            this.valuesDropDown.appendTo('#' + this.parent.element.id + '_FormatValueDrop');\n        }\n        if (this.dialog.element.querySelector('#' + this.parent.element.id + '_FormatDrop')) {\n            var fields = [\n                { index: 0, name: this.parent.localeObj.getConstant('number') },\n                { index: 1, name: this.parent.localeObj.getConstant('currency') },\n                { index: 2, name: this.parent.localeObj.getConstant('percentage') },\n                { index: 3, name: this.parent.localeObj.getConstant('Custom') }\n            ];\n            this.formatDropDown = new DropDownList({\n                dataSource: fields, fields: { text: 'name', value: 'name' },\n                index: 0, change: this.dropDownChange.bind(this), enableRtl: this.parent.enableRtl,\n                cssClass: cls.FORMATTING_FORMAT_DROP, width: '100%'\n            });\n            this.formatDropDown.isStringTemplate = true;\n            this.formatDropDown.appendTo('#' + this.parent.element.id + '_FormatDrop');\n        }\n        if (this.dialog.element.querySelector('#' + this.parent.element.id + '_GroupingDrop')) {\n            var fields = [\n                { index: 0, name: this.parent.localeObj.getConstant('true') },\n                { index: 1, name: this.parent.localeObj.getConstant('false') }\n            ];\n            this.groupingDropDown = new DropDownList({\n                dataSource: fields, fields: { text: 'name', value: 'name' }, enableRtl: this.parent.enableRtl,\n                index: 0, cssClass: cls.FORMATTING_GROUPING_DROP, width: '100%', change: this.groupingChange.bind(this)\n            });\n            this.groupingDropDown.isStringTemplate = true;\n            this.groupingDropDown.appendTo('#' + this.parent.element.id + '_GroupingDrop');\n        }\n        if (this.dialog.element.querySelector('#' + this.parent.element.id + '_DecimalDrop')) {\n            var fields = [\n                { index: 0, name: 0 },\n                { index: 1, name: 1 },\n                { index: 2, name: 2 },\n                { index: 3, name: 3 },\n                { index: 4, name: 4 },\n                { index: 5, name: 5 },\n                { index: 6, name: 6 },\n                { index: 7, name: 7 },\n                { index: 8, name: 8 },\n                { index: 9, name: 9 },\n                { index: 10, name: 10 },\n            ];\n            this.decimalDropDown = new DropDownList({\n                dataSource: fields, fields: { text: 'name', value: 'name' }, enableRtl: this.parent.enableRtl,\n                index: 0, cssClass: cls.FORMATTING_DECIMAL_DROP, popupHeight: 150, width: '100%', change: this.decimalChange.bind(this)\n            });\n            this.decimalDropDown.isStringTemplate = true;\n            this.decimalDropDown.appendTo('#' + this.parent.element.id + '_DecimalDrop');\n        }\n        if (this.formatDropDown.value !== this.parent.localeObj.getConstant('Custom')) {\n            this.customText.disabled = true;\n        }\n        if (this.lastFormattedValue.length !== 0) {\n            this.valuesDropDown.value = this.lastFormattedValue[0].name;\n            var fString = this.lastFormattedValue[0].format;\n            var first = fString === '' ? '' : fString.split('')[0].toLowerCase();\n            var group = this.lastFormattedValue[0].useGrouping ? this.parent.localeObj.getConstant('true') :\n                this.parent.localeObj.getConstant('false');\n            this.updateFormattingDialog(fString, first, group);\n        }\n    };\n    NumberFormatting.prototype.valueChange = function (args) {\n        var format = this.newFormat;\n        var isExist = false;\n        for (var i = 0; i < format.length; i++) {\n            if (format[i].name === args.value) {\n                var fString = format[i].format;\n                var first = fString === '' ? '' : fString.split('')[0].toLowerCase();\n                var group = format[i].useGrouping ? this.parent.localeObj.getConstant('true') :\n                    this.parent.localeObj.getConstant('false');\n                this.updateFormattingDialog(fString, first, group);\n                isExist = true;\n                break;\n            }\n        }\n        if (!isExist) {\n            this.formatDropDown.value = this.parent.localeObj.getConstant('number');\n            this.decimalDropDown.value = 0;\n            this.groupingDropDown.value = this.parent.localeObj.getConstant('true');\n        }\n    };\n    NumberFormatting.prototype.updateFormattingDialog = function (fString, first, group) {\n        if (fString.length === 2 && ['n', 'p', 'c'].indexOf(first) > -1) {\n            this.formatDropDown.value = first === 'n' ? this.parent.localeObj.getConstant('number') : first === 'p' ?\n                this.parent.localeObj.getConstant('percentage') : first === 'c' ? this.parent.localeObj.getConstant('currency') :\n                this.parent.localeObj.getConstant('number');\n            this.decimalDropDown.value = Number(fString.split('')[1]);\n            this.groupingDropDown.value = group;\n        }\n        else {\n            this.formatDropDown.value = this.parent.localeObj.getConstant('Custom');\n            this.customText.value = fString;\n        }\n    };\n    NumberFormatting.prototype.customUpdate = function () {\n        if (this.formatDropDown.value === this.parent.localeObj.getConstant('Custom')) {\n            var index = this.getIndexValue();\n            this.newFormat[index].format = this.customText.value;\n        }\n    };\n    NumberFormatting.prototype.dropDownChange = function (args) {\n        var index = this.getIndexValue();\n        if (args.value === this.parent.localeObj.getConstant('Custom')) {\n            this.customText.disabled = false;\n            this.groupingDropDown.enabled = false;\n            this.decimalDropDown.enabled = false;\n            this.newFormat[index].format = this.customText.value;\n        }\n        else {\n            var text = this.formattedText();\n            this.newFormat[index].format = text;\n            this.customText.disabled = true;\n            this.groupingDropDown.enabled = true;\n            this.decimalDropDown.enabled = true;\n            this.customText.value = '';\n        }\n    };\n    NumberFormatting.prototype.groupingChange = function () {\n        var index = this.getIndexValue();\n        this.newFormat[index].useGrouping = this.groupingDropDown.value === this.parent.localeObj.getConstant('true') ? true : false;\n    };\n    NumberFormatting.prototype.getIndexValue = function () {\n        var format = [];\n        for (var i = 0; i < this.newFormat.length; i++) {\n            format.push(this.newFormat[i].name);\n        }\n        var index = format.indexOf(this.valuesDropDown.value.toString());\n        return index;\n    };\n    NumberFormatting.prototype.decimalChange = function () {\n        var index = this.getIndexValue();\n        var text = this.formattedText();\n        this.newFormat[index].format = text;\n    };\n    NumberFormatting.prototype.formattedText = function () {\n        var text;\n        if (this.formatDropDown.value === this.parent.localeObj.getConstant('number') ||\n            this.formatDropDown.value === this.parent.localeObj.getConstant('percentage') ||\n            this.formatDropDown.value === this.parent.localeObj.getConstant('currency')) {\n            text = this.formatDropDown.value === this.parent.localeObj.getConstant('number') ? 'N' :\n                this.formatDropDown.value === this.parent.localeObj.getConstant('currency') ? 'C' : 'P';\n            return text += this.decimalDropDown.value;\n        }\n        else {\n            return text = this.customText.value;\n        }\n    };\n    NumberFormatting.prototype.removeDialog = function () {\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.dialog.destroy();\n        }\n        if (document.getElementById(this.parent.element.id + '_FormatDialog')) {\n            remove(document.getElementById(this.parent.element.id + '_FormatDialog'));\n        }\n    };\n    NumberFormatting.prototype.updateFormatting = function () {\n        var _this = this;\n        var text = this.formattedText();\n        var index = this.getIndexValue();\n        this.newFormat.splice(index, 1);\n        var format = extend([], this.newFormat, true);\n        if (this.valuesDropDown.value === this.parent.localeObj.getConstant('AllValues')) {\n            var fieldList = this.parent.dataType === 'olap' ?\n                this.parent.olapEngineModule.fieldList : this.parent.engineModule.fieldList;\n            for (var _i = 0, _a = Object.keys(fieldList); _i < _a.length; _i++) {\n                var key = _a[_i];\n                this.insertFormat(key, text);\n            }\n        }\n        else {\n            this.insertFormat(this.valuesDropDown.value.toString(), text);\n        }\n        var eventArgs = {\n            formatSettings: PivotUtil.cloneFormatSettings(this.newFormat),\n            formatName: this.valuesDropDown.value.toString(),\n            cancel: false\n        };\n        this.parent.trigger(events.numberFormatting, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                _this.parent.setProperties({ dataSourceSettings: { formatSettings: observedArgs.formatSettings } }, true);\n                try {\n                    _this.parent.updateDataSource(false);\n                    _this.dialog.close();\n                }\n                catch (exception) {\n                    _this.parent.setProperties({ dataSourceSettings: { formatSettings: format } }, true);\n                    /* tslint:disable-next-line:max-line-length */\n                    _this.parent.pivotCommon.errorDialog.createErrorDialog(_this.parent.localeObj.getConstant('error'), _this.parent.localeObj.getConstant('invalidFormat'), _this.dialog.element);\n                    _this.parent.hideWaitingPopup();\n                }\n            }\n            else {\n                _this.dialog.close();\n                _this.parent.setProperties({ dataSourceSettings: { formatSettings: format } }, true);\n            }\n        });\n    };\n    NumberFormatting.prototype.insertFormat = function (fieldName, text) {\n        var isExist = false;\n        var newFormat = {\n            name: fieldName, format: text,\n            useGrouping: this.groupingDropDown.value === this.parent.localeObj.getConstant('true') ? true : false\n        };\n        var format = this.newFormat;\n        for (var i = 0; i < format.length; i++) {\n            if (format[i].name === fieldName) {\n                format[i] = newFormat;\n                isExist = true;\n            }\n        }\n        if (!isExist) {\n            format.push(newFormat);\n        }\n        this.lastFormattedValue = [];\n        this.lastFormattedValue.push(newFormat);\n    };\n    /**\n     * To add event listener.\n     * @returns void\n     * @hidden\n     */\n    NumberFormatting.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initFormatting, this.showNumberFormattingDialog, this);\n    };\n    /**\n     * To remove event listener.\n     * @returns void\n     * @hidden\n     */\n    NumberFormatting.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initFormatting, this.showNumberFormattingDialog);\n    };\n    /**\n     * To destroy the calculated field dialog\n     * @returns void\n     * @hidden\n     */\n    NumberFormatting.prototype.destroy = function () {\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.dialog.destroy();\n        }\n        this.removeEventListener();\n    };\n    return NumberFormatting;\n}());\nexport { NumberFormatting };\n","import { createElement, remove, extend, getInstance, addClass, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MaskedTextBox, NumericTextBox } from '@syncfusion/ej2-inputs';\nimport { MultiSelect, CheckBoxSelection } from '@syncfusion/ej2-dropdowns';\nimport { PivotUtil } from '../../base/util';\nimport { CheckBox } from '@syncfusion/ej2-buttons';\nimport { DateTimePicker } from '@syncfusion/ej2-calendars';\nimport * as events from '../../common/base/constant';\n/**\n * `Grouping` module to create grouping option for date, number and custom in popup.\n */\n/** @hidden */\nvar Grouping = /** @class */ (function () {\n    /**\n     * Constructor for the group UI rendering.\n     * @hidden\n     */\n    function Grouping(parent) {\n        /* tslint:disable-next-line:max-line-length */\n        this.dateGroup = /_date_group_years|_date_group_quarters|_date_group_quarterYear|_date_group_months|_date_group_days|_date_group_hours|_date_group_minutes|_date_group_seconds/g;\n        this.parent = parent;\n        this.parent.groupingModule = this;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Grouping.prototype.getModuleName = function () {\n        return 'grouping';\n    };\n    Grouping.prototype.render = function (args) {\n        var target = args.target;\n        var option = args.option;\n        var parentElement = args.parentElement;\n        this.parentElement = parentElement;\n        this.selectedCellsInfo = [];\n        this.isUpdate = false;\n        var colIndex = Number(target.getAttribute('aria-colindex'));\n        var rowIndex = Number(target.getAttribute('index'));\n        var cell = this.parent.engineModule.pivotValues[rowIndex][colIndex];\n        var fieldName = cell.valueSort.axis.toString();\n        this.selectedCellsInfo = this.getSelectedCells(cell.axis, fieldName, cell.actualText.toString());\n        this.selectedCellsInfo.push({ axis: cell.axis, fieldName: fieldName, name: cell.actualText.toString(), cellInfo: cell });\n        if (option.replace(parentElement.id, '').indexOf('_custom_group') !== -1) {\n            this.createGroupSettings(fieldName);\n        }\n        else {\n            this.updateUnGroupSettings(fieldName);\n        }\n    };\n    /**\n     * Returns the selected members/headers by checing the valid members from the pivot table.\n     * @method getSelectedOptions\n     * @param  {SelectedCellsInfo[]} axis - Get the members name from the given selected cells information\n     * @return {boolean}\n     * @hidden\n     */\n    Grouping.prototype.getSelectedOptions = function (selectedCellsInfo) {\n        var selectedOptions = [];\n        for (var _i = 0, selectedCellsInfo_1 = selectedCellsInfo; _i < selectedCellsInfo_1.length; _i++) {\n            var option = selectedCellsInfo_1[_i];\n            if (PivotUtil.inArray(option.name, selectedOptions) === -1) {\n                selectedOptions.push(option.name);\n            }\n        }\n        return selectedOptions;\n    };\n    Grouping.prototype.createGroupSettings = function (fieldName) {\n        var fieldList = this.parent.engineModule.fieldList[fieldName];\n        var group = this.getGroupSettings(fieldName);\n        if (this.selectedCellsInfo.length > 0) {\n            var type = void 0;\n            var isInvalid = false;\n            if (fieldList.isCustomField) {\n                if (!group) {\n                    var dateGroup = this.getGroupSettings(fieldName.replace(this.dateGroup, ''));\n                    var customGroup = this.getGroupSettings(fieldName.replace(/_custom_group/g, ''));\n                    if (dateGroup) {\n                        isInvalid = false;\n                        type = 'date';\n                        fieldName = fieldName.replace(this.dateGroup, '');\n                    }\n                    else if (customGroup) {\n                        isInvalid = this.selectedCellsInfo.length === 1;\n                        type = 'custom';\n                    }\n                }\n                else if (group && group.type === 'Custom') {\n                    if (this.selectedCellsInfo.length === 1) {\n                        isInvalid = true;\n                    }\n                    else {\n                        isInvalid = false;\n                        type = 'custom';\n                    }\n                }\n                else if (group && group.type === 'Number') {\n                    isInvalid = false;\n                    type = 'number';\n                }\n            }\n            else {\n                if (group) {\n                    if (group.type === 'Number' || group.type === 'Date') {\n                        isInvalid = false;\n                        type = group.type === 'Date' ? 'date' : 'number';\n                    }\n                    else if (group.type === 'Custom') {\n                        isInvalid = this.selectedCellsInfo.length === 1;\n                        type = 'custom';\n                    }\n                }\n                else {\n                    if (fieldList.type === 'number' ||\n                        (['datetime', 'date']).indexOf(fieldList.type) !== -1 || this.isDateType(fieldName)) {\n                        isInvalid = false;\n                        type = (this.selectedCellsInfo.length === 1 ? ((['datetime', 'date']).indexOf(fieldList.type) !== -1 ||\n                            this.isDateType(fieldName)) ? 'date' : 'number' : 'custom');\n                    }\n                    else if (fieldList.type === 'string') {\n                        isInvalid = this.selectedCellsInfo.length === 1;\n                        type = 'custom';\n                    }\n                }\n            }\n            if (isInvalid) {\n                /* tslint:disable-next-line:max-line-length */\n                this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('warning'), this.parent.localeObj.getConstant('invalidSelection'));\n                this.parent.grid.clearSelection();\n            }\n            else if (type && type !== '') {\n                this.createGroupDialog(fieldName, type);\n            }\n        }\n    };\n    Grouping.prototype.updateUnGroupSettings = function (fieldName) {\n        var fieldList = this.parent.engineModule.fieldList[fieldName];\n        var groupFields = PivotUtil.cloneGroupSettings(this.parent.dataSourceSettings.groupSettings);\n        var group = this.getGroupSettings(fieldName);\n        if (this.selectedCellsInfo.length > 0) {\n            var type = void 0;\n            if (fieldList.isCustomField) {\n                if (!group) {\n                    var dateGroup = this.getGroupSettings(fieldName.replace(this.dateGroup, ''));\n                    var customGroup = this.getGroupSettings(fieldName.replace(/_custom_group/g, ''));\n                    if (dateGroup) {\n                        type = 'date';\n                        fieldName = fieldName.replace(this.dateGroup, '');\n                    }\n                    else if (customGroup) {\n                        type = 'custom';\n                    }\n                }\n                else if (group.type === 'Custom') {\n                    type = 'custom';\n                }\n            }\n            else {\n                if (group) {\n                    if (group.type === 'Number' || group.type === 'Date') {\n                        type = group.type === 'Date' ? 'date' : 'number';\n                    }\n                }\n            }\n            if (type === 'date' || type === 'number') {\n                groupFields = this.validateSettings(fieldName, groupFields, type, []);\n            }\n            else if (type === 'custom') {\n                var selectedOptions = this.getSelectedOptions(this.selectedCellsInfo);\n                groupFields = this.validateSettings(fieldName, groupFields, type, selectedOptions);\n            }\n            this.updateDateSource(groupFields, type);\n        }\n    };\n    Grouping.prototype.updateDateSource = function (groupFields, type) {\n        if (this.isUpdate) {\n            if (isBlazor()) {\n                PivotUtil.setPivotProperties(this.parent, { dataSourceSettings: { groupSettings: groupFields } });\n            }\n            else {\n                this.parent.setProperties({ dataSourceSettings: { groupSettings: groupFields } }, true);\n            }\n            this.parent.updateGroupingReport(groupFields, (type === 'date' ? 'Date' : type === 'custom' ? 'Custom' : 'Number'));\n            this.parent.notify(events.initialLoad, {});\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    Grouping.prototype.removeGroupSettings = function (fieldName, selectedOptions, groupFields, groupNames, type) {\n        var index = groupNames.indexOf(fieldName);\n        if (index !== -1) {\n            var field = groupFields[index];\n            for (var j = 0, len = field.customGroups.length; j < len; j++) {\n                if (field.customGroups[j]) {\n                    var group = field.customGroups[j];\n                    if (PivotUtil.inArray(group.groupName, selectedOptions) !== -1) {\n                        groupFields = this.modifyParentGroupItems(fieldName, groupFields, [group.groupName], group.items, groupNames);\n                        field.customGroups.splice(j, 1);\n                        this.isUpdate = true;\n                        j--;\n                        len--;\n                    }\n                }\n            }\n        }\n        return groupFields;\n    };\n    Grouping.prototype.getGroupSettings = function (fieldName) {\n        for (var _i = 0, _a = this.parent.dataSourceSettings.groupSettings; _i < _a.length; _i++) {\n            var group = _a[_i];\n            if (group.name === fieldName) {\n                return group;\n            }\n        }\n        return undefined;\n    };\n    Grouping.prototype.isDateType = function (fieldName) {\n        for (var _i = 0, _a = this.parent.dataSourceSettings.formatSettings; _i < _a.length; _i++) {\n            var format = _a[_i];\n            if (format.name === fieldName && format.type) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Returns the selected members/headers by checing the valid members from the pivot table.\n     * @method getSelectedCells\n     * @param  {string} axis - Spicifies the axis name for the given field.\n     * @param  {string} fieldName - Gets selected members for the given field name.\n     * @param  {string} name - specifies the selected member name for the given field.\n     * @return {boolean}\n     * @hidden\n     */\n    Grouping.prototype.getSelectedCells = function (axis, fieldName, name) {\n        var selectedCellsInfo = [];\n        /* tslint:disable */\n        var selectedElements = this.parent.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR + ',.' + cls.SELECTED_BGCOLOR);\n        /* tslint:enable */\n        for (var _i = 0, selectedElements_1 = selectedElements; _i < selectedElements_1.length; _i++) {\n            var element = selectedElements_1[_i];\n            var colIndex = Number(element.getAttribute('aria-colindex'));\n            var rowIndex = Number(element.getAttribute('index'));\n            var cell = this.parent.engineModule.pivotValues[rowIndex][colIndex];\n            if (cell && (cell.axis === axis) && !(cell.type === 'grand sum' || cell.type === 'sum') &&\n                cell.valueSort.axis === fieldName && name !== cell.actualText.toString()) {\n                selectedCellsInfo.push({\n                    axis: cell.axis,\n                    fieldName: cell.valueSort.axis.toString(),\n                    name: cell.actualText.toString(),\n                    cellInfo: cell\n                });\n            }\n        }\n        return selectedCellsInfo;\n    };\n    Grouping.prototype.createGroupDialog = function (fieldName, type) {\n        var _this = this;\n        var groupDialog = createElement('div', {\n            id: this.parentElement.id + '_GroupDialog',\n            className: 'e-group-field-settings',\n            attrs: { 'data-field': fieldName, 'data-type': type }\n        });\n        this.parentElement.appendChild(groupDialog);\n        this.groupDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            header: this.parent.localeObj.getConstant('grouping'),\n            content: this.createGroupOptions(fieldName, type),\n            isModal: true,\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 300,\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.updateGroupSettings.bind(this),\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true }\n                },\n                {\n                    click: function () { _this.groupDialog.hide(); },\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            overlayClick: function () { _this.removeDialog(); },\n            closeOnEscape: true,\n            close: this.removeDialog.bind(this),\n            target: this.parentElement\n        });\n        this.groupDialog.isStringTemplate = true;\n        this.groupDialog.appendTo(groupDialog);\n    };\n    Grouping.prototype.createGroupOptions = function (fieldName, type) {\n        var _this = this;\n        var groupInstance = this;\n        var mainDiv = createElement('div', {\n            className: 'e-group-field-div-content', id: this.parentElement.id + '_group_field_div_content',\n            attrs: { 'data-fieldName': fieldName, 'data-type': type }\n        });\n        var groupWrapperDiv1 = createElement('div', { className: 'e-group-option-wrapper' });\n        mainDiv.appendChild(groupWrapperDiv1);\n        // this.parentElement.appendChild(mainDiv);\n        var dataSource = this.parent.dataSourceSettings;\n        var groupField = PivotUtil.getFieldByName(fieldName, dataSource.groupSettings);\n        switch (type) {\n            case 'custom':\n                {\n                    var caption = void 0;\n                    var dataFields = dataSource.rows;\n                    dataFields = dataFields.concat(dataSource.columns, dataSource.values, dataSource.filters);\n                    /* tslint:disable:max-line-length */\n                    var actualField = PivotUtil.getFieldByName(fieldName.replace(/_custom_group/g, ''), dataFields);\n                    var currentField = PivotUtil.getFieldByName(fieldName, dataFields);\n                    var nextField = PivotUtil.getFieldByName(fieldName + '_custom_group', dataFields);\n                    if (currentField) {\n                        var newFieldName = fieldName + '_custom_group';\n                        caption = nextField ? nextField.caption :\n                            this.parent.engineModule.fieldList[actualField.name].caption + (newFieldName.match(/_custom_group/g).length + 1);\n                    }\n                    var captionInputTextDiv1 = createElement('div', {\n                        className: 'e-caption-option-text', innerHTML: this.parent.localeObj.getConstant('groupFieldCaption')\n                    });\n                    /* tslint:enable:max-line-length */\n                    var captionInputDiv1 = createElement('div', { className: 'e-group-caption-wrapper' });\n                    var captionInputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_caption_option',\n                        className: 'e-group-caption-text',\n                        attrs: { 'type': 'text' }\n                    });\n                    captionInputDiv1.appendChild(captionInputTextDiv1);\n                    captionInputDiv1.appendChild(captionInputField1);\n                    groupWrapperDiv1.appendChild(captionInputDiv1);\n                    var inputTextDiv1 = createElement('div', {\n                        className: 'e-input-option-text', innerHTML: this.parent.localeObj.getConstant('groupTitle')\n                    });\n                    var inputDiv1 = createElement('div', { className: 'e-group-input-wrapper' });\n                    var inputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_input_option',\n                        className: 'e-group-input-text',\n                        attrs: { 'type': 'text' }\n                    });\n                    inputDiv1.appendChild(inputTextDiv1);\n                    inputDiv1.appendChild(inputField1);\n                    groupWrapperDiv1.appendChild(inputDiv1);\n                    var captionInputObj1 = new MaskedTextBox({\n                        placeholder: this.parent.localeObj.getConstant('captionName'),\n                        enableRtl: this.parent.enableRtl,\n                        value: caption, width: '100%'\n                    });\n                    captionInputObj1.isStringTemplate = true;\n                    captionInputObj1.appendTo(captionInputField1);\n                    var inputObj1 = new MaskedTextBox({\n                        placeholder: this.parent.localeObj.getConstant('groupName'),\n                        enableRtl: this.parent.enableRtl,\n                        width: '100%'\n                    });\n                    inputObj1.isStringTemplate = true;\n                    inputObj1.appendTo(inputField1);\n                }\n                break;\n            case 'date':\n            case 'number':\n                {\n                    var startAtWrapper = createElement('div', {\n                        className: 'e-group-start-option-wrapper'\n                    });\n                    var startAtOptionDiv1 = createElement('input', {\n                        id: this.parentElement.id + 'group_start_option',\n                        className: 'e-group_start_option',\n                        attrs: { 'type': 'checkbox' }\n                    });\n                    var startAtInputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_start_input',\n                        className: 'e-group_start_input',\n                        attrs: { 'type': 'text' }\n                    });\n                    startAtWrapper.appendChild(startAtOptionDiv1);\n                    startAtWrapper.appendChild(startAtInputField1);\n                    groupWrapperDiv1.appendChild(startAtWrapper);\n                    var endAtWrapper = createElement('div', {\n                        className: 'e-group-end-option-wrapper'\n                    });\n                    var endAtOptionDiv1 = createElement('input', {\n                        id: this.parentElement.id + 'group_end_option',\n                        className: 'e-group_end_option',\n                        attrs: { 'type': 'checkbox' }\n                    });\n                    var endAtInputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_end_input',\n                        className: 'e-group_end_input',\n                        attrs: { 'type': 'text' }\n                    });\n                    endAtWrapper.appendChild(endAtOptionDiv1);\n                    endAtWrapper.appendChild(endAtInputField1);\n                    groupWrapperDiv1.appendChild(endAtWrapper);\n                    var intervalWrapper = createElement('div', {\n                        className: 'e-group-interval-option-wrapper'\n                    });\n                    var intervalTextDiv1 = createElement('div', {\n                        className: 'e-group-inerval-option-text', innerHTML: this.parent.localeObj.getConstant('groupBy')\n                    });\n                    var intervalInputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_interval_input',\n                        className: 'e-group_interval_input',\n                        attrs: { 'type': 'text' }\n                    });\n                    intervalWrapper.appendChild(intervalTextDiv1);\n                    intervalWrapper.appendChild(intervalInputField1);\n                    groupWrapperDiv1.appendChild(intervalWrapper);\n                    var startAt = undefined;\n                    var endAt = undefined;\n                    if (type === 'date') {\n                        var selectedGroups = [];\n                        var groupData = [\n                            { value: 'Seconds', text: this.parent.localeObj.getConstant('Seconds') },\n                            { value: 'Minutes', text: this.parent.localeObj.getConstant('Minutes') },\n                            { value: 'Hours', text: this.parent.localeObj.getConstant('Hours') },\n                            { value: 'Days', text: this.parent.localeObj.getConstant('Days') },\n                            { value: 'Months', text: this.parent.localeObj.getConstant('Months') },\n                            { value: 'QuarterYear', text: this.parent.localeObj.getConstant('QuarterYear') },\n                            { value: 'Quarters', text: this.parent.localeObj.getConstant('Quarters') },\n                            { value: 'Years', text: this.parent.localeObj.getConstant('Years') },\n                        ];\n                        if (groupField && groupField.type === 'Date') {\n                            selectedGroups = groupField.groupInterval;\n                            startAt = groupField.startingAt ? groupField.startingAt.toString() : undefined;\n                            endAt = groupField.endingAt ? groupField.endingAt.toString() : undefined;\n                        }\n                        else {\n                            selectedGroups = ['Months'];\n                        }\n                        var startAtInputObj = new DateTimePicker({\n                            placeholder: this.parent.localeObj.getConstant('chooseDate'),\n                            enableRtl: this.parent.enableRtl,\n                            format: 'dd/MM/yyyy hh:mm:ss a',\n                            enabled: !(startAt === undefined),\n                            width: '100%',\n                        });\n                        startAtInputObj.isStringTemplate = true;\n                        startAtInputObj.appendTo(startAtInputField1);\n                        var endAtInputObj = new DateTimePicker({\n                            placeholder: this.parent.localeObj.getConstant('chooseDate'),\n                            enableRtl: this.parent.enableRtl,\n                            format: 'dd/MM/yyyy hh:mm:ss a',\n                            enabled: !(endAt === undefined),\n                            width: '100%',\n                        });\n                        endAtInputObj.isStringTemplate = true;\n                        endAtInputObj.appendTo(endAtInputField1);\n                        MultiSelect.Inject(CheckBoxSelection);\n                        /* tslint:disable */\n                        var intervalObj_1 = new MultiSelect({\n                            dataSource: groupData,\n                            value: selectedGroups,\n                            fields: { text: 'text', value: 'value' },\n                            mode: 'CheckBox',\n                            showDropDownIcon: true,\n                            enableSelectionOrder: false,\n                            placeholder: this.parent.localeObj.getConstant('selectGroup'),\n                            filterBarPlaceholder: this.parent.localeObj.getConstant('example') + ' ' + this.parent.localeObj.getConstant('Months'),\n                            enableRtl: this.parent.enableRtl,\n                            select: function () {\n                                groupInstance.groupDialog.element.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n                            },\n                            removed: function () {\n                                if (intervalObj_1.checkBoxSelectionModule.activeLi.length === 0) {\n                                    groupInstance.groupDialog.element.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n                                }\n                            }\n                        });\n                        /* tslint:enable */\n                        intervalObj_1.isStringTemplate = true;\n                        intervalObj_1.appendTo(intervalInputField1);\n                        startAtInputObj.value = startAt === undefined ? null : new Date(startAt);\n                        startAtInputObj.dataBind();\n                        endAtInputObj.value = endAt === undefined ? null : new Date(endAt);\n                        endAtInputObj.dataBind();\n                    }\n                    else {\n                        var selectedInterval = undefined;\n                        if (groupField && groupField.type === 'Number') {\n                            selectedInterval = groupField.rangeInterval;\n                            startAt = groupField.startingAt ? groupField.startingAt.toString() : undefined;\n                            endAt = groupField.endingAt ? groupField.endingAt.toString() : undefined;\n                        }\n                        else {\n                            selectedInterval = 2;\n                        }\n                        var startAtInputObj = new NumericTextBox({\n                            placeholder: this.parent.localeObj.getConstant('enterValue'),\n                            enableRtl: this.parent.enableRtl,\n                            showClearButton: true,\n                            format: '###',\n                            value: startAt === undefined ? undefined : parseInt(startAt, 10),\n                            enabled: !(startAt === undefined),\n                            width: '100%',\n                        });\n                        startAtInputObj.isStringTemplate = true;\n                        startAtInputObj.appendTo(startAtInputField1);\n                        var endAtInputObj = new NumericTextBox({\n                            placeholder: this.parent.localeObj.getConstant('enterValue'),\n                            enableRtl: this.parent.enableRtl,\n                            showClearButton: true,\n                            format: '###',\n                            value: endAt === undefined ? undefined : parseInt(endAt, 10),\n                            enabled: !(endAt === undefined),\n                            width: '100%'\n                        });\n                        endAtInputObj.isStringTemplate = true;\n                        endAtInputObj.appendTo(endAtInputField1);\n                        var intervalObj = new NumericTextBox({\n                            placeholder: this.parent.localeObj.getConstant('enterValue'),\n                            enableRtl: this.parent.enableRtl,\n                            showClearButton: true,\n                            format: '###',\n                            min: 1,\n                            value: selectedInterval,\n                            width: '100%'\n                        });\n                        intervalObj.isStringTemplate = true;\n                        intervalObj.appendTo(intervalInputField1);\n                    }\n                    var startAtObj = new CheckBox({\n                        label: this.parent.localeObj.getConstant('startAt'),\n                        checked: !(startAt === undefined),\n                        enableRtl: this.parent.enableRtl,\n                        change: function (args) {\n                            var startAtObj = (type === 'date' ?\n                                getInstance('#' + _this.parentElement.id + 'group_start_input', DateTimePicker) :\n                                getInstance('#' + _this.parentElement.id + 'group_start_input', NumericTextBox));\n                            startAtObj.enabled = args.checked;\n                            startAtObj.dataBind();\n                        }\n                    });\n                    startAtObj.isStringTemplate = true;\n                    startAtObj.appendTo(startAtOptionDiv1);\n                    var endAtObj = new CheckBox({\n                        label: this.parent.localeObj.getConstant('endAt'),\n                        checked: !(endAt === undefined),\n                        enableRtl: this.parent.enableRtl,\n                        change: function (args) {\n                            var endAtObj = (type === 'date' ?\n                                getInstance('#' + _this.parentElement.id + 'group_end_input', DateTimePicker) :\n                                getInstance('#' + _this.parentElement.id + 'group_end_input', NumericTextBox));\n                            endAtObj.enabled = args.checked;\n                            endAtObj.dataBind();\n                        }\n                    });\n                    endAtObj.isStringTemplate = true;\n                    endAtObj.appendTo(endAtOptionDiv1);\n                }\n                break;\n        }\n        return mainDiv;\n    };\n    /* tslint:disable:max-func-body-length */\n    Grouping.prototype.updateGroupSettings = function () {\n        var dialogElement = this.groupDialog.element;\n        var groupType = dialogElement.getAttribute('data-type');\n        var fieldName = dialogElement.getAttribute('data-field');\n        var groupFields = PivotUtil.cloneGroupSettings(this.parent.dataSourceSettings.groupSettings);\n        if (groupFields.length === 0 && !this.parent.clonedDataSet && !this.parent.clonedReport) {\n            var dataSet = this.parent.engineModule.data;\n            this.parent.clonedDataSet = PivotUtil.getClonedData(dataSet);\n            this.parent.setProperties({ dataSourceSettings: { dataSource: [] } }, true);\n            this.parent.clonedReport = extend({}, this.parent.dataSourceSettings, null, true);\n            this.parent.setProperties({ dataSourceSettings: { dataSource: dataSet } }, true);\n        }\n        if (groupType === 'custom') {\n            var inputInstance = getInstance('#' + this.parentElement.id + 'group_input_option', MaskedTextBox);\n            var captionInputInstance = getInstance('#' + this.parentElement.id + 'group_caption_option', MaskedTextBox);\n            removeClass([inputInstance.element], cls.EMPTY_FIELD);\n            if (inputInstance.value === null || inputInstance.value === '') {\n                addClass([inputInstance.element], cls.EMPTY_FIELD);\n                inputInstance.element.focus();\n                return;\n            }\n            var selectedOptions = this.getSelectedOptions(this.selectedCellsInfo);\n            var customGroup = { groupName: inputInstance.value, items: selectedOptions };\n            var splicedItems = [];\n            var newItems = [];\n            var field = { name: fieldName, caption: captionInputInstance.value, type: 'Custom', customGroups: [] };\n            var isUpdated = false;\n            for (var i = 0, len = groupFields.length; i < len; i++) {\n                if (groupFields[i].name === fieldName) {\n                    field = groupFields[i];\n                    field.caption = captionInputInstance.value;\n                    for (var j = 0, len_1 = field.customGroups.length; j < len_1; j++) {\n                        if (field.customGroups[j]) {\n                            var group = field.customGroups[j];\n                            if (group.items && PivotUtil.isContainCommonElements(group.items, selectedOptions)) {\n                                splicedItems = this.mergeArray(splicedItems, [group.groupName]);\n                                newItems = this.mergeArray(newItems, group.items);\n                                field.customGroups.splice(j, 1);\n                                j--;\n                                len_1--;\n                            }\n                        }\n                    }\n                    for (var _i = 0, selectedOptions_1 = selectedOptions; _i < selectedOptions_1.length; _i++) {\n                        var item = selectedOptions_1[_i];\n                        var index = newItems.indexOf(item);\n                        if (index !== -1) {\n                            newItems.splice(index, 1);\n                        }\n                    }\n                    newItems = this.mergeArray(newItems, [customGroup.groupName]);\n                    field.customGroups.push(customGroup);\n                    this.isUpdate = true;\n                    isUpdated = true;\n                    break;\n                }\n            }\n            if (!isUpdated) {\n                field.customGroups.push(customGroup);\n                this.isUpdate = true;\n                groupFields.push(field);\n            }\n            /* tslint:disable-next-line:max-line-length */\n            groupFields = this.validateSettings(fieldName, groupFields, groupType, (splicedItems.length === 0 ? customGroup.items : splicedItems), newItems);\n        }\n        else if (groupType === 'date' || groupType === 'number') {\n            var startCheckBoxInstance = getInstance('#' + this.parentElement.id + 'group_start_option', CheckBox);\n            var endCheckBoxInstance = getInstance('#' + this.parentElement.id + 'group_end_option', CheckBox);\n            var startInputInstance = (groupType === 'date' ?\n                getInstance('#' + this.parentElement.id + 'group_start_input', DateTimePicker) :\n                getInstance('#' + this.parentElement.id + 'group_start_input', NumericTextBox));\n            var endInputInstance = (groupType === 'date' ?\n                getInstance('#' + this.parentElement.id + 'group_end_input', DateTimePicker) :\n                getInstance('#' + this.parentElement.id + 'group_end_input', NumericTextBox));\n            var intervalInstance = (groupType === 'date' ?\n                getInstance('#' + this.parentElement.id + 'group_interval_input', MultiSelect) :\n                getInstance('#' + this.parentElement.id + 'group_interval_input', NumericTextBox));\n            var startAt = startCheckBoxInstance.checked ? startInputInstance.value.toString() : undefined;\n            var endAt = endCheckBoxInstance.checked ? endInputInstance.value.toString() : undefined;\n            var field = { name: fieldName, startingAt: startAt, endingAt: endAt };\n            if (groupType === 'date') {\n                var selectedItems = [];\n                for (var _a = 0, _b = intervalInstance.value; _a < _b.length; _a++) {\n                    var list = _b[_a];\n                    selectedItems.push(list);\n                }\n                field.type = 'Date';\n                field.groupInterval = selectedItems;\n            }\n            else {\n                field.type = 'Number';\n                field.rangeInterval = intervalInstance.value;\n            }\n            var isUpdated = false;\n            for (var i = 0, len = groupFields.length; i < len; i++) {\n                if (groupFields[i].name === fieldName) {\n                    groupFields.splice(i, 1, field);\n                    this.isUpdate = true;\n                    isUpdated = true;\n                    break;\n                }\n            }\n            if (!isUpdated) {\n                this.isUpdate = true;\n                groupFields.push(field);\n            }\n            groupFields = this.validateSettings(fieldName, groupFields, groupType, [], []);\n        }\n        this.groupDialog.close();\n        this.updateDateSource(groupFields, groupType);\n    };\n    Grouping.prototype.getGroupBasedSettings = function (groupFields) {\n        var groups = {};\n        for (var _i = 0, groupFields_1 = groupFields; _i < groupFields_1.length; _i++) {\n            var group = groupFields_1[_i];\n            if (groups[group.type]) {\n                groups[group.type].push(group);\n            }\n            else {\n                groups[group.type] = [group];\n            }\n        }\n        return groups;\n    };\n    Grouping.prototype.getGroupByName = function (groupFields) {\n        var customFields = {};\n        for (var _i = 0, groupFields_2 = groupFields; _i < groupFields_2.length; _i++) {\n            var field = groupFields_2[_i];\n            var name_1 = field.name.replace(/_custom_group/g, '');\n            if (customFields[name_1]) {\n                customFields[name_1].push(field);\n            }\n            else {\n                customFields[name_1] = [field];\n            }\n        }\n        return customFields;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    Grouping.prototype.validateSettings = function (fieldName, groupFields, groupType, splicedItems, newItems) {\n        var validatedSettings = [];\n        var groups = this.getGroupBasedSettings(groupFields);\n        var groupOrders = ['Date', 'Number', 'Custom'];\n        if (groups[groupOrders[2]] && groupType === 'custom') {\n            var customFields = this.getGroupByName(groups[groupOrders[2]]);\n            if (customFields[fieldName.replace(/_custom_group/g, '')]) {\n                var customGroups = customFields[fieldName.replace(/_custom_group/g, '')];\n                var fields = customGroups.map(function (item, pos) { return item.name; });\n                if (newItems) {\n                    /* tslint:disable-next-line:max-line-length */\n                    customGroups = this.modifyParentGroupItems(fieldName, customGroups, splicedItems, newItems, fields);\n                }\n                else {\n                    customGroups = this.removeGroupSettings(fieldName.replace('_custom_group', ''), splicedItems, customGroups, fields);\n                }\n            }\n            var orderedGroups = [];\n            for (var _i = 0, _a = Object.keys(customFields); _i < _a.length; _i++) {\n                var field = _a[_i];\n                var fields = customFields[field].map(function (item, pos) { return item.name; });\n                orderedGroups = this.reOrderSettings(customFields[field], fields, orderedGroups, field);\n            }\n            groups[groupOrders[2]] = orderedGroups;\n        }\n        else if ((groupType === 'date' || groupType === 'number') && !newItems) {\n            var groupFields_3 = groupType === 'date' ? groups[groupOrders[0]] : groups[groupOrders[1]];\n            if (groupType === 'date') {\n                groups[groupOrders[0]] = groupFields_3.filter(function (field) { return field.name !== fieldName; });\n            }\n            else {\n                groups[groupOrders[1]] = groupFields_3.filter(function (field) { return field.name !== fieldName; });\n            }\n            this.isUpdate = true;\n        }\n        for (var _b = 0, groupOrders_1 = groupOrders; _b < groupOrders_1.length; _b++) {\n            var order = groupOrders_1[_b];\n            if (groups[order]) {\n                validatedSettings = validatedSettings.concat(groups[order]);\n            }\n        }\n        return validatedSettings;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    Grouping.prototype.reOrderSettings = function (customGroups, fields, orderedSettings, fieldName) {\n        var index = fields.indexOf(fieldName);\n        if (index > -1 && customGroups[index].customGroups && customGroups[index].customGroups.length > 0) {\n            orderedSettings.push(customGroups[index]);\n            this.reOrderSettings(customGroups, fields, orderedSettings, fieldName + '_custom_group');\n        }\n        return orderedSettings;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    Grouping.prototype.modifyParentGroupItems = function (fieldName, groupFields, splicedItems, newItems, fields) {\n        var index = fields.indexOf(fieldName + '_custom_group');\n        if (index !== -1) {\n            var field = groupFields[index];\n            var selectedOptions = [];\n            if (field.customGroups && field.customGroups.length > 0) {\n                for (var i = 0, len = field.customGroups.length; i < len; i++) {\n                    if (field.customGroups[i]) {\n                        var isItemsUpdated = false;\n                        var group = field.customGroups[i];\n                        if (group.items) {\n                            for (var _i = 0, splicedItems_1 = splicedItems; _i < splicedItems_1.length; _i++) {\n                                var item = splicedItems_1[_i];\n                                var pos = group.items.indexOf(item);\n                                if (pos !== -1) {\n                                    group.items.splice(pos, 1);\n                                    this.isUpdate = true;\n                                    isItemsUpdated = true;\n                                }\n                            }\n                            if (isItemsUpdated) {\n                                group.items = this.mergeArray(group.items, newItems);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return groupFields;\n    };\n    Grouping.prototype.mergeArray = function (collection1, collection2) {\n        var resultArray = [];\n        var array = collection1.concat(collection2);\n        var len = array.length;\n        var assoc = {};\n        while (len--) {\n            var item = String(array[len]);\n            if (!assoc[item]) {\n                resultArray.unshift(item);\n                assoc[item] = true;\n            }\n        }\n        return resultArray;\n    };\n    Grouping.prototype.removeDialog = function () {\n        if (this.parent.grid && this.parent.grid.isDestroyed) {\n            return;\n        }\n        this.parent.grid.clearSelection();\n        if (this.groupDialog && !this.groupDialog.isDestroyed) {\n            this.groupDialog.destroy();\n        }\n        if (this.parentElement && document.getElementById(this.parentElement.id + '_GroupDialog')) {\n            remove(document.getElementById(this.parentElement.id + '_GroupDialog'));\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grouping.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.render\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initGrouping, this.handlers.load, this); //For initial rendering\n    };\n    /**\n     * @hidden\n     */\n    Grouping.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.removeDialog();\n        this.parent.off(events.initGrouping, this.handlers.load);\n    };\n    /**\n     * To destroy the pivot button event listener\n     * @return {void}\n     * @hidden\n     */\n    Grouping.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Grouping;\n}());\nexport { Grouping };\n","import * as index from './index';\nindex.PivotView.Inject(index.GroupingBar, index.FieldList, index.CalculatedField, index.ConditionalFormatting, index.VirtualScroll, index.DrillThrough, index.Toolbar, index.PivotChart, index.PDFExport, index.ExcelExport, index.NumberFormatting, index.Grouping);\nexport * from './index';\n"],"names":["PivotUtil","getType","value","getDay","getHours","getMinutes","getSeconds","getMilliseconds","isNaN","Number","resetTime","date","setHours","getClonedData","data","clonedData","_i","_a","length","item","fields","Object","keys","keyPos","framedSet","push","getClonedPivotValues","pivotValues","clonedSets","i","j","this","getClonedPivotValueObj","undefined","getDefinedObj","inArray","collection","cnt","isContainCommonElements","collection1","collection2","lnt","setPivotProperties","control","properties","allowServerDataBinding","pivotGridModule","setProperties","getClonedDataSourceSettings","dataSourceSettings","type","catalog","cube","providerType","url","localeIdentifier","excludeFields","isNullOrUndefined","slice","expandAll","allowLabelFilter","allowValueFilter","allowMemberFilter","enableSorting","rows","cloneFieldSettings","columns","filters","values","filterSettings","cloneFilterSettings","sortSettings","cloneSortSettings","drilledMembers","cloneDrillMemberSettings","valueSortSettings","CloneValueSortObject","valueAxis","formatSettings","cloneFormatSettings","calculatedFieldSettings","cloneCalculatedFieldSettings","fieldMapping","showSubTotals","showRowSubTotals","showColumnSubTotals","showGrandTotals","showRowGrandTotals","showColumnGrandTotals","showHeaderWhenEmpty","alwaysShowValueHeader","conditionalFormatSettings","cloneConditionalFormattingSettings","emptyCellsTextContent","groupSettings","cloneGroupSettings","showAggregationOnValueField","authentication","CloneAuthenticationObject","updateDataSourceSettings","clonedCollection","collection_1","set","name","caption","axis","baseField","baseItem","isCalculatedField","isNamedSet","showNoDataItems","dataType","showFilterIcon","showSortIcon","showRemoveIcon","showValueTypeIcon","showEditIcon","allowDragAndDrop","collection_2","condition","items","levelCount","measure","selectedField","showDateFilter","showLabelFilter","showNumberFilter","value1","value2","collection_3","order","collection_4","delimiter","collection_5","calendar","currency","format","maximumFractionDigits","maximumSignificantDigits","minimumFractionDigits","minimumIntegerDigits","minimumSignificantDigits","skeleton","useGrouping","columnIndex","headerDelimiter","headerText","sortOrder","userName","password","collection_6","formatString","formula","hierarchyUniqueName","collection_7","applyGrandTotals","conditions","label","style","backgroundColor","color","fontFamily","fontSize","collection_8","customGroups","cloneCustomGroups","endingAt","startingAt","groupInterval","rangeInterval","collection_9","groupName","getFilterItemByName","fieldName","filterItems","DataManager","json","executeLocal","Query","where","getFieldByName","getFieldInfo","len","fieldItem","position","fieldList","olapEngineModule","engineModule","isNamedSets","aggregateType","isButtonIconRefesh","prop","oldProp","newProp","isButtonRefresh","propValidation","oldAxesProp","newAxesProp","axes","oldAxis","newAxis","indexOf","options","oldAxisProp","newAxisProp","k","a","b","c","propValidation_1","validation","exception","formatPivotValues","Axis","actualText","ActualText","indexObject","IndexObject","index","Index","rowHeaders","RowHeaders","columnHeaders","ColumnHeaders","formattedText","FormattedText","actualValue","ActualValue","rowIndex","RowIndex","colIndex","ColIndex","colSpan","ColSpan","level","Level","rowSpan","RowSpan","isSum","IsSum","isGrandSum","IsGrandSum","valueSort","ValueSort","ordinal","Ordinal","hasChild","HasChild","isDrilled","IsDrilled","Value","Type","members","Members","formatPdfHeaderFooter","pdf","contents","content","pageNumberType","PageNumberType","Style","penColor","PenColor","penSize","PenSize","dashStyle","DashStyle","textBrushColor","TextBrushColor","textPenColor","TextPenColor","FontSize","hAlign","HAlign","vAlign","VAlign","points","Points","x1","X1","y1","Y1","x2","X2","y2","Y2","Format","Position","x","X","y","Y","size","Size","height","Height","width","Width","src","Src","font","Font","formatPdfExportProperties","pageOrientation","PageOrientation","pageSize","PageSize","header","Header","fromTop","FromTop","Contents","Columns","footer","Footer","FromBottom","includeHiddenColumn","IncludeHiddenColumn","dataSource","DataSource","exportType","ExportType","theme","Theme","record","Record","Caption","fileName","FileName","hierarchyExportMode","HierarchyExportMode","allowHorizontalOverflow","AllowHorizontalOverflow","formatExcelStyle","fontColor","FontColor","fontName","FontName","String","bold","Bold","indent","Indent","italic","Italic","underline","Underline","backColor","BackColor","wrapText","WrapText","borders","Borders","numberFormat","NumberFormat","formatExcelCell","cell","cells","hyperlink","target","Hyperlink","Target","displayText","DisplayText","styles","formatExcelHeaderFooter","excel","Rows","row","Cells","grouping","Grouping","formatExcelExportProperties","query","multipleExport","MultipleExport","blankRows","BlankRows","headerRows","HeaderRows","footerRows","FooterRows","formatFieldList","fList","id","Id","FormatString","formattedMembers","FormattedMembers","dateMember","DateMember","filter","Filter","sort","Sort","AggregateType","BaseField","BaseItem","filterType","FilterType","Formula","isSelected","IsSelected","isExcelFilter","IsExcelFilter","ShowNoDataItems","isCustomField","IsCustomField","ShowFilterIcon","ShowSortIcon","ShowRemoveIcon","ShowEditIcon","ShowValueTypeIcon","AllowDragAndDrop","IsCalculatedField","ShowSubTotals","frameContent","rowPosition","dataContent","pivot","isEmptyData","isEngineUpdated","rowCnt","start","end","rCnt","cCnt","getLocalizedObject","locale","localeObj","getConstant","generateUUID","d","Date","getTime","d2","performance","now","replace","r","Math","random","floor","toString","__assign","assign","t","s","n","arguments","p","prototype","hasOwnProperty","call","apply","PivotEngine","aggregatedValueMatrix","valueContent","formatFields","dateFormatFunction","calculatedFields","calculatedFormulas","saveDataHeaders","columnCount","rowCount","colFirstLvl","rowFirstLvl","rowStartPos","colStartPos","enableValueSorting","headerCollection","rowHeadersCount","columnHeadersCount","rMembers","cMembers","groupingFields","valueMatrix","indexMatrix","memberCnt","pageInLimit","endPos","removeCount","colHdrBufferCalculated","colValuesLength","rowValuesLength","slicedHeaders","fieldFilterMem","filterPosObj","selectedHeaders","selectedHeader","rowGrandTotal","columnGrandTotal","removeRowGrandTotal","removeColumnGrandTotal","isValueHasAdvancedAggregate","rawIndexObject","isEditing","actualData","groupRawIndex","fieldKeys","allowDataCompression","frameHeaderObjectsCollection","headerObjectsCollection","columnKeys","fieldDrillCollection","customRegex","formatRegex","renderEngine","customProperties","fn","getValueCellInfo","globalize","Internationalization","fieldsType","enableSort","isValueFilterEnabled","isDrillThrough","isBlazor","shift","pageSettings","getGroupedRawData","formats","groups","getGroupData","validateFilters","isExpandAll","isValueFiltersAvail","isMutiMeasures","emptyCellTextContent","valueSortData","savedFieldList","getFieldList","removeIrrelevantFields","fillFieldMembers","updateSortSettings","generateValueMatrix","filterMembers","columnLength","updateFilterMembers","generateGridData","report","pos","splice","frameHeaderWithKeys","countFields","map","hasCountField","realData","headerFields","concat","groupRawData","finalData","groupKeys","indexLength","currData","vPos","hPos","memberJoin","join","currFieldName","currValue","savedData","summType","_this","fieldkeySet","this_1","state_1","group","groupFields","customGroupFieldName","len_1","interval","isInRangeAvail","getRange","newDate","newFieldName","setFullYear","getFullYear","month","ceil","getMonth","setMonth","getDate","setMinutes","setSeconds","groupValue","len_2","cGroup","isDataMatch","isCompleteSet","keys_1","key","isDataSource","axisFields","gCnt","groupField","axisFields_1","actualField","dataFields","newField","len_3","startValue","endValue","cStartValue","cEndValue","unframedSet","dataLength","framedSetLength","max","len_4","duplicateData","frameData","lastIndexOf","_b","keys_2","_c","axisFields_2","field","len_5","customFieldName","pattern","match","parentField","customGroupField","_d","axisFields_3","formatfield","extend","cValue","isRangeAvail","cDate","startDate","endDate","parseInt","getFormattedFields","exactFormat","getDateFormat","fullFormat","isSort","isValueFilteringEnabled","getCalculatedField","lenE","dataTypes","getMappingField","toLowerCase","updateTreeViewData","updateFieldList","actualFormula","this_2","calc","calcProperties","powerFunction","formulaType","split","lmt","aggregateValue","selectedString","filterElements","filterElements_1","dataFields_1","validateValueFields","indMat","dlen","kLn","kl","isDataAvail","membersCnt","fmembersCnt","dl","mkey","fKey","formattedValue","getFormattedValue","dateText","vMat","keyLen","flList","tkln","sln","slt","source","filterRw","list","isInclude","getFilters","dln","include","ln","exclude","ilist","rln","rlt","filterElement","isValidFilterField","applyLabelFilter","frameFilterList","allowMemberFiltering","allowLabelFiltering","isValidFilterElement","filterTypes","dataFields_2","getLabelFilterMembers","date1","date2","getDateFilterMembers","members_1","member","operand1","getParsedValue","operand2","validateFilterValue","excludeOperators","operator","members_2","filterValue","members_3","val","isMemberInclude","isLabelFilter","updateFilter","fln","allowFil","final","filterObj","memberObj","indx","iln","ilt","applyValueFiltering","rowData","valueFilter","rowFilterData","isValueFiltered","allMember","getFilteredData","rLen","mPos","aggregate","getAggregateValue","cellDetails","column","cellSets","getCellSet","rowCellType","columnCellType","skipFormatting","isLevelFiltered","removefilteredData","valueFilteredData","validateFilteredParentData","formatSetting","parseNumber","filteredData","levelName","allMemberData","rows_1","rowFilteredData","index_1","index_2","_e","_f","updateFramedHeaders","framedHeaders","dataHeaders","filteredHeaders","headers","framedHeaders_1","dHeader","isHeaderAvail","validateFilteredHeaders","filterFramedHeaders","filteredHeaders_1","vHeader","isEmptyDataAvail","updateGridData","frameDrillObject","getIndexedHeaders","insertAllMembersCommon","headerContent","rowheads","colheads","columnFilteredData","valuesCount","valueFilters","valueFields","values_1","filterSettings_1","isAvail","cLen","applyValueSorting","calculatePagingValues","getAggregatedHeaders","getHeaderData","insertSubTotals","getTableData","applyAdvancedAggregate","updateHeaders","rowFlag","columnFlag","updatePivotValues","slicePos","onDrill","drilledItem","headersInfo","getHeadersInfo","performDrillOperation","updateEngine","onSort","sortItem","performSortOperation","onFilter","filterItem","posObj","addPos","performFilterCommonUpdate","onAggregation","onCalcOperation","currentPosition","count","memberName","action","sortedHeaders","updateHeadersCount","getSortedHeaders","performFilterDeletion","filterObjects","loopIn","this_3","engine_1","engine","matchIndexes","performFilterAddition","this_4","memberNameObj_1","excessHeaders","rawHeaders","headerNames_1","rawHeaders_1","grandHeader","pop","insertPosition","insertTotalPosition","getAxisByFieldName","fields_1","axisCount","isDrill","lenCnt","framedHeader","isNotDateType","childrens","stringValue","alphaNumbervalue","charAt","isNullArgument","textArray","hText","mIndex","mType","getMember","sortByValueRow","vlen","aggreColl","rMembers_1","rMembers_2","insertAllMember","rowLength","rowCells","savedCell","spanCnt","indexObj","colCnt","rowPos","cellType","isSpanned","fieldCnt","drillOption","memberString","keyInd","parentMember","valueFil","hierarchy","rlen","decisionObj","reportDataType","isNoData","isDateType","savedMembers","lt","memInd","headerValue","availData","filterPosition","getOrderedIndex","orderedIndex","slicedHeader","diff","summCell","lt_1","rowCurrentPage","rowSize","exactStartPos","performSlicing","columnCurrentPage","columnSize","startPos","removeChildMembers","framedMember","customText","reformAxis","tnum","vlt","rTotal","cTotal","actCnt","isLeastNode","hpos","actpos","vln","name_1","calObj","vData","cln","clt","updateRowData","recursiveRowData","isHeaderSelected","rows_2","getAggregatedHeaderData","columns_1","isChildren","headers_1","updateSelectedHeaders","childMembers","aggregateHeaders","children","vCount","isChild","uniqueName","valueCount","pivotIndex","isIndexFilled","colIndex_1","updateAggregates","indexCollection_1","selectedHeaders_1","selectedHeaderCollection","name_2","isRowBaseField","activeValues","indexCollection","activeColumn","rowindexCollection","selectedRowValues","selectedColumnValues","len_6","cLevelName","axisObj","isSelectedColumn","len_7","uniqueLevelName","colIndex_3","currentSet","selectedHeaderCollection_1","colIndex_2","indexCollection_2","cVal","formatNumber","clen","_g","rowindexCollection_2","selectedHeaderCollection_2","rowindexCollection_1","selectedColumn","getSelectedColumn","_h","indexCollection_3","selectedColumnValue","selectedRow","getSelectedRow","_j","selectedHeaderCollection_3","_k","colIndex_4","_l","indexCollection_4","selectedRowValue","_m","selectedHeaderCollection_4","_o","rowindexCollection_3","selectedCol","_p","indexCollection_5","selectedColValue","_q","colIndex_5","_r","selectedHeaderCollection_5","_s","selectedHeaderCollection_6","colheads_1","head","rowheads_1","gTotalIndex","totalValues","gTotalIndex_1","rIndex","val_1","gTotalIndex_2","val_2","isGrand","subTotal","toLocaleString","currentCellSets","keys_3","vcnt","colItmLn","sortText","isTotalHide","lvl","isSingleMeasure","name_3","ri","cellValue","avgCnt","isInit","isValueExist","duplicateValues","currentVal","indexVal","avgVal","avgDifferenceVal","indexVal_1","pow","sqrt","NaN","isFirst","isMaxFirst","calcField","aggregateField","aggregatedValue","value_1","type_1","evaluate","Infinity","JSON","parse","obj","Function","commonValue","formatField","test","flag","integerPart","decimalPart","items_1","text","RegExp","initialLoad","uiUpdate","contentReady","dataReady","ROOT","RTL","DEVICE","ICON","COLLAPSE","EXPAND","TABLE","CALCINPUT","FLAT","FORMAT","FORMULA","MENU_HIDE","INPUT","CELL_SELECTED_BGCOLOR","SELECTED_BGCOLOR","GRID_REMOVE","GRID_TOOLBAR","PIVOTCHART","PIVOT_DISABLE_ICON","PIVOT_SELECT_ICON","AggregateMenu","parent","menuInfo","render","args","parentElement","openContextMenu","buttonElement","isStringField","summaryTypes","getMenuItem","eventArgs","cancel","aggregateTypes","getModuleName","isPopupView","trigger","observedArgs","createContextMenu","currentMenu","getBoundingClientRect","enableRtl","open","top","window","scrollY","document","documentElement","scrollTop","left","menuItems","isDestroyed","destroy","checkDuplicates","element","getAllSummaryType","menuOptions","beforeOpen","beforeMenuOpen","bind","onClose","querySelector","focus","select","selectOptionInContextMenu","contextMenu","getElementById","innerHTML","createElement","appendChild","Menu","isStringTemplate","appendTo","isString","zIndex","display","createValueSettingsDialog","valueDialog","className","attrs","data-field","Dialog","animationSettings","effect","allowDragging","createFieldOptions","isModal","visible","showCloseIcon","buttons","click","updateValueSettings","buttonModel","cssClass","isPrimary","hide","closeOnEscape","renderMode","overlayClick","removeDialog","close","fieldCaption","getAttribute","summaryType","summaryDataSource","summaryItems","baseItemTypes","baseFieldTypes","fieldDataSource","fieldItemDataSource","mainDiv","data-type","data-caption","data-basefield","data-baseitem","textWrappper","filterWrapperDiv1","optionWrapperDiv1","optionWrapperDiv2","optionWrapperDiv3","texttitle","textContent","inputTextDiv1","optionTextDiv1","optionTextDiv2","optionTextDiv3","inputDiv1","dropOptionDiv1","dropOptionDiv2","dropOptionDiv3","inputField1","popupInstance","optionWrapper1","DropDownList","change","optionWrapper2","enabled","optionWrapper3","dataBind","filterBarPlaceholder","allowFiltering","inputObj1","MaskedTextBox","placeholder","menu","valuefields","contentElement","captionName","setAttribute","vCnt","dataSourceItem","lastAggregationInfo","updateDataSource","isRefreshed","allowDeferLayoutUpdate","notify","events.uiUpdate","triggerPopulateEvent","dialogElement","captionInstance","getInstance","summaryInstance","baseFieldInstance","baseItemInstance","remove","Render","indentCollection","colPos","lastSpan","lvlCollection","hierarchyCollection","lvlPosCollection","hierarchyPosCollection","measurePos","maxMeasurePos","hierarchyCount","resColWidth","showGroupingBar","groupingBarModule","isAdaptive","gridSettings","formatList","getFormatList","aggMenu","gridHeaderCellInfo","gridCellCollection","injectGridModules","getRowStartPos","grid","frameDataSource","frameStackedHeaders","isScrolling","resizeInfo","refreshColumns","setGridRowWidth","getHeaderContent","calculateGridWidth","calculateGridHeight","bindGrid","on","headerRefreshed","refreshHeader","enableVirtualization","mHdr","mCont","vtr","virtualHeaderDiv","setStyleAttribute","transform","scrollLeft","isEmpty","Grid","frozenColumns","frozenRows","enableHover","frameEmptyData","frameEmptyColumns","allowExcelExport","allowPdfExport","allowResizing","allowTextWrap","allowReordering","allowSelection","contextMenuItems","selectedRowIndex","selectionSettings","textWrapSettings","printMode","rowHeight","gridLines","contextMenuClick","contextMenuOpen","beforeCopy","beforePrint","printComplete","rowSelecting","rowSelected","rowDeselecting","rowDeselected","cellSelecting","cellSelected","cellDeselecting","cellDeselected","resizeStart","columnDragStart","columnDrag","columnDrop","beforeExcelExport","resizing","setGroupWidth","resizeStop","onResizeStop","queryCellInfo","dataBound","headerCellInfo","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","excelQueryCellInfo","pdfQueryCellInfo","beforePdfExport","pdfExportComplete","excelExportComplete","excelDataBound","lastGridSettings","gridObject","pivotColumns","renderModule","selected","rowRangeSelection","enable","selectionModule","selectRowsByRange","startIndex","endIndex","rowCellBoundEvent","columnCellBoundEvent","excelColumnEvent","pdfRowEvent","excelRowEvent","pdfColumnEvent","lastColumn","cellTemplate","getCellTemplate","targetCell","enableHtmlSanitizer","appendHtml","SanitizeHtmlHelper","sanitize","outerHTML","borderRight","borderLeft","widthService","setWidthToTable","notEmpty","currentView","hideScroll","setFocusOnLastCell","renderReactTemplates","events.contentReady","keyboardModule","event","nodeName","gridFocus","serviceLocator","getService","setFocusedElement","addClass","cellTarget","lastCellClicked","elem","bool","isGroupElement","classList","contains","allowGrouping","groupingModule","validateField","pivotValue1","querySelectorAll","cls.EXPAND","add","cls.MENU_HIDE","cls.COLLAPSE","removeClass","isUngroupOption","selectedCellsInfo","getSelectedCells","cellInfo","selectedOptions","getSelectedOptions","customGroup","allowDrillThrough","innerText","allowCalculatedField","fieldType_1","menuItem","MouseEvent","view","bubbles","cancelable","exportArgs","ele","rowIndx","colIndx","pivotValue","pdfDoc","isBlob","isMultipleExport","pdfExportProperties","pdfProperties","pdfExport","workbook","excelExportProperties","excelProperties","excelExport","csvExport","dispatchEvent","exp","colp","calculatedFieldModule","createCalculatedFieldDialog","updateAggregate","args_1","option","contextMenuModule","validateColumnTotalcell","headerPosKeys","sumLock","isValueField","valueCnt","Inject","Freeze","ExcelExport","PdfExport","Selection","Reorder","Resize","ContextMenu","updateGridSettings","updatePivotColumns","layoutRefresh","clearColumnSelection","pivotColumn","fillGridColumns","cls.SELECTED_BGCOLOR","appendValueSortIcon","tCell","vSort","lock","padding-top","customAttributes","refreshUI","offsetWidth","firstColWidth","gridColumn","firstRowHeight","offsetHeight","e","clearTimeout","timeOutObj","setTimeout","onSelect","pivotArgs","currentCell","selectedElements_1","customClass","hyperlinkSettings","isValueCell","onOlapRowCellBoundEvent","localizedText","rowGrandPos","cls.ICON","title","isRowCellHyperlink","enableHyperlink","pivotView","colGrandPos","isSummaryCellHyperlink","isValueCellHyperlink","colindex","templateID","unWireEvents","wireEvents","pivotview","rowMeasurePos","tupRowInfo","tupInfo","memberPosition","uNameCollection","fieldSep","substring","memberType","nxtIndextCount","lastIndextCount","prevHasChild","fPos","typeCollection","isHierarchy","hasAllMember","iPos","maxIndent","hierarchyName","levelUniqueName","currPos_1","lvlPosition","hierarchyPOs","currPos_2","currHierarchyPos","currPos","lvlPos","hasChild_1","measurePosition","allStartPos","node","borderBottomWidth","onOlapColumnCellBoundEvent","isColumnCellHyperlink","hdrdiv","lineHeight","div","navigator","userAgent","insertBefore","tupColumnInfo","prevCell","isSpannedCell","colLength","currCell","parentCellSpan","parentCellPos","onHyperCellClick","nativeEvent","getElement","0","1","calculateColWidth","colCount","parWidth","parseFloat","columnWidth","colWidth","resizeColWidth","eleWidth","elementCreated","gridHeight","parHeight","getHeightAsNumber","cls.GRID_TOOLBAR","tableHeight","cls.TABLE","contentHeight","tableWidth","horizontalOverflow","verticalOverflow","commonOverflow","singleValueFormat","integrateModel","headerCnt","headerSplit","splitPos","columnModel","actualCnt","colField","setSavedWidth","minWidth","tmpSpan","innerModel","innerPos","clipMode","configLastColumnWidth","triggerColumnRenderEvent","formatArray","fString","fCnt","gridCell","exportHeaderEvent","exportContentEvent","paragraphIndent","excelRows","tmpCell","EventHandler","CommonKeyboardInteraction","keyConfigs","shiftF","shiftS","shiftE","delete","enter","escape","upArrow","downArrow","tabIndex","KeyboardEvents","keyAction","keyActionHandler","eventName","processFilter","processSort","processEdit","processDelete","processEnter","processClose","processFilterNodeSelection","getButtonElement","allPivotButtons","closest","preventDefault","moduleName","filterDialog","dialogPopUp","dialogElement_1","isExcelFilter_1","allowExcelLikeFilter","keyCode","memberEditorTree","firstLi","removeAttribute","allMemberEditorTree","parentID","dialogInstance","ej2_instances","button","pivotButtons_1","EventBase","updateSorting","checkisDescending","isDescending","sortObj","newSortObj","lastSortInfo","updateFiltering","treeData","getOlapData","isValidFilterItemsAvail","getTreeData","popupTarget","filterTargetID","createFilterDialog","isItemAvail","isSearchEnabled","updatedTreeData","loadOnDemandInMemberEditor","levels","getFilterMembers","getMembers","currrentMembers","searchMembers","filterItemObj","dummyfilterItems","memberObject","filterItems_1","getParentNode","getFilteredTreeNodes","getOlapTreeData","sortOlapFilterData","getParentIDs","treeObj","pid","data_1","li","getChildIDs","cID","data_2","searchTreeNodes","isFieldCollection","searchList","nonSearchList","list_1","enableNodes","disableNodes","searchList_1","parentIDs","childIDs","pNodes","nonSearchList_1","nonSearchList_2","collapseAll","searchTreeItems","memberCount","currentTreeItems","maxNodeLimitInMemberEditor","editorLabelElement","isDataOverflow","isChecked","updateOlapSearchTree","filterItems_2","searchData","getOlapSearchTreeData","currentTreeItemsPos","savedTreeFilterPos","isDateField","filterItems_3","isSearchRender","hasChildren","updateChildNodeStates","members_4","state","sMembers","members_5","parentItem","parentNodes","selectedNodes_1","parent_1","members_6","isNodeExpand","NodeStateModified","onStateModified","droppedClass","nodeDropped","droppedPosition","dataSourceUpdate","btnElement","actualFieldName","tag","description","errorDialog","createErrorDialog","getButtonPosition","updateFieldlistData","targetBtn","axisPanel","pivotButtons","DataSourceUpdate","draggedClass","eventdrop","dropField","dropAxis","dropPosition","draggedAxis","removeFieldFromReport","getNewField","droppedField","droppedAxis","dataSourceUpdate_1","droppedArgs","isMeasureAvail","measureField","fieldAxis","pivotButtonModule","axisFieldModule","ErrorDialog","dialogRenderer","fieldListDialog","errorPopUp","closeErrorDialog","body","removeErrorDialog","FilterDialog","editorDialog","cls.MEMBER_EDITOR_DIALOG_CLASS","data-fieldName","aria-label","filterCaption","headerTemplate","filterObject","getFilterObject","iconCss","disabled","closeFilterDialog","removeFilterDialog","filterArgs","fieldMembers","filterSetting","createTabMenu","updateCheckedState","createTreeView","visibility","memberTreeView","nodeChecked","nodeStateModified","allMemberSelect","editorTreeWrapper","levelWrapper","searchWrapper","tabindex","editorSearch","nodeLimitText","labelWrapper","createSortOptions","selectAllWrapper","selectAllContainer","treeOuterDiv","cls.EDITOR_TREE_CONTAINER_CLASS","treeViewContainer","promptDiv","cls.EMPTY_MEMBER_CLASS","createLevelWrapper","showClearButton","searchOlapTreeView","eventBase","nodeAttr","htmlAttributes","TreeView","showCheckBox","expandOn","nodeClicked","nodeCheck","keyPress","nodeSelected","startsWith","nodeChecking","validateTreeNode","nodeExpanding","updateChildNodes","sortWrapper","cls.FILTER_SORT_CLASS","cls.RTL","sortAscendElement","cls.SORT_SELECTED_CLASS","sortDescendElement","sortBtnElement","Button","unWireEvent","wireEvent","dropMenu","DropDownButton","selectedLevel","nodeLimit","getSearchMembers","isAllMember","checkedNode","getNode","uncheckAll","checkAll","applySorting","sortElements","dataCount","nodeData","childNodes","getChildMembers","curTreeData","updateChildData","treeData_1","addNodes","parentNode","childMemberCount","wrapper","types","regx","fieldType","formatObj","types_1","createCustomFilter","selectedIndex","tabObj","Tab","heightAdjustMode","selectedItem","hideTab","valueOptions","levelOptions","measures","selectedOption","selectedValueIndex","selectedLevelIndex","betweenOperators","operatorCollection","operatorCollection_1","unshift","levelObj","fieldlistData_1","fieldListData","cls.FILTER_DIV_CONTENT_CLASS","data-operator","data-selectedField","data-measure","data-value1","data-value2","textContentdiv","betweenTextContentdiv","cls.BETWEEN_TEXT_DIV_CLASS","separatordiv","levelWrapperDiv","filterWrapperDiv2","levelDropOption","inputDiv2","cls.FILTER_INPUT_DIV_2_CLASS","inputField2","cloneNode","createElements","operators","optionDiv1","optionDiv2","vDataSource","oDataSource","valueIndex","lDataSource","levelIndex","updateInputValues","setStyleAndAttributes","filterObj_1","optionWrapper","inputObj2","disabledClasses_1","inputObj1_1","DateTimePicker","inputObj2_1","inputObj1_2","NumericTextBox","inputObj2_2","inputObj1_3","inputObj2_3","role","aria-haspopup","uncheckedNodes","getUnCheckedNodes","checkedNodes","getCheckedNodes","firstNode","checkeNodes","getAllCheckedNodes","unCheckeNodes","nodeList","isFilterField","PivotCommon","pivotEngine","Common","commonModule","addEventListener","initiateCommonModule","pivotCommon","Browser","isDevice","handlers","load","events.initialLoad","removeEventListener","off","__extends","extendStatics","setPrototypeOf","__proto__","Array","__","constructor","create","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","FieldOptions","_super","Property","ChildProperty","FieldListFieldOptions","ConditionalFormatSettings","FormatSettings","GroupSettings","CalculatedFieldSettings","CustomGroups","DrillOptions","ValueSortSettings","Authentication","DataSourceSettings","Collection","Complex","GridSettings","PivotSelectionSettings","mode","cellSelectionMode","wrapMode","Event","exportToExcel","clonedValues","currentPivotValues","exportAllPages","applyFormatting","dataCollections","workSheets","dataColl","colLen","rowLen","actualrCnt","maxLevel","pivotCell","rowOrdinal","measureName","lineStyle","Workbook","worksheets","currencyCode","save","PDFExport","addPage","eventParams","page","pages","PdfStandardFont","PdfFontFamily","TimesRoman","PdfFontStyle","Regular","brush","PdfSolidBrush","PdfColor","pen","PdfPen","PdfPageTemplateElement","RectangleF","graphics","clientSize","drawString","PdfStringFormat","PdfTextAlignment","Center","template","footerTemplate","bottom","hexDecToRgb","hexDec","Error","bigint","g","getFontStyle","fontType","strikeout","Strikeout","getBorderStyle","borderStyle","PdfBorders","pdfColor","all","borderWidth","borderColor","getDashStyle","dashType","getStyle","border","gridStyle","Helvetica","getFontFamily","fontStyle","penBrushColor","setRecordThemeStyle","setFont","setTextBrush","borderRecord","setBorder","exportToPDF","applyEvent","headerStyle","firstColumnWidth","dataCollIndex","vLen","allowRepeatHeader","integratedCnt","pdfGrid","PdfGrid","isColHeader","pdfGridRow","getHeader","addRow","localCnt","isEmptyRow","getCell","columnSpan","applyStyle","processCellStyle","stringFormat","indent_1","alignment","Right","Left","lineAlignment","PdfVerticalAlignment","Middle","getColumn","draw","PointF","conditionalFormattingModule","hexToRgb","backgroundBrush","textBrush","family","getFont","cellStyle","arg","textColor","textPen","argument","PdfDocument","KeyboardInteraction","tab","shiftTab","shiftUp","shiftDown","shiftLeft","shiftRight","shiftEnter","ctrlEnter","leftArrow","rightArrow","ctrlShiftF","pivotViewKeyboardModule","processTab","processShiftTab","processSelection","clearSelection","toggleFieldList","getNextButton","allpivotButtons","getPrevButton","chartAxis","rowAxis","columnFilterValueAxis","columnFilterValueGroup","rowGroup","chartGroup","tableAxis","groupingbarButton","headerButton","getFocusedElement","nextButton","currentInfo","skipAction","showFieldList","toolbar","toolbarModule","activeElement","gridElement","getElementsByTagName","lastChild","prevButton","allPivotButtons_1","shiftKey","ctrlKey","cls.CELL_SELECTED_BGCOLOR","ele_1","control_1","rowIndex_1","getParentElement","previousSibling","nextSibling","colSpan_1","selectArgs","isCellClick","applyColumnSelection","pivotFieldListModule","PivotContextMenu","renderContextMenu","onBeforeMenuOpen","onSelectContextMenu","cMenu","menuObj","fieldElement","items_2","items_3","dropClass","VirtualScroll","previousValues","frozenPreviousValues","eventType","addInternalEvents","fCont","clearEvents","onHorizondalScroll","onVerticalScroll","common","onWheelScroll","setPageXY","onTouchScroll","isPreventScrollEvent","deltaMode","deltaY","getPointXY","pageXY","touches","pageX","pageY","pointerType","update","direction","rowValues_1","exactSize_1","section","scrollPosObject","vertical","hideWaitingPopup","showWaitingPopup","rowStartPos_1","pivot_1","sfBlazor","copyWithoutCircularReferences","interopAdaptor","invokeMethodAsync","then","updateBlazorData","exactPage","verticalSection","getEngine","scrollPage","pageRowStartPos","colValues_1","exactSize_2","horizontal","colStartPos_1","pivot_2","horizontalSection","pageColStartPos","verticalScrollScale","horizontalScrollScale","scrollDirection","horiOffset","vertiOffset","trim","scrollerBrowserLimit","excessMove","notLastPage","clientWidth","vWidth","clientHeight","movableTable","vHeight","removeInternalEvents","DrillThroughDialog","indexString","isUpdated","gridIndexObjects","gridData","showDrillThroughDialog","rawData","editSettings","allowInlineEditing","allowEditing","editCell","removeDrillThroughDialog","drillThroughDialog","createDrillThroughGrid","drillThroughGrid","dataWithPrimarykey","beforeClose","updateData","previousPosition","gridIndexObjectsValue_1","addItems","prevItems","allowCommandColumns","currModule_1","AddItem","RemoveItem","ModifiedItem","bulkChanges","gridIndex","drillThroughValue","Key","addedData","removedData","updatedData","eventArgs_1","currentData","previousData","gridResize","currentTarget","firstElementChild","numericTextBox","textBoxValue","indexValue","blur","textBoxElement","focusIn","dataPos","drillThroughBody","drillThroughBodyHeader","toolbarItems","Toolbar","ColumnChooser","showColumnChooser","gridColumns","allowPaging","formatData","dialogModule","gridObj","Edit","Page","allowEditOnDblClick","CommandColumn","showInColumnChooser","commands","buttonOption","isPrimaryKey","actionComplete","requestType","beforeBatchSave","frameGridColumns","reverse","validationRules","required","editType","newData","rawData_1","DrillThrough","mouseClickHandler","executeDrillThrough","drillThroughElement","valueCaption","aggType","tupleInfo","colOrdinal","getUniqueName","getDrillThroughData","maxRowsInDrillThrough","gridJSON","ColumnIndex","parsedObj","triggerDialog","indexArray","indexArray_1","cIndex","aIndex","indexArray_2","valuetText","drillThrough","PivotChart","headerColl","columnGroupObject","fieldPosition","measuresNames","accumulationType","loadChart","chartSettings","colMeasurePos","chart","series","primaryXAxis","primaryYAxis","multiLevelLabels","zoomFactor","dataLabel","refresh","displayOption","primary","cls.PIVOTCHART","showToolbar","getGridWidthAsNumber","getChartHeight","chartSeries","AccumulationChart","Chart","enableMultiAxis","measureList","accEmptyPoint","currentMeasure","prevLevel","firstLevelUName","totColIndex","getColumnTotalIndex","rKeys","levelCollection","integratedLevel","indexCount","memberCell","levelPos","lastHierarchy","lastDimension","drillDimension","groupHierarchyWithLevels","rKeys_1","rKey","firstRowCell","fieldPos","currrentLevel","isAttributeDrill","drillInfo","cKeys","prevMemberCell","cKeys_1","cKey","cellIndex","measureAllow","colHeaders","columnSeries","yValue","refreshChart","persistSettings","getPersistData","columnDelimiter","columnHeader","chartType","currentColumn","currentSeries","frameChartSeries","xName","yName","emptyPointSettings","innerRadius","columnKeys_1","yAxisName","seriesEvent","pivotChart","bindChart","frameObjectWithKeys","framedSeries","currentXAxis","configXAxis","currentTooltipSettings","configTooltipSettings","currentLegendSettings","configLegendSettings","currentZoomSettings","configZoomSettings","axesWithRows","frameAxesWithRows","chartElement","enableScrollOnMultiAxis","getChartAutoHeight","overflow","overflowX","isMultiAxisChange","ColumnSeries","StackingColumnSeries","RangeColumnSeries","BarSeries","StackingBarSeries","ScatterSeries","BubbleSeries","LineSeries","StepLineSeries","SplineSeries","SplineAreaSeries","MultiColoredLineSeries","PolarSeries","RadarSeries","AreaSeries","RangeAreaSeries","StackingAreaSeries","StepAreaSeries","MultiColoredAreaSeries","ParetoSeries","Legend","Tooltip","Category","MultiLevelLabel","ScrollBar","Zoom","Export","Crosshair","StripLine","DataLabel","PieSeries","FunnelSeries","PyramidSeries","AccumulationDataLabel","AccumulationLegend","AccumulationTooltip","legendSettings","tooltip","enableSmartLabels","center","pieCenter","enableBorderOnMouseMove","highLightMode","highlightMode","highlightPattern","titleStyle","subTitle","subTitleStyle","margin","background","selectionMode","accumulationSelectionMode","isMultiSelect","enableExport","selectedDataIndexes","enableAnimation","useGroupingSeparator","animationComplete","legendRender","textRender","pointRender","seriesRender","chartMouseMove","chartMouseClick","pointMove","pointClick","chartMouseLeave","chartMouseDown","chartMouseUp","tooltipRender","loaded","resized","zoomSettings","chartArea","palettes","crosshair","isTransposed","enableSideBySidePlacement","dragComplete","zoomComplete","scrollStart","scrollEnd","scrollChanged","axisLabelRender","multiLevelLabelClick","seriesIndex","showMultiLevelLabels","pointIndex","creatMenu","accumulationMenu","scrollX","drillThroughModule","percentChart","percentAggregateTypes","valCnt","divider","measureAggregatedName","getFormat","resFormat","currentYAxis","labelFormat","plotOffsetTop","lengthofFormat","colIndexColl","rKeys_2","cKeys_2","fieldCount","lastEnd","frameMultiLevelLabels","startKeys","parentHeaders","startKeys_1","startKey","sKey","span","gRows","startKeys_2","lKeys_1","levelKey","lKey","categories","getZoomFactor","calculatedWidth","seriesLength","templateFn","templateParser","tooltipTemplate","enableMarker","padding","shapePadding","valueType","labelIntersectAction","enableScrollbar","majorTickLines","enableSelectionZooming","seriesName","point","columnText","rowText","getTooltipTemplate","rowFields","getHeaderField","columnFields","templateVariable","valueField","tooltipTemplateFn","isChartLoaded","alignIcon","multilabelAxisName","updateView","getString","getMenuItems","expand","collapse","drillMenuOpen","drillMenuSelect","enableItems","levelCol","labelInfo","memberUqName","fieldAvail","memIndex","drillArgs","drillItem","renderPivotGrid","drillItems","uName","zoomModule","isZoomed","axisLabelFont","fontWeight","axisTitleFont","chartTitleFont","chartSubTitleFont","crosshairLabelFont","tooltipLabelFont","legendLabelFont","stripLineLabelFont","stockEventFont","Animation","ChartSegment","Margin","Border","Offset","Indexes","ChartArea","CrosshairSettings","DataLabelSettings","right","PivotChartConnectorStyle","PivotChartDataLabel","MarkerSettings","ErrorBarCapSettings","ErrorBarSettings","Trendline","EmptyPointSettings","CornerRadius","CrosshairTooltip","StripLineSettings","LabelBorder","MajorGridLines","MinorGridLines","AxisLine","MajorTickLines","MinorTickLines","ChartLocation","PivotSeries","PivotChartSeriesBorder","PivotChartSeriesAnimation","PivotChartSeriesSegment","PivotChartSeriesMarkerSettings","PivotChartSeriesErrorSettings","PivotChartSeriesTrendline","PivotChartSeriesEmptyPointSettings","PivotChartSeriesCornerRadius","PivotChartAxisFont","PivotChartAxisCrosshairTooltip","PivotChartAxisMajorTickLines","PivotChartAxisMajorGridLines","PivotChartAxisMinorTickLines","PivotChartAxisMinorGridLines","PivotChartAxisAxisLine","PivotChartAxisStripLineSettings","PivotChartAxisLabelBorder","PivotChartSettingsChartArea","PivotChartSettingsCrosshairSettings","PivotChartSettingsLegendSettings","PivotChartSettingsIndexes","PivotChartSettingsMargin","PivotAxis","PivotTooltipSettings","PivotPieChartCenter","PivotZoomSettings","ChartSettings","MDXQuery","getCellSets","olapEngine","refPaging","isQueryUpdate","isMondrian","isPaging","updateDrilledItems","fieldDataObj","fieldListObj","cellSetInfo","measureQuery","getMeasuresQuery","rowQuery","getDimensionsQuery","columnQuery","pagingQuery","getPagingQuery","getPagingCountQuery","slicerQuery","getSlicersQuery","filterQuery","getfilterQuery","caclQuery","getCalculatedFieldQuery","frameMDXQuery","request","LCID","mdxQuery","getTableCellData","generatePagingData","generateEngine","successMethod","customArgs","connectionString","getConnectionInfo","soapMessage","doAjaxPost","rowQueryCpy","calRowPage","calColPage","calRowSize","calColumnSize","dimensions","getDimensionQuery","drillQueryObj","getDrillQuery","drillQuery","getAttributeDrillQuery","updateValueSortQuery","getMeasurePos","drilledMembers_1","drillInfo_1","result","getDrillLevel","getDimensionPos","isExist","isAttributeMemberExist","levelQuery","getHierarchyQuery","isAvailable","hierarchyPosition","rawDrillQuery","isOnDemandDrill","onDemandDrillQuery","drilledMembers_2","rawQuery","drillInfo_2","heirarchize","slicers","i_1","colUqName","getDimensionUniqueName","slicerUqName","dimension","hierarchyNode","curElement","hierarchyNode_1","measures_1","advancedFilters","advancedFilterQuery","rowFilter","columnFilter","isFound","axes_1","advancedFilters_1","getAdvancedFilterQuery","updatedFilterQuery","currentAxis","getAdvancedFilterCondtions","filterOperator","calcMembers","calcQuery","calcMembers_1","aliasName","OlapEngine","drilledSets","namedSetsPosition","colDepth","totalCollection","parentObjCollection","curDrillEndPos","headerGrouping","lastLevel","hideRowTotalsObject","hideColumnTotalsObject","sortObject","isColDrill","measureReportItems","calcChildMembers","selectedItems","savedFieldListData","getCulture","getAxisFields","frameSortObject","setNamedSetsPosition","updateFieldlist","loadCalculatedMemberElements","updateFilterItems","xmlDoc","xmlaCellSet","countCells","newPage","prevPage","colMeasures","onDemandDrillEngine","getSubTotalsVisibility","columnTuples","rowTuples","valCollection","measureInfo","getMeasureInfo","orderedInfo","frameMeasureOrder","orderedHeaderTuples","orderedValueTuples","updateTupCollection","frameColumnHeader","performColumnSorting","frameRowHeader","performRowSorting","frameValues","performColumnSpanning","tuples","lastAllStartPos","lastAllCount","tupPos","prevUNArray","allType","rowMembers","availAllMember","withoutAllStartPos","withoutAllEndPos","minLevel","gTotals","Grand Total","newTupPosition","frameTupCollection","prevTupInfo","tuplesLength","allCount","startTupPos","lastMesPos","memPos","prevParent","typeColl","drillStartPos","startDrillUniquename","drillEndPos","firstTupMembers","attrDrill","checkAttributeDrill","drillAllow","withoutAllAllow","parentUniqueName","lastPos","lastMemPos","withoutAllDrilled","depth","getDepth","getCaptionCollectionWithMeasure","showTotals","totPos","updateRowEngine","hideTotalsObject","levelColl","drillState","captionCollection","hideFieldPos","memberlevel","memberUName","memberCaption","parentUName","UName","currUName","currCaption","currLevel","uNames","captions","uCollection","parentLevel","setDrillInfo","tuple","captionColection","captionCollectionArray","setsPositions","currEngineCount","newEngineCount","newTuplesCount","tupCollection","currTupCount","_this_1","lastRealTup","lastSavedInfo","isSubTotIncluded","withoutAllAvail","endDrillUniquename","isStartCol","levelComp","levelCompare","mergeTotCollection","setParentCollection","frameCommonColumnLoop","endAllow","allow","orderTotals","coll","groupColl","maxCnt","collLength","isSameParent","isWithoutAllMember","pUName","parentLvlCollection","newLevels","oldLevels","changePos","lPos","prevHdrPos","flagLevel","flagLevelString","getLevelsAsString","enterFlag","coll1","drillMemberPosition","memberPos","memberDepth","getMeasurePosition","spanMemPos","colMembers","memDup","rowDepthPos","getDrilledParent","isAdjacentToMeasure","isAdjacent","childMember","savedCollection","currentChild","currentParent","lvlGrouping","measureObjects","gSumGrouping","gSumFlag","withoutAllLastPos","rPos","currentTuple","frameUniqueName","getParentUname","sortLvlGrouping","parentGrouping","objCollection","objKeys","oPos","pKeys","kPos","sortRowHeaders","groupSets","axisSets","aPos","isMembersIncluded","isLastMeasure","isFullLength","isLastNotDrilledMember","isActualLastMember","matchParent","newPos","temporary","grandTotal","arrange","prevRowCell","prevColIndex","prevColRowCell","key_1","sortColumnHeaders","length_1","cellPos","l","length_2","q","weight","hgt","height1","hgt1","leng","m","pElement","cElement","o","hasLastMeasure","measureAvail","uniqueNameColl","parentString","sepPos","sepObjects","lastPosition","spanCollection","colMeasureCount","nextColCell","nextRowCell","colflag","rowflag","tupColInfo","isSubTot","rowEndPos","startRowOrdinal","lastColCell","valElement","formatDate","mAxis","measureAxis","measureIndex","valueInfo","vTuples","orderedTuples","orderedVTuples","cLevels","uniqueLevels","cLevel","uniqueLevels_1","uniqueLevels_2","values_2","vOrdinalIndex","cRow","ordinalValue","getDrilledSets","currTuple","memberArray","joinArray","splitLevels","drillLevel","cropLevels","childSets","levels_1","drillField","drillFieldSep","cropArray","drillSets","childSets_1","updateDrilledInfo","updateCalcFields","lastcalcInfo","actualFilter","expression","parentHierarchy","isSelect","getFieldListItems","getAggregateType","isMembersAvail","selectedElements","parentNodes_1","currentItems","selectedElement","drilledItems","maxRows","filteritems","xmla","getSoapMsg","drillThroughSuccess","child","tagName","tag_1","isSearchFilter","loadLevelMember","isAllFilterData","filterParentQuery","dimProp","generateMembers","loadLevelMembers","memberUQName","getCalcChildMembers","searchString","maxNodeLimit","parentUqName","expanded","nodeSelect","fieldDate","hierarchyElements","fields_2","isAllMemberAvail","hierarchySuccess","loadDimensionElements","fieldListElements","calcObj","spriteCssClass","fields_3","dimensionName","dimensionCaption","defaultHierarchy","loadNamedSetElements","dimensionElements","reportElement","dataFields_3","measureGroupItems","fields_4","fieldObj","loadHierarchyElements","dataFields_4","fields_5","stringCollection","hierarchyFolderName","dimensionElements_1","folderName","curParentElement","dimensionElements_2","fieldObj_1","loadLevelElements","newDataSource","fields_6","levelCaption","loadMeasureElements","dataFields_5","loadMeasureGroups","fields_7","measureGRPName","measuresGroups","success","Ajax","contentType","beforeSend","onSuccess","DOMParser","parseFromString","onFailure","send","httpRequest","setRequestHeader","btoa","connectionInfo","getMDXQuery","GroupingBarSettings","CellEditSettings","ConditionalSettings","HyperlinkSettings","DisplayOption","PivotView","lastFilterInfo","lastCalcFieldInfo","shiftLockedPos","savedSelectedCellsPos","cellSelectionPos","isPopupClicked","isMouseDown","isMouseUp","remoteData","defaultItems","isCellBoxMultiSelection","totColWidth","posCount","isModified","isInitialRendering","needsID","pivotRefresh","Component","XMLHttpRequest","setValue","mergePersistPivotData","PivotView_1","requiredModules","modules","allowConditionalFormatting","allowNumberFormatting","toolbarTemplate","preRender","isIE","info","isTouchMode","initProperties","renderToolTip","defaultLocale","total","noValue","rowAxisPrompt","columnAxisPrompt","valueAxisPrompt","filterAxisPrompt","filtered","CalculatedField","createCalculatedField","error","invalidFormula","dropText","dropTextMobile","dropAction","alert","warning","ok","search","drag","allFields","addToRow","addToColumn","addToValue","addToFilter","emptyData","fieldExist","confirmText","noMatches","edit","clear","sortAscending","sortDescending","sortNone","clearCalculatedField","editCalculatedField","formulaField","dragField","clearFilter","by","multipleItems","enterValue","chooseDate","Before","BeforeOrEqualTo","After","AfterOrEqualTo","labelTextContent","dateTextContent","valueTextContent","Equals","DoesNotEquals","BeginWith","DoesNotBeginWith","EndsWith","DoesNotEndsWith","Contains","DoesNotContains","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Between","NotBetween","And","Sum","Count","DistinctCount","Product","Avg","Min","SampleVar","PopulationVar","RunningTotals","Max","SampleStDev","PopulationStDev","PercentageOfRowTotal","PercentageOfParentTotal","PercentageOfParentColumnTotal","PercentageOfParentRowTotal","DifferenceFrom","PercentageOfDifferenceFrom","PercentageOfGrandTotal","PercentageOfColumnTotal","MoreOption","NotEquals","AllValues","conditionalFormating","formatLabel","valueFieldSettings","summarizeValuesBy","sourceName","sourceCaption","example","editorDataLimitMsg","details","manageRecords","Years","Quarters","Months","Days","Hours","Minutes","Seconds","new","saveAs","rename","deleteReport","export","subTotals","grandTotals","reportName","csv","png","jpeg","svg","doNotShowSubTotals","showSubTotalsRowsOnly","showSubTotalsColumnsOnly","doNotShowGrandTotals","showGrandTotalsRowsOnly","showGrandTotalsColumnsOnly","toolbarFormatting","reportMsg","reportList","removeConfirm","emptyReport","bar","pie","funnel","doughnut","pyramid","stackingcolumn","stackingarea","stackingbar","stepline","steparea","splinearea","spline","stackingcolumn100","stackingbar100","stackingarea100","bubble","pareto","radar","line","area","scatter","polar","of","emptyFormat","emptyInput","newReportConfirm","emptyReportName","qtr","null","groupOutOfRange","fieldDropErrorAction","ascending","descending","number","percentage","formatType","symbolPosition","true","false","decimalPlaces","expressionField","customFormat","numberFormatString","selectedHierarchy","olapDropText","Percent","Currency","Custom","Measure","Dimension","Standard","blank","fieldTooltip","fieldTitle","QuarterYear","drillError","copy","defaultReport","customFormatString","invalidFormat","unGroup","invalidSelection","groupFieldCaption","groupTitle","startAt","endAt","groupBy","selectGroup","multipleAxes","showLegend","exit","chartTypeSettings","ChartType","yes","no","numberFormatMenu","conditionalFormatingMenu","removeCalculatedField","replaceConfirmBefore","replaceConfirmAfter","invalidJSON","invalidCSV","L10n","isDragging","onBeforeTooltipOpen","showTooltip","showTipPointer","mouseTrail","beforeRender","setToolTip","conmenuItems","groupItems","customItems","exportItems","aggItems","expItems","aggregateItems","getDefaultItems","aggregateGroup","buildDefaultItems","exportGroupItems","cls.PIVOTVIEW_GRID","cls.PIVOTVIEW_EXPORT","cls.GRID_PDF_EXPORT","cls.GRID_EXCEL_EXPORT","cls.GRID_CSV_EXPORT","cls.PIVOTVIEW_EXPAND","cls.PIVOTVIEW_COLLAPSE","cls.ICON_ASC","cls.ICON_DESC","cls.PIVOTVIEW_GROUP","cls.PIVOTVIEW_UN_GROUP","beforeColumnsRender","columnRender","chartTooltipRender","chartLoaded","chartLoad","chartResized","chartAxisLabelRender","chartPointClick","updatePageSettings","chartModule","colValues","rowValues","heightAsNumber","getWidthAsNumber","loadData","guid","renderEmptyGrid","withCredentials","onreadystatechange","onReadyStateChange","readyState","DONE","responseText","currentAction","currentMembers","dateMembers","updateFilterEvents","pivotCount","RowCount","ColumnCount","RowStartPosition","ColumnStartPosition","RowFirstLevel","ColumnFirstLevel","HeaderText","HeaderDelimiter","SortOrder","initEngine","isRequireUpdate","endDialog","exactSize","aggField","cField","rawDataArgs","editArgs","enableDrillThrough","stringify","params","aggregatedItem","calculatedItem","fetchRawDataArgs","hash","jsonObject","cellTemplateFn","spinnerTemplate","createSpinner","loadArgs","updateClass","renderComplete","generateData","events.dataReady","onContentReady","keyEntity","addOnPersist","loadPersistData","persistData","pivotData","blazdataSource","localStorage","getItem","showConditionalFormattingDialog","withHeader","onPropertyChanged","updateGroupingReport","savedDataSourceSettings","refreshData","treeViewModule","fieldTable","renderLayout","clonedDataSet","dataSet","refreshToolbar","createChartMenu","compile","innerHtml","tempElement","firstChild","clearTemplate","resetBlazorTemplate","clonedDataSource","virtualscrollModule","showRowHeaderHyperlink","showHyperlink","showColumnHeaderHyperlink","showValueCellHyperlink","showSummaryCellHyperlink","applyHyperlinkSettings","formatUnit","showSpinner","hideSpinner","isRefreshGrid","isSorted","isFiltered","isAggChange","isCalcChange","interopArguments","enginePopulatedEventMethod","datasourceSettings","excelExportModule","pdfExportModule","chartExport","orientation","exportModule","printChart","print","chartDrillInfo","clonedDrillMembers_1","drillMembers","drilledItem_1","drillArgs_1","onOlapDrill","clonedDrillMembers","isAttributeHierarchy","clonedMembers","drillSet","memberItem","itemPos","clonedMembers_1","drilledMember","drillItemCollection","member_1","clonedMembers_2","fieldListSpinnerElement","isEmptyGrid","virtualDiv","mCnt","verOffset","unwireEvents","gridCells","gridCells_1","templateObject","isGrandTotal","isTotal","valueSortInfo","updateBlazorTemplate","hasField","getRowText","getColText","limit","colText","cls.DEVICE","mouseRclickHandler","which","mouseDownHandler","parentAt","lastSelectedElement","mouseMoveHandler","mouseUpHandler","CellClicked","framePivotColumns","gridcolumns","gridcolumns_1","setGridColumns","gridcolumns_2","calcWidth","gridcolumns_3","setCommonColumnsWidth","onWindowResize","rowDeselect","selectRow","cellClick","getSelectedCellsPos","setSavedSelectedCells","applyRowSelection","rCount","colStart","colEnd","rowStart","isCtrl","showPopup","queryStringArray","isToggle","activeColumns","actColPos","rowSelectedList","isTargetSelected","scrollModule","setWidth","setHeight","overflowY","isArray","clonedReport","pivot_3","this$_1","pivot_4","pivVal","pivotFL","pivotFields","blazPivot","valContent","headContent","pvalLen","blazPivotValues","valLen","getData","aggregateObj","bindTriggerEvents","getObject","executeQuery","requiresCount","format_1","checkCondition","isHex","substr","colourNameToHex","sheet","createStyleSheet","str","insertRule","createTextNode","conditionalSettings","ilen","jlen","conditionalValue1","conditionalValue2","newGroupSettings","updateGroupType","dateGroup","fieldSettings","clonedAxisFields","isDateGroupUpdated","drillObj","settingsObj","isExists","removeButtonFocus","numberFormattingModule","isServerRendered","cls.ROOT","showNumberFormattingDialog","NotifyPropertyChanges","DialogRenderer","fieldListWrappper","cls.WRAPPER_CLASS","renderAdaptiveLayout","renderFieldListDialog","unWireDialogEvent","wireDialogEvent","renderStaticLayout","layoutHeader","createCalculatedButton","createDeferUpdateButtons","renderDeferUpdateButtons","deferUpdateCheckBox","CheckBox","checked","onCheckChange","deferUpdateApplyButton","cls.DEFER_APPLY_BUTTON","onclick","applyButtonClick","onDeferUpdateClick","deferUpdateCancelButton","cls.DEFER_CANCEL_BUTTON","cancelButtonClick","onCloseFieldList","layoutFooter","checkBoxLayout","buttonLayout","deferUpdateButton1","deferUpdateButton2","clonedFieldList","pivotFieldList","pivotChange","cls.TOGGLE_FIELD_LIST_CLASS","aria-disabled","showFieldListDialog","cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS","showCalculatedField","cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS","removeFieldListIcon","dialogOpen","offsetTop","adaptiveElement","selectedNodes","createAxisTable","tabSelect","createAddButton","fieldWrapper","calculatedButton","calculateField","cls.CALCULATED_FIELD_CLASS","footerContainer","cls.FIELD_LIST_FOOTER_CLASS","fieldListButton","axisWrapper","cls.FIELD_LIST_CLASS","axisContent","cls.AXIS_CONTENT_CLASS","axisPrompt","activeindex","onShowFieldList","show","updateAdaptiveCalculatedField","TreeViewRenderer","fieldListSort","renderTreeDialog","cls.FIELD_TABLE_CLASS","treeHeader","cls.FIELD_LIST_TREE_CLASS","treeViewElement","fieldHeaderWrappper","updateSortElements","centerDiv","axisHeader","renderTreeView","headerWrapper","None","Ascend","Descend","spanElement","data-sort","unWireFieldListEvent","wireFieldListEvent","nodeStateChange","autoCheck","loadOnDemand","nodeDragStart","dragStart","nodeDragStop","dragStop","drawNode","updateTreeNode","updateNodeIcon","nodeCollapsed","allowDrag","updateOlapTreeNode","liTextElement","liIconElement","dragElement","cls.ADAPTIVE_FIELD_LIST_DIALOG_CLASS","fieldDialog","closeTreeDialog","onFieldAdd","dialogClose","textChange","addNode","liList","disabledList","fieldInfo","draggedNode","dragEventArgs","axis_1","dragItem","clonedNode","axis_2","axisElement","draggedNodeData","isNodeDropped","selectedNode","targetID","isDropped","getButton","droppableElement","dropTarget","sourcePosition","droppableButton","wrapperElement","li_1","id_1","selectedNode_1","fieldInfo_1","updateCheckState","updateSelectedNodes","updateReportSettings","updateNodeStateChange","removeFieldArgs","dropArgs","chkState","checkClass","refreshTreeView","getUpdatedData","expandedNodes","updateExpandedNodes","currentFieldSet","currentFieldSet_1","currentFieldSet_2","currentFieldSet_3","item_1","calcMember","AxisTableRenderer","axisTable","cls.AXIS_TABLE_CLASS","leftAxisPanel","rightAxisPanel","renderAxisTable","fieldLabels","axisTitleWrapper","cls.AXIS_ICON_CLASS","axisTitle","getIconupdate","localePrompt","Droppable","updateDropIndicator","PivotButton","menuOption","PivotFieldList","axisField","AxisFieldRenderer","renderPivotButton","valuePos","showValuesButton","groupingBarSettings","isMeasureFieldsAvail","buttonWrapper","data-tag","cls.PIVOT_BUTTON_CLASS","data-uid","isvalue","dropIndicatorElement","dropLastIndicatorElement","cls.DROP_INDICATOR_CLASS","dragWrapper","createButtonDragIcon","createButtonText","createSortOption","createFilterOption","getTypeStatus","calcElement","removeElement","pivotButton","createDraggable","valueData","valueFiedDropDownList","ddlDiv","availColindex","columnData","firstValueRow","columnFieldDropDownList","delimiter_1","aggregation","filterMem","updateButtontext","oncontextmenu","cls.PIVOT_BUTTON_CONTENT_CLASS","fieldListItem","validateDropdown","createSummaryType","createMenuOption","openCalculatedFieldDialog","buttonCall","draggable","Draggable","clone","enableTailMode","enableAutoScroll","helper","createDragClone","onDragStart","onDragging","onDragStop","abort","sortCLass","filterCLass","cls.FILTER_COMMON_CLASS","filterCount","memLen","updateOlapButtonText","allNodes","filteredItems","loop","actualFilterItems","updatedFilterItems_1","cloneElement","intDestroy","detach","fieldListPopup","bindEvents","cursorAt","isNOU","targetTouches","cursor","isButtonDropped","droppableTarget","thisObj","pivotObj","mouseEventArgs","$this_1","parsedData","bindDialogEvents","updateDialogButtonEvents","ClearFilter","updateFilterState","updateCustomFilter","removeDataSourceSettings","inputElementString","focusElement","filterEventArgs","refreshPivotButtonState","setFocus","tabElement","removeButton","updateNodeStates","checkedStateAll","searchItemObj","checkedNodes_1","checkedNodes_2","isNodeUnChecked","cNodeLength","sNodeLength","pivotButtons_2","selectedButton","pivotButtons_3","createPivotButtons","axisTableModule","isRequiredUpdate","staticFieldList","dropFilterPrompt","dropColPrompt","dropRowPrompt","dropValPrompt","addPrompt","adaptiveFieldHeader","centerHeader","deferLayoutUpdate","captionData","frameCustomProperties","staticPivotGridModule","fieldListRender","requireRefresh","pivotDataSet","this$_2","getFieldCaption","getFields","isTreeViewRefresh","isEngineRefresh","isOlapDataRefreshed","dataArgs","updateOlapDataSource","pivotId","ID","VARP","CALC","isFormula","existingReport","dialog","inputObj","droppable","newFields","isFieldExist","formulaText","fieldText","formatText","isEdit","currentFieldName","confirmPopUp","displayMenu","cls.GRID_REMOVE","createConfirmDialog","fieldClickHandler","cls.FORMAT","renderMobileLayout","accordionClickHandler","originalEvent","optionElement","accordionCreated","allElement","accordion","append","clearFormula","treeNode","edited","customString","memberTypeDrop","hierarchyDrop","formatDrop","readonly","curMenu","removeCalcField","calcfields","removeItem","removeNodes","validSummaryTypes","getValidSummaryType","duplicateTypes","createMenu","offset","selectContextMenu","applyFormula","currentObj","calculatedField","getCalculatedFieldInfo","calcInfo","currentFormula","updateFormatSettings","addFormula","newFormat","isFormatExist","showError","cls.CALCINPUT","calcFields","getFieldListData","typeVal","icon","fieldDropped","textCovered","currentValue","cursorPos","selectionStart","textAfterText","textBeforeText","setSelectionRange","createDialog","cls.CALCDIALOG","calcButtons","cancelClick","clearButton","closeDialog","timeOut","renderDialogElements","outerDiv","cls.OLAP_CALCOUTERDIV","olapFieldTreeDiv","olapCalcDiv","cls.FORMULA","accordDiv","buttonDiv","addBtn","cancelBtn","formulaTitle","inputDiv","wrapDiv","headerWrapperDiv","cls.PIVOT_ALL_FIELD_TITLE_CLASS","offsetY","cls.TREEVIEW","dropDiv","okBtn","memberTypeTitle","hierarchyTitle","formatTitle","customFormatDiv","customFormatObj","formatStringData","createOlapDropElements","mData","fData","fieldData","memberTypeData_1","formatStringData_1","memberTypeObj","hierarchyListObj","formatStringObj","customerFormatObj","nodeDragging","dropIndicator","drawTreeNode","nodeCollapsing","fieldListData_1","childNodes_1","isDrag","editElement","editWrapper","liTextElement_1","spaceElement","prepend","createTypeContainer","input","data-ftxt","data-value","menuTypes","getAccordionData","cls.FLAT","cancelBtnClick","formatInputObj","Accordion","expanding","accordionExpand","clicked","created","updateType","addBtnClick","radiobutton","RadioButton","onChange","checkbox","nodes","nodes_1","renderDialogLayout","keyboardEvents","moveRight","isRemove","replaceFormula","cls.OK_BUTTON_CLASS","FieldList","initiateModule","containerWrapper","aggregateCellInfo","updateControl","currentWidth","actualWidth","abs","AxisFields","indentDiv","GroupingBar","touchObj","Touch","tapHold","tapHoldHandler","groupingTable","rowAxisPanel","cls.AXIS_ROW_CLASS","columnAxisPanel","cls.AXIS_COLUMN_CLASS","valueAxisPanel","cls.AXIS_VALUE_CLASS","filterAxisPanel","cls.AXIS_FILTER_CLASS","rowPanel","cls.GROUP_ROW_CLASS","columnPanel","cls.GROUP_COLUMN_CLASS","valuePanel","cls.GROUP_VALUE_CLASS","filterPanel","cls.GROUP_FILTER_CLASS","axisPanels_1","displayMode","groupingChartTable","appendToElement","emptyRowCount","emptyHeader","colGroupElement","rightAxisPanelWidth","rightPanelHeight","topLeftHeight","columnRows","trCell","colHeight","columnRows_1","rowHeader_1","rhElement","rightAxisWidth","emptyRowHeader","groupHeight","columnRows_2","rowHeader_2","handlerElement","actWidth","headerModule","lastButton","lastButtonWidth","buttonWidth","rowHeaderTable","rowContentTable","rowContent","colwidth","valueColWidth","setColWidth","dropIndicatorUpdate","ConditionalFormatting","fieldsDropDown","conditionsDropDown","fontNameDropDown","fontSizeDropDown","addButtonClick","cls.FLAT_CLASS","refreshConditionValues","destroyColorPickers","addFormat","createDialogElements","renderDropDowns","renderColorPicker","innerDiv","table","tRow","td","valuelabel","measureDropdown","measureInput","conditionDropdown","conditionInput","cls.INPUT","valuespan","formatlabel","fontNameDropdown","fontNameInput","fontSizeDropdown","fontSizeInput","colorPicker1","colorPicker2","valuePreview","popupHeight","popupWidth","measureChange","conditionChange","fontNames","fontNameChange","fontSizeChange","ColorPicker","cls.FORMAT_COLOR_PICKER","fontColorChange","nextElementSibling","backColorChange","toggleBtn","toggleButtonClick","hex","h","exec","colour","colours","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred ","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","rgb","round","currentReport","createToolbar","renderDialog","tool","getItems","allowKeyboard","viewStr","replaceChild","fetchReports","reports","fetchReportsArgs","callbackPromise","Deferred","resolve","v","toolbar_1","prefixIcon","cls.GRID_NEW","tooltipText","actionClick","cls.GRID_SAVE","cls.GRID_SAVEAS","cls.GRID_RENAME","toDisable","cls.TOOLBAR_GRID","menuItemClick","validTypes","cls.GRID_MDX","cls.GRID_FORMATTING","cls.FORMATTING_TOOLBAR","cls.TOOLBAR_FIELDLIST","align","toolbarArgs","customToolbar","reportChange","reportLoad","itemData","saveReport","saveArgs","dialogShow","mdxQueryDialog","mdxDialog","renderMDXDialog","textarea","cls.GRID_REPORT_INPUT","renameReport","newArgs","createNewReport","okBtnClick","copyMDXQuery","textArea","execCommand","err","reportInput","isExist_2","_this_3","reports_1","updateReportList","isExist_3","_this_4","renameText","renameArgs","isExist_1","_this_2","okButtonClick","removeArgs","isReportExists","getValidChartType","separator","cls.TOOLBAR_CHART","chartMenu","whitespaceRemove","focusToolBar","beforeItemRender","multipleAxesCheckbox","cls.GRID_EXPORT","cls.GRID_PNG_EXPORT","cls.GRID_JPEG_EXPORT","cls.GRID_SVG_EXPORT","exportMenu","updateExportMenu","cls.GRID_SUB_TOTAL","cls.PIVOT_SELECT_ICON","subTotalMenu","updateSubtotalSelection","cls.GRID_GRAND_TOTAL","grandTotalMenu","updateGrandtotalSelection","cls.FORMATTING_MENU","cls.NUMBER_FORMATTING_MENU","cls.CONDITIONAL_FORMATTING_MENU","formattingMenu","updateItemElements","itemElements_1","inputCheckbox","checkboxObj","getLableState","showLableState","getAllChartItems","cls.PIVOT_DISABLE_ICON","_this_5","PdfPageOrientation","Landscape","createChartTypeDialog","updateChartType","chartTypes","chartDialog","chartTypesDialog","getDialogContent","chartTypeDialogUpdate","checkedShow","chartLableState","isMultiAxis","mainWrapper","optionWrapperDiv","optionTextDiv","dropOptionDiv","chartTypeDatasource","changeDropDown","checkboxWrap","labelCheckboxWrap","NumberFormatting","lastFormattedValue","updateFormatting","formatObject","renderControls","outerElement","tValue","valueLable","valueDrop","formatLable","groupingLable","groupingDrop","decimalLable","decimalDrop","customLable","valuesDropDown","valueChange","customUpdate","formatDropDown","dropDownChange","groupingDropDown","groupingChange","decimalDropDown","decimalChange","first","updateFormattingDialog","getIndexValue","insertFormat","formatName","isUpdate","createGroupSettings","updateUnGroupSettings","selectedCellsInfo_1","getGroupSettings","isInvalid","createGroupDialog","validateSettings","updateDateSource","removeGroupSettings","groupNames","modifyParentGroupItems","groupDialog","createGroupOptions","updateGroupSettings","groupInstance","groupWrapperDiv1","currentField","nextField","captionInputTextDiv1","captionInputDiv1","captionInputField1","captionInputObj1","startAtWrapper","startAtOptionDiv1","startAtInputField1","endAtWrapper","endAtOptionDiv1","endAtInputField1","intervalWrapper","intervalTextDiv1","intervalInputField1","selectedGroups","groupData","startAtInputObj","endAtInputObj","MultiSelect","CheckBoxSelection","intervalObj_1","showDropDownIcon","enableSelectionOrder","removed","checkBoxSelectionModule","activeLi","selectedInterval","intervalObj","min","startAtObj","endAtObj","groupType","inputInstance","captionInputInstance","splicedItems","newItems","mergeArray","selectedOptions_1","startCheckBoxInstance","endCheckBoxInstance","startInputInstance","endInputInstance","intervalInstance","getGroupBasedSettings","groupFields_1","getGroupByName","customFields","groupFields_2","validatedSettings","groupOrders","orderedGroups","reOrderSettings","groupFields_3","groupOrders_1","orderedSettings","isItemsUpdated","splicedItems_1","resultArray","array","assoc","index.PivotView","index.GroupingBar","index.FieldList","index.CalculatedField","index.ConditionalFormatting","index.VirtualScroll","index.DrillThrough","index.Toolbar","index.PivotChart","index.PDFExport","index.ExcelExport","index.NumberFormatting","index.Grouping"],"mappings":"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"}